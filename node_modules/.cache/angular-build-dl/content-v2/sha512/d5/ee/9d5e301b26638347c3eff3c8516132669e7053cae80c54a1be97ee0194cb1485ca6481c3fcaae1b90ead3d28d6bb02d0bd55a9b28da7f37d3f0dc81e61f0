{"version":3,"sources":["webpack:///src/app/components/lexicon-panel/lexicon-panel.component.ts","webpack:///src/app/components/lexicon-panel/lexicon-panel.component.html","webpack:///src/app/components/link-panel/same-as/same-as.component.ts","webpack:///src/app/components/link-panel/same-as/same-as.component.html","webpack:///src/app/components/attestation-panel/form-panel/form-panel.component.ts","webpack:///src/app/components/attestation-panel/form-panel/form-panel.component.html","webpack:///src/app/components/lexicon-panel/document-system-tree/lexical-entry-tree/lexical-entry-tree.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/lexical-entry-tree/lexical-entry-tree.component.html","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/search-form/search-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/search-form/search-form.component.html","webpack:///src/app/components/lexicon-panel/document-system-tree/concept-tree/concept-tree.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/concept-tree/concept-tree.component.html","webpack:///src/app/services/document-system/document-system.service.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/synsem-tab/synsem-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/synsem-tab/synsem-tab.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/decomposition-tab/decomposition-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/decomposition-tab/decomposition-tab.component.html","webpack:///src/app/views/home-page/home-page.component.ts","webpack:///src/app/views/home-page/home-page.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/skos-tree/skos-tree.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/skos-tree/skos-tree.component.html","webpack:///src/app/components/profiles-table/profiles-table.component.ts","webpack:///src/app/components/profiles-table/profiles-table.component.html","webpack:///src/app/services/annotator/annotator.service.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/vartrans-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/vartrans-tab.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/core-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/core-tab.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/lexical-entry-vartrans-form/lexical-entry-vartrans-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/lexical-entry-vartrans-form/lexical-entry-vartrans-form.component.html","webpack:///src/app/components/lexicon-panel/document-system-tree/language-manager/language-manager.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/language-manager/language-manager.component.html","webpack:///src/app/services/bibliography-service/bibliography.service.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/synsem-tab/lexical-entry-synsem-form/lexical-entry-synsem-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/synsem-tab/lexical-entry-synsem-form/lexical-entry-synsem-form.component.html","webpack:///src/app/components/profiles-table/validator/password-match.ts","webpack:///src/app/services/concept/concept.service.ts","webpack:///src/app/views/login-page/login-page.component.ts","webpack:///src/app/views/login-page/login-page.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-form/etymology-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-form/etymology-form.component.html","webpack:///src/app/views/lexicon-page/lexicon-page.component.ts","webpack:///src/app/views/lexicon-page/lexicon-page.component.html","webpack:///src/app/components/lexicon-panel/document-system-tree/lexical-entry-tree/interfaces/lexical-entry-interface.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/text-tree/text-tree.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/text-tree/text-tree.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/decomposition-tab/lexical-entry-decomp-form/lexical-entry-decomp-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/decomposition-tab/lexical-entry-decomp-form/lexical-entry-decomp-form.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/dictionary-tab/dictionary-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/dictionary-tab/dictionary-tab.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/metadata-panel/metadata-panel.component.ts","webpack:///src/app/components/metadata-panel/metadata-panel.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/edit-detail.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/edit-detail.component.html","webpack:///src/app/services/expander/expander.service.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/epigraphy-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/epigraphy-form.component.html","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-detail.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-detail.component.html","webpack:///src/app/components/lexicon-panel/document-system-tree/document-system-tree.component.ts","webpack:///src/app/components/lexicon-panel/document-system-tree/document-system-tree.component.html","webpack:///src/app/components/bibliography-panel/bibliography-panel.component.ts","webpack:///src/app/components/bibliography-panel/bibliography-panel.component.html","webpack:///src/app/services/initializer/app-init.ts","webpack:///src/app/components/note-panel/note-panel.component.ts","webpack:///src/app/components/note-panel/note-panel.component.html","webpack:///src/app/services/lexical-entries/lexical-entries.service.ts","webpack:///src/app/views/unauthorized-page/unauthorized-page/unauthorized-page.component.ts","webpack:///src/app/views/unauthorized-page/unauthorized-page/unauthorized-page.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-tab.component.html","webpack:///src/app/components/lexicon-panel/text-detail/text-detail.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/text-detail.component.html","webpack:///src/app/services/guard/auth.guard.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-tab.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-tab.component.html","webpack:///src/app/views/page-not-found/page-not-found.component.ts","webpack:///src/app/views/page-not-found/page-not-found.component.html","webpack:///src/app/components/link-panel/see-also/see-also.component.ts","webpack:///src/app/components/link-panel/see-also/see-also.component.html","webpack:///src/app/views/profile-page/profile-page.component.ts","webpack:///src/app/views/profile-page/profile-page.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-concept-form/lexical-concept-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-concept-form/lexical-concept-form.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/sense-core-form/sense-core-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/sense-core-form/sense-core-form.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/sense-vartrans-form/sense-vartrans-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/vartrans-tab/sense-vartrans-form/sense-vartrans-form.component.html","webpack:///src/app/components/attestation-panel/attestation-panel.component.ts","webpack:///src/app/components/attestation-panel/attestation-panel.component.html","webpack:///src/app/views/search-page/search-page.component.ts","webpack:///src/app/views/search-page/search-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/lila/lila.service.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/form-core-form/form-core-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/form-core-form/form-core-form.component.html","webpack:///src/app/components/data-search-form/data-search-form.component.ts","webpack:///src/app/components/data-search-form/data-search-form.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/cognate-panel/cognate-panel.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/cognate-panel/cognate-panel.component.html","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/lexical-entry-core-form.component.ts","webpack:///src/app/components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/lexical-entry-core-form.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/components/link-panel/link-panel.component.ts","webpack:///src/app/components/link-panel/link-panel.component.html"],"names":["LexiconPanelComponent","selector","templateUrl","styleUrls","SameAsComponent","formBuilder","lexicalService","toastr","lilaService","subject","subject_input","searchResults","filterLoading","memorySameAs","sameAsForm","sameAsArray","createSameAsEntry","isEtymon","isCognate","group","array","pipe","subscribe","data","onSearchFilter","triggerSameAs$","console","log","undefined","object","type","find","element","get","setValue","emitEvent","error","onChangeSameAsByInput","triggerTooltip","changes","setTimeout","sameAsData","currentValue","clear","forEach","addSameAsEntry","lexicalEntity","linkType","push","lexicalEntryInstanceName","isLexEntry","isForm","isSense","formInstanceName","senseInstanceName","value","index","trim","selectedValues","lexicalElementId","parameters","etymologyInstanceName","relation","oldValue","updateGenericRelation","status","success","timeOut","at","text","sameAs","selectedItems","length","lexicalEntry","lexId","isLila","searchMode","pos","formType","author","lang","offset","limit","getLexicalEntriesList","parentInstanceName","representationType","getFormList","getLexicalSensesList","queryEtymon","list","map","label","language","queryCognate","labelValue","tmpLblVal","split","tmpLblPos","labelElement","labelPos","Array","from","sameAsList","evt","i","target","next","$","tooltip","trigger","e","entity","inferred","lila","lexical_entity","deleteLinguisticRelation","updateCoreCard","refreshLinkCounter","formId","senseId","splice","removeAt","FormPanelComponent","annotatorService","subscription","unsubscribe","formPanelModal","show","idForm","closePanelForm","getAllPanelForms","onCloseModal","$event","actionMapping","mouse","dblClick","tree","node","hasChildren","TOGGLE_EXPANDED","click","TOGGLE_ACTIVE","contextMenu","LexicalEntryTreeComponent","expander","renderer","modalShow","flagAuthor","searchIconSpinner","titlePopover","popoverWildcards","labelView","idView","counter","startsWith","options","useVirtualScroll","scrollOnActivate","nodeHeight","getChildren","bind","filterForm","initialValues","copySubject","onEvent","eventName","form","sense","etymology","selectedNodeId","idLexicalEntry","getLexEntryData","sendToCoreTab","sendToRightTab","sendToEtymologyTab","lastUpdate","creationDate","isEditTabOpen","isEpigraphyTabOpen","isEditTabExpanded","isEpigraphyTabExpanded","expandCollapseEdit","openCollapseEdit","expandCollapseEpigraphy","modal","appendTo","backdrop","keyboard","removeClass","css","note","triggerNotePanel","getFormData","parent","getSenseData","etymologyId","getEtymologyData","component","componentInstanceName","compId","parentInstanceLabel","parentNodeInstanceName","onKey","that","results","document","body","querySelectorAll","children","refreshTooltip","setInterval","val","viewPort","nativeElement","querySelector","addClass","onChanges","deleteReq$","signal","lexEntryDeleteReq","addSubReq$","addSubElement","v","selBox","createElement","style","position","left","top","opacity","appendChild","focus","select","execCommand","removeChild","info","refreshFilter$","getLanguages","languages","getTypes","types","getAuthors","authors","getPos","partOfSpeech","getStatus","nodes","valueChanges","searchParams","lexicalEntriesFilter","instanceName","lex","request","lexicalEntryTree","treeModel","getNodeBy","x","isExpanded","expand","interval","y","creator","setActiveAndVisible","clearInterval","checkExistence","filter","parentNodeLabel","count","update","sort","a","b","textA","toUpperCase","textB","reator","indexOf","countSubterm","countForm","countSense","subtermInstanceName","newPar","viewPort_prova","scrollTop","updateTreeView","popover","html","title","content","reset","sizeChanged","remove","newNodes","instance","getLexEntryElements","obj","c","Object","assign","someNode","getNodeById","id","parentInstance","getLexEntryForms","getSensesList","getEtymologies","getConstituents","getSubTerms","Promise","resolve","reject","resetFields","onScrollDown","copyText","basicMenu","triggerShowTree","SearchFormComponent","modalService","auth","search_subject","search_lex_entries_subject","morphologyData","loader","modalStep","stepOneForm","existOrNot","required","stepTwoForm","stepThreeForm","stepFourForm","writtenForm","statusForm","lexicalEntryCreation","attachingLanguage","attachingType","attachingLabel","attachingPos","creatingForm","attachingWrittenForm","attachingFormType","finish","addNewForm","addTagFormText","selectedPopover","tokenId","spanPopovers","toArray","isOpen","close","open","addFormModal","size","windowClass","beforeDismiss","touched","confirm","markAsUntouched","markAsPristine","getLoggedUser","onSearchLexicalEntriesFilter","getLexiconLanguages","getMorphologyData","morphoData","propertyId","getLexEntryTypes","lexEntryTypesData","getFormTypes","typesData","triggerSearch$","bindSelection","key","lex_searchResuts","select_form","handleClearClick","search_lexicalEntry","req","onChangeForm","idPopover","tokenData","element_id","epiData","textSelection","message","selectionSpan","spanSelection","formValue","confidence","timestamp","Date","getTime","toString","bibliography","validity","externalRef","node_id","form_id","start","end","isArray","isEmptyFile","begin","identifier","addAnnotation","annotationArray","annotation","populateLocalAnnotation","attributes","positionElement","elementHTML","getElementsByClassName","clearAll","patchValue","wizardFactory","newLexicalEntry","updateLexicalEntry","updateLinguisticRelation","createNewForm","writtenRep","updateForm","typeForm","triggerSearch","handleForm","shiftKey","TOGGLE_ACTIVE_MULTI","rename_mode","preventDefault","expanderClick","keys","ENTER","alert","name","ConceptTreeComponent","conceptService","allowDrag","isLeaf","allowDrop","getNodeClone","conceptFilterForm","search_text","search_mode","loadTree","searchFilter","node_type","target_type","to","moveNode","target_id","treeConcept","date_mode","onMoveNode","DocumentSystemService","http","baseUrl_document","_epigraphyData","_epigraphyTextData","_epigraphyLeidenData","_epigraphyTranslationData","_metadataData","_triggerMetadataPanel","epigraphyData$","asObservable","epigraphyTextData$","epigraphyLeidenData$","epigraphyTranslationData$","metadataData$","triggerMetadataPanel$","string","bool","post","request_uuid","nodeId","providedIn","SynsemTabComponent","rend","lock","exp_trig","isLexicalEntry","coreData$","lexicalEntryData","expEdit$","isEditExpanded","isEpigraphyExpanded","setStyle","expander_body","expEpigraphy$","changeStatus","height","animations","DecompositionTabComponent","decompData","decompData$","lexicalId","addSubElementRequest","createNewSense","createNewEtymology","addNewSense","addNewEtymology","HomePageComponent","AuthService","keycloakService","baseUrl","keycloak","issuer","realmId","realm","clientId","userDetails","getKeycloakInstance","idTokenParsed","isLoggedIn","loadUserProfile","login","logout","accountManagement","window","location","reload","realmAccess","roles","search","username","userId","role_name","idUser","put","headers","set","environment","production","SkosTreeComponent","skosFilterForm","skosConcept","ProfilesTableComponent","httpClient","users","isPopulated","creationRequest","itsMe","selectedRoles","filterSelectedRoles","userDetailForm","email","password","repeat_password","enabled","minLength","pattern","validator","getClientsInfo","idClient","checkIdTimer","getAllClientsRoles","role_id","getUsersByRole","searchUser","usr","searchUsers","roles_array","event","selected_idUser","button_create","classList","getUserInfo","responseUserInfo","getUserRoles","responseUserRoles","extractRoleName","populateForm","errorUserRoles","initialValue","sub","markAsTouched","valid","JSON","stringify","updateUser","initialRoles","updatedRoles","difference","includes","removeDiff","assignRolesToUser","userDetail","deleteRolesToUser","credentials","temporary","createUser","getUserByUsername","cleanActiveLinks","newUser","activeNewUserLink","deleteUser","filtered","modalRef","makeId","makeid","result","characters","charactersLength","charAt","Math","floor","random","j","l","m","temporaryId","links","user_list","contains","innerText","add","invalid","controls","createNewUser","resetForm","isNotTheSameId","AnnotatorService","_triggerSearch","_deleteAnnoRequest","_getIdText","arrayPanelFormsData","deleteAnnoReq$","getIdText$","id_annotation","VartransTabComponent","senseData","CoreTabComponent","biblioService","isLexicalConcept","goBack","sortField","direction","memorySort","field","queryTitle","queryMode","searchSubject","formData","timer","is","revisor","lexicalConceptData","lexicalConcept","updateCoreCardReq$","lastUpdateDate","spinnerAction$","query","searchBibliography","bootstrapData","refreshAfterEdit","deleteLexicalEntry","deleteRequest","refreshLangTable","refreshFilter","sendDataToBibliographyPanel","isEpigraphyOpen","deleteForm","deleteSense","item","replace","creators","creatorType","lastName","firstName","date","url","seeAlsoLink","addBibliographyData","triggerPanel","hide","statusText","some","selectedItem","tableBody","filterBibliography","selected","showBiblioModal","sortBibliography","addBibliographyItem","searchBiblio","LexicalEntryVartransFormComponent","switchInput","peopleLoading","vartransForm","translatableAs","createTranslatableAs","lexicalRelationDirect","createLexicalRelationDirect","lexicalRelationIndirect","createLexicalRelationIndirect","loadPeople","lexData","addLexicalRelationIndirect","control","insert","createSubLexicalRelationIndirect","iy","a_entity","b_entity","sub_rel","sub_relation","sub_entity","LanguageManagerComponent","languageList","editLangArray","isValid","loadingService","editLangForm","description","lexvo","maxLength","refreshLangTable$","loadLangData","onEditLanguage","inputValue","match","createNewLanguage","updateLangSelect","langId","updateLanguage","eventEmit","removeMessage","deleteLanguage","deleteLangRequest","onSubmit","BibliographyService","_addBiblioItem","_triggerPanel","addBiblioReq$","triggerPanel$","LexicalEntrySynsemFormComponent","synsemForm","frames","createFrame","frameArray","createArg","ix","createForm","iz","example","args","marker","optional","form_label","ConfirmedValidator","controlName","matchingControlName","formGroup","matchingControl","errors","confirmedValidator","setErrors","ConceptService","LoginPageComponent","AppComponent","EtymologyFormComponent","etyForm","etylink","createEtyLink","cognates","createCognate","subject_cognates","subject_cognates_input","subject_etylink","subject_etylink_input","etylink_note_subject","etylink_label_subject","memoryLinks","onChangeEtylink","onChangeEtylinkNote","onChangeEtylinkLabel","etymData","etyLinkArray","cognatesArray","hypothesisOf","etyLinks","lex_entity","etySourceLabel","etySource","ety_type","etyLinkType","ety_source","ety_target","etyTarget","external_iri","externalIRI","addEtyLink","newConfidence","confidence_value","spinnerAction","etyId","updatedLabel","updateEtymology","updateAuthor","newValue","etymologicalLinkInstanceName","updateEtylink","etymId","etyLink","new_etymon","label_new_lexical_entry","lexical_entry","lexical_entry_in","le","elt","es","et","n","el","createNewEtylink","etyType","etyLinkId","deleteEtylink","trait","cognate","isLilaActived","etyLinkList","LexiconPageComponent","documentService","notes","link","triggerNotePanel$","boolean","a_link","accordion","collapse_container","item_collapse","triggerAttestationPanel$","attestationPanelData$","attestation","metadata","metadata_subscr","rightPanelData$","searchModeEnum","typeEnum","formTypeEnum","TextTreeComponent","datePipe","validName","searchIconSpinner_input","memoryMetadata","metadataForm","metadata_array","transform","textFilterForm","import_date","selectedEpidocId","getIdText","getContent","xmlString","xmlDom","DOMParser","parseFromString","getTokens","tokens","sendToEpigraphyTab","epidoc_id","xmlDoc","openCollapseEpigraphy","path","sendToMetadataPanel","triggerMetadataPanel","sendLeidenToEpigraphyTab","testConvert","raw","xml","HTML","domNodes","childNodes","childNode","subChild","leidenLines","nodeName","textNode","nodeValue","toLowerCase","translations","translationArray","child","innerHTML","sendTranslationToEpigraphyTab","isFolder","treeText","activeNodes","isFile","enableMetadata","multipleSelection","isFolderMultiple","selectedFileToCopyArray","pasteElementsReq","renameNode_input","stopPropagation","moveFolder","moveFile","getDocumentSystem","target_element_id","copyFileTo","selectedFileToCopy","selected_elements","elements","data_node","removeFile","sendToAttestationPanel","isEditOpen","removeFolder","requestUUID","filename","createFile","expandedNodes","addFolder","element_id_new_node","id_new_node","new_node","uploadFile_input","file_name","files","FormData","append","uploadFile","files_array","setProperty","element_id_target","element_id_source","downloadFile","moveFileTo","new_value","updateNodeName","exitRenamingMode","renameFolder","renameFile","updateMetadata","k","createMetadataItem","deleteMetadata","editMetadataModal","entries","addMetadata","uniqueIdValidator","duplicate","date_pipe","searchFiles","tag","metadata_tags_element","triggerMetadata","triggerUploader","createNewFile","renameNode","copyElements","pasteElements","removeElements","copyFile","pasteFile","addFile","saveMetadata","onCloseRemoveMetadata","providers","clickout","LexicalEntryDecompFormComponent","subterm_subject","ext_subterm_subject","corresponds_subject","update_component_subject","subtermDisabled","memorySubterm","memoryComponent","memoryValues","decompForm","createComponent","subterm","createSubtermComponent","staticMorpho","valueTraits","disableAddTraits","loadMorphologyData","changeDecompLabel$","onChangeSubterm","decData","componentArray","subtermArray","addSubterm","getCorrespondsTo","correspondsTo_data","corr","corresponds_to","addComponent","fieldType","morphology","delete_old_param","traitDescription","propertyValues","valueId","valueDescription","arrayValues","componentURI","corr_to","addRelation","idComp","deleteComponent","morphologyArray","createRelation","timer1","timer2","parentNode","lexicaleEntryInstanceName","t","uri","onChangeCorrespondsTo","f","DictionaryTabComponent","AppModule","provide","useFactory","deps","multi","forRoot","useBootstrap4","declarations","imports","bootstrap","MetadataPanelComponent","metadataData","re","EditDetailComponent","exp","showTrigger","hideEtymology","hideDecomp","hideDictionary","openEdit$","text_detail","navTabLinks","navtabs","navContent","navcontent","etymologyData$","triggerExpansionEdit","ExpanderService","_openEdit","_openEpigraphy","_expandEpigraphy","_expandEdit","openEpigraphy$","EpigraphyFormComponent","router","config","textEpigraphy","bind_subject","memoryForms","htmlNodeName","epigraphyForm","createToken","multiWordMode","token_annotationArray","epidoc_annotation_array","leiden_array","translation_array","evtPath","isMultiwordRequest","event_el","multiWordArray","subchild","prev","previousElementSibling","nextElementSibling","classNames","className","matchTest","test","position_popover","getAttribute","popover_id","_ngbPopoverWindowId","multiwordSpan","spansArray","span","parseInt","htmlNode","getElementById","editing","parentMarkElement","textMarkElement","textContent","createText","insertBefore","altKey","ctrlKey","code","localArray","spans","tokenArray","fileId","getAnnotation","annotations","layer","tmp_arr","that2","timer_object","startElement","endElement","startAnnotation","endAnnotation","xmlNode","xmlid","outerHTML","leidenToken","triggerAttestationPanel","token","parentElement","getSelection","empty","removeAllRanges","popoverHtml","_elementRef","multiWordCreator","prevSibling","nextSibling","previousSibling","createDynamicButtons","div","okButton","leaveButton","okIcon","leaveIcon","start_token","end_token","selection","anchorNode","focusNode","isThereMark","areThereAnnotations","anchorNodeParent","focusNodeParent","anchorOffset","focusOffset","tmp","l_text","substring","r_text","setAttribute","anno_id","token_position","deleteAnnotation","origin","startIndex","endIndex","insertion","searchForm","onMouseUp","onGlobalClick","enableMultiword","disableMultiword","EpigraphyDetailComponent","triggerExpansionEpigraphy","DocumentSystemTreeComponent","switcher","refreshAfterEdit$","triggerLexicalEntryTree$","updateTreeParent","lexTree","lexicalEntryLabel","a_link_epigraphy","collapse_container_epigraphy","attr","scrollIntoView","lexEdit","changeFormLabel","changeFormType","changeSenseDefinition","newLexEntryLabel","getParameters","textTree","exportLexicon","blob","Blob","URL","createObjectURL","addNewFile","addNewFolder","switchLabel","triggerLoad","conceptTree","skosTree","BibliographyPanelComponent","countElement","loadingSynchro","bibliographyForm","createBibliography","memoryNote","memoryTextualRef","incomingBiblio","textualReference","bibliographyData","addBibliographyElement","biblioData","biblioArray","getBibliographyData","bibliographyInstanceName","removeBibliographyItem","d","synchronizeBibliographyItem","initializer","init","loadUserProfileAtStartUp","enableBearerInterceptor","bearerPrefix","initOptions","onLoad","checkLoginIframe","bearerExcludedUrls","NotePanelComponent","editorConfig","editable","spellcheck","minHeight","maxHeight","width","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","customClasses","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","newNote","noteData","updateSense","keyEvent","LexicalEntriesService","_coreFormData","_attestationPanelData","_etymologyData","_rightPanelData","_deleteLexicalEntryReq","_addSubElementReq","_updateCoreCardReq","_spinnerAction","_refreshLanguageTable","_refreshAfterEdit","_refreshFilter","_updateLangSelect","_triggerNotePanel","_triggerAttestationPanel","_changeDecompLabel","_decompData","_refreshLinkCounter","_triggerLexicalEntryTree","_triggerSameAs","updateLangSelect$","refreshLinkCounter$","property","aspect","getUsername","itemKey","lexInstance","etymInstance","etyLinkInstance","lexicalEntityID","responseType","cogInstanceName","lexInstanceName","UnauthorizedPageComponent","NavbarComponent","route","isAdmin","admin","userRoles","getCurrentUserRole","keycloakEvents$","OnTokenExpired","updateToken","EtymologyTabComponent","isEtymology","etymologyData","deleteEtymology","TextDetailComponent","AuthGuard","state","authenticated","redirectUri","requiredRoles","every","role","navigate","EpigraphyTabComponent","epigraphyData","PageNotFoundComponent","SeeAlsoComponent","memorySeeAlso","seeAlsoForm","seeAlsoArray","createSeeAlsoEntry","onChangeSeeAlsoByInput","seeAlsoData","addSeeAlsoEntry","lexicalEntityInstanceName","seeAlso","lt","link_type","ProfilePageComponent","LexicalConceptFormComponent","lexicalConceptForm","definition","hierachicalRelation","createHierachicalRelation","scheme","createScheme","conceptReference","createConceptReference","SenseCoreFormComponent","subject_def","subject_ex_def","disableAddDef","definitionData","definitionMemory","staticDef","senseCore","createDefinition","usage","topic","reference","createReference","lexical_concept","createLexicalConcept","sense_of","onChangeDefinition","onChangeExistingDefinition","lexicalConceptArray","definitionArray","pId","pVal","addDefinition","addLexicalConcept","concept","newDef","newTopic","propertyID","propertyValue","referenceArray","lex_concept","SenseVartransFormComponent","senseVartransForm","translation","createTranslation","senseTranslation","createSenseTranslation","terminologicalRelation","createTerminologicalRelation","createSubTerminologicalRelation","AttestationPanelComponent","factory","update_anno_subject","update_biblio_anno_subject","arrayComponents","typeDesc","staticOtherDef","labelData","updateAnnotation","updateBiblioAnnotation","attestationData","selectedAnnotation","deleteAnnotationRequest","instanceComponent","propKey","triggerLexicalEntryTree","idAnnotation","panel","getPanelForm","newPanelForm","resolveComponentFactory","componentRef","vc","triggerFormPanel","read","SearchPageComponent","routes","redirectTo","pathMatch","canActivate","AppRoutingModule","exports","LilaService","endpoint","encodeURIComponent","FormCoreFormComponent","subject_label","subject_ex_label","memoryTraits","formCore","inheritance","createInheritance","createLabel","morphoTraits","createMorphoTraits","memoryLabel","disableAddOther","disableAddMorpho","onChangeLabel","onChangeExistingLabelValue","inheritanceArray","labelArray","inheritedMorphology","addInheritance","addLabel","addMorphoTraits","onChangeTrait","newType","DataSearchFormComponent","warn","CognatePanelComponent","cognatePanelModal","LexicalEntryCoreFormComponent","memoryDenotes","memoryCognates","memoryEvokes","valuePos","memoryPos","posDescription","denotes_subject","cognates_subject","evokes_subject","urlRegex","emptyLabelFlag","emptyFlag","coreForm","stemType","evokes","createEvokes","denotes","createDenotes","createCognates","disableAddCognates","onChangeDenotes","onChangeCognates","loadLexEntryTypeData","filter_lang","denotesArray","evokesArray","disable","onlySelf","enable","getLexEntryLinguisticRelation","addDenotes","addCognates","langLabel","langValue","posValue","response","changeDecompLabel","updateStem","iName","lexName","lexIn","triggerSameAs","cognateInstanceName","getPanelCognate","lexicalEntryId","triggerCognatePanel","bootstrapModule","err","webpackEmptyAsyncContext","then","Error","module","LinkPanelComponent","counterElement","eval","linkData"],"mappings":"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AAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AA2E2D;AAMuG;;UAiFrJ++B,S;;;;;cAAAA,S;AAAS,oBAFR,4DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAXT,CACT;AACEC,iBAAO,EAAE,6DADX;AAEEC,oBAAU,EAAE,8EAFd;AAGEC,cAAI,EAAE,CAAE,iEAAF,CAHR;AAIEC,eAAK,EAAE;AAJT,SADS,EAOT,wEAPS,C;AAQV,kBAzBQ,CACP,kEAAkBC,OAAlB,CAA0B;AAACC,uBAAa,EAAE;AAAhB,SAA1B,CADO,EAEP,uEAFO,EAGP,6FAHO,EAIP,qEAJO,EAKP,0EALO,EAMP,wEANO,EAOP,sEAPO,EAQP,0EARO,EASP,mEATO,EAUP,yDAVO,EAWP,qEAXO,EAYP,0DAZO,EAaP,uEAbO,EAcP,kEAdO,EAeP,wDAAaD,OAAb,EAfO,CAyBR;;;;4HAGUL,S,EAAS;AAAA,yBA7ElB,4DA6EkB,EA5ElB,oFA4EkB,EA3ElB,gGA2EkB,EA1ElB,0FA0EkB,EAzElB,qGAyEkB,EAxElB,uFAwEkB,EAvElB,gGAuEkB,EAtElB,wGAsEkB,EArElB,+FAqEkB,EApElB,+FAoEkB,EAnElB,6FAmEkB,EAlElB,gHAkEkB,EAjElB,0IAiEkB,EAhElB,+HAgEkB,EA/DlB,gHA+DkB,EA9DlB,2IA8DkB,EA7DlB,4HA6DkB,EA5DlB,mJA4DkB,EA3DlB,iJA2DkB,EA1DlB,yJA0DkB,EAzDlB,+HAyDkB,EAxDlB,2IAwDkB,EAvDlB,qIAuDkB,EAtDlB,0JAsDkB,EArDlB,2GAqDkB,EApDlB,uHAoDkB,EAnDlB,oHAmDkB,EAlDlB,mLAkDkB,EAjDlB,oGAiDkB,EAhDlB,iGAgDkB,EA/ClB,mMA+CkB,EA9ClB,2LA8CkB,EA7ClB,yJA6CkB,EA5ClB,kMA4CkB,EA3ClB,4JA2CkB,EA1ClB,4KA0CkB,EAzClB,2KAyCkB,EAxClB,oJAwCkB,EAvClB,8IAuCkB,EAtClB,+JAsCkB,EArClB,2GAqCkB,EApClB,oKAoCkB,EAnClB,0KAmCkB,EAlClB,iIAkCkB,EAjClB,wIAiCkB,EAhClB,iHAgCkB,EA/BlB,+KA+BkB,EA9BlB,+HA8BkB;AA9BD,uFAIjB,uEAJiB,EAKjB,6FALiB,EAMjB,qEANiB,EAOjB,0EAPiB,EAQjB,wEARiB,EASjB,sEATiB,EAUjB,0EAViB,EAWjB,mEAXiB,EAYjB,yDAZiB,EAajB,qEAbiB,EAcjB,0DAdiB,EAejB,uEAfiB,EAgBjB,kEAhBiB,EAgBE,uDAhBF;AA8BC,S;AAdC,O;;;;;wEAcVA,S,EAAS;gBA/ErB,sDA+EqB;iBA/EZ;AACRO,wBAAY,EAAE,CACZ,4DADY,EAEZ,oFAFY,EAGZ,gGAHY,EAIZ,0FAJY,EAKZ,qGALY,EAMZ,uFANY,EAOZ,gGAPY,EAQZ,wGARY,EASZ,+FATY,EAUZ,+FAVY,EAWZ,6FAXY,EAYZ,gHAZY,EAaZ,0IAbY,EAcZ,+HAdY,EAeZ,gHAfY,EAgBZ,2IAhBY,EAiBZ,4HAjBY,EAkBZ,mJAlBY,EAmBZ,iJAnBY,EAoBZ,yJApBY,EAqBZ,+HArBY,EAsBZ,2IAtBY,EAuBZ,qIAvBY,EAwBZ,0JAxBY,EAyBZ,2GAzBY,EA0BZ,uHA1BY,EA2BZ,oHA3BY,EA4BZ,mLA5BY,EA6BZ,oGA7BY,EA8BZ,iGA9BY,EA+BZ,mMA/BY,EAgCZ,2LAhCY,EAiCZ,yJAjCY,EAkCZ,kMAlCY,EAmCZ,4JAnCY,EAoCZ,4KApCY,EAqCZ,2KArCY,EAsCZ,oJAtCY,EAuCZ,8IAvCY,EAwCZ,+JAxCY,EAyCZ,2GAzCY,EA0CZ,oKA1CY,EA2CZ,0KA3CY,EA4CZ,iIA5CY,EA6CZ,wIA7CY,EA8CZ,iHA9CY,EA+CZ,+KA/CY,EAgDZ,+HAhDY,CADN;AAmDRC,mBAAO,EAAE,CACP,kEAAkBH,OAAlB,CAA0B;AAACC,2BAAa,EAAE;AAAhB,aAA1B,CADO,EAEP,uEAFO,EAGP,6FAHO,EAIP,qEAJO,EAKP,0EALO,EAMP,wEANO,EAOP,sEAPO,EAQP,0EARO,EASP,mEATO,EAUP,yDAVO,EAWP,qEAXO,EAYP,0DAZO,EAaP,uEAbO,EAcP,kEAdO,EAeP,wDAAaD,OAAb,EAfO,CAnDD;AAoER3D,qBAAS,EAAE,CACT;AACEuD,qBAAO,EAAE,6DADX;AAEEC,wBAAU,EAAE,8EAFd;AAGEC,kBAAI,EAAE,CAAE,iEAAF,CAHR;AAIEC,mBAAK,EAAE;AAJT,aADS,EAOT,wEAPS,CApEH;AA6ERK,qBAAS,EAAE,CAAC,4DAAD;AA7EH,W;AA+EY,U;;;wEA/BlB,+K,EAAqB,+DAnBrB,mLAmBqB,C,EAnBQ,E;;;;;;;;;;;;;;;;;AChHjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACYY;;AACI;;AACI;;AACiD;;AAAO;;AAC5D;;AACA;;AACI;;AAC6D;;AAAS;;AAC1E;;AACA;;AACI;;AACyD;;AAAI;;AACjE;;AACJ;;;;;;AASoB;;AACI;;AACI;;AAAG;;AAAM;;AACb;;AACA;;AACI;;AAAM;;AAAgB;;AAC1B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAG;;AACV;;AACA;;AACI;;AAAM;;AAAwB;;AAClC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAO;;AACd;;AACA;;AACI;;AAAM;;AAAiB;;AAC3B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAU;;AACjB;;AACA;;AACI;;AAAM;;AAAoB;;AAC9B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AASF;;AAA2E;;AAAkB;;;;;;AAA1F;;AAAwE;;AAAA;;;;;;AAC3E;;AAAsC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAF1C;;AACI;;AACA;;AACJ;;;;;;;;AAFiD;;AAAA;;AACtC;;AAAA;;;;;;AAPnB;;AACI;;AACI;;AAAG;;AAAQ;;AACf;;AACA;;AACI;;;;AAIJ;;AACJ;;;;;;AALoD;;AAAA;;;;;;AAqBpD;;AACI;;AACI;;AAAG;;AAAS;;AAChB;;AACA;;AACI;;AAAM;;AAAmB;;AAC7B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAkB;;AACzB;;AACA;;AACI;;AAAM;;AAA2B;;AACrC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAiB;;AACxB;;AACA;;AACI;;AAAM;;AAA0B;;AACpC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAQ;;AACf;;AACA;;AACI;;AAAM;;AAAkB;;AAC5B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAGd;;AACI;;AACI;;AAAG;;AAAgB;;AACvB;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAJ2B;;AAAA;;AACf;;AAAA;;;;;;AASJ;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAHuB;;AAAA;;AACf;;AAAA;;;;;;AAPhB;;AACI;;AACI;;AAAG;;AAAgB;;AACvB;;AACA;;AACI;;AAKJ;;AACJ;;;;;;AAN4C;;AAAA;;;;;;AAYpC;;AAEI;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAVZ;;AACI;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACI;;AAIA;;AAGJ;;AACJ;;;;;;AARY;;AAAA;;AAIG;;AAAA;;;;;;AAUP;;AAEY;;AACZ;;;;;;AAFI;;AACQ;;AAAA;;;;;;AAEZ;;AAA2D;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AATnE;;AACI;;AACI;;AAAG;;AAAc;;AACrB;;AACA;;AACI;;AAIA;;AACJ;;AACJ;;;;;;AANY;;AAAA;;AAIG;;AAAA;;;;;;AAGf;;AACI;;AACI;;AAAG;;AAAU;;AACjB;;AACA;;AACI;;AAAM;;AAAoB;;AAC9B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAQN;;AAEA;;AAAyC;;;;;;AADzC;;AACA;;AAAA;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AATZ;;AACI;;AACI;;AAAG;;AAAyB;;AAChC;;AACA;;AACI;;AAGA;;AAGJ;;AACJ;;;;;;AAPY;;AAAA;;AAGG;;AAAA;;;;;;AAMf;;AACI;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACI;;AAAM;;AAAuB;;AACjC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAA0B;;AACjC;;AACA;;AACI;;AAAM;;AAAgC;;AAC1C;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAyB;;AAChC;;AACA;;AACI;;AAAM;;AAA+B;;AACzC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAiB;;AACxB;;AACA;;AACI;;AAAM;;AAA0B;;AACpC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAKd;;AACI;;AACI;;AAAG;;AAAW;;AAClB;;AACA;;AACI;;AAAM;;AAAqB;;AAC/B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAmB;;AAC1B;;AACA;;AACI;;AAAM;;AAA2B;;AACrC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAYE;;AAAkC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAClC;;AAAkE;;AAAc;;;;;;AAA7E;;AAA+D;;AAAA;;;;;;AAHtE;;AACI;;AAA0B;;AAAa;;AACvC;;AACA;;AACJ;;;;;;;;AAH8B;;AAAA;;AACnB;;AAAA;;AACiC;;AAAA;;;;;;AAJhD;;AACI;;AAKJ;;;;;;AALQ;;AAAA;;;;;;AANhB;;AACI;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACI;;;;AAOJ;;AACJ;;;;;;AAR8B;;AAAA;;;;;;AAU9B;;AACI;;AACI;;AAAG;;AAAa;;AACpB;;AACA;;AACI;;AAAM;;AAAsB;;AAChC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAWN;;AAEA;;AAA8B;;;;;;AAD9B;;AACA;;AAAA;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAVZ;;AAEI;;AACI;;AAAG;;AAAqB;;AAC5B;;AACA;;AACI;;AAGA;;AAGJ;;AACJ;;;;;;AAPY;;AAAA;;AAGG;;AAAA;;;;;;AAMf;;AACI;;AACI;;AAAG;;AAAa;;AACpB;;AACA;;AACI;;AAAM;;AAAuB;;AACjC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAmB;;AAC1B;;AACA;;AACI;;AAAM;;AAA4B;;AACtC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AASN;;AAGA;;AAA2C;;;;;;AAD3C;;AACA;;AAAA;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAVZ;;AACI;;AACI;;AAAG;;AAAW;;AAClB;;AACA;;AACI;;AAIA;;AAGJ;;AACJ;;;;;;AARY;;AAAA;;AAIG;;AAAA;;;;;;AAWP;;AAGA;;AAA6B;;;;;;AAD7B;;AACA;;AAAA;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAVZ;;AACI;;AACI;;AAAG;;AAAS;;AAChB;;AACA;;AACI;;AAIA;;AAGJ;;AACJ;;;;;;AARY;;AAAA;;AAIG;;AAAA;;;;;;AAmBf;;AACI;;AACI;;AAAG;;AAAQ;;AACf;;AACA;;AACI;;AAAM;;AAAkB;;AAC5B;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACI;;AAAM;;AAAwB;;AAClC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAWE;;AAAoE;;AAAc;;;;;;AAA/E;;AAAiE;;AAAA;;;;;;AADxE;;AACI;;AACJ;;;;;;;;AAD6C;;AAAA;;;;;;AAFjD;;AACI;;AAGJ;;;;;;AAHQ;;AAAA;;;;;;AANhB;;AACI;;AACI;;AAAG;;AAAS;;AAChB;;AACA;;AACI;;AAKJ;;AACJ;;;;;;AAN8B;;AAAA;;;;;;AAQ9B;;AACI;;AACI;;AAAG;;AAAO;;AACd;;AACA;;AACI;;AAAM;;AAA+B;;AACzC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAmB;;AAC1B;;AACA;;AACI;;AAAM;;AAA2B;;AACrC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AAId;;AACI;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACI;;AAAM;;AAAwB;;AAClC;;AACJ;;;;;;AAFc;;AAAA;;;;;;AA3XlC;;AACI;;AACI;;AACI;;AAAsB;;AAAO;;AAE7B;;AAEI;;AACI;;AAQA;;AAQA;;AAQA;;AAQA;;AAWJ;;AAEJ;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;;AAAsB;;AAAS;;AAE/B;;AAGI;;AACI;;AASA;;AAQA;;AAQA;;AAQA;;AAUA;;AAYA;;AAcA;;AAYA;;AAQA;;AAcA;;AASA;;AASA;;AASA;;AAUA;;AASA;;AASA;;AAeA;;AAUA;;AAeA;;AASA;;AASA;;AAeA;;AAcJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAI;;AAG1B;;AAII;;AACI;;AASA;;AASA;;AAaA;;AASA;;AASA;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA1XsC;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AA0BA;;AAAA;;AASA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAUA;;AAAA;;AAYA;;AAAA;;AAcA;;AAAA;;AAYA;;AAAA;;AAQA;;AAAA;;AAcA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAUA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAeA;;AAAA;;AAUA;;AAAA;;AAeA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAeA;;AAAA;;AA4BA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAaA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;;;UD5XrCC,sB;AAKX,wCAAoBzM,eAApB,EAA6D;AAAA;;AAAzC,eAAAA,eAAA,GAAAA,eAAA;AAA4C;;;;qCAExD,CACP;;;sCAEW5wB,O,EAAwB;AAClCb,mBAAO,CAACC,GAAR,CAAYY,OAAZ;;AACA,gBAAGA,OAAO,CAACs9B,YAAR,CAAqBn9B,YAArB,IAAqC,IAAxC,EAA6C;AAC3C,mBAAKb,MAAL,GAAcU,OAAO,CAACs9B,YAAR,CAAqBn9B,YAAnC;;AAEA,kBAAGH,OAAO,CAACs9B,YAAR,CAAqBn9B,YAArB,IAAqC,KAAKb,MAA7C,EAAoD;AAClD,qBAAKA,MAAL,GAAc,IAAd;AACD;;AAED,mBAAKA,MAAL,GAAcU,OAAO,CAACs9B,YAAR,CAAqBn9B,YAAnC;AACD,aARD,MAQK;AACH,mBAAKb,MAAL,GAAc,IAAd;AACA,mBAAKsxB,eAAL,CAAqB2C,oBAArB,CAA0C,KAA1C;AACD;AAEF;;;kCAEO3oB,G,EAAG;AAAa,mBAAO/G,KAAK,CAAC0S,OAAN,CAAc3L,GAAd,CAAP;AAA4B;;;mCAE3CA,G,EAAG;AAAa,mBAAO,OAAOA,GAAP,IAAc,QAArB;AAAgC;;;mCAEhDA,G,EAAG;AAAa,mBAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAAC/G,KAAK,CAAC0S,OAAN,CAAc3L,GAAd,CAAnC;AAAwD;;;iCAE1EA,G,EAAK;AACV,gBAAM2yB,EAAE,GAAG,yCAAX;AACA,mBAAO3yB,GAAG,CAACyf,KAAJ,CAAUkT,EAAV,CAAP;AACD;;;;;;;yBApCUF,sB,EAAsB,+K;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,+2D;AAAA;AAAA;ACpBnC;;AACI;;AACI;;AACI;;AAEI;;AAAc;;AAClB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAcA;;AAmYJ;;AACJ;;AACJ;;;;AAnZgE;;AAAA;;AAcR;;AAAA;;;;;;;;;;wEDN3CA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT3/B,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;AAGxB0/B,sBAAY,EAAE,CAAF;kBAApB;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEvBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;UAqBaE,mB;AAUX,qCAAoBz/B,cAApB,EAAmE0/B,GAAnE,EAA0F;AAAA;;AAAtE,eAAA1/B,cAAA,GAAAA,cAAA;AAA+C,eAAA0/B,GAAA,GAAAA,GAAA;AAPnE,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,aAAA,GAAgB,IAAhB;AACA,eAAAC,UAAA,GAAa,IAAb;AACA,eAAAC,cAAA,GAAiB,IAAjB;AAI6F;;;;qCAErF;AAAA;;AAEN,iBAAKv+B,MAAL,GAAc,IAAd;AACA,iBAAKm+B,GAAL,CAASK,SAAT,CAAmB/+B,SAAnB,CACE,UAAAiyB,SAAO,EAAI;AACT,kBAAGA,SAAH,EAAW;AACT/wB,0BAAU,CAAC,YAAM;AACf,sBAAI89B,WAAW,GAAGzzB,QAAQ,CAACE,gBAAT,CAA0B,iBAA1B,CAAlB;AACAuzB,6BAAW,CAAC19B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,wBAAG,CAACA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAJ,EAAuC;AACrCjkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD;AACF,mBAJD;AAKA,sBAAIqN,MAAM,GAAG3mB,QAAQ,CAACE,gBAAT,CAA0B,kCAA1B,CAAb;AACAymB,wBAAM,CAAC5wB,OAAP,CAAe,UAAAZ,OAAO,EAAI;AACxB,wBAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,WAA3B,CAAH,EAA2C;AACzCjkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,WAAzB;AACD,qBAFD,MAEK,CACH;AACD;AACF,mBAND;AAOA,iBAfQ,EAeN,GAfM,CAAV;AAgBD;AACF,aApBH;AAuBA,iBAAK7R,cAAL,CAAoBud,SAApB,CAA8Bvc,SAA9B,CACE,UAAAO,MAAM,EAAI;AACR,kBAAGA,MAAM,IAAI,IAAb,EAAkB;AAChB,oBAAGA,MAAM,CAAC,0BAAD,CAAN,IAAsCD,SAAtC,IACAC,MAAM,CAAC,kBAAD,CAAN,IAA8BD,SAD9B,IAEAC,MAAM,CAAC,mBAAD,CAAN,IAA+BD,SAF/B,IAGAC,MAAM,CAAC,uBAAD,CAAN,IAAmCD,SAHtC,EAGgD;AAC3CY,4BAAU,CAAC,YAAM;AAChB,wBAAI+9B,WAAW,GAAG,QAAI,CAACC,OAAL,CAAanzB,aAAb,CAA2BN,gBAA3B,CAA4C,GAA5C,CAAlB;;AACA,4BAAI,CAAClL,MAAL,GAAcA,MAAd;AACA0+B,+BAAW,CAAC39B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,0BAAGA,OAAO,CAACqC,IAAR,IAAgB,MAAnB,EAA0B;AACxBrC,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACA,gCAAI,CAACga,UAAL,GAAkB,IAAlB;AACA,gCAAI,CAACD,aAAL,GAAqB,IAArB;AACD,uBAJD,MAIK;AACHl+B,+BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB,EADG,CAEH;AACD;AACF,qBAVD;;AAcA,wBAAIsuB,UAAU,GAAG,QAAI,CAACC,UAAL,CAAgBrzB,aAAhB,CAA8BN,gBAA9B,CAA+C,WAA/C,CAAjB;;AAEA0zB,8BAAU,CAAC79B,OAAX,CAAmB,UAAAZ,OAAO,EAAI;AAE5B,0BAAGA,OAAO,CAAC6Q,EAAR,IAAc,MAAjB,EAAwB;AACtB7Q,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACAnkB,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACA;;AAED,uBALD,MAKK;AAEHnkB,+BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACAnQ,+BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB;AACA;;AAED;AACF,qBAdD;AAeA,mBAlCS,EAkCP,GAlCO,CAAV;AAqCJ,iBAzCD,MAyCM;AACJ,0BAAI,CAACtQ,MAAL,GAAc,IAAd;AACD;AACF;AACF,aAhDH;AAmDA,iBAAKvB,cAAL,CAAoBoe,WAApB,CAAgCpd,SAAhC,CACE,UAAAO,MAAM,EAAI;AACR,kBAAGA,MAAM,IAAI,IAAb,EAAkB;AAChBW,0BAAU,CAAC,YAAM;AACf,sBAAI+9B,WAAW,GAAG,QAAI,CAACC,OAAL,CAAanzB,aAAb,CAA2BN,gBAA3B,CAA4C,GAA5C,CAAlB;;AACA,0BAAI,CAAClL,MAAL,GAAcA,MAAd;AACA0+B,6BAAW,CAAC39B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,wBAAGA,OAAO,CAACqC,IAAR,IAAgB,eAAnB,EAAmC;AACjCrC,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACA,8BAAI,CAACga,UAAL,GAAkB,KAAlB;AACA,8BAAI,CAACD,aAAL,GAAqB,IAArB;AACD,qBAJD,MAIK;AACHl+B,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB,EADG,CAEH;AACD;AACF,mBAVD;;AAcA,sBAAIsuB,UAAU,GAAG,QAAI,CAACC,UAAL,CAAgBrzB,aAAhB,CAA8BN,gBAA9B,CAA+C,WAA/C,CAAjB;;AAEA0zB,4BAAU,CAAC79B,OAAX,CAAmB,UAAAZ,OAAO,EAAI;AAE5B,wBAAGA,OAAO,CAAC6Q,EAAR,IAAc,eAAjB,EAAiC;AAC/B7Q,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACAnkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACA;;AAED,qBALD,MAKK;AAEHnkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACAnQ,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB;AACA;;AAED;AACF,mBAdD;AAeA,iBAlCQ,EAkCN,GAlCM,CAAV;AAmCD,eApCD,MAoCK;AACH,wBAAI,CAACtQ,MAAL,GAAc,IAAd;AACD;AACF,aAzCH;AA6CA,iBAAKvB,cAAL,CAAoBqgC,cAApB,CAAmCr/B,SAAnC,CACE,UAAAO,MAAM,EAAI;AACR,kBAAGA,MAAM,IAAI,IAAb,EAAkB;AAChB,oBAAGA,MAAM,CAAC,WAAD,CAAN,CAAoB,uBAApB,KAAgDD,SAAnD,EAA6D;AAC3D,0BAAI,CAACC,MAAL,GAAcA,MAAd;;AACA,sBAAI0+B,WAAW,GAAG,QAAI,CAACC,OAAL,CAAanzB,aAAb,CAA2BN,gBAA3B,CAA4C,GAA5C,CAAlB;;AAEAwzB,6BAAW,CAAC39B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,wBAAGA,OAAO,CAACqC,IAAR,IAAgB,WAAnB,EAA+B;AAC7B;AACArC,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACA,8BAAI,CAAC+Z,aAAL,GAAqB,KAArB;AACA,8BAAI,CAACC,UAAL,GAAkB,IAAlB;AACD,qBALD,MAKK;AACHn+B,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACA;AACD;AACF,mBAXD;;AAYA,sBAAIsuB,UAAU,GAAG,QAAI,CAACC,UAAL,CAAgBrzB,aAAhB,CAA8BN,gBAA9B,CAA+C,WAA/C,CAAjB;;AAEA0zB,4BAAU,CAAC79B,OAAX,CAAmB,UAAAZ,OAAO,EAAI;AAC5B;AACA,wBAAGA,OAAO,CAAC6Q,EAAR,IAAc,WAAjB,EAA6B;AAC3B7Q,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACAnkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD,qBAHD,MAGK;AACHnkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACAnQ,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB,EAFG,CAGH;AACD;AACF,mBAVD;AAYD,iBA9BD,MA8BM;AACJ,0BAAI,CAACtQ,MAAL,GAAc,IAAd;AACD;AACF;AACF,aArCH;AAuCD;;;iDAEmB;AAAA;;AAElBW,sBAAU,CAAC,YAAM;AAEf,kBAAG,QAAI,CAACw9B,GAAL,CAAS/0B,aAAT,MAA4B,CAAC,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAhC,EAA8D;AAC5D,oBAAG,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,MAAgC,CAAC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAApC,EAAsE;AACpE,0BAAI,CAAC40B,GAAL,CAAS10B,gBAAT;;AACA,0BAAI,CAAC00B,GAAL,CAAS30B,kBAAT;AACD;AACF,eALD,MAKM,IAAG,CAAC,QAAI,CAAC20B,GAAL,CAAS/0B,aAAT,EAAD,IAA6B,CAAC,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAjC,EAA+D;AACnE,oBAAG,CAAC,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,EAAD,IAAiC,CAAC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAArC,EAAuE;AACrE,0BAAI,CAAC40B,GAAL,CAAS10B,gBAAT;;AACA,0BAAI,CAAC00B,GAAL,CAAS30B,kBAAT;AACD;AACF,eALK,MAKA,IAAG,QAAI,CAAC20B,GAAL,CAAS/0B,aAAT,MAA4B,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAA/B,EAA6D;AACjE,wBAAI,CAAC80B,GAAL,CAAS10B,gBAAT;;AACA,wBAAI,CAAC00B,GAAL,CAASz0B,uBAAT,CAAiC,IAAjC;AACD,eAHK,MAGA,IAAG,CAAC,QAAI,CAACy0B,GAAL,CAAS/0B,aAAT,EAAD,IAA6B,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAhC,EAA8D;AAClE,oBAAG,CAAC,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,EAAD,IAAiC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAApC,EAAsE;AACpE,0BAAI,CAAC40B,GAAL,CAASz0B,uBAAT,CAAiC,KAAjC;;AACA,0BAAI,CAACy0B,GAAL,CAAS10B,gBAAT,CAA0B,IAA1B;AACD;AAEF;AAEF,aAvBS,EAuBP,GAvBO,CAAV;AAwBD;;;;;;;yBAzMUy0B,mB,EAAmB,+K,EAAA,2J;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACnBhC;;AACI;;AACI;;AACI;;AACI;;AAAsH;;AAAI;;AAC9H;;AAOA;;AACI;;AAAiJ;;AAAa;;AAClK;;AACA;;AACI;;AAAqI;;AAAS;;AAClJ;;AACA;;AACI;;AAAyI;;AAAU;;AACvJ;;AACA;;AACI;;AAAuD;AAAA,qBAAS,IAAAa,oBAAA,EAAT;AAA+B,aAA/B;;AACnD;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AAOA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;;;AApD0E;;AAAA;;AAUzC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;wEDCpBb,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT9/B,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;AAORqgC,iBAAO,EAAE,CAAF;kBAA5B,uDAA4B;mBAAlB,S;AAAkB,WAAE,C;AACNE,oBAAU,EAAE,CAAF;kBAAlC,uDAAkC;mBAAxB,Y;AAAwB,WAAE;;;;;;;;;;;;;;;;;;;AE7BvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAkBaG,e;AAiBX,mCAAc;AAAA;;AAfd,eAAA5iB,mBAAA,GAAsB,KAAtB;AACA,eAAAD,cAAA,GAAiB,KAAjB;AAEA,eAAAwa,UAAA,GAAa,KAAb;AACA,eAAAxP,eAAA,GAAkB,KAAlB;AAEQ,eAAA8X,SAAA,GAAuC,IAAI,oDAAJ,CAAoB,IAApB,CAAvC;AACA,eAAAC,cAAA,GAA4C,IAAI,oDAAJ,CAAoB,IAApB,CAA5C;AACA,eAAAC,gBAAA,GAA6C,IAAI,oDAAJ,CAAoB,IAApB,CAA7C;AACA,eAAAC,WAAA,GAAwC,IAAI,oDAAJ,CAAoB,IAApB,CAAxC;AACR,eAAA7iB,aAAA,GAAgB,KAAK4iB,gBAAL,CAAsBpkB,YAAtB,EAAhB;AACA,eAAAmB,QAAA,GAAW,KAAKkjB,WAAL,CAAiBrkB,YAAjB,EAAX;AACA,eAAAyjB,SAAA,GAAY,KAAKS,SAAL,CAAelkB,YAAf,EAAZ;AACA,eAAAskB,cAAA,GAAiB,KAAKH,cAAL,CAAoBnkB,YAApB,EAAjB;AAEiB;;;;kDAEO/V,O,EAAQ;AAC9B,gBAAGA,OAAO,IAAIjF,SAAd,EAAwB;AACtB,mBAAKqc,mBAAL,GAA2BpX,OAA3B;;AACA,mBAAKm6B,gBAAL,CAAsBt6B,IAAtB,CAA2B,KAAKuX,mBAAhC;AACD,aAHD,MAGK;AACH,mBAAKA,mBAAL,GAA2B,CAAC,KAAKA,mBAAjC;;AACA,mBAAK+iB,gBAAL,CAAsBt6B,IAAtB,CAA2B,KAAKuX,mBAAhC;AACD;AACF;;;6CAEkBpX,O,EAAQ;AACzB,gBAAGA,OAAO,IAAIjF,SAAd,EAAwB;AACtB,mBAAKoc,cAAL,GAAsBnX,OAAtB;;AACA,mBAAKo6B,WAAL,CAAiBv6B,IAAjB,CAAsB,KAAKsX,cAA3B;AACD,aAHD,MAGK;AACH,mBAAKA,cAAL,GAAsB,CAAC,KAAKA,cAA5B;;AACA,mBAAKijB,WAAL,CAAiBv6B,IAAjB,CAAsB,KAAKsX,cAA3B;AACD;AACF;;;2CAEgBnX,O,EAAQ;AACvB,gBAAGA,OAAO,IAAIjF,SAAd,EAAwB;AACtB,mBAAK42B,UAAL,GAAkB3xB,OAAlB;;AACA,mBAAKi6B,SAAL,CAAep6B,IAAf,CAAoBG,OAApB;AACD,aAHD,MAGK;AACH,mBAAK2xB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;;AACA,mBAAKsI,SAAL,CAAep6B,IAAf,CAAoB,KAAK8xB,UAAzB;AACD;AACF;;;gDAEqB3xB,O,EAAQ;AAC5B,gBAAGA,OAAO,IAAIjF,SAAd,EAAwB;AACtB,mBAAKonB,eAAL,GAAuBniB,OAAvB;;AACA,mBAAKk6B,cAAL,CAAoBr6B,IAApB,CAAyBG,OAAzB;AACD,aAHD,MAGK;AACH,mBAAKmiB,eAAL,GAAuB,CAAC,KAAKA,eAA7B;;AACA,mBAAK+X,cAAL,CAAoBr6B,IAApB,CAAyB,KAAKsiB,eAA9B;AACD;AACF;;;8CAEgB;AACf,mBAAO,KAAKhL,cAAZ;AACD;;;mDAEqB;AACpB,mBAAO,KAAKC,mBAAZ;AACD;;;0CAEY;AACX,mBAAO,KAAKua,UAAZ;AACD;;;+CAEiB;AAChB,mBAAO,KAAKxP,eAAZ;AACD;;;;;;;yBAzEU6X,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACVtjB,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;;;AClB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACIQ;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAClE;;AACnC;;;;;;AAEA;;AACI;;AAAI;;AAAM;;AAEd;;;;;;AAYQ;;AACI;;AACI;;AAAG;;AAAW;;AAElB;;AACA;;AACI;;AAGJ;;AAEJ;;;;;;AALyB;;AAAA;;;;;;;;AAhBjC;;AACI;;AAAiB;;AAAe;;AAEhC;;AACuG;AAAA;;AAAA;;AAAA;AAAA;;AACvG;;AACA;;AAEA;;AAkBJ;;;;;;AAtBI;;AAAA,2FAAuB,YAAvB,EAAuB,GAAvB,EAAuB,WAAvB,EAAuB,QAAvB;;;;;;AAkDY;;AACI;;AACI;;AAAG;;AAAW;;AAElB;;AACA;;AACI;;AAGJ;;AAEJ;;;;;;AALyB;;AAAA;;;;;;;;;;;;;;;;AA1BjC;;AAEI;;AAKiI;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAnC,EAAmC,WAAnC,EAAmC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAnC,EAAmC,SAAnC,EAAmC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AAG7H;;AACJ;;AAMA;;AAkBJ;;;;;;;;;;;AA9BQ;;AAAA;;AADA,kNAAqG,UAArG,EAAqG,cAArG,EAAqG,WAArG,EAAqG,QAArG,EAAqG,cAArG,EAAqG,eAArG,EAAqG,WAArG,EAAqG,KAArG,EAAqG,WAArG,EAAqG,SAArG,EAAqG,gBAArG,EAAqG,+FAArG,EAAqG,YAArG,EAAqG,IAArG;;AADA;;AAOA;;AAAA;;;;;;AAdhB;;AAEI;;AAEI;;AAsCJ;;AAIJ;;;;;;AA9CM;;AAIyB;;AAAA;;;;;;AAmD/B;;AACI;;AAAI;;AAAW;;AACnB;;;;;;AAIQ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAHZ;;AACI;;AACI;;AAGJ;;AACJ;;;;;;AAJ6B;;AAAA;;;;;;AARrC;;AACI;;AACI;;AAIA;;AAOJ;;AACJ;;;;;;AAZoD;;AAAA;;AAIe;;AAAA;;;;;;AAa3D;;AACI;;AAAI;;AAAW;;AACnB;;;;;;AAEA;;AACI;;AACI;;AACG;;AACH;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AANW;;AAAA;;AAGC;;AAAA;;;;;;AAZpB;;AACI;;AACI;;AAIA;;AAUJ;;AACJ;;;;;;AAfoD;;AAAA;;AAIe;;AAAA;;;;UDxFtD4jB,sB;AA6UX,wCAAoBC,MAApB,EAA6Cz5B,gBAA7C,EAAyFqB,QAAzF,EAA4HC,QAA5H,EAAyJkqB,eAAzJ,EAAyM9yB,WAAzM,EAA2OE,MAA3O,EAA0QD,cAA1Q,EAAyT+gC,MAAzT,EAAmV;AAAA;;AAA/T,eAAAD,MAAA,GAAAA,MAAA;AAAyB,eAAAz5B,gBAAA,GAAAA,gBAAA;AAA4C,eAAAqB,QAAA,GAAAA,QAAA;AAAmC,eAAAC,QAAA,GAAAA,QAAA;AAA6B,eAAAkqB,eAAA,GAAAA,eAAA;AAAgD,eAAA9yB,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AAA+B,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAA+gC,MAAA,GAAAA,MAAA;AAxUzT,eAAAC,aAAA,GAAgB,EAAhB;AAGQ,eAAAC,YAAA,GAA6B,IAAI,4CAAJ,EAA7B;AACR,eAAA5gC,aAAA,GAAgB,EAAhB;AACA,eAAA6gC,WAAA,GAAc,EAAd;AAEA,eAAAjsB,eAAA,GAAkB;AAChBksB,wBAAY,EAAE,EADE;AAEhBjsB,mBAAO,EAAE;AAFO,WAAlB;AAUA,eAAAG,MAAA,GAAS,KAAT;AACA,eAAA3L,IAAA,GAAO,IAAP,CAsTmV,CAlTnV;;AAIA,eAAA03B,aAAA,GAAgB,IAAI,wDAAJ,CAAc;AAC5BnM,kBAAM,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKoM,WAAL,EAAD,CAAd;AADoB,WAAd,CAAhB;AAKA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAzoB,eAAA,GAAkB,EAAlB;AACA,eAAA0oB,qBAAA,GAAwB,EAAxB;AACA,eAAAC,uBAAA,GAA0B,EAA1B;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,iBAAA,GAAoB,EAApB;AAIA,eAAAjpB,WAAA,GAAc,KAAd;AAiSE;;;;;;;;;;;;AAYD;;;;oCA1SS+J,K,EAAK;AAAA;;AACbtgB,sBAAU,CAAC,YAAM;AACf,kBAAIy/B,OAAO,GAAG77B,KAAK,CAACC,IAAN,CAAWyc,KAAK,CAAC8S,IAAjB,CAAd;AACA,kBAAIsM,kBAAkB,GAAG,KAAzB;AACAD,qBAAO,CAACjY,IAAR,CAAa,UAAChoB,OAAD,EAA0B;AACrC;AACA,oBAAIA,OAAO,CAACihB,SAAR,IAAqBrhB,SAAzB,EAAoC;AAClC,sBAAII,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,WAA3B,CAAJ,EAA6C;AAC3Cic,sCAAkB,GAAG,IAArB;AACA,2BAAO,IAAP;AACD,mBAHD,MAGO;AACLA,sCAAkB;AAClB,2BAAO,KAAP;AACD;AACF,iBARD,MAQO;AACL,yBAAO,KAAP;AACD;AACF,eAbD;AAgBA,kBAAIC,QAAJ;;AAEA,kBAAID,kBAAJ,EAAwB;AACtB,oBAAIE,cAAc,GAAGh8B,KAAK,CAACC,IAAN,CAAWwG,QAAQ,CAAC4M,sBAAT,CAAgC,WAAhC,CAAX,CAArB;AACA2oB,8BAAc,CAACx/B,OAAf,CAAuB,UAAAZ,OAAO,EAAI;AAChC,sBAAIgL,QAAQ,GAAG5G,KAAK,CAACC,IAAN,CAAWrE,OAAO,CAACgL,QAAnB,CAAf;AACAA,0BAAQ,CAACpK,OAAT,CAAiB,UAAAy/B,QAAQ,EAAI;AAC3B,wBAAIA,QAAQ,CAACpf,SAAT,CAAmBgD,QAAnB,CAA4B,kBAA5B,CAAJ,EAAqD;AACnDkc,8BAAQ,GAAGngC,OAAO,CAACgL,QAAnB;AACAq1B,8BAAQ,CAAClwB,MAAT;AACD;AACF,mBALD;AAMD,iBARD;AASAtF,wBAAQ,CAACE,gBAAT,CAA0B,YAA1B,EAAwCnK,OAAxC,CAAgD,UAAAZ,OAAO,EAAI;AACzD,0BAAI,CAACiH,QAAL,CAAc2C,WAAd,CAA0B5J,OAA1B,EAAmC,WAAnC;;AACA,0BAAI,CAACiH,QAAL,CAAcsE,QAAd,CAAuBvL,OAAvB,EAAgC,oBAAoB,CAApD;;AAEA,sBAAIsgC,IAAI,GAAGtgC,OAAO,CAACugC,sBAAnB;AACA,sBAAI77B,IAAI,GAAG1E,OAAO,CAACwgC,kBAAnB;;AAEA,sBAAIF,IAAI,IAAI1gC,SAAZ,EAAuB;AACrB,wBAAI0gC,IAAI,CAACrf,SAAL,IAAkBrhB,SAAtB,EAAiC;AAC/B,0BAAI6gC,UAAU,GAAGH,IAAI,CAACI,SAAtB;AACA,0BAAIC,SAAS,GAAG,kCAAkCC,IAAlC,CAAuCH,UAAvC,CAAhB;;AACA,0BAAIE,SAAJ,EAAe;AACb,gCAAI,CAAC15B,QAAL,CAAcsE,QAAd,CAAuBvL,OAAvB,EAAgC,eAAhC;AACD;AACF;AACF,mBARD,MAQO,IAAI0E,IAAI,IAAI9E,SAAZ,EAAuB;AAC5B,wBAAI8E,IAAI,CAACuc,SAAL,IAAkBrhB,SAAtB,EAAiC;AAC/B,0BAAI6gC,WAAU,GAAG/7B,IAAI,CAACg8B,SAAtB;;AACA,0BAAIC,UAAS,GAAG,kCAAkCC,IAAlC,CAAuCH,WAAvC,CAAhB;;AACA,0BAAIE,UAAJ,EAAe;AACb,gCAAI,CAAC15B,QAAL,CAAcsE,QAAd,CAAuBvL,OAAvB,EAAgC,gBAAhC;AACD;AACF;AACF;AACF,iBAxBD;AA0BA,oBAAI6gC,gBAAJ;AAEAz8B,qBAAK,CAACC,IAAN,CAAW87B,QAAX,EAAqBv/B,OAArB,CACE,UAACZ,OAAD,EAAyB;AACvB6gC,kCAAgB,GAAG7gC,OAAO,CAAC8gC,YAAR,CAAqB,UAArB,CAAnB;AACA;AACD,iBAJH;AAOA,wBAAI,CAAChrB,OAAL,GAAe,EAAf;;AAEA,wBAAI,CAACrC,YAAL,CAAkBC,OAAlB,GAA4BmtB,gBAAgB,GAAC,CAA7C,EAAgDhtB,IAAhD;;AAEA,oBAAIktB,UAAU,GAAG,QAAI,CAACttB,YAAL,CAAkBC,OAAlB,GAA4BmtB,gBAAgB,GAAC,CAA7C,EAAgDG,mBAAjE;;AACA,wBAAI,CAACztB,eAAL,CAAqBC,OAArB,GAA+B,CAACqtB,gBAAgB,GAAE,CAAnB,EAAsBvqB,QAAtB,EAA/B;;AACA,wBAAI,CAAC3Q,gBAAL,CAAsByS,aAAtB,CAAoC,IAApC;;AACA,wBAAI,CAAC7E,eAAL,CAAqBksB,YAArB,GAAoCsB,UAApC;AACA,oBAAIE,aAAa,GAAG78B,KAAK,CAACC,IAAN,CAAWwG,QAAQ,CAACE,gBAAT,CAA0B,0BAA1B,CAAX,CAApB;AACA,oBAAIm2B,UAAU,GAAG,EAAjB;AACAD,6BAAa,CAACrgC,OAAd,CAAsB,UAAAZ,OAAO,EAAI;AAC/B,sBAAIgL,QAAQ,GAAG5G,KAAK,CAACC,IAAN,CAAWrE,OAAO,CAACgL,QAAnB,CAAf;AACAA,0BAAQ,CAACpK,OAAT,CACE,UAAAugC,IAAI,EAAE;AACJ,wBAAIj1B,QAAQ,GAAGk1B,QAAQ,CAACD,IAAI,CAACL,YAAL,CAAkB,UAAlB,CAAD,CAAvB;AACA,wBAAIjhC,MAAM,GAAG;AACX+W,2BAAK,EAAG,QAAI,CAAC/W,MAAL,CAAYqM,QAAQ,GAAC,CAArB,EAAwB8K,KADrB;AAEXH,yBAAG,EAAG,QAAI,CAAChX,MAAL,CAAYqM,QAAQ,GAAC,CAArB,EAAwB2K;AAFnB,qBAAb;AAKAqqB,8BAAU,CAAClgC,IAAX,CAAgBnB,MAAhB;AACD,mBATH;AAWD,iBAbD;AAeAH,uBAAO,CAACC,GAAR,CAAYuhC,UAAZ;AACA,wBAAI,CAAClrB,aAAL,GAAqBkrB,UAArB;AAGD,eA3ED,MA2EO;AACL,oBAAI,CAAC,QAAI,CAACtB,aAAV,EAAyB;AAEvB;AACA/0B,0BAAQ,CAACE,gBAAT,CAA0B,YAA1B,EAAwCnK,OAAxC,CAAgD,UAAAZ,OAAO,EAAI;AACzD,4BAAI,CAACiH,QAAL,CAAc2C,WAAd,CAA0B5J,OAA1B,EAAmC,WAAnC;;AACA,4BAAI,CAACiH,QAAL,CAAc2C,WAAd,CAA0B5J,OAA1B,EAAmC,gBAAnC;AACD,mBAHD;AAID;AACF;AACF,aA1GS,EA0GP,EA1GO,CAAV;AA2GD;;;wCAGa8gB,K,EAAK;AAAA;;AAEjBtgB,sBAAU,CAAC,YAAM;AAEf;AACA,kBAAIgB,KAAK,GAAG,QAAI,CAAC+R,eAAL,CAAqBC,OAAjC,CAHe,CAKf;AACA;;AACA,kBAAIhS,KAAK,IAAI,EAAb,EAAiB;AACf;AACA,oBAAIqO,OAAO,GAAG,QAAI,CAAC4D,YAAL,CAAkBC,OAAlB,GAA4BlS,KAA5B,CAAd;AACD;;;;;;AAKA;AAIF,aAnBS,EAmBP,EAnBO,CAAV;AAqBAhB,sBAAU,CAAC,YAAM;AACf;AACA,kBAAIy/B,OAAO,GAAG77B,KAAK,CAACC,IAAN,CAAWyc,KAAK,CAAC8S,IAAjB,CAAd,CAFe,CAGf;;AACA,kBAAIyN,QAAQ,GAAGx2B,QAAQ,CAACy2B,cAAT,CAAwB,QAAI,CAAC/tB,eAAL,CAAqBksB,YAA7C,CAAf;AACA//B,qBAAO,CAACC,GAAR;AACA,kBAAI6T,OAAO,GAAG,QAAI,CAACD,eAAL,CAAqBC,OAAnC;;AACA,kBAAIysB,OAAO,CAAC9d,QAAR,CAAiBkf,QAAjB,CAAJ,EAAgC,CAE/B,CAFD,MAEO;AACL,oBAAG,QAAI,CAACxhC,MAAL,IAAe,IAAlB,EAAuB;AACrB,0BAAI,CAACA,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,wBAAIA,OAAO,CAACkM,QAAR,IAAoBsH,OAAxB,EAAiC;AAE/BxT,6BAAO,CAACuhC,OAAR,GAAkB,KAAlB;AAEA,8BAAI,CAAChuB,eAAL,CAAqBksB,YAArB,GAAoC,EAApC;AACA,8BAAI,CAAClsB,eAAL,CAAqBC,OAArB,GAA+B,EAA/B;AACD;AACF,mBATD;AAUD;;AAGD,oBAAIguB,iBAAiB,GAAG32B,QAAQ,CAAC4M,sBAAT,CAAgC,WAAWjE,OAA3C,EAAoD,CAApD,CAAxB,CAfK,CAgBL;;AACA,oBAAIguB,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B,sBAAIh9B,CAAC,GAAG,CAAR;AACAJ,uBAAK,CAACC,IAAN,CAAWm9B,iBAAiB,CAACnN,UAA7B,EAAyCzzB,OAAzC,CACE,UAAAZ,OAAO,EAAI;AACvB;AACc,wBAAIyhC,eAAe,GAAGzhC,OAAO,CAAC0hC,WAA9B;AACA,wBAAIpB,IAAJ,EAAU57B,IAAV;;AACA,wBAAI1E,OAAO,CAAC,WAAD,CAAP,IAAwBJ,SAA5B,EAAuC;AAErC,0BAAII,OAAO,CAAC,WAAD,CAAP,CAAqBikB,QAArB,CAA8B,MAA9B,KAAyCjkB,OAAO,CAAC,WAAD,CAAP,CAAqBikB,QAArB,CAA8B,WAA9B,CAA7C,EAAyF;AAEvFqc,4BAAI,GAAGl8B,KAAK,CAACC,IAAN,CAAWm9B,iBAAiB,CAACnN,UAA7B,EAAyC7vB,CAAC,GAAG,CAA7C,CAAP;AACAE,4BAAI,GAAGN,KAAK,CAACC,IAAN,CAAWm9B,iBAAiB,CAACnN,UAA7B,EAAyC7vB,CAAzC,CAAP;;AAEA,4BAAIE,IAAI,IAAI1E,OAAZ,EAAqB;AACnB0E,8BAAI,GAAGN,KAAK,CAACC,IAAN,CAAWm9B,iBAAiB,CAACnN,UAA7B,EAAyC7vB,CAAC,GAAG,CAA7C,CAAP;AACD;;AAED,4BAAI87B,IAAI,IAAI1gC,SAAZ,EAAuB;AACrB,8BAAI0gC,IAAI,CAAC7L,QAAL,IAAiB,OAArB,EAA8B;AAC5BgN,2CAAe,GAAGnB,IAAI,CAACoB,WAAL,IAAoBD,eAAtC;AACAnB,gCAAI,CAACnwB,MAAL;AACD;AACF;;AAED,4BAAIzL,IAAI,IAAI9E,SAAZ,EAAuB;AACrB,8BAAI8E,IAAI,CAAC+vB,QAAL,IAAiB,OAArB,EAA8B;AAC5BgN,2CAAe,IAAI/8B,IAAI,CAACg9B,WAAxB;AACAh9B,gCAAI,CAACyL,MAAL;AACD;AACF;;AAED,4BAAM9N,IAAI,GAAG,QAAI,CAAC4E,QAAL,CAAc06B,UAAd,CAAyBF,eAAzB,CAAb;;AAEA,gCAAI,CAACx6B,QAAL,CAAc26B,YAAd,CAA2BJ,iBAA3B,EAA8Cn/B,IAA9C,EAAoDrC,OAApD,EAzBuF,CA0BvF;;;AAEAA,+BAAO,CAACmQ,MAAR;AAGD;AACF;;AAED3L,qBAAC;AACF,mBA1CH;AA6CD;AAEF;AACF,aA5ES,EA4EP,EA5EO,CAAV;AA8ED;;;0CAKesc,K,EAAsB;AAAA;;AACpC;AACA,gBAAIA,KAAK,CAAC+gB,MAAN,IAAgB/gB,KAAK,CAACghB,OAA1B,EAAmC;AACjC,mBAAKlC,aAAL,GAAqB,IAArB;;AACA,kBAAG,KAAK//B,MAAL,IAAeD,SAAlB,EAA4B;AAC1B,qBAAKC,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7BA,yBAAO,CAACuhC,OAAR,GAAkB,KAAlB;AACA,0BAAI,CAAChuB,eAAL,CAAqBksB,YAArB,GAAoC,EAApC;AACA,0BAAI,CAAClsB,eAAL,CAAqBC,OAArB,GAA+B,EAA/B;AACD,iBAJD;AAKD;AAEF,aAVD,MAUO,IAAIsN,KAAK,CAACihB,IAAN,IAAc,QAAlB,EAA4B;AAEjC,kBAAIV,QAAQ,GAAGx2B,QAAQ,CAACy2B,cAAT,CAAwB,KAAK/tB,eAAL,CAAqBksB,YAA7C,CAAf;AACA,kBAAIjsB,OAAO,GAAG,KAAKD,eAAL,CAAqBC,OAAnC;;AAEA,kBAAG,KAAK3T,MAAL,IAAeD,SAAlB,EAA4B;AAC1B,qBAAKC,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,sBAAIA,OAAO,CAAC6Q,EAAR,IAAc2C,OAAlB,EAA2B;AAEzBxT,2BAAO,CAACuhC,OAAR,GAAkB,KAAlB;AAEA,4BAAI,CAAChuB,eAAL,CAAqBksB,YAArB,GAAoC,EAApC;AACA,4BAAI,CAAClsB,eAAL,CAAqBC,OAArB,GAA+B,EAA/B;AACD;AACF,iBARD;AAUA,oBAAIguB,iBAAiB,GAAG32B,QAAQ,CAAC4M,sBAAT,CAAgC,WAAWjE,OAA3C,EAAoD,CAApD,CAAxB;;AACA,oBAAIguB,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B,sBAAIh9B,CAAC,GAAG,CAAR;AACAJ,uBAAK,CAACC,IAAN,CAAWm9B,iBAAiB,CAACx2B,QAA7B,EAAuCpK,OAAvC,CACE,UAAAZ,OAAO,EAAI;AACTN,2BAAO,CAACC,GAAR,CAAYK,OAAZ;;AACA,wBAAIA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAJ,EAAwC;AAEtC,0BAAIwd,eAAe,GAAGzhC,OAAO,CAAC0hC,WAA9B;;AACA,0BAAMr/B,IAAI,GAAG,QAAI,CAAC4E,QAAL,CAAc06B,UAAd,CAAyBF,eAAzB,CAAb,CAHsC,CAItC;AACA;;;AACA,8BAAI,CAACx6B,QAAL,CAAc26B,YAAd,CAA2BJ,iBAA3B,EAA8Cn/B,IAA9C,EAAoDrC,OAApD;;AACA,8BAAI,CAACiH,QAAL,CAAcyF,WAAd,CAA0B80B,iBAA1B,EAA6CxhC,OAA7C,EAPsC,CAQtC;AACA;AACA;;;AACAwE,uBAAC;AACD;AACD;;AACDA,qBAAC;AACF,mBAlBH;AAqBD;AACF;AAKF;AACF;;;2CAGgBsc,K,EAAsB;AACrC,gBAAI,CAACA,KAAK,CAAC+gB,MAAP,IAAiB,CAAC/gB,KAAK,CAACghB,OAA5B,EAAqC;AACnC,mBAAKlC,aAAL,GAAqB,KAArB;AACD;AACF;;;qCAkBO;AAAA;;AAEN;AAGA,iBAAKF,aAAL,GAAqB,KAAKrhC,WAAL,CAAiBc,KAAjB,CAAuB;AAC1Co0B,oBAAM,EAAE,KAAKl1B,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKugC,WAAL,EAAD,CAAvB;AADkC,aAAvB,CAArB;AAIA,iBAAKxO,eAAL,CAAqBtW,kBAArB,CAAwCvb,SAAxC,CACE,UAAAC,IAAI,EAAE;AACJ,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAAC+/B,aAAL,GAAqB//B,IAArB;AACD,eAFD,MAEK;AACH,wBAAI,CAAC+/B,aAAL,GAAqB,EAArB;AACD;AACF,aAPH,EAOI,UAAAl/B,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aATH;AAYA,iBAAK+wB,eAAL,CAAqBrW,oBAArB,CAA0Cxb,SAA1C,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAACi1B,WAAL,GAAmBj1B,IAAnB;AAGD,eAJD,MAIK;AACH,wBAAI,CAACi1B,WAAL,GAAmB,EAAnB;AACD;AACF,aAVH,EAUI,UAAAp0B,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAZH;AAeA,iBAAK+wB,eAAL,CAAqBpW,yBAArB,CAA+Czb,SAA/C,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAACygC,iBAAL,GAAyBzgC,IAAzB;AAGD,eAJD,MAIK;AACH,wBAAI,CAACygC,iBAAL,GAAyB,EAAzB;AACD;AACF,aAVH,EAUI,UAAA5/B,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAZH;AAiBA,iBAAKm/B,YAAL,CAAkBlgC,IAAlB,CAAuB,oEAAa,GAAb,CAAvB,EAA0CC,SAA1C,CACE,UAAAC,IAAI,EAAI;AACN;AACA,sBAAI,CAAC0V,aAAL,CAAmB1V,IAAI,CAACsQ,OAAxB,EAAiCtQ,IAAI,CAACgF,GAAtC,EAA2ChF,IAAI,CAACiF,CAAhD;AACD,aAJH;AAOA,iBAAKmB,gBAAL,CAAsBmf,cAAtB,CAAqCxlB,SAArC,CACE,UAAAC,IAAI,EAAG;AAEL,kBAAIyiC,UAAU,GAAG,EAAjB;;AACA,kBAAGziC,IAAI,IAAI,IAAX,EAAgB;AAGd,wBAAI,CAAC4X,eAAL,GAAuB,QAAI,CAACA,eAAL,CAAqB1I,MAArB,CACrB,UAAAzO,OAAO,EAAI;AACT,yBAAOA,OAAO,CAAC6Q,EAAR,IAActR,IAAI,CAACsR,EAA1B;AACD,iBAHoB,CAAvB,CAHc,CAQd;;AAEA,oBAAG,QAAI,CAAChR,MAAL,IAAeD,SAAlB,EAA4B;AAC1B,0BAAI,CAACC,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,wBAAGA,OAAO,CAAC6Q,EAAR,IAActR,IAAI,CAACmX,OAAtB,EAA8B;AAC5B;;;AAKA,0BAAIE,KAAK,GAAG5W,OAAO,CAACgX,KAApB;AACA,0BAAIH,GAAG,GAAG7W,OAAO,CAAC6W,GAAlB;;AAEA,8BAAI,CAACM,eAAL,CAAqBvW,OAArB,CAA6B,UAAAZ,OAAO,EAAI;AACtC,4BAAGA,OAAO,CAACiiC,KAAR,CAAc,CAAd,EAAiBrrB,KAAjB,IAA0BA,KAA1B,IAAoC5W,OAAO,CAACiiC,KAAR,CAAc,CAAd,EAAiBprB,GAAjB,IAAwBA,GAA/D,EAAmE;AACjEmrB,oCAAU,CAAChhC,IAAX,CAAgBhB,OAAhB;AACD;AACF,uBAJD;;AAMAN,6BAAO,CAACC,GAAR,CAAYqiC,UAAZ,EAAwBA,UAAU,CAACx/B,MAAnC;;AAEA,0BAAGw/B,UAAU,CAACx/B,MAAX,IAAqB,CAAxB,EAA0B;AACxB,4BAAI0J,QAAQ,GAAGlM,OAAO,CAACkM,QAAvB;AACA,4BAAIsL,WAAW,GAAG3M,QAAQ,CAAC4M,sBAAT,CAAgC,YAAUvL,QAAQ,GAAC,CAAnB,CAAhC,EAAuD,CAAvD,CAAlB;;AACA,gCAAI,CAACjF,QAAL,CAAc2C,WAAd,CAA0B4N,WAA1B,EAAuC,YAAvC;AACD;AACF;AACF,mBAxBD;AAyBD;AAEF;AACF,aA3CH;AA8CD;;;sCAGWjX,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAM;AACf,kBAAGD,OAAO,CAACqV,OAAR,CAAgBlV,YAAhB,IAAgC,IAAnC,EAAwC;AACtC,oBAAI,QAAI,CAACb,MAAL,IAAeU,OAAO,CAACqV,OAAR,CAAgBlV,YAAnC,EAAiD;AAC/C,0BAAI,CAACwhC,UAAL,GAAkB,QAAI,CAACxC,aAAL,CAAmBz/B,GAAnB,CAAuB,QAAvB,CAAlB;;AACA,0BAAI,CAACiiC,UAAL,CAAgBvhC,KAAhB;;AACA,0BAAI,CAACqV,aAAL,GAAqB,IAArB;AACA,0BAAI,CAACmB,eAAL,GAAuB,EAAvB;AACA,0BAAI,CAAC2oB,uBAAL,GAA+B,EAA/B;AAEA;;;;;;;;;AAcD;;AAGD,wBAAI,CAACjgC,MAAL,GAAcU,OAAO,CAACqV,OAAR,CAAgBlV,YAAhB,CAA6B,QAA7B,CAAd;AACA,oBAAIiV,UAAU,GAAGpV,OAAO,CAACqV,OAAR,CAAgBlV,YAAhB,CAA6B,YAA7B,CAAjB;AACA,wBAAI,CAACyhC,MAAL,GAAc5hC,OAAO,CAACqV,OAAR,CAAgBlV,YAAhB,CAA6B,WAA7B,CAAd;AACA,oBAAIgzB,MAAM,GAAGnzB,OAAO,CAACqV,OAAR,CAAgBlV,YAAhB,CAA6B,QAA7B,CAAb;AACAhB,uBAAO,CAACC,GAAR,CAAY,QAAI,CAACE,MAAjB;;AACA,oBAAI,QAAI,CAACA,MAAL,IAAe,IAAnB,EAAyB;AAEvB,sBAAG,QAAI,CAACA,MAAL,CAAY2C,MAAZ,IAAsB,CAAzB,EAA2B;AACzB,4BAAI,CAACuU,WAAL,GAAmB,IAAnB;AACArX,2BAAO,CAACC,GAAR,CAAY,YAAZ;AACD,mBAHD,MAGK;AACH,4BAAI,CAACoX,WAAL,GAAmB,KAAnB;AACArX,2BAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,mBARsB,CAUvB;;;AAEA,0BAAI,CAACgG,gBAAL,CAAsBy8B,aAAtB,CAAoCzsB,UAApC,EAAgDrW,SAAhD,CACE,UAAAC,IAAI,EAAE;AACJG,2BAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAGA,IAAI,CAAC8iC,WAAL,IAAoBziC,SAAvB,EAAiC;AAC/BL,0BAAI,CAAC8iC,WAAL,CAAiBzhC,OAAjB,CAAyB,UAAAZ,OAAO,EAAI;AAClC;AACA,4BAAGA,OAAO,CAACsiC,KAAR,IAAiB,aAApB,EAAkC;AAChC,8BAAGtiC,OAAO,CAACsX,UAAR,CAAmBf,YAAnB,IAAmC3W,SAAtC,EAAgD;AAC9CI,mCAAO,CAACsX,UAAR,CAAmB,cAAnB,IAAqC,EAArC;AACD;;AAED,8BAAG,CAAClT,KAAK,CAAC0S,OAAN,CAAc9W,OAAO,CAACsX,UAAR,CAAmBf,YAAjC,CAAJ,EAAmD;AACjD,gCAAIgsB,OAAO,GAAG,EAAd;AACAA,mCAAO,CAACvhC,IAAR,CAAahB,OAAO,CAACsX,UAAR,CAAmB,cAAnB,CAAb;AACAtX,mCAAO,CAACsX,UAAR,CAAmB,cAAnB,IAAqCirB,OAArC;AACD;;AAGD,8BAAGn+B,KAAK,CAAC0S,OAAN,CAAc9W,OAAO,CAACsX,UAAR,CAAmB,cAAnB,CAAd,CAAH,EAAqD;AACnDlT,iCAAK,CAACC,IAAN,CAAWrE,OAAO,CAACsX,UAAR,CAAmB,cAAnB,CAAX,EAA+C1W,OAA/C,CAAuD,UAAAZ,OAAO,EAAI;AAEhE,kCAAGA,OAAO,CAAC,MAAD,CAAP,IAAmBJ,SAAtB,EAAgC;AAC9BI,uCAAO,CAAC,MAAD,CAAP,GAAkB,EAAlB;AACD;;AAED,kCAAGA,OAAO,CAAC,YAAD,CAAP,IAAwBJ,SAA3B,EAAqC;AACnCI,uCAAO,CAAC,YAAD,CAAP,GAAwB,EAAxB;AACD;AACF,6BATD;AAUD;;AACD,kCAAI,CAACmX,eAAL,CAAqBnW,IAArB,CAA0BhB,OAA1B;AACD,yBAzBD,MAyBM,IAAGA,OAAO,CAACsiC,KAAR,IAAiB,QAApB,EAA6B;AACjC,kCAAI,CAACxC,uBAAL,CAA6B9+B,IAA7B,CAAkChB,OAAlC;AACD;AACF,uBA9BD,EAD+B,CAgC/B;;AACA,0BAAG,QAAI,CAACmX,eAAL,CAAqB3U,MAArB,GAA8B,CAAjC,EAAmC;AAIjC,4BAAIggC,KAAK,GAAG,QAAZ;AACA,4BAAIC,YAAY,GAAGv3B,WAAW,CAAC,UAACC,GAAD,EAAO;AACpC,8BAAI;AACF,gCAAG,QAAI,CAACtL,MAAL,IAAe,IAAlB,EAAuB;AACrB,sCAAI,CAACA,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,oCAAI0iC,YAAY,GAAG1iC,OAAO,CAACgX,KAA3B;AACA,oCAAI2rB,UAAU,GAAG3iC,OAAO,CAAC6W,GAAzB;;AACA,wCAAI,CAACM,eAAL,CAAqBvW,OAArB,CAA6B,UAAAwW,UAAU,EAAI;AACzC,sCAAGA,UAAU,CAAC6qB,KAAX,CAAiBz/B,MAAjB,IAA2B,CAA9B,EAAgC;AAC9B,wCAAIogC,eAAe,GAAGxrB,UAAU,CAAC6qB,KAAX,CAAiB,CAAjB,EAAoBrrB,KAA1C;AACA,wCAAIisB,aAAa,GAAGzrB,UAAU,CAAC6qB,KAAX,CAAiB,CAAjB,EAAoBprB,GAAxC;;AAEA,wCAAG+rB,eAAe,IAAIF,YAAnB,IAAoCG,aAAa,IAAIF,UAAxD,EAAmE;AACjE,0CAAIprB,eAAe,GAAGvX,OAAO,CAACkM,QAA9B;AACA,0CAAIsL,WAAW,GAAG3M,QAAQ,CAAC4M,sBAAT,CAAgC,YAAUF,eAAe,GAAC,CAA1B,CAAhC,EAA8D,CAA9D,CAAlB;AACA,0CAAI5M,IAAI,GAAG,QAAX;AAEA,0CAAIm4B,OAAO,GAAGpP,MAAM,CAAC3oB,gBAAP,CAAwB,aAAW/K,OAAO,CAAC+iC,KAAnB,GAAyB,KAAjD,EAAwD,CAAxD,EAA2DC,SAAzE;AACA,0CAAInjC,MAAM,GAAG;AACXqzB,iDAAS,EAAG4P;AADD,uCAAb;;AAGA,8CAAI,CAAC3R,eAAL,CAAqB6C,WAArB,CAAiCn0B,MAAjC,EAAyCP,SAAzC,CACE,UAAAC,IAAI,EAAG;AACLG,+CAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,4CAAI00B,GAAG,GAAG10B,IAAI,CAAC20B,GAAf;AACA,4CAAI+O,WAAW,GAAG,IAAI7P,SAAJ,GAAgBC,eAAhB,CAAgCY,GAAhC,EAAqC,WAArC,EAAkDnpB,IAAlD,CAAuDkqB,SAAvD,CAAiE5N,OAAjE,CAAyE,IAAzE,EAA+E,EAA/E,CAAlB;AACAhQ,kDAAU,CAACE,UAAX,CAAsB,QAAtB,IAAkC2rB,WAAlC;AACD,uCANH,EAMK,UAAA7iC,KAAK,EAAG;AACTV,+CAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,uCARH;;AAUA,0CAAI2lB,KAAK,GAAG7a,WAAW,CAAC,UAACC,GAAD,EAAO;AAE3B,4CAAG;AACC,8CAAGqM,WAAW,IAAI5X,SAAlB,EAA4B;AAC1B+K,gDAAI,CAAC1D,QAAL,CAAcsE,QAAd,CAAuBiM,WAAvB,EAAoC,YAApC;AACAjJ,yDAAa,CAACwX,KAAD,CAAb;AACD;AACJ,yCALD,CAKC,OAAMjhB,CAAN,EAAQ;AACLpF,iDAAO,CAACC,GAAR,CAAYmF,CAAZ;AACH;AAGJ,uCAZsB,EAYpB,GAZoB,CAAvB;AAgBD;AACF;AACF,iCA1CD;AA4CD,+BA/CD;;AAgDAtE,wCAAU,CAAC,YAAM;AACf,wCAAI,CAAClC,cAAL,CAAoB4kC,uBAApB,CAA4C,IAA5C;;AACA,wCAAI,CAAC5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,QAAI,CAACpf,eAAhD;AACD,+BAHS,EAGP,IAHO,CAAV;AAIA5I,2CAAa,CAACk0B,YAAD,CAAb;AACD;AAEF,2BAzDD,CAyDE,OAAOriC,KAAP,EAAc;AACdV,mCAAO,CAACC,GAAR,CAAYS,KAAZ;AACD;AACF,yBA7D6B,EA6D3B,GA7D2B,CAA9B;AAiED,uBAtED,MAsEK;AACH,gCAAI,CAAC+W,eAAL,GAAuB,EAAvB;;AACA,gCAAI,CAAC7Y,cAAL,CAAoB4kC,uBAApB,CAA4C,KAA5C;;AACA,gCAAI,CAAC5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,IAA3C;AAED;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsKD,qBApRD,MAoRK;AACH,8BAAI,CAACpf,eAAL,GAAuB,EAAvB;AACA,8BAAI,CAAC2oB,uBAAL,GAA+B,EAA/B;;AACA,8BAAI,CAACxhC,cAAL,CAAoB4kC,uBAApB,CAA4C,IAA5C;;AACA,8BAAI,CAAC5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,IAA3C;AACD;AAEF,mBA9RH,EA8RI,UAAAn2B,KAAK,EAAE;AACPV,2BAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,mBAhSH;AAkSD;AACF,eA7UD,MA6UK;AACH,wBAAI,CAACP,MAAL,GAAc,IAAd;AACD;AAIF,aApVS,EAoVP,EApVO,CAAV;AAsVD;;;wCAEU,CAEV;;;sCAIWsjC,K,EAAQ;AAClB,gBAAIA,KAAK,IAAIvjC,SAAb,EAAwB;AACtB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgBo+B,KAAhB;AADoB,eAAvB,CAAP;AAGD,aAJD,MAIO;AACL,qBAAO,KAAK9kC,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADoB,eAAvB,CAAP;AAGD;AACF;;;oCAESR,G,EAAKC,C,EAAG;AAChB;AACA;AACA,gBAAGD,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,GAAxB,IAA+B3f,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,GAAvD,IAA8D3f,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,EAAzF,EAA4F;AAC1F,kBAAIyY,UAAU,GAAGp4B,GAAG,CAACE,MAAJ,CAAW2+B,aAA5B;;AACA,kBAAIzG,UAAU,IAAI/8B,SAAlB,EAA6B;AAC3B,oBAAI6gC,UAAU,GAAG9D,UAAU,CAAC+D,SAA5B;AACA,oBAAIC,SAAS,GAAG,kCAAkCC,IAAlC,CAAuCH,UAAvC,CAAhB;;AACA,oBAAIE,SAAJ,EAAe,CAEd,CAFD,MAEO;AACL,uBAAK9gC,MAAL,CAAY2E,CAAZ,EAAe,UAAf,IAA6B,IAA7B;;AAEA,sBAAI0Z,MAAM,CAACmlB,YAAX,EAAyB;AACvB,wBAAInlB,MAAM,CAACmlB,YAAP,GAAsBC,KAA1B,EAAiC;AAAG;AAClCplB,4BAAM,CAACmlB,YAAP,GAAsBC,KAAtB;AACD,qBAFD,MAEO,IAAIplB,MAAM,CAACmlB,YAAP,GAAsBE,eAA1B,EAA2C;AAAG;AACnDrlB,4BAAM,CAACmlB,YAAP,GAAsBE,eAAtB;AACD;AACF;AACF;AACF;AACF;AAKF;;;sCAEWh/B,G,EAAKC,C,EAAG;AAClB;AACA,iBAAK3E,MAAL,CAAY2E,CAAZ,EAAe,UAAf,IAA6B,KAA7B;AAED;;;0CAEeqL,O,EAAStL,G,EAAKC,C,EAAG;AAC/BhE,sBAAU,CAAC,YAAM,CAEhB,CAFS,EAEP,EAFO,CAAV;AAGA,gBAAIgjC,WAAW,GAAG3zB,OAAO,CAAC4zB,WAAR,CAAoBp4B,aAAtC,CAJ+B,CAK/B;;AACA,gBAAIm4B,WAAW,CAACz4B,gBAAZ,CAA6B,aAA7B,EAA4CvI,MAA5C,GAAqD,CAAzD,EAA4D,CAE3D,CAFD,MAEO;AACLghC,yBAAW,CAAC9B,WAAZ,GAA0B8B,WAAW,CAAC9B,WAAZ,CAAwBjgC,IAAxB,EAA1B;AACD;AACD;;;;;;;;;;;;;AAaD;;;sCAEWoO,O,EAAStL,G,EAAKC,C,EAAG;AAC3B,gBAAI,CAAC,KAAKo7B,aAAV,EAAyB;AACvB,kBAAGr7B,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,GAAxB,IAA+B3f,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,GAAvD,IAA8D3f,GAAG,CAACE,MAAJ,CAAWyf,SAAX,IAAwB,EAAzF,EAA4F;AAC1F,qBAAKqb,YAAL,CAAkB76B,IAAlB,CAAuB;AAAEmL,yBAAO,EAAPA,OAAF;AAAWtL,qBAAG,EAAHA,GAAX;AAAgBC,mBAAC,EAADA;AAAhB,iBAAvB;AACD;AAEF,aALD,MAKO;AACL;AACA9E,qBAAO,CAACC,GAAR,CAAYkQ,OAAZ;AACA,mBAAK6zB,gBAAL,CAAsB7zB,OAAtB,EAA+BtL,GAA/B,EAAoCC,CAApC;AACD;AACF;;;2CAGgBqL,O,EAAStL,G,EAAKC,C,EAAG;AAChC,gBAAI28B,IAAI,GAAGtxB,OAAO,CAAC4zB,WAAR,CAAoBp4B,aAApB,CAAkCsxB,UAAlC,CAA6CA,UAA7C,CAAwDtI,UAAxD,CAAmE7vB,CAAnE,CAAX;AACA,gBAAIm/B,WAAJ,EAAiBC,WAAjB;AACAD,uBAAW,GAAG9zB,OAAO,CAAC4zB,WAAR,CAAoBp4B,aAApB,CAAkCsxB,UAAlC,CAA6CkH,eAA3D;AACAD,uBAAW,GAAG/zB,OAAO,CAAC4zB,WAAR,CAAoBp4B,aAApB,CAAkCsxB,UAAlC,CAA6CiH,WAA3D;;AAIA,gBAAIzC,IAAI,CAAClgB,SAAL,CAAegD,QAAf,CAAwB,WAAxB,CAAJ,EAA0C;AACxC,mBAAKhd,QAAL,CAAc2C,WAAd,CAA0Bu3B,IAA1B,EAAgC,WAAhC;;AACA,kBAAIwC,WAAW,IAAI,IAAnB,EAAyB;AACvB,oBAAIA,WAAW,CAAC1iB,SAAZ,CAAsBgD,QAAtB,CAA+B,WAA/B,CAAJ,EAAiD;AAC/C,uBAAKhd,QAAL,CAAc2C,WAAd,CAA0B+5B,WAA1B,EAAuC,gBAAvC;AACD;AACF;;AACD,kBAAIC,WAAW,IAAI,IAAnB,EAAyB;AACvB,oBAAIA,WAAW,CAAC3iB,SAAZ,IAAyBrhB,SAA7B,EAAwC;AACtC,sBAAIgkC,WAAW,CAAC3iB,SAAZ,CAAsBgD,QAAtB,CAA+B,WAA/B,CAAJ,EAAiD;AAC/C,yBAAKhd,QAAL,CAAc2C,WAAd,CAA0Bu3B,IAA1B,EAAgC,gBAAhC;AACD;AACF;AAEF;;AACD,kBAAIf,cAAc,GAAGh8B,KAAK,CAACC,IAAN,CAAWwG,QAAQ,CAAC4M,sBAAT,CAAgC,WAAhC,CAAX,CAArB;AACA2oB,4BAAc,CAACx/B,OAAf,CAAuB,UAAAZ,OAAO,EAAI;AAChC,oBAAIgL,QAAQ,GAAG5G,KAAK,CAACC,IAAN,CAAWrE,OAAO,CAACgL,QAAnB,CAAf;AACAA,wBAAQ,CAACpK,OAAT,CAAiB,UAAAy/B,QAAQ,EAAI;AAC3B,sBAAIA,QAAQ,CAACpf,SAAT,CAAmBgD,QAAnB,CAA4B,kBAA5B,CAAJ,EAAqD;AACnDoc,4BAAQ,CAAClwB,MAAT;AACD;AACF,iBAJD;AAKD,eAPD;;AASA,kBAAIiwB,cAAc,CAAC59B,MAAf,GAAwB,CAA5B,EAA+B;AAC7B9C,uBAAO,CAACC,GAAR,CAAYygC,cAAc,CAACA,cAAc,CAAC59B,MAAf,GAAwB,CAAzB,CAA1B;AACA,qBAAKshC,oBAAL,CAA0B1D,cAAc,CAACA,cAAc,CAAC59B,MAAf,GAAwB,CAAzB,CAAxC;AACD;AAGF,aA/BD,MA+BO;AACL,mBAAKyE,QAAL,CAAcsE,QAAd,CAAuB41B,IAAvB,EAA6B,WAA7B;;AACA,kBAAIwC,WAAW,IAAI,IAAnB,EAAyB;AACvB,oBAAIA,WAAW,CAAC1iB,SAAZ,CAAsBgD,QAAtB,CAA+B,WAA/B,CAAJ,EAAiD;AAC/C,uBAAKhd,QAAL,CAAcsE,QAAd,CAAuBo4B,WAAvB,EAAoC,gBAApC;AACD;AACF;;AACD,kBAAIC,WAAW,IAAI,IAAnB,EAAyB;AACvB,oBAAIA,WAAW,CAAC3iB,SAAZ,IAAyBrhB,SAA7B,EAAwC;AACtC,sBAAIgkC,WAAW,CAAC3iB,SAAZ,CAAsBgD,QAAtB,CAA+B,WAA/B,CAAJ,EAAiD;AAC/C,yBAAKhd,QAAL,CAAcsE,QAAd,CAAuB41B,IAAvB,EAA6B,gBAA7B;AACD;AACF;AACF;;AACD,kBAAIf,eAAc,GAAGh8B,KAAK,CAACC,IAAN,CAAWwG,QAAQ,CAAC4M,sBAAT,CAAgC,WAAhC,CAAX,CAArB;;AACA2oB,6BAAc,CAACx/B,OAAf,CAAuB,UAAAZ,OAAO,EAAI;AAChC,oBAAIgL,QAAQ,GAAG5G,KAAK,CAACC,IAAN,CAAWrE,OAAO,CAACgL,QAAnB,CAAf;AACAA,wBAAQ,CAACpK,OAAT,CAAiB,UAAAy/B,QAAQ,EAAI;AAC3B,sBAAIA,QAAQ,CAACpf,SAAT,CAAmBgD,QAAnB,CAA4B,kBAA5B,CAAJ,EAAqD;AACnDoc,4BAAQ,CAAClwB,MAAT;AACD;AACF,iBAJD;AAKD,eAPD;;AASA,kBAAIiwB,eAAc,CAAC59B,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,qBAAKshC,oBAAL,CAA0B3C,IAA1B;AACD,eAFD,MAEO,IAAIf,eAAc,CAAC59B,MAAf,IAAyB,CAA7B,EAAgC;AACrC49B,+BAAc,CAACx/B,OAAf,CAAuB,UAAAZ,OAAO,EAAI;AAChC,sBAAIgL,QAAQ,GAAG5G,KAAK,CAACC,IAAN,CAAWrE,OAAO,CAACgL,QAAnB,CAAf;AACAA,0BAAQ,CAACpK,OAAT,CAAiB,UAAAy/B,QAAQ,EAAI;AAC3B,wBAAIA,QAAQ,CAACpf,SAAT,CAAmBgD,QAAnB,CAA4B,kBAA5B,CAAJ,EAAqD;AACnDoc,8BAAQ,CAAClwB,MAAT;AACD;AACF,mBAJD;AAKD,iBAPD;AAQD;AACF;AAEF;;;+CAEoBgxB,I,EAAM;AACzB,gBAAI4C,GAAG,GAAG,KAAK98B,QAAL,CAAc+E,aAAd,CAA4B,KAA5B,CAAV;AACA,iBAAK/E,QAAL,CAAcsE,QAAd,CAAuBw4B,GAAvB,EAA4B,kBAA5B;AACA,gBAAIC,QAAQ,GAAG,KAAK/8B,QAAL,CAAc+E,aAAd,CAA4B,QAA5B,CAAf;AACA,gBAAIi4B,WAAW,GAAG,KAAKh9B,QAAL,CAAc+E,aAAd,CAA4B,QAA5B,CAAlB;AAEA,gBAAIk4B,MAAM,GAAG,KAAKj9B,QAAL,CAAc+E,aAAd,CAA4B,GAA5B,CAAb;AACA,iBAAK/E,QAAL,CAAcsE,QAAd,CAAuB24B,MAAvB,EAA+B,KAA/B;AACA,iBAAKj9B,QAAL,CAAcsE,QAAd,CAAuB24B,MAAvB,EAA+B,UAA/B;AAEA,gBAAIC,SAAS,GAAG,KAAKl9B,QAAL,CAAc+E,aAAd,CAA4B,GAA5B,CAAhB;AACA,iBAAK/E,QAAL,CAAcsE,QAAd,CAAuB44B,SAAvB,EAAkC,KAAlC;AACA,iBAAKl9B,QAAL,CAAcsE,QAAd,CAAuB44B,SAAvB,EAAkC,UAAlC;AAEA,iBAAKl9B,QAAL,CAAcqF,WAAd,CAA0B03B,QAA1B,EAAoCE,MAApC;AACA,iBAAKj9B,QAAL,CAAcqF,WAAd,CAA0B23B,WAA1B,EAAuCE,SAAvC;AACA,iBAAKl9B,QAAL,CAAciV,QAAd,CAAuB8nB,QAAvB,EAAiC,UAAjC,EAA6C,UAA7C;AACA,iBAAK/8B,QAAL,CAAciV,QAAd,CAAuB8nB,QAAvB,EAAiC,KAAjC,EAAwC,SAAxC;AACA,iBAAK/8B,QAAL,CAAciV,QAAd,CAAuBgoB,MAAvB,EAA+B,WAA/B,EAA4C,MAA5C;AACA,iBAAKj9B,QAAL,CAAciV,QAAd,CAAuBgoB,MAAvB,EAA+B,OAA/B,EAAwC,MAAxC;AAEA,iBAAKj9B,QAAL,CAAcsE,QAAd,CAAuBy4B,QAAvB,EAAiC,WAAjC;AACA,iBAAK/8B,QAAL,CAAcsE,QAAd,CAAuB04B,WAAvB,EAAoC,WAApC;AAEA,iBAAKh9B,QAAL,CAAciV,QAAd,CAAuB+nB,WAAvB,EAAoC,UAApC,EAAgD,UAAhD;AACA,iBAAKh9B,QAAL,CAAciV,QAAd,CAAuB+nB,WAAvB,EAAoC,KAApC,EAA2C,SAA3C;AACA,iBAAKh9B,QAAL,CAAciV,QAAd,CAAuBioB,SAAvB,EAAkC,WAAlC,EAA+C,MAA/C;AACA,iBAAKl9B,QAAL,CAAciV,QAAd,CAAuBioB,SAAvB,EAAkC,OAAlC,EAA2C,MAA3C;AACA,iBAAKl9B,QAAL,CAAciV,QAAd,CAAuB+nB,WAAvB,EAAoC,MAApC,EAA4C,QAA5C;AAEA,iBAAKh9B,QAAL,CAAcqF,WAAd,CAA0By3B,GAA1B,EAA+BC,QAA/B;AACA,iBAAK/8B,QAAL,CAAcqF,WAAd,CAA0By3B,GAA1B,EAA+BE,WAA/B;AACA,iBAAKh9B,QAAL,CAAcqF,WAAd,CAA0B60B,IAA1B,EAAgC4C,GAAhC;AACD;;;kDAEuBruB,S,EAAS;AAAA;;AAC/B,iBAAKmqB,qBAAL,GAA6B,EAA7B,CAD+B,CAE/B;;AACA,iBAAK1oB,eAAL,CAAqBvW,OAArB,CACE,UAAAwW,UAAU,EAAI;AACZ;AACA,kBAAIgtB,WAAJ,EAAiBC,SAAjB;;AACA,kBAAG,CAAC,QAAI,CAACttB,WAAT,EAAqB;AACnBqtB,2BAAW,GAAG1uB,SAAS,CAACsB,KAAxB;AACAqtB,yBAAS,GAAG3uB,SAAS,CAACmB,GAAtB;AACD,eAHD,MAGK;AACHutB,2BAAW,GAAG1uB,SAAS,CAACusB,KAAV,CAAgB,CAAhB,EAAmBrrB,KAAjC;AACAytB,yBAAS,GAAG3uB,SAAS,CAACusB,KAAV,CAAgB,CAAhB,EAAmBprB,GAA/B;AACD;;AAEDO,wBAAU,CAAC6qB,KAAX,CAAiBrhC,OAAjB,CAAyB,UAAAZ,OAAO,EAAI;AAClC,oBAAIA,OAAO,CAAC4W,KAAR,IAAiBwtB,WAAjB,IAAkCpkC,OAAO,CAAC6W,GAAR,IAAewtB,SAArD,EAA+D;AAC7D,0BAAI,CAACxE,qBAAL,CAA2B7+B,IAA3B,CAAgCoW,UAAhC;AACD;AACF,eAJD;AAOD,aAnBH;;AAqBA,gBAAG,KAAKyoB,qBAAL,CAA2Br9B,MAA3B,GAAoC,CAAvC,EAAyC;AACvC,mBAAKlE,cAAL,CAAoB4kC,uBAApB,CAA4C,IAA5C;AACA,mBAAK5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,KAAKsJ,qBAAhD;AACD;AACF;;;wCAEahwB,O,EAAStL,G,EAAKC,C,EAAG;AAAA;;AAE7B9E,mBAAO,CAACC,GAAR,CAAY,KAAKE,MAAL,CAAY2E,CAAZ,CAAZ;AACA,iBAAKq7B,qBAAL,GAA6B,EAA7B;AACA,iBAAK1oB,eAAL,CAAqBvW,OAArB,CACE,UAAAwW,UAAU,EAAI;AAEZ,kBAAIgtB,WAAW,GAAG,QAAI,CAACvkC,MAAL,CAAY2E,CAAZ,EAAewS,KAAjC;AACA,kBAAIqtB,SAAS,GAAG,QAAI,CAACxkC,MAAL,CAAY2E,CAAZ,EAAeqS,GAA/B,CAHY,CAKZ;;AAEA,kBAAGO,UAAU,CAAC6qB,KAAX,CAAiBz/B,MAAjB,IAA2B,CAA9B,EAAgC;AAC9B4U,0BAAU,CAAC6qB,KAAX,CAAiBrhC,OAAjB,CAAyB,UAAAZ,OAAO,EAAI;AAClC,sBAAGA,OAAO,CAAC4W,KAAR,IAAiBwtB,WAAjB,IAAgCpkC,OAAO,CAAC6W,GAAR,IAAewtB,SAAlD,EAA4D;AAC1D,4BAAI,CAACxE,qBAAL,CAA2B7+B,IAA3B,CAAgCoW,UAAhC;AACD;AACF,iBAJD;AAKD,eAND,MAMK,CAEJ;AACF,aAjBH;;AAoBA,gBAAG,KAAKyoB,qBAAL,CAA2Br9B,MAA3B,GAAoC,CAAvC,EAAyC;AACvC,mBAAKlE,cAAL,CAAoB4kC,uBAApB,CAA4C,IAA5C;AACA,mBAAK5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,KAAKsJ,qBAAhD;AACD,aAHD,MAGK;AACH,mBAAKvhC,cAAL,CAAoB4kC,uBAApB,CAA4C,KAA5C;AACA,mBAAK5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,IAA3C;AACD,aA9B4B,CAgC7B;;;AACA/1B,sBAAU,CAAC,YAAM;AAEf,sBAAI,CAACsV,OAAL,GAAe,EAAf;AACA,sBAAI,CAACjW,MAAL,CAAY2E,CAAZ,EAAe,SAAf,IAA4B,IAA5B;AACA,sBAAI,CAACsR,OAAL,GAAeoI,MAAM,CAACmlB,YAAP,GAAsB/sB,QAAtB,EAAf;;AACA,kBAAI,QAAI,CAAC/C,eAAL,CAAqBksB,YAArB,IAAqC,EAAzC,EAA6C;AAC3C,wBAAI,CAAClsB,eAAL,CAAqBksB,YAArB,GAAoC5vB,OAAO,CAACmxB,mBAA5C;AACA,wBAAI,CAACztB,eAAL,CAAqBC,OAArB,GAA+BhP,CAA/B;AACD,eAHD,MAIK,IAAIqL,OAAO,CAACmxB,mBAAR,IAA+B,QAAI,CAACztB,eAAxC,EAAyD;AAC5D,wBAAI,CAACA,eAAL,CAAqBksB,YAArB,GAAoC5vB,OAAO,CAACmxB,mBAA5C;AACA,wBAAI,CAACztB,eAAL,CAAqBC,OAArB,GAA+BhP,CAA/B;;AACA,wBAAI,CAAC3E,MAAL,CAAYe,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,sBAAIA,OAAO,CAAC6Q,EAAR,IAAcrM,CAAC,GAAG,CAAtB,EAAyB;AACvB;AACAxE,2BAAO,CAACuhC,OAAR,GAAkB,KAAlB;AACD,mBAHD,MAGO;AACL;AACAvhC,2BAAO,CAACuhC,OAAR,GAAkB,IAAlB;AACD;AACF,iBARD;AASD;;AAED,kBAAI1xB,OAAO,CAAC8D,MAAR,EAAJ,EAAsB,CAErB,CAFD,MAEO,IAAI,CAAC9D,OAAO,CAAC8D,MAAR,EAAL,EAAuB;AAC5B9D,uBAAO,CAACgE,IAAR;AACD;;AAED,kBAAI2vB,WAAW,GAAG3zB,OAAO,CAAC4zB,WAAR,CAAoBp4B,aAAtC;AACA,kBAAI6Y,SAAS,GAAGsf,WAAW,CAACtf,SAA5B;AACA,kBAAIogB,SAAS,GAAGz5B,QAAQ,CAACw4B,YAAT,EAAhB;AACA,kBAAIkB,UAAU,GAAGD,SAAS,CAACC,UAA3B;AACA,kBAAIC,SAAS,GAAGF,SAAS,CAACE,SAA1B;AACA,kBAAIC,WAAJ,EAAiBC,mBAAjB,CAlCe,CAmCf;AACA;;AAEA,kBAAIH,UAAU,IAAI,IAAd,IAAsBC,SAAS,IAAI,IAAvC,EAA6C;AAC3C,oBAAIG,gBAAgB,GAAGL,SAAS,CAACC,UAAV,CAAqB5H,UAA5C;AACA,oBAAIiI,eAAe,GAAGN,SAAS,CAACE,SAAV,CAAoB7H,UAA1C;;AAEA,oBAAIgI,gBAAgB,IAAIC,eAApB,IAAuC,QAAI,CAAC9uB,OAAL,IAAgB,EAA3D,EAAgE;AAAE;AAChE;AAEA,sBAAIwuB,SAAS,CAACC,UAAV,CAAqB7C,WAArB,CAAiCjgC,IAAjC,GAAwCe,MAAxC,IAAkD0hB,SAAS,CAAC1hB,MAA5D,IAAsE,QAAI,CAACsT,OAAL,IAAgBoO,SAA1F,EAAqG;AAAE;AAErG,wBAAI2gB,YAAY,GAAGP,SAAS,CAACO,YAA7B;AACA,wBAAIC,WAAW,GAAGR,SAAS,CAACQ,WAA5B;;AAGA,wBAAID,YAAY,GAAGC,WAAnB,EAAgC;AAC9B,0BAAIC,GAAG,GAAGF,YAAV;AACAA,kCAAY,GAAGC,WAAf;AACAA,iCAAW,GAAGC,GAAd;AACD,qBAVkG,CAYnG;;;AACArlC,2BAAO,CAACC,GAAR,CAAYklC,YAAZ;AACAnlC,2BAAO,CAACC,GAAR,CAAYmlC,WAAZ;AAEAtB,+BAAW,CAACtf,SAAZ,GAAwB,EAAxB;;AAEA,wBAAMid,IAAI,GAAG,QAAI,CAACl6B,QAAL,CAAc+E,aAAd,CAA4B,MAA5B,CAAb;;AACA,wBAAMg5B,MAAM,GAAG,QAAI,CAAC/9B,QAAL,CAAc06B,UAAd,CAAyBzd,SAAS,CAAC+gB,SAAV,CAAoB,CAApB,EAAuBJ,YAAvB,CAAzB,CAAf;;AACA,wBAAMxiC,IAAI,GAAG,QAAI,CAAC4E,QAAL,CAAc06B,UAAd,CAAyB,QAAI,CAAC7rB,OAA9B,CAAb;;AACA,wBAAMovB,MAAM,GAAG,QAAI,CAACj+B,QAAL,CAAc06B,UAAd,CAAyBzd,SAAS,CAAC+gB,SAAV,CAAoBH,WAApB,EAAiC5gB,SAAS,CAAC1hB,MAA3C,CAAzB,CAAf;AAGA;;;;;AAKA,4BAAI,CAACyE,QAAL,CAAcqF,WAAd,CAA0B60B,IAA1B,EAAgC9+B,IAAhC;;AACA,4BAAI,CAAC4E,QAAL,CAAcqF,WAAd,CAA0Bk3B,WAA1B,EAAuCrC,IAAvC;;AACA,4BAAI,CAACl6B,QAAL,CAAcsE,QAAd,CAAuB41B,IAAvB,EAA6B,MAA7B,GACA,QAAI,CAACl6B,QAAL,CAAck+B,YAAd,CAA2BhE,IAA3B,EAAiC,aAAjC,EAAgD0D,YAAY,CAACvuB,QAAb,EAAhD,CADA;;AAEA,4BAAI,CAACrP,QAAL,CAAck+B,YAAd,CAA2BhE,IAA3B,EAAiC,WAAjC,EAA8C2D,WAAW,CAACxuB,QAAZ,EAA9C;;AAEA,wBAAI0uB,MAAM,CAACtD,WAAP,IAAsB,EAA1B,EAA8B;AAC5B,8BAAI,CAACz6B,QAAL,CAAc26B,YAAd,CAA2B4B,WAA3B,EAAwCwB,MAAxC,EAAgD7D,IAAhD;AACD;;AAED,wBAAI+D,MAAM,CAACxD,WAAP,IAAsB,EAA1B,EAA8B;AAC5B,8BAAI,CAACz6B,QAAL,CAAcqF,WAAd,CAA0Bk3B,WAA1B,EAAuC0B,MAAvC;AACD,qBAzCkG,CA0CnG;;;AACA,4BAAI,CAAClvB,aAAL,GAAqB,EAArB;AACA,4BAAI,CAACA,aAAL,CAAmB,OAAnB,IAA8B,QAAI,CAACnW,MAAL,CAAY2E,CAAZ,EAAewS,KAAf,GAAuB6tB,YAArD;AACA,4BAAI,CAAC7uB,aAAL,CAAmB,KAAnB,IAA4B,QAAI,CAACnW,MAAL,CAAY2E,CAAZ,EAAewS,KAAf,GAAuB8tB,WAAnD;;AACA,4BAAI,CAACn/B,gBAAL,CAAsByS,aAAtB,CAAoC,QAAI,CAACtC,OAAzC;AACD,mBA/CD,MA+CM,IAAGwuB,SAAS,CAACC,UAAV,CAAqB7C,WAArB,CAAiCjgC,IAAjC,GAAwCe,MAAxC,IAAkD0hB,SAAS,CAAC1hB,MAA5D,IAAsE,QAAI,CAACsT,OAAL,IAAgBoO,SAAzF,EAAmG;AACvG,4BAAI,CAACpO,OAAL,GAAe,EAAf;;AACA,4BAAI,CAACnQ,gBAAL,CAAsByS,aAAtB,CAAoC8L,SAApC;AACD;AACF,iBAtDD,CAuDA;AAvDA,qBAyDK,IAAG,QAAI,CAACpO,OAAL,IAAgB,EAAnB,EAAsB;AACzB,4BAAI,CAACnQ,gBAAL,CAAsByS,aAAtB,CAAoC8L,SAApC;;AACA,4BAAI,CAAClO,aAAL,GAAqB,EAArB;AACA,4BAAI,CAACA,aAAL,CAAmB,OAAnB,IAA8B,CAA9B;AACA,4BAAI,CAACA,aAAL,CAAmB,KAAnB,IAA4B,CAA5B;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsND;;AAKD,kBAAI2mB,UAAU,GAAGp4B,GAAG,CAACE,MAAJ,CAAW2+B,aAA5B;AACA,kBAAI3C,UAAU,GAAG9D,UAAU,CAAC+D,SAA5B;;AAEA,kBAAG,kCAAkCE,IAAlC,CAAuCH,UAAvC,CAAH,EAAsD;AACpD,oBAAIQ,aAAa,GAAG78B,KAAK,CAACC,IAAN,CAAWwG,QAAQ,CAACE,gBAAT,CAA0B,0BAA1B,CAAX,CAApB;AACA,oBAAI1I,KAAI,GAAG,EAAX;AACA4+B,6BAAa,CAACrgC,OAAd,CAAsB,UAAAZ,OAAO,EAAI;AAC/BN,yBAAO,CAACC,GAAR,CAAYK,OAAZ;AACAqC,uBAAI,IAAIrC,OAAO,CAAC0hC,WAAR,GAAsB,GAA9B;AACD,iBAHD,EAHoD,CAOpD;AACD;AACF,aAhVS,EAgVP,EAhVO,CAAV;AAkVD;;;+CAEiB;AAChB,iBAAK/7B,gBAAL,CAAsByS,aAAtB,CAAoC,EAApC;AACD;;;2CAEgBhB,U,EAAY5V,K,EAAO2hC,K,EAAK;AAAA;;AACvC,gBAAIiC,OAAO,GAAGhuB,UAAU,CAACvG,EAAzB;AACA,gBAAIw0B,cAAc,GAAGlC,KAAK,CAACj3B,QAA3B;AACA,iBAAKvG,gBAAL,CAAsB2/B,gBAAtB,CAAuCF,OAAvC,EAAgD9lC,SAAhD,CACE,UAAAC,IAAI,EAAG;AACLG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA;;;;AAIA,sBAAI,CAACjB,cAAL,CAAoB4kC,uBAApB,CAA4C,KAA5C;AACD,aARH,EASE,UAAA9iC,KAAK,EAAI;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAXH;AAaA,iBAAKy/B,qBAAL,CAA2Br6B,MAA3B,CAAkChE,KAAlC,EAAyC,CAAzC;AACA,iBAAK2V,eAAL,CAAqB3R,MAArB,CAA4BhE,KAA5B,EAAmC,CAAnC;AACD;;;+CAGiB;AAChB,iBAAKlD,cAAL,CAAoB4kC,uBAApB,CAA4C,IAA5C;AACA,iBAAK5kC,cAAL,CAAoBi4B,sBAApB,CAA2C,KAAKpf,eAAhD;AACD;;;yCAEcouB,M,EAAQC,U,EAAYC,Q,EAAUC,S,EAAW;AACtD,mBAAOH,MAAM,CAACN,SAAP,CAAiB,CAAjB,EAAoBO,UAApB,IAAkCE,SAAlC,GAA8CH,MAAM,CAACN,SAAP,CAAiBQ,QAAjB,CAArD;AACD;;;;;;;yBAr6CUtG,sB,EAAsB,uH,EAAA,8J,EAAA,2J,EAAA,wH,EAAA,+K,EAAA,2H,EAAA,yH,EAAA,+K,EAAA,6I;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;;;;;;;;;;;;;;;;qBAAtB,qB;AAAiB,a,EAAA,K,EAAA,+D,EAAA,W,EAAA;AAAA,qBAAjB,yBAAiB;AAAI,a,EAAA,K,EAAA,+D,EAAA,S,EAAA;AAAA,qBAArB,2BAAqB;AAAE,a,EAAA,K,EAAA,6D,EAAA,O,EAAA;AAAA,qBAAvB,4BAAuB;AAAC,a,EAAA,K,EAAA,6D;;;;;;;;;;;;AC9BrC;;AACI;;AACI;;AAKA;;AAKA;;AA8BA;;AA+CJ;;AAEJ;;AAIA;;AAiBA;;;;AA9G4D;;AAAA;;AAKR;;AAAA;;AAKM;;AAAA;;AA8Bf;;AAAA;;AAqDnB;;AAAA;;AAiBA;;AAAA;;;;;;;;;wEDlFXA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTlhC,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;AAExByX,iBAAO,EAAE,CAAF;kBAAf;AAAe,WAAE,C;AAsBUnC,sBAAY,EAAE,CAAF;kBAAvC,0DAAuC;mBAA1B,Y;AAA0B,WAAE,C;AAChBkyB,oBAAU;kBAAnC,uDAAmC;mBAAzB,a;AAAyB,Y;AAuBpCC,mBAAS;kBADR,0DACQ;mBADK,kB,EAAoB,CAAC,QAAD,C;AACzB,Y;AA+GTC,uBAAa;kBADZ,0DACY;mBADC,oB,EAAsB,CAAC,QAAD,C;AACvB,Y;AA0GbC,yBAAe;kBADd,0DACc;mBADD,gB,EAAkB,CAAC,QAAD,C;AACjB,Y;AA8DfC,0BAAgB;kBADf,0DACe;mBADF,c,EAAgB,CAAC,QAAD,C;AACd;;;;;;;;;;;;;;;;;;;AEvWlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;UAsBaC,wB;AAOX,0CAAoB7U,eAApB,EAAoE6M,GAApE,EAA2F;AAAA;;AAAvE,eAAA7M,eAAA,GAAAA,eAAA;AAAgD,eAAA6M,GAAA,GAAAA,GAAA;AAA0B;;;;qCAEtF;AAAA;;AACN,iBAAKA,GAAL,CAASkB,cAAT,CAAwB5/B,SAAxB,CACE,UAAAiyB,SAAO,EAAI;AACT,kBAAGA,SAAH,EAAW;AACT/wB,0BAAU,CAAC,YAAM;AACf,sBAAI89B,WAAW,GAAGzzB,QAAQ,CAACE,gBAAT,CAA0B,sBAA1B,CAAlB;AACAuzB,6BAAW,CAAC19B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,wBAAG,CAACA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAJ,EAAuC;AACrCjkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD;AACF,mBAJD;AAKA,sBAAIqN,MAAM,GAAG3mB,QAAQ,CAACE,gBAAT,CAA0B,uCAA1B,CAAb;AACAymB,wBAAM,CAAC5wB,OAAP,CAAe,UAAAZ,OAAO,EAAI;AACxB,wBAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,WAA3B,CAAH,EAA2C;AACzCjkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,WAAzB;AACD,qBAFD,MAEK,CACH;AACD;AACF,mBAND;AAOA,iBAfQ,EAeN,GAfM,CAAV;AAgBD;AACF,aApBH;AAuBA,iBAAKvK,YAAL,GAAoB,KAAKurB,eAAL,CAAqBxW,cAArB,CAAoCrb,SAApC,CAClB,UAAAO,MAAM,EAAI;AACT;AACC,kBAAGA,MAAM,IAAI,IAAb,EAAkB;AAChBW,0BAAU,CAAC,YAAM;AACf,sBAAI+9B,WAAW,GAAG,QAAI,CAACC,OAAL,CAAanzB,aAAb,CAA2BN,gBAA3B,CAA4C,GAA5C,CAAlB;;AACA,0BAAI,CAAClL,MAAL,GAAcA,MAAd;AACA;;AACA0+B,6BAAW,CAAC39B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,wBAAGA,OAAO,CAACqC,IAAR,IAAgB,WAAnB,EAA+B;AAC7BrC,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACD,qBAFD,MAEK;AACHnkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB,EADG,CAEH;AACD;AACF,mBARD;;AAUA,sBAAIsuB,UAAU,GAAG,QAAI,CAACC,UAAL,CAAgBrzB,aAAhB,CAA8BN,gBAA9B,CAA+C,WAA/C,CAAjB;;AAEA0zB,4BAAU,CAAC79B,OAAX,CAAmB,UAAAZ,OAAO,EAAI;AAE5B,wBAAGA,OAAO,CAAC6Q,EAAR,IAAc,WAAjB,EAA6B;AAC3B7Q,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,QAAtB;AACAnkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD,qBAHD,MAGK;AAEHnkB,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACAnQ,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB,EAHG,CAIH;AACD;AACF,mBAXD;AAYD,iBA5BS,EA4BP,GA5BO,CAAV;AA8BD,eA/BD,MA+BK;AACH,wBAAI,CAACtQ,MAAL,GAAc,IAAd;AACAW,0BAAU,CAAC,YAAM;AACf,sBAAI+9B,WAAW,GAAG,QAAI,CAACC,OAAL,CAAanzB,aAAb,CAA2BN,gBAA3B,CAA4C,GAA5C,CAAlB;;AACA,0BAAI,CAAClL,MAAL,GAAcA,MAAd;AACA;;AACA0+B,6BAAW,CAAC39B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B;AACA,wBAAGA,OAAO,CAACqC,IAAR,IAAgB,WAAnB,EAA+B;AAC7BrC,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACD;AACF,mBALD;;AAOA,sBAAIsuB,UAAU,GAAG,QAAI,CAACC,UAAL,CAAgBrzB,aAAhB,CAA8BN,gBAA9B,CAA+C,WAA/C,CAAjB;;AAEA0zB,4BAAU,CAAC79B,OAAX,CAAmB,UAAAZ,OAAO,EAAI;AAE5B,wBAAGA,OAAO,CAAC6Q,EAAR,IAAc,WAAjB,EAA6B;AAC3B7Q,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,QAAzB;AACAnQ,6BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB;AACD;AACF,mBAND;AAOD,iBApBS,EAoBP,GApBO,CAAV;AAqBD;AACF,aA1DiB,CAApB;AA4DD;;;sDAEwB;AAAA;;AAGvB3P,sBAAU,CAAC,YAAM;AACf,kBAAG,CAAC,QAAI,CAACw9B,GAAL,CAAS/0B,aAAT,EAAD,IAA6B,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAhC,EAA8D;AAC5D,oBAAG,CAAC,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,EAAD,IAAiC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAApC,EAAsE;AACpE,0BAAI,CAAC40B,GAAL,CAASrK,qBAAT;;AACA,0BAAI,CAACqK,GAAL,CAASz0B,uBAAT;AACD;AACF,eALD,MAKM,IAAG,CAAC,QAAI,CAACy0B,GAAL,CAAS/0B,aAAT,EAAD,IAA6B,CAAC,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAjC,EAA+D;AACnE,oBAAG,CAAC,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,EAAD,IAAiC,CAAC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAArC,EAAuE;AACrE,0BAAI,CAAC40B,GAAL,CAASrK,qBAAT;;AACA,0BAAI,CAACqK,GAAL,CAASz0B,uBAAT;AACD;AACF,eALK,MAKA,IAAG,QAAI,CAACy0B,GAAL,CAAS/0B,aAAT,MAA4B,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAA/B,EAA6D;AACjE,wBAAI,CAAC80B,GAAL,CAASrK,qBAAT;;AACA,wBAAI,CAACqK,GAAL,CAAS30B,kBAAT,CAA4B,IAA5B;AACD,eAHK,MAGA,IAAG,QAAI,CAAC20B,GAAL,CAAS/0B,aAAT,MAA4B,CAAC,QAAI,CAAC+0B,GAAL,CAAS90B,kBAAT,EAAhC,EAA8D;AAClE,oBAAG,QAAI,CAAC80B,GAAL,CAAS70B,iBAAT,MAAgC,CAAC,QAAI,CAAC60B,GAAL,CAAS50B,sBAAT,EAApC,EAAsE;AACpE,0BAAI,CAAC40B,GAAL,CAAS30B,kBAAT,CAA4B,KAA5B;;AACA,0BAAI,CAAC20B,GAAL,CAASrK,qBAAT,CAA+B,IAA/B;AACD;AAEF;AACF,aArBS,EAqBP,GArBO,CAAV;AAsBD;;;wCAEU;AACT,iBAAK/tB,YAAL,CAAkBC,WAAlB;AACD;;;;;;;yBA5HUmgC,wB,EAAwB,+K,EAAA,2J;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACnBjC;;AACI;;AACI;;AACI;;AACI;;AAAqI;;AAAS;;AAClJ;;AAEA;;AACI;;AAAuD;AAAA,qBAAS,IAAAC,yBAAA,EAAT;AAAoC,aAApC;;AACnD;;AACJ;;AACJ;;AACJ;;AAOJ;;AACA;;AACI;;AACI;;AAII;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA9BmF;;AAAA;;;;;;;;;wEDiB1ED,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT/nC,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;AAEJqgC,iBAAO,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,kB;AAA2B,WAAE,C;AACNE,oBAAU,EAAE,CAAF;kBAA3C,uDAA2C;mBAAjC,qB;AAAiC,WAAE;;;;;;;;;;;;;;;;;;;AEzBhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA2BawH,2B;AAWX,6CAAoBlI,GAApB,EAAkD1/B,cAAlD,EAAiGC,MAAjG,EAAgI0I,QAAhI,EAA6JkqB,eAA7J,EAAqM;AAAA;;AAAjL,eAAA6M,GAAA,GAAAA,GAAA;AAA8B,eAAA1/B,cAAA,GAAAA,cAAA;AAA+C,eAAAC,MAAA,GAAAA,MAAA;AAA+B,eAAA0I,QAAA,GAAAA,QAAA;AAA6B,eAAAkqB,eAAA,GAAAA,eAAA;AAT7J,eAAAgV,QAAA,GAAW,KAAX;AASwM;;;;qCAEhM;AAAA;;AACN,iBAAK7nC,cAAL,CAAoB8nC,iBAApB,CAAsC9mC,SAAtC,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACmnB,gBAAL,CAAsBnnB,IAAtB;AACD,aAHH;AAOA,iBAAKjB,cAAL,CAAoB+nC,wBAApB,CAA6C/mC,SAA7C,CACE,UAACC,IAAD,EAAa;AACXiB,wBAAU,CAAC,YAAM;AACf,oBAAGjB,IAAI,IAAI,IAAX,EAAgB;AACd,sBAAGA,IAAI,CAACqO,OAAR,EAAgB;AAEd,4BAAI,CAAC04B,gBAAL;;AAEA,wBAAI34B,GAAG,GAAG;AACRC,6BAAO,EAAG,MADF;AAER3M,8CAAwB,EAAG1B,IAAI,CAACA,IAAL,CAAU0B;AAF7B,qBAAV;AAMA,4BAAI,CAACslC,OAAL,CAAa3kC,UAAb,CAAwB,MAAxB,IAAkCrC,IAAI,CAACA,IAAL,CAAUinC,iBAA5C;;AACA,4BAAI,CAACD,OAAL,CAAa94B,oBAAb,CAAkC,QAAI,CAAC84B,OAAL,CAAa3kC,UAA/C;;AAGApB,8BAAU,CAAC,YAAM;AACf,8BAAI,CAAClC,cAAL,CAAoBse,oBAApB,CAAyC;AAAC,+BAAQjP,GAAT;AAAc,gCAASpO,IAAI,CAACA;AAA5B,uBAAzC;AAED,qBAHS,EAGP,GAHO,CAAV;;AAKA,wBAAIiyB,MAAM,GAAG,QAAI,CAACC,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,wCAA9C,CAAb;;AACA,wBAAI2mB,kBAAkB,GAAG,QAAI,CAACD,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,uCAA9C,CAAzB;;AACAymB,0BAAM,CAAC5wB,OAAP,CAAe,UAAAZ,OAAO,EAAI;AACxB,0BAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,WAA3B,CAAH,EAA2C;AACzCjkB,+BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,WAAzB;AACD,uBAFD,MAEK,CACH;AACD;AACF,qBAND;AAQAuhB,sCAAkB,CAAC9wB,OAAnB,CAA2B,UAAAZ,OAAO,EAAI;AACpC,0BAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAH,EAAsC,CACpC;AACD,uBAFD,MAEK;AACHjkB,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD;AACF,qBAND;;AAQA,wBAAIsiB,gBAAgB,GAAG,QAAI,CAAChV,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,0CAA9C,CAAvB;;AACA,wBAAI27B,4BAA4B,GAAG,QAAI,CAACjV,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,yCAA9C,CAAnC;;AACAymB,0BAAM,CAAC5wB,OAAP,CAAe,UAAAZ,OAAO,EAAI;AACxB,0BAAG,CAACA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,UAA3B,CAAJ,EAA2C;AACzCjkB,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,WAAtB;AACD;AACF,qBAJD;AAMAuiB,gDAA4B,CAAC9lC,OAA7B,CAAqC,UAAAZ,OAAO,EAAI;AAC9C,0BAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAH,EAAsC;AACpCjkB,+BAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB;AACD,uBAFD,MAEK,CACH;AACD;AACF,qBAND;AASD,mBAtDD,MAsDK;AACH3P,8BAAU,CAAC,YAAM;AACf,0BAAIgxB,MAAM,GAAG,QAAI,CAACC,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,mCAA9C,CAAb;;AACAymB,4BAAM,CAAC5wB,OAAP,CAAe,UAAAZ,OAAO,EAAI;AACxBA,+BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,WAAtB;AAED,uBAHD;;AAKA,0BAAIuN,kBAAkB,GAAG,QAAI,CAACD,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,uCAA9C,CAAzB;;AACA2mB,wCAAkB,CAAC9wB,OAAnB,CAA2B,UAAAZ,OAAO,EAAI;AACpCN,+BAAO,CAACC,GAAR,CAAYK,OAAZ;;AACA,4BAAGA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAH,EAAsC;AACpCjkB,iCAAO,CAACihB,SAAR,CAAkB9Q,MAAlB,CAAyB,MAAzB;AACD;AACF,uBALD;AAMD,qBAdS,EAcP,GAdO,CAAV;AAgBD;AACF;AACF,eA3ES,EA2EP,GA3EO,CAAV;AA4ED,aA9EH,EA8EI,UAAA/P,KAAK,EAAG;AACRV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAhFH;AAkFD;;;6CAEkB;AACjB,iBAAKmmC,OAAL,CAAa32B,cAAb;AACD;;;wCAEa;AACZ,iBAAK22B,OAAL,CAAah/B,SAAb,GAAyB,CAAC,KAAKg/B,OAAL,CAAah/B,SAAvC;AACA,iBAAKg/B,OAAL,CAAa/+B,MAAb,GAAsB,CAAC,KAAK++B,OAAL,CAAa/+B,MAApC;AACA,iBAAK2+B,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;kCAEO5mC,I,EAAM;AAAA;;AAEZ,gBAAIoL,IAAI,GAAG,IAAX;;AAEA,gBAAIpL,IAAI,CAAC,UAAD,CAAJ,IAAoBK,SAAxB,EAAmC;AAEjC,kBAAI8N,YAAY,GAAG,EAAnB;;AACA,kBAAInO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD8N,4BAAY,GAAGnO,IAAI,CAAC,0BAAD,CAAnB;AACD,eAFD,MAEO,IAAIA,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAChD8N,4BAAY,GAAGnO,IAAI,CAAC,kBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AACjD8N,4BAAY,GAAGnO,IAAI,CAAC,mBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,uBAAD,CAAJ,IAAiCK,SAArC,EAAgD;AACrD8N,4BAAY,GAAGnO,IAAI,CAAC,uBAAD,CAAnB;AACD;;AAAA;AACDiB,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,sBAAIzO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmCyM,YAAvC,EAAqD;AAEnDM,uBAAC,CAACzO,IAAF,CAAOuK,IAAP,GAAcvK,IAAI,CAAC,UAAD,CAAlB;AACAoL,0BAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,0BAAI,CAAC47B,OAAL,CAAa32B,cAAb,GAJmD,CAMnD;AACA;;AACAjL,uBAAC,CAAC,WAAWqJ,CAAC,CAACzO,IAAF,CAAOsR,EAAnB,CAAD,CAAwB81B,IAAxB,CAA6B,qBAA7B,EAAoDpnC,IAAI,CAAC,UAAD,CAAxD;AAEAA,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAZD,MAYO;AACL,6BAAO,KAAP;AACD;AACF,mBAhBD,MAgBO,IAAIL,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAEhD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BqM,YAA/B,EAA6C;AAC3CM,uBAAC,CAACzO,IAAF,CAAOuK,IAAP,GAAcvK,IAAI,CAAC,UAAD,CAAlB;AACAoL,0BAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,0BAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACArQ,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AAEjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4BoM,YAAhC,EAA8C;AAC5CM,uBAAC,CAACzO,IAAF,CAAOuK,IAAP,GAAcvK,IAAI,CAAC,UAAD,CAAlB;AACAoL,0BAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,0BAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACArQ,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAYF,IAAIL,IAAI,CAAC,uBAAD,CAAJ,IAAiCK,SAArC,EAAgD;AAEnD,wBAAIoO,CAAC,CAACzO,IAAF,CAAOsC,qBAAP,IAAgC6L,YAApC,EAAkD;AAChDM,uBAAC,CAACzO,IAAF,CAAOuK,IAAP,GAAcvK,IAAI,CAAC,UAAD,CAAlB;AACAoL,0BAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,0BAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACArQ,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXI,MAYA;AACH,2BAAO,KAAP;AACD;AACF,iBAxDH;AA0DD,eA3DS,EA2DP,GA3DO,CAAV;AA4DD,aAxED,MAwEO,IAAIL,IAAI,CAAC,WAAD,CAAJ,IAAqBK,SAAzB,EAAoC;AACzC;AACA;AACA,kBAAI8N,aAAY,GAAG,EAAnB;;AACA,kBAAInO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD8N,6BAAY,GAAGnO,IAAI,CAAC,0BAAD,CAAnB;AACD,eAFD,MAEO,IAAIA,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAChD8N,6BAAY,GAAGnO,IAAI,CAAC,kBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AACjD8N,6BAAY,GAAGnO,IAAI,CAAC,mBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,uBAAD,CAAJ,IAAiCK,SAArC,EAAgD;AACrD8N,6BAAY,GAAGnO,IAAI,CAAC,uBAAD,CAAnB;AACD;;AAAA;AAAC;AACFiB,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,sBAAIzO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmCyM,aAAvC,EAAqD;AACnDM,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,WAAD,CAAnB,CADmD,CAEnD;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,WAAD,CAAJ,GAAoBK,SAApB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAVD,MAUO,IAAIL,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAEhD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BqM,aAA/B,EAA6C;AAC3CM,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,WAAD,CAAnB,CAD2C,CAE3C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,WAAD,CAAJ,GAAoBK,SAApB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AAEjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4BoM,aAAhC,EAA8C;AAC5CM,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,WAAD,CAAnB,CAD4C,CAE5C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,WAAD,CAAJ,GAAoBK,SAApB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,uBAAD,CAAJ,IAAiCK,SAArC,EAAgD;AAErD,wBAAIoO,CAAC,CAACzO,IAAF,CAAOsC,qBAAP,IAAgC6L,aAApC,EAAkD;AAChDM,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,WAAD,CAAnB,CADgD,CAEhD;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,WAAD,CAAJ,GAAoBK,SAApB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAYF;AACH,2BAAO,KAAP;AACD;AACF,iBAjDH;AAmDD,eApDS,EAoDP,GApDO,CAAV;AAqDD,aAlEM,MAkEA,IAAIL,IAAI,CAAC,UAAD,CAAJ,IAAoBK,SAAxB,EAAmC;AACxC;AACA,kBAAI8N,cAAY,GAAG,EAAnB;;AACA,kBAAInO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,0BAAD,CAAnB;AACD,eAFD,MAEO,IAAIA,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAChD8N,8BAAY,GAAGnO,IAAI,CAAC,kBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,mBAAD,CAAnB;AACD;;AAAA;AACDiB,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,sBAAIzO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmCyM,cAAvC,EAAqD;AACnDM,uBAAC,CAACzO,IAAF,CAAOO,IAAP,GAAcP,IAAI,CAAC,UAAD,CAAlB,CADmD,CAEnD;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AAED,qBAPD,MAOO;AACL,6BAAO,KAAP;AACD;AACF,mBAXD,MAWO,IAAIL,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAEhD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BqM,cAA/B,EAA6C;AAC3CM,uBAAC,CAACzO,IAAF,CAAOO,IAAP,GAAcP,IAAI,CAAC,UAAD,CAAlB,CAD2C,CAE3C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AAEjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4BoM,cAAhC,EAA8C;AAC5CM,uBAAC,CAACzO,IAAF,CAAOO,IAAP,GAAcP,IAAI,CAAC,UAAD,CAAlB,CAD4C,CAE5C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAYF;AACH,2BAAO,KAAP;AACD;AACF,iBAvCH;AAyCD,eA1CS,EA0CP,GA1CO,CAAV;AA2CD,aArDM,MAqDA,IAAIL,IAAI,CAAC,UAAD,CAAJ,IAAoBK,SAAxB,EAAmC;AACxC;AACA,kBAAI8N,cAAY,GAAG,EAAnB;;AACA,kBAAInO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,0BAAD,CAAnB;AACD,eAFD,MAEO,IAAIA,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAChD8N,8BAAY,GAAGnO,IAAI,CAAC,kBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,mBAAD,CAAnB;AACD;;AAAA;AACDiB,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,sBAAIzO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmCyM,cAAvC,EAAqD;AACnDM,uBAAC,CAACzO,IAAF,CAAOqE,QAAP,GAAkBrE,IAAI,CAAC,UAAD,CAAtB,CADmD,CAEnD;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAVD,MAUO,IAAIL,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAEhD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BqM,cAA/B,EAA6C;AAC3CM,uBAAC,CAACzO,IAAF,CAAOqE,QAAP,GAAkBrE,IAAI,CAAC,UAAD,CAAtB,CAD2C,CAE3C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AAEjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4BoM,cAAhC,EAA8C;AAC5CM,uBAAC,CAACzO,IAAF,CAAOqE,QAAP,GAAkBrE,IAAI,CAAC,UAAD,CAAtB,CAD4C,CAE5C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,UAAD,CAAJ,GAAmBK,SAAnB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAYF;AACH,2BAAO,KAAP;AACD;AACF,iBAtCH;AAwCD,eAzCS,EAyCP,GAzCO,CAAV;AA0CD,aApDM,MAoDA,IAAIL,IAAI,CAAC,SAAD,CAAJ,IAAmBK,SAAvB,EAAkC;AACvC;AACA,kBAAI8N,cAAY,GAAG,EAAnB;;AACA,kBAAInO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,0BAAD,CAAnB;AACD,eAFD,MAEO,IAAIA,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAChD8N,8BAAY,GAAGnO,IAAI,CAAC,kBAAD,CAAnB;AACD,eAFM,MAEA,IAAIA,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AACjD8N,8BAAY,GAAGnO,IAAI,CAAC,mBAAD,CAAnB;AACD;;AAAA;AACDiB,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,sBAAIzO,IAAI,CAAC,0BAAD,CAAJ,IAAoCK,SAAxC,EAAmD;AACjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmCyM,cAAvC,EAAqD;AACnDM,uBAAC,CAACzO,IAAF,CAAOsD,GAAP,GAAatD,IAAI,CAAC,SAAD,CAAjB,CADmD,CAEnD;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,SAAD,CAAJ,GAAkBK,SAAlB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAVD,MAUO,IAAIL,IAAI,CAAC,kBAAD,CAAJ,IAA4BK,SAAhC,EAA2C;AAEhD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BqM,cAA/B,EAA6C;AAC3CM,uBAAC,CAACzO,IAAF,CAAOsD,GAAP,GAAatD,IAAI,CAAC,SAAD,CAAjB,CAD2C,CAE3C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,SAAD,CAAJ,GAAkBK,SAAlB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAWA,IAAIL,IAAI,CAAC,mBAAD,CAAJ,IAA6BK,SAAjC,EAA4C;AAEjD,wBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4BoM,cAAhC,EAA8C;AAC5CM,uBAAC,CAACzO,IAAF,CAAOsD,GAAP,GAAatD,IAAI,CAAC,SAAD,CAAjB,CAD4C,CAE5C;;AACAyO,uBAAC,CAAC44B,cAAF;AACArnC,0BAAI,CAAC,SAAD,CAAJ,GAAkBK,SAAlB;AACA,6BAAO,IAAP;AACD,qBAND,MAMO;AACL,6BAAO,KAAP;AACD;AACF,mBAXM,MAYF;AACH,2BAAO,KAAP;AACD;AACF,iBAtCH;AAwCD,eAzCS,EAyCP,GAzCO,CAAV;AA0CD;AAEF;;;gDAEqBL,I,EAAM;AAAA;;AAC1B,gBAAIoL,IAAI,GAAG,IAAX;AACAnK,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,oBAAIA,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4B1B,SAAhC,EAA2C;AACzC,sBAAIoO,CAAC,CAACzO,IAAF,CAAO+B,iBAAP,IAA4B/B,IAAI,CAAC,mBAAD,CAApC,EAA2D;AACzD,wBAAGA,IAAI,CAAC,gBAAD,CAAJ,IAA0B,EAA7B,EAAgC;AAC9ByO,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAe,eAAf;AACD,qBAFD,MAEK;AACHqK,uBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,gBAAD,CAAnB;AAED;;AACDoL,wBAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,wBAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACA,2BAAO,IAAP;AACD,mBAVD,MAUO;AACL,2BAAO,KAAP;AACD;AAEF,iBAfD,MAeO;AACL,yBAAO,KAAP;AACD;AACF,eApBH;AAsBD,aAvBS,EAuBP,GAvBO,CAAV;AAwBD;;;0CAEerQ,I,EAAM;AAAA;;AACpB,gBAAIoL,IAAI,GAAG,IAAX;AACAnK,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,oBAAIA,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BzB,SAA/B,EAA0C;AACxC,sBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2B9B,IAAI,CAAC,kBAAD,CAAnC,EAAyD;AACvDyO,qBAAC,CAACzO,IAAF,CAAOoE,KAAP,GAAepE,IAAI,CAAC,WAAD,CAAnB;AACAoL,wBAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,wBAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACA,2BAAO,IAAP;AACD,mBALD,MAKO;AACL,2BAAO,KAAP;AACD;AAEF,iBAVD,MAUO;AACL,yBAAO,KAAP;AACD;AACF,eAfH;AAiBD,aAlBS,EAkBP,GAlBO,CAAV;AAmBD;;;yCAIcrQ,I,EAAM;AAAA;;AACnB,gBAAIoL,IAAI,GAAG,IAAX,CADmB,CAEnB;;AACAnK,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,oBAAIA,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2BzB,SAA/B,EAA0C;AACxC,sBAAIoO,CAAC,CAACzO,IAAF,CAAO8B,gBAAP,IAA2B9B,IAAI,CAAC,kBAAD,CAAnC,EAAyD;AACvDyO,qBAAC,CAACzO,IAAF,CAAOO,IAAP,GAAcP,IAAI,CAAC,UAAD,CAAlB,CADuD,CAEvD;;AACAoL,wBAAI,CAAC47B,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;AACAjE,wBAAI,CAAC47B,OAAL,CAAa32B,cAAb;AACA,2BAAO,IAAP;AACD,mBAND,MAMO;AACL,2BAAO,KAAP;AACD;AAEF,iBAXD,MAWO;AACL,yBAAO,KAAP;AACD;AACF,eAhBH;AAkBD,aAnBS,EAmBP,GAnBO,CAAV;AAoBD;;;2CAEgBrQ,I,EAAM;AAAA;;AACrB;AACA;AACA;AACA;AACA,gBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBiB,wBAAU,CAAC,YAAM;AACf,wBAAQjB,IAAI,CAAC,SAAD,CAAZ;AACE,uBAAK,CAAL;AAAQ,4BAAI,CAACsnC,OAAL,CAAatnC,IAAb;;AAAoB;;AAC5B,uBAAK,CAAL;AAAQ,4BAAI,CAACunC,eAAL,CAAqBvnC,IAArB;;AAA4B;;AACpC,uBAAK,CAAL;AAAQ,4BAAI,CAACwnC,cAAL,CAAoBxnC,IAApB;;AAA2B;;AACnC,uBAAK,CAAL;AAAQ,4BAAI,CAACynC,qBAAL,CAA2BznC,IAA3B;;AAAkC;AAJ5C;AAMD,eAPS,EAOP,GAPO,CAAV;AAQD;AAGF;;;wCAEa;AACZ,iBAAKjB,cAAL,CAAoBuoB,gBAApB;AACD;;;4CAEiB;AAAA;;AAEhB,iBAAKvoB,cAAL,CAAoBuZ,eAApB,GAAsCvY,SAAtC,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,sBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB3C,IAAI,CAAC,0BAAD,CAAJ,GAAmC,kBAAvD,EAA2E,EAA3E,EAA+E;AAC7E4C,uBAAO,EAAE;AADoE,eAA/E;;AAIA3B,wBAAU,CAAC,YAAM;AACf,oBAAIymC,gBAAgB,GAAG1nC,IAAI,CAAC,OAAD,CAA3B;;AACA,oBAAIqC,UAAU,GAAG,QAAI,CAAC2kC,OAAL,CAAaW,aAAb,EAAjB;;AACAtlC,0BAAU,CAAC,MAAD,CAAV,GAAqBqlC,gBAArB;AAAsC;;AACtC,wBAAI,CAACV,OAAL,CAAa94B,oBAAb,CAAkC7L,UAAlC;;AACA,wBAAI,CAAC2kC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCc,MAAxC;;AACA,wBAAI,CAAC23B,OAAL,CAAa32B,cAAb;;AAEApP,0BAAU,CAAC,YAAM;AACf,0BAAI,CAAC+lC,OAAL,CAAa14B,gBAAb,CAA8BC,SAA9B,CAAwCC,SAAxC,CACE,UAAUC,CAAV,EAAa;AACX,wBAAIA,CAAC,CAACzO,IAAF,CAAO0B,wBAAP,IAAmC1B,IAAI,CAAC,0BAAD,CAA3C,EAAyE;AACvEyO,uBAAC,CAACM,mBAAF;AACA,6BAAO,IAAP;AACD,qBAHD,MAGO;AACL,6BAAO,KAAP;AACD;AACF,mBARH;AAUD,iBAXS,EAWP,GAXO,CAAV;AAYD,eApBS,EAoBP,GApBO,CAAV;AAqBD,aA7BH,EA8BE,UAAAlO,KAAK,EAAI;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,uBAAO,EAAE;AAD6B,eAAxC;AAGD,aAnCH;AAqCD;;;0CAEY;AAAA;;AACX,gBAAIwT,UAAU,GAAG,CAAjB;AACA,gBAAI/T,UAAU,GAAG;AACf80B,yBAAW,EAAG,QADC;AAEf,yBAAY,CAFG;AAGf,4BAAe/gB,UAHA;AAIfghB,sBAAQ,EAAG,aAAWnT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,EAAzB,IAA+B,EAA1C;AAJP,aAAjB;AAOA,iBAAKyN,eAAL,CAAqByF,UAArB,CAAgCh1B,UAAhC,EAA4CtC,SAA5C,CACE,UAAAC,IAAI,EAAG;AACLG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAAC4nC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuCtM,IAAvC,CAA4CzB,IAAI,CAACkH,IAAjD;;AACA,sBAAI,CAAC0gC,QAAL,CAAc1/B,OAAd,GAAwB,QAAI,CAAC0/B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuC9K,MAA/D;;AACA,sBAAI,CAAC2kC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCc,MAAjC;;AACA,sBAAI,CAACrQ,MAAL,CAAYoO,IAAZ,CAAiB,gBAAjB,EAAmC,EAAnC,EAAuC;AACrCxK,uBAAO,EAAE;AAD4B,eAAvC;;AAGA,sBAAI,CAACglC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiC8C,WAAjC,CAA6CrR,IAAI,CAACkH,IAAL,CAAUoK,EAAvD,EAA2DvC,mBAA3D;AACD,aAVH,EAUI,UAAAlO,KAAK,EAAG;AACRV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAZH;AAcD;;;qCAGUmE,G,EAAM;AAAA;;AACf,gBAAIoR,UAAU,GAAG,CAAjB;AACAjW,mBAAO,CAACC,GAAR,CAAY4E,GAAG,CAACE,MAAJ,CAAW2yB,KAAvB;AACA,gBAAIx1B,UAAJ,EAAgBu1B,SAAhB;;AAEA,gBAAI5yB,GAAG,CAACE,MAAJ,CAAW2yB,KAAX,IAAoBx3B,SAAxB,EAAmC;AACjC,kBAAI2E,GAAG,CAACE,MAAJ,CAAW2yB,KAAX,CAAiB50B,MAAjB,IAA2B,CAA/B,EAAkC;AAChC20B,yBAAS,GAAG5yB,GAAG,CAACE,MAAJ,CAAW2yB,KAAX,CAAiB,CAAjB,EAAoBte,IAAhC;AACAlX,0BAAU,GAAG;AACX,iCAAe,QADJ;AAEX,6BAAW,CAFA;AAGX,gCAAc+T,UAHH;AAIX,+BAAawhB;AAJF,iBAAb;AAMA,oBAAMrR,QAAQ,GAAG,IAAIuR,QAAJ,EAAjB;AACAvR,wBAAQ,CAACwR,MAAT,CAAgB,MAAhB,EAAwB/yB,GAAG,CAACE,MAAJ,CAAW2yB,KAAX,CAAiB,CAAjB,CAAxB;AAEA,qBAAKjG,eAAL,CAAqBoG,UAArB,CAAgCzR,QAAhC,EAA0CnQ,UAA1C,EAAsD,EAAtD,EAA0DrW,SAA1D,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,0BAAI,CAAChB,MAAL,CAAYoO,IAAZ,CAAiB,gBAAjB,EAAmC,EAAnC,EAAuC;AACrCxK,2BAAO,EAAE;AAD4B,mBAAvC;;AAGA3B,4BAAU,CAAC,YAAM;AAEf,4BAAI,CAAC2mC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuCtM,IAAvC,CAA4CzB,IAAI,CAACkH,IAAjD;;AACA,4BAAI,CAAC0gC,QAAL,CAAc1/B,OAAd,GAAwB,QAAI,CAAC0/B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuC9K,MAA/D,CAHe,CAIf;AACA;;AACA,4BAAI,CAAC2kC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCc,MAAjC;;AACA,4BAAI,CAACu4B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiC8C,WAAjC,CAA6CrR,IAAI,CAACkH,IAAL,CAAUoK,EAAvD,EAA2DvC,mBAA3D;AAED,mBATS,EASP,GATO,CAAV;AAYD,iBAnBH,EAmBK,UAAAlO,KAAK,EAAI;AACVV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,4BAAlB,EAAgD,EAAhD,EAAoD;AAClD+B,2BAAO,EAAE;AADyC,mBAApD;AAGD,iBAxBH;AA0BD,eArCD,MAqCO;AAEL,oBAAIq1B,WAAW,GAAGpzB,KAAK,CAACC,IAAN,CAAWE,GAAG,CAACE,MAAJ,CAAW2yB,KAAtB,CAAlB;AACAI,2BAAW,CAAC52B,OAAZ,CAAoB,UAACZ,OAAD,EAAmB;AAErCm3B,2BAAS,GAAGn3B,OAAO,CAAC8Y,IAApB;AACAlX,4BAAU,GAAG;AACX,mCAAe,QADJ;AAEX,+BAAW,CAFA;AAGX,kCAAc+T,UAHH;AAIX,iCAAawhB;AAJF,mBAAb;AAOA,sBAAMrR,QAAQ,GAAG,IAAIuR,QAAJ,EAAjB;AACAvR,0BAAQ,CAACwR,MAAT,CAAgB,MAAhB,EAAwBt3B,OAAxB;;AAEA,0BAAI,CAACmxB,eAAL,CAAqBoG,UAArB,CAAgCzR,QAAhC,EAA0CnQ,UAA1C,EAAsD,EAAtD,EAA0DrW,SAA1D,CACE,UAAAC,IAAI,EAAI;AACNG,2BAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,4BAAI,CAAChB,MAAL,CAAYoO,IAAZ,CAAiB,gBAAjB,EAAmC,EAAnC,EAAuC;AACrCxK,6BAAO,EAAE;AAD4B,qBAAvC;;AAGA3B,8BAAU,CAAC,YAAM;AAEf,8BAAI,CAAC2mC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuCtM,IAAvC,CAA4CzB,IAAI,CAACkH,IAAjD;;AACA,8BAAI,CAAC0gC,QAAL,CAAc1/B,OAAd,GAAwB,QAAI,CAAC0/B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCR,KAAjC,CAAuC9K,MAA/D,CAHe,CAIf;AACA;;AACA,8BAAI,CAAC2kC,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCc,MAAjC;;AACA,8BAAI,CAACu4B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiC8C,WAAjC,CAA6CrR,IAAI,CAACkH,IAAL,CAAUoK,EAAvD,EAA2DvC,mBAA3D;AAED,qBATS,EASP,GATO,CAAV;AAYD,mBAnBH,EAmBK,UAAAlO,KAAK,EAAI;AACVV,2BAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,4BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,4BAAlB,EAAgD,EAAhD,EAAoD;AAClD+B,6BAAO,EAAE;AADyC,qBAApD;AAGD,mBAxBH;AA0BD,iBAvCD;AAwCD;AACF;;AAEDzC,mBAAO,CAACC,GAAR,CAAY4E,GAAZ;AACD;;;yCAEc;AAAA;;AAEb,gBAAIoR,UAAU,GAAG,CAAjB;AACA,gBAAI/T,UAAU,GAAG;AACf,6BAAe,QADA;AAEf,yBAAW,CAFI;AAGf,4BAAc+T;AAHC,aAAjB;AAOA,iBAAKwb,eAAL,CAAqB2F,SAArB,CAA+Bl1B,UAA/B,EAA2CtC,SAA3C,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,kBAAIy3B,WAAW,GAAG,GAAlB;AACA;;;;;;;;;;AASA,kBAAIz3B,IAAI,CAACkH,IAAL,IAAa7G,SAAjB,EAA4B;AAC1B,wBAAI,CAACrB,MAAL,CAAYoO,IAAZ,CAAiB,kBAAjB,EAAqC,EAArC,EAAyC;AACvCxK,yBAAO,EAAE;AAD8B,iBAAzC;;AAGA,wBAAI,CAACglC,QAAL,CAAc75B,KAAd,CAAoBtM,IAApB,CAAyBzB,IAAI,CAACkH,IAA9B;;AACA,wBAAI,CAAC0gC,QAAL,CAAcv3B,cAAd;;AACA,wBAAI,CAACu3B,QAAL,CAAchS,QAAd,CAAuBrnB,SAAvB,CAAiCc,MAAjC;AACD;AAEF,aAtBH,EAsBK,UAAAxO,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,gCAAlB,EAAoD,EAApD,EAAwD;AACtD+B,uBAAO,EAAE;AAD6C,eAAxD;AAGD,aA3BH;AA8BD;;;0CAEY;AACX,gBAAIP,UAAU,GAAG;AACf,0BAAY,QADG;AAEf,wBAAU,QAFK;AAGf,0BAAY;AAHG,aAAjB;AAMA,iBAAKtD,cAAL,CAAoB8oC,aAApB,CAAkCxlC,UAAlC,EAA8CtC,SAA9C,CACE,UAAAC,IAAI,EAAG;AACLG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,kBAAI8nC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC/nC,IAAD,CAAT,EAAiB;AAAEO,oBAAI,EAAE;AAAR,eAAjB,CAAX;AACA,kBAAI4nB,GAAG,GAAGxJ,MAAM,CAACqpB,GAAP,CAAWC,eAAX,CAA2BH,IAA3B,CAAV;AACA,wEAAeA,IAAf,EAAoB,eAApB,EAJK,CAKN;AAEA,aARH,EAQK,UAAAjnC,KAAK,EAAG;AACTV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,aAXH;AAaD;;;;;;;yBApuBU8lC,2B,EAA2B,2J,EAAA,+K,EAAA,yH,EAAA,wH,EAAA,+K;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBxC;;AAII;;AACI;;AACI;;AACI;;AAEI;;AAAmB;;AACvB;;AACA;;AACI;;AAAyI;;AAA0B;;AAInK;;AACI;;AAAyB;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAwB,aAAxB;;AAAmD;;AAAY;;AACxF;;AAAiD;AAAA,qBAAU,IAAAuB,UAAA,QAAV;AAA4B,aAA5B;;AAAjD;;AACA;;AAAyB;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAAkD;;AAAc;;AACzF;;AACA;;AAAyB;AAAA,qBAAS,IAAAxO,aAAA,EAAT;AAAwB,aAAxB;;AAAmD;;AAAiB;;AAC/F;;AACN;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAC0D;AAAA,qBAAS,IAAAoN,gBAAA,EAAT;AAA2B,aAA3B;;AACtD;;AAAmB;;AACvB;;AACA;;AACI;;AAGI;AAAS,kBAAAqB,WAAA;AAAe,yBAAArB,gBAAA;AAAkB,aAA1C;;AAA6C;;AAA0B;;AAC3E;;AAA2D;AAAA,qBAAS,IAAAzuB,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AACxD;;AAC/B;;AAA4C;AAAA,qBAAS,IAAAuvB,aAAA,EAAT;AAAwB,aAAxB;;AAA2B;;AAAiC;;AAExG;;AAAoD;AAAA;;AAAA;;AAAS;;AAA4B,yBAAAQ,WAAA;AAAa,aAAlD;;AAAqD;;AACrE;;AAEpC;;AACI;;AAAuC;;AAAgB;;AACvD;;AAEI;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAEI;;AAAmB;;AACvB;;AAOJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAEI;;AAAmB;;AACvB;;AAOJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAzEwB;;AAAA;;;;;;;;;wEDnBX1B,2B,EAA2B;gBANvC,uDAMuC;iBAN7B;AACTjoC,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAM6B,U;;;;;;;;;;;;;AAGhBooC,iBAAO,EAAE,CAAF;kBAA5B,uDAA4B;mBAAlB,S;AAAkB,WAAE,C;AACRY,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE,C;AACPU,qBAAW,EAAE,CAAF;kBAApC,uDAAoC;mBAA1B,a;AAA0B,WAAE,C;AAChBC,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE,C;AACTrW,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AElCrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACQgB;;AAA+B;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAqB2I;;;;;;AAA2D;;;;;;AAEnM;;AAA6H;;AAA4B;;AAA+B;;AAAO;;;;;;;;AAAnJ;;;;;;;;AAJtD;;AAEI;;AAAM;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA,mDAAiC,cAAW,IAAX,EAAiBlwB,KAAlD,EAAyD,IAAzD;AAAiD,WAAjD;;AAA6D;;AAA2B;;AAA2D;;AAA6D;;AAAO;;AAAI;;AACjR;;AAAO;;AAA4J;;AAA4B;;AAAwC;;AAAO;;AAAI;;AAClP;;AAAM;;AAAmM;;AAC7M;;;;;;;;AAH8K;;AAAA;;AAA+D;;AAAA;;AAC/N;;AAAA;;AACA;;AAAA;;;;;;;;AAXlC;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAAgJ;;AAA8B;;AAAG;;;;AAAiK;;AAAI;;AAAO;;AAC7V;;AAOA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAyB;;AAAuC;;AAAO;;AAElH;;AACI;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;;AAAO;;AAC/D;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;;AAAK;;AAC7D;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;;AAAK;;AAC7D;;AAEI;;AAAU;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,MAAlC;AAAwC,WAAxC;;AAAyH;;AACvI;;AACJ;;AACA;;AACI;;AAAwD;;AAAQ;;AAChE;;AAEI;;AAAU;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,OAAlC;AAAyC,WAAzC;;AAAkJ;;AAChK;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;;;;;;AAxDS;;AAAA;;AAK4D;;AAAA,wGAAmC,eAAnC,EAAmC,mBAAnC;;AAAgI;;AAAA;;AAC1K;;AAAA;;AASF;;AAAA;;;;;;AAlBjC;;AACI;;AACI;;AA0DJ;;AACJ;;;;;;AA7DM;;AAE0B;;AAAA;;;;UDM/BwmC,0B;AAgBX,4CAAoBzpC,cAApB,EAAmE8mB,aAAnE,EAA+G/mB,WAA/G,EAAiJE,MAAjJ,EAAwK;AAAA;;AAApJ,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAA8mB,aAAA,GAAAA,aAAA;AAA4C,eAAA/mB,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AAXjJ,eAAAypC,YAAA,GAAe,CAAf;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,gBAAA,GAAmB,IAAI,wDAAJ,CAAc;AAC/B3xB,wBAAY,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAK4xB,kBAAL,EAAD,CAAd;AADiB,WAAd,CAAnB;AAIA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,gBAAA,GAAmB,EAAnB;AAEQ,eAAA5pC,OAAA,GAAwB,IAAI,4CAAJ,EAAxB;AAEmK;;;;qCAEnK;AAAA;;AACN,iBAAKypC,gBAAL,GAAwB,KAAK7pC,WAAL,CAAiBc,KAAjB,CAAuB;AAC7CoX,0BAAY,EAAE,KAAKlY,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB;AAD+B,aAAvB,CAAxB;AAIA,iBAAKgmB,aAAL,CAAmBqG,aAAnB,CAAiCnsB,SAAjC,CACE,UAAAgpC,cAAc,EAAI;AAChB,kBAAIA,cAAc,IAAI,IAAtB,EAA4B;AAE1B,oBAAIz3B,EAAE,GAAGy3B,cAAc,CAACz3B,EAAf,IAAqBjR,SAArB,GAAiC0oC,cAAc,CAACz3B,EAAhD,GAAqD,EAA9D;AACA,oBAAId,KAAK,GAAGu4B,cAAc,CAACv4B,KAAf,IAAwBnQ,SAAxB,GAAoC0oC,cAAc,CAACv4B,KAAnD,GAA2D,EAAvE;AACA,oBAAIhN,MAAM,GAAGulC,cAAc,CAACvlC,MAAf,IAAyBnD,SAAzB,GAAqC0oC,cAAc,CAACvlC,MAApD,GAA6D,EAA1E;AACA,oBAAI0kB,IAAI,GAAG6gB,cAAc,CAAC7gB,IAAf,IAAuB7nB,SAAvB,GAAmC0oC,cAAc,CAAC7gB,IAAlD,GAAyD,EAApE;AACA,oBAAI3d,IAAI,GAAGw+B,cAAc,CAACx+B,IAAf,IAAuBlK,SAAvB,GAAmC0oC,cAAc,CAACx+B,IAAlD,GAAyD,EAApE;AACA,oBAAIy+B,gBAAgB,GAAGD,cAAc,CAACC,gBAAf,IAAmC3oC,SAAnC,GAA+C0oC,cAAc,CAACC,gBAA9D,GAAiF,EAAxG;;AACA,wBAAI,CAACC,gBAAL,CAAsBxnC,IAAtB,CAA2BsnC,cAA3B;;AACA,wBAAI,CAACG,sBAAL,CAA4B53B,EAA5B,EAAgCd,KAAhC,EAAuChN,MAAvC,EAA+C0kB,IAA/C,EAAqD3d,IAArD,EAA2Dy+B,gBAA3D;;AACA,wBAAI,CAACH,UAAL,CAAgBpnC,IAAhB,CAAqB8I,IAArB;;AACA,wBAAI,CAACu+B,gBAAL,CAAsBrnC,IAAtB,CAA2BunC,gBAA3B;;AACA,wBAAI,CAACP,YAAL;AACD,eAbD,MAaO;AACL,wBAAI,CAACnoC,MAAL,GAAc,IAAd;AACA,wBAAI,CAAC2oC,gBAAL,GAAwB,IAAxB;AACD;AACF,aAnBH;AAsBA,iBAAK/pC,OAAL,CAAaY,IAAb,CAAkB,oEAAa,IAAb,CAAlB,EAAsCC,SAAtC,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACiM,SAAL,CAAejM,IAAf;AACD,aAHH;AAKD;;;sCAGWgB,O,EAAwB;AAAA;;AAElC,gBAAIA,OAAO,CAACmoC,UAAR,CAAmBhoC,YAAnB,IAAmCd,SAAvC,EAAkD;AAChD,mBAAKC,MAAL,GAAcU,OAAO,CAACmoC,UAAR,CAAmBhoC,YAAjC;AACA,mBAAK8nC,gBAAL,GAAwB,EAAxB;AACA,mBAAKR,YAAL,GAAoB,CAApB;AACA,mBAAKI,UAAL,GAAkB,EAAlB;AACA,mBAAKC,gBAAL,GAAwB,EAAxB;AACA,mBAAKM,WAAL,GAAmB,KAAKT,gBAAL,CAAsBjoC,GAAtB,CAA0B,cAA1B,CAAnB;AACA,mBAAK0oC,WAAL,CAAiBhoC,KAAjB;;AAEA,kBAAI,KAAKd,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AACrD,oBAAI8C,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,qBAAK3C,cAAL,CAAoBsqC,mBAApB,CAAwClmC,KAAxC,EAA+CpD,SAA/C,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAIA,IAAI,IAAI,EAAZ,EAAgB;AACd,wBAAIoP,KAAK,GAAG,CAAZ;AACApP,wBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,8BAAI,CAACwoC,gBAAL,CAAsBxnC,IAAtB,CAA2BhB,OAA3B;;AAEA,8BAAI,CAACyoC,sBAAL,CAA4BzoC,OAAO,CAAC6Q,EAApC,EAAwC7Q,OAAO,CAAC+P,KAAhD,EAAuD/P,OAAO,CAAC+C,MAA/D,EAAuE/C,OAAO,CAACynB,IAA/E,EAAqFznB,OAAO,CAAC8J,IAA7F,EAAmG9J,OAAO,CAACuoC,gBAA3G;;AACA,8BAAI,CAACH,UAAL,CAAgBz5B,KAAhB,IAAyB3O,OAAO,CAAC8J,IAAjC;AACA,8BAAI,CAACu+B,gBAAL,CAAsB15B,KAAtB,IAA+B3O,OAAO,CAACuoC,gBAAvC;AACA55B,2BAAK;AACL,8BAAI,CAACq5B,YAAL;AACD,qBARD;AAUA;;AAED;AAIF,iBArBH,EAqBK,UAAA5nC,KAAK,EAAI;AAGV,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAID,iBA5BH;AA+BD,eAjCD,MAiCO,IAAI,KAAKtC,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD,oBAAI0F,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AACA,qBAAK/C,cAAL,CAAoBsqC,mBAApB,CAAwCtjC,MAAxC,EAAgDhG,SAAhD,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAIoP,KAAK,GAAG,CAAZ;AACApP,sBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,4BAAI,CAACwoC,gBAAL,CAAsBxnC,IAAtB,CAA2BhB,OAA3B;;AAEA,4BAAI,CAACyoC,sBAAL,CAA4BzoC,OAAO,CAAC6Q,EAApC,EAAwC7Q,OAAO,CAAC+P,KAAhD,EAAuD/P,OAAO,CAAC+C,MAA/D,EAAuE/C,OAAO,CAACynB,IAA/E,EAAqFznB,OAAO,CAAC8J,IAA7F,EAAmG9J,OAAO,CAACuoC,gBAA3G;;AACA,4BAAI,CAACH,UAAL,CAAgBz5B,KAAhB,IAAyB3O,OAAO,CAAC8J,IAAjC;AACA,4BAAI,CAACu+B,gBAAL,CAAsB15B,KAAtB,IAA+B3O,OAAO,CAACuoC,gBAAvC;AACA55B,yBAAK;AACL,4BAAI,CAACq5B,YAAL;AACD,mBARD;AAUA,0BAAI,CAACQ,gBAAL,CAAsB,iBAAtB,IAA2C,QAAI,CAAC3oC,MAAL,CAAY,MAAZ,CAA3C;AACA,0BAAI,CAAC2oC,gBAAL,CAAsB,kBAAtB,IAA4C,QAAI,CAAC3oC,MAAL,CAAY,kBAAZ,CAA5C;AACD,iBAhBH,EAgBK,UAAAO,KAAK,EAAI;AACV,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;;AAGAzC,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,iBAtBH;AAyBD,eA3BM,MA2BA,IAAI,KAAKP,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD,oBAAI2F,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA1B;AACA,qBAAKhD,cAAL,CAAoBsqC,mBAApB,CAAwCrjC,OAAxC,EAAiDjG,SAAjD,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAIoP,KAAK,GAAG,CAAZ;AACApP,sBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,4BAAI,CAACwoC,gBAAL,CAAsBxnC,IAAtB,CAA2BhB,OAA3B;;AAEA,4BAAI,CAACyoC,sBAAL,CAA4BzoC,OAAO,CAAC6Q,EAApC,EAAwC7Q,OAAO,CAAC+P,KAAhD,EAAuD/P,OAAO,CAAC+C,MAA/D,EAAuE/C,OAAO,CAACynB,IAA/E,EAAqFznB,OAAO,CAAC8J,IAA7F,EAAmG9J,OAAO,CAACuoC,gBAA3G;;AACA,4BAAI,CAACH,UAAL,CAAgBz5B,KAAhB,IAAyB3O,OAAO,CAAC8J,IAAjC;AACA,4BAAI,CAACu+B,gBAAL,CAAsB15B,KAAtB,IAA+B3O,OAAO,CAACuoC,gBAAvC;AACA55B,yBAAK;AACL,4BAAI,CAACq5B,YAAL;AACD,mBARD;AAUA,0BAAI,CAACQ,gBAAL,CAAsB,iBAAtB,IAA2C,QAAI,CAAC3oC,MAAL,CAAY,OAAZ,CAA3C;AACA,0BAAI,CAAC2oC,gBAAL,CAAsB,mBAAtB,IAA6C,QAAI,CAAC3oC,MAAL,CAAY,mBAAZ,CAA7C;AACD,iBAhBH,EAgBK,UAAAO,KAAK,EAAI;AACV,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;;AAGAzC,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,iBAtBH;AAwBD,eA1BM,MA0BA,IAAI,KAAKP,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AACzD,oBAAIkwB,MAAM,GAAG,KAAKjwB,MAAL,CAAYgC,qBAAzB;AACA,qBAAKvD,cAAL,CAAoBsqC,mBAApB,CAAwC9Y,MAAxC,EAAgDxwB,SAAhD,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAIoP,KAAK,GAAG,CAAZ;AACApP,sBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,4BAAI,CAACwoC,gBAAL,CAAsBxnC,IAAtB,CAA2BhB,OAA3B;;AAEA,4BAAI,CAACyoC,sBAAL,CAA4BzoC,OAAO,CAAC6Q,EAApC,EAAwC7Q,OAAO,CAAC+P,KAAhD,EAAuD/P,OAAO,CAAC+C,MAA/D,EAAuE/C,OAAO,CAACynB,IAA/E,EAAqFznB,OAAO,CAAC8J,IAA7F,EAAmG9J,OAAO,CAACuoC,gBAA3G;;AACA,4BAAI,CAACH,UAAL,CAAgBz5B,KAAhB,IAAyB3O,OAAO,CAAC8J,IAAjC;AACA,4BAAI,CAACu+B,gBAAL,CAAsB15B,KAAtB,IAA+B3O,OAAO,CAACuoC,gBAAvC;AACA55B,yBAAK;AACL,4BAAI,CAACq5B,YAAL;AACD,mBARD;AAUA,0BAAI,CAACQ,gBAAL,CAAsB,iBAAtB,IAA2C,QAAI,CAAC3oC,MAAL,CAAY,WAAZ,CAA3C;AACA,0BAAI,CAAC2oC,gBAAL,CAAsB,uBAAtB,IAAiD,QAAI,CAAC3oC,MAAL,CAAY,uBAAZ,CAAjD;AACD,iBAhBH,EAgBK,UAAAO,KAAK,EAAI;AACV,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;;AAGAzC,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,iBAtBH;AAwBD;AACF,aA1HD,MA0HO;AACL,mBAAK4nC,YAAL,GAAoB,CAApB;AACA,mBAAKQ,gBAAL,GAAwB,IAAxB;AACD;AACF;;;wCAEajkC,G,EAAK/C,K,EAAOkkB,K,EAAO;AAC/B,iBAAKpnB,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK7wB,OAAL,CAAaiG,IAAb,CAAkB;AAAEH,iBAAG,EAAHA,GAAF;AAAO/C,mBAAK,EAALA,KAAP;AAAckkB,mBAAK,EAALA;AAAd,aAAlB;AACD;;;oCAGSnmB,I,EAAM;AAAA;;AACd,gBAAIm8B,SAAS,GAAG,EAAhB;AACAh8B,mBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,gBAAIA,IAAI,IAAIK,SAAZ,EAAuB;AAErB,kBAAI+vB,QAAQ,GAAGpwB,IAAI,CAACgF,GAAL,CAASE,MAAT,CAAgBlD,KAA/B;AACA,kBAAIb,YAAJ;AACA,kBAAIc,KAAK,GAAGjC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEiC,KAAlB;AAEA,kBAAIO,QAAQ,GAAG,EAAf;AACA25B,uBAAS,GAAGn8B,IAAI,CAAC,OAAD,CAAhB;;AACA,kBAAIm8B,SAAS,IAAI,MAAjB,EAAyB;AACvB35B,wBAAQ,GAAG,KAAKqmC,UAAL,CAAgB5mC,KAAhB,CAAX;AACD,eAFD,MAEO,IAAIk6B,SAAS,IAAI,OAAjB,EAA0B;AAC/B35B,wBAAQ,GAAG,KAAKsmC,gBAAL,CAAsB7mC,KAAtB,CAAX;AACD,eAZoB,CAcrB;;;AAIA,kBAAIkM,YAAY,GAAG,KAAK86B,gBAAL,CAAsBhnC,KAAtB,EAA6BqnC,wBAAhD;AAGA,kBAAIjnC,UAAJ;;AAEA,kBAAIG,QAAQ,IAAI,EAAhB,EAAoB;AAClBH,0BAAU,GAAG;AACX9B,sBAAI,EAAE,cADK;AAEXgC,0BAAQ,EAAE45B,SAFC;AAGXn6B,uBAAK,EAAEouB;AAHI,iBAAb;AAKD,eAND,MAMO;AACL/tB,0BAAU,GAAG;AACX9B,sBAAI,EAAE,cADK;AAEXgC,0BAAQ,EAAE45B,SAFC;AAGXn6B,uBAAK,EAAEouB,QAHI;AAIXjvB,8BAAY,EAAEqB;AAJH,iBAAb;AAMD;;AAIDrC,qBAAO,CAACC,GAAR,CAAY,KAAKgpC,WAAL,CAAiBvmC,EAAjB,CAAoBZ,KAApB,CAAZ;AACA9B,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;AAEA,mBAAKtD,cAAL,CAAoB0D,qBAApB,CAA0C0L,YAA1C,EAAwD9L,UAAxD,EAAoEtC,SAApE,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,2BAApB,EAAiD,EAAjD,EAAqD;AACnDC,yBAAO,EAAE;AAD0C,iBAArD;AAGD,eARH,EAQK,UAAA/B,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,2BAApB,EAAiD,EAAjD,EAAqD;AACnDC,2BAAO,EAAE;AAD0C,mBAArD;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD;AAEF,eAtBH;;AA0BA,kBAAIu5B,SAAS,IAAI,MAAjB,EAAyB;AACvB,qBAAK0M,UAAL,CAAgB5mC,KAAhB,IAAyBmuB,QAAzB;AACD,eAFD,MAEO,IAAI+L,SAAS,IAAI,OAAjB,EAA0B;AAC/B,qBAAK2M,gBAAL,CAAsB7mC,KAAtB,IAA+BmuB,QAA/B;AACD;AAIF;AACF;;;qCAEUnuB,K,EAAO;AAAA;;AAChB,iBAAKmnC,WAAL,GAAmB,KAAKT,gBAAL,CAAsBjoC,GAAtB,CAA0B,cAA1B,CAAnB;AACA,iBAAK+nC,YAAL;AAEA,gBAAIt6B,YAAY,GAAG,KAAK86B,gBAAL,CAAsBhnC,KAAtB,EAA6BqnC,wBAAhD;AAEA,iBAAKvqC,cAAL,CAAoBwqC,sBAApB,CAA2Cp7B,YAA3C,EAAyDpO,SAAzD,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,sBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,uBAAO,EAAE;AADgC,eAA3C;AAGD,aAPH,EAOK,UAAA/B,KAAK,EAAI;AACV;AACA,sBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,sBAAI,CAAC9D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,uBAAO,EAAE;AAD6B,eAAxC;AAGD,aAbH;AAiBA,iBAAKwmC,WAAL,CAAiBljC,QAAjB,CAA0BjE,KAA1B;AACA,iBAAKgnC,gBAAL,CAAsBhjC,MAAtB,CAA6BhE,KAA7B,EAAoC,CAApC;AACA,iBAAK4mC,UAAL,CAAgB5iC,MAAhB,CAAuBhE,KAAvB,EAA8B,CAA9B;AACA,iBAAK6mC,gBAAL,CAAsB7iC,MAAtB,CAA6BhE,KAA7B,EAAoC,CAApC;AAED;;;iDAGsBgD,C,EAAIq4B,C,EAAI/tB,C,EAAIi6B,C,EAAIvY,C,EAAI5M,C,EAAI;AAC7C,iBAAK+kB,WAAL,GAAmB,KAAKT,gBAAL,CAAsBjoC,GAAtB,CAA0B,cAA1B,CAAnB;;AACA,gBAAI48B,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,mBAAK+oC,WAAL,CAAiB3nC,IAAjB,CAAsB,KAAKmnC,kBAAL,EAAtB;AACD,aAFD,MAEO;AACL,mBAAKQ,WAAL,CAAiB3nC,IAAjB,CAAsB,KAAKmnC,kBAAL,CAAwB3jC,CAAxB,EAA2Bq4B,CAA3B,EAA8B/tB,CAA9B,EAAiCi6B,CAAjC,EAAoCvY,CAApC,EAAuC5M,CAAvC,CAAtB;AACD;AACF;;;6CAEkBpf,C,EAAIq4B,C,EAAI/tB,C,EAAIi6B,C,EAAIvY,C,EAAI5M,C,EAAI;AACzC,gBAAIiZ,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0R,kBAAE,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CADwB;AAE5Bd,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAFqB;AAG5BhN,sBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAHoB;AAI5B0kB,oBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAJsB;AAK5B3d,oBAAI,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CALsB;AAM5By+B,gCAAgB,EAAE,IAAI,0DAAJ,CAAgB,IAAhB;AANU,eAAvB,CAAP;AAQD,aATD,MASO;AACL,qBAAO,KAAKlqC,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0R,kBAAE,EAAE,IAAI,0DAAJ,CAAgBrM,CAAhB,CADwB;AAE5BuL,qBAAK,EAAE,IAAI,0DAAJ,CAAgB8sB,CAAhB,CAFqB;AAG5B95B,sBAAM,EAAE,IAAI,0DAAJ,CAAgB+L,CAAhB,CAHoB;AAI5B2Y,oBAAI,EAAE,IAAI,0DAAJ,CAAgBshB,CAAhB,CAJsB;AAK5Bj/B,oBAAI,EAAE,IAAI,0DAAJ,CAAgB0mB,CAAhB,CALsB;AAM5B+X,gCAAgB,EAAE,IAAI,0DAAJ,CAAgB3kB,CAAhB;AANU,eAAvB,CAAP;AAQD;AACF;;;kDAEuB/S,E,EAAIrM,C,EAAG;AAAA;;AAC7B9E,mBAAO,CAACC,GAAR,CAAYkR,EAAZ;AACA,iBAAKo3B,cAAL,CAAoBzjC,CAApB,IAAyB,IAAzB;AACA,gBAAI9B,KAAK,GAAG,EAAZ;;AACA,gBAAI,KAAK7C,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAAxC,IACC,KAAKC,MAAL,CAAYyB,iBAAZ,IAAiC1B,SADtC,EACiD;AAC/CF,qBAAO,CAACC,GAAR,CAAY,CAAZ;AACA+C,mBAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAApB;AACD,aAJD,MAIO,IAAI,KAAKpB,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD8C,mBAAK,GAAG,KAAK7C,MAAL,CAAYwB,gBAApB;AACA3B,qBAAO,CAACC,GAAR,CAAY,CAAZ;AACD,aAHM,MAGA,IAAI,KAAKE,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD8C,mBAAK,GAAG,KAAK7C,MAAL,CAAYyB,iBAApB;AACA5B,qBAAO,CAACC,GAAR,CAAY,CAAZ;AACD,aAHM,MAGA,IAAI,KAAKE,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AACzD8C,mBAAK,GAAG,KAAK7C,MAAL,CAAYgC,qBAApB;AACD;;AAED,iBAAKvD,cAAL,CAAoB0qC,2BAApB,CAAgDtmC,KAAhD,EAAuDmO,EAAvD,EAA2DxR,IAA3D,CAAgE,oEAAa,GAAb,CAAhE,EAAmFC,SAAnF,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAI,CAAC0oC,cAAL,CAAoBzjC,CAApB,IAAyB,KAAzB;AACD,aAJH,EAIK,UAAApE,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,kBAAIA,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,wBAAI,CAAC3D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC9D,MAAL,CAAY2D,OAAZ,CAAoB,YAAY2O,EAAZ,GAAiB,eAArC,EAAsD,EAAtD;AACD;;AACD,sBAAI,CAACo3B,cAAL,CAAoBzjC,CAApB,IAAyB,KAAzB;AACD,aAXH;AAaD;;;;;;;yBA7WUujC,0B,EAA0B,+K,EAAA,+K,EAAA,2H,EAAA,yH;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,+tE;AAAA;AAAA;ACxBvC;;AACI;;AACI;;AACI;;AAEI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AAEA;;AA8DA;;AAEJ;;AACJ;;AACJ;;;;AA5EuB;;AAAA;;AAU2B;;AAAA;;;;;;;;;;wEDQrCA,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACT9pC,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK4B,U;;;;;;;;;;;AAE5BuqC,oBAAU,EAAE,CAAF;kBAAlB;AAAkB,WAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBhB,eAASO,WAAT,CAAqB5rB,QAArB,EAA8C;AAAA;;AACjD,eAAO,YAAqB;AACxB,iBAAO,IAAIjM,OAAJ,CAAY,UAAOC,OAAP,EAAgBC,MAAhB;AAAA,mBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1C,6BAAM+L,QAAQ,CAAC6rB,IAAT,CAAc;AAChB7J,8BAAM,EAAE;AACJ3X,6BAAG,EAAE,sEAAYrK,QAAZ,CAAqBC,MADtB;AAEJE,+BAAK,EAAE,sEAAYH,QAAZ,CAAqBG,KAFxB;AAGJC,kCAAQ,EAAE,sEAAYJ,QAAZ,CAAqBI;AAH3B,yBADQ;AAMlB0rB,gDAAwB,EAAE,KANR;AAOlBC,+CAAuB,EAAE,IAPP;AAQlBC,oCAAY,EAAE,QARI;AASlBC,mCAAW,EAAE;AACXC,gCAAM,EAAE,WADG;AAEXC,0CAAgB,EAAE;AAFP,yBATK;AAalBC,0CAAkB,EAAE,CAClB,gBADkB;AAbF,uBAAd,CAAN;;AAF0C;AAmB1Cp4B,6BAAO;AAnBmC;AAAA;;AAAA;AAAA;AAAA;AAqB1CC,4BAAM,aAAN;;AArB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B;AAAA,WAAZ,CAAP;AAwBD,SAzBH;AA0BH;;;;;;;;;;;;;;;;;AC9BD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACYW;;AAA8E;AAAA;;AAAA;;AAAA;AAAA,aAAsB,OAAtB,EAAsB;AAAA;;AAAA;;AAAA;AAAA,WAAtB;;AAAoF;;;;;;AAAzH,wGAAoC,SAApC,EAAoC,eAApC,EAAoC,QAApC,EAAoC,mBAApC;;;;UDYvCo4B,kB;AA6EX,oCAAoBprC,cAApB,EAAmEC,MAAnE,EAA0F;AAAA;;AAAtE,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAAC,MAAA,GAAAA,MAAA;AAzE3D,eAAAE,OAAA,GAA4B,IAAI,4CAAJ,EAA5B;AAWR,eAAAkrC,YAAA,GAAoC;AAClCC,oBAAQ,EAAE,IADwB;AAElCC,sBAAU,EAAE,IAFsB;AAGlCvtB,kBAAM,EAAE,MAH0B;AAIlCwtB,qBAAS,EAAE,GAJuB;AAKlCC,qBAAS,EAAE,OALuB;AAMlCC,iBAAK,EAAE,MAN2B;AAOlCC,oBAAQ,EAAE,GAPwB;AAQlCC,qBAAS,EAAE,KARuB;AASlCC,yBAAa,EAAE,IATmB;AAUlCC,uBAAW,EAAE,IAVqB;AAWlCC,uBAAW,EAAE,oBAXqB;AAYlCC,qCAAyB,EAAE,EAZO;AAalCC,yBAAa,EAAE,CACb;AACEzxB,kBAAI,EAAE,OADR;AAEE,uBAAO;AAFT,aADa,EAKb;AACEA,kBAAI,EAAE,SADR;AAEE,uBAAO;AAFT,aALa,EASb;AACEA,kBAAI,EAAE,WADR;AAEE,uBAAO,WAFT;AAGEggB,iBAAG,EAAE;AAHP,aATa,CAbmB;AA4BlC0R,qBAAS,EAAE,UA5BuB;AA6BlCC,iCAAqB,EAAE,KA7BW;AA8BlCC,oBAAQ,EAAE,IA9BwB;AA+BlCC,2BAAe,EAAE,KA/BiB;AAgClCC,gCAAoB,EAAE,CACpB,CACE,MADF,EAEE,MAFF,EAGE,eAHF,EAIE,aAJF,EAKE,eALF,EAME,cANF,EAOE,aAPF,EAQE,QARF,EASE,SATF,EAUE,qBAVF,EAWE,mBAXF,EAYE,SAZF,EAaE,UAbF,CADoB,EAgBpB,CACE,UADF,EAEE,WAFF,EAGE,iBAHF,EAIE,eAJF,EAKE,MALF,EAME,QANF,EAOE,aAPF,EAQE,aARF,EASE,sBATF,EAUE,kBAVF,CAhBoB;AAhCY,WAApC;AA8D6F;;;;mCAtEpF9pB,K,EAAsB;AAC7B;AACAA,iBAAK,CAACrI,cAAN;AACAqI,iBAAK,CAAC8U,eAAN;AACA;AACD;;;qCAmEO;AAAA;;AACN,iBAAK+T,YAAL,CAAkBC,QAAlB,GAA6B,KAA7B;AAGA,iBAAKnrC,OAAL,CAAaY,IAAb,CAAkB,oEAAa,IAAb,CAAlB,EAAsCC,SAAtC,CACE,UAAAurC,OAAO,EAAI;AACT,kBAAG,QAAI,CAACC,QAAL,IAAiB,IAApB,EAAyB;AACvB,wBAAI,CAACxsC,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA5vB,uBAAO,CAACC,GAAR,CAAY,QAAI,CAACE,MAAjB,EAFuB,CAGvB;;AACA,oBAAG,QAAI,CAACA,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA3C,EAAqD;AACnD,sBAAI8C,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAAxB;AACA,sBAAIW,UAAU,GAAG;AACfE,4BAAQ,EAAG,MADI;AAEfP,yBAAK,EAAGspC;AAFO,mBAAjB;;AAIA,0BAAI,CAACvsC,cAAL,CAAoBwZ,kBAApB,CAAuCpV,KAAvC,EAA8Cd,UAA9C,EAA0DtC,SAA1D,CACE,UAAAC,IAAI,EAAI;AACN;AACAA,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAVH,EAWE,UAAA/B,KAAK,EAAI;AACP;AACA,wBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAC2D,gCAAU,EAAG3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,qBAAnC;;AACA,4BAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAtBH;AAwBD,iBA9BD,MA8BM,IAAG,QAAI,CAACtC,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAAnC,EAA6C;AACjD,sBAAI0F,MAAM,GAAG,QAAI,CAACzF,MAAL,CAAYwB,gBAAzB;AACA,sBAAIO,UAAU,GAAG;AACfE,4BAAQ,EAAG,MADI;AAEfP,yBAAK,EAAGspC;AAFO,mBAAjB;;AAIA,0BAAI,CAACvsC,cAAL,CAAoB4Z,UAApB,CAA+B5S,MAA/B,EAAuC1D,UAAvC,EAAmDtC,SAAnD,CACE,UAAAC,IAAI,EAAI;AACN;AACAA,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAVH,EAWE,UAAA/B,KAAK,EAAI;AACP;AACA,wBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAC2D,gCAAU,EAAG3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,qBAAnC;;AACA,4BAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAtBH;AAwBD,iBA9BK,MA8BA,IAAG,QAAI,CAACtC,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAApC,EAA8C;AAClD,sBAAI2F,OAAO,GAAG,QAAI,CAAC1F,MAAL,CAAYyB,iBAA1B;AACA,sBAAIM,UAAU,GAAG;AACfE,4BAAQ,EAAG,MADI;AAEfP,yBAAK,EAAGspC;AAFO,mBAAjB;;AAIA,0BAAI,CAACvsC,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDtC,SAArD,CACE,UAAAC,IAAI,EAAI;AACN;AACAA,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAVH,EAWE,UAAA/B,KAAK,EAAI;AACP;AACA,wBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAC2D,gCAAU,EAAG3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,qBAAnC;;AACA,4BAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAtBH;AAwBD,iBA9BK,MA8BA,IAAG,QAAI,CAACtC,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAxC,EAAkD;AACtD,sBAAIkwB,MAAM,GAAG,QAAI,CAACjwB,MAAL,CAAYgC,qBAAzB;AACA,sBAAID,UAAU,GAAG;AACfE,4BAAQ,EAAG,MADI;AAEfP,yBAAK,EAAGspC;AAFO,mBAAjB;;AAIA,0BAAI,CAACvsC,cAAL,CAAoBmxB,eAApB,CAAoCK,MAApC,EAA4CluB,UAA5C,EAAwDtC,SAAxD,CACE,UAAAC,IAAI,EAAI;AACN;AACAA,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAVH,EAWE,UAAA/B,KAAK,EAAI;AACP;AACA,wBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,wBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,wBAAI,CAAC,UAAD,CAAJ,GAAmBsrC,OAAnB;;AACA,4BAAI,CAACvsC,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,4BAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAC2D,gCAAU,EAAG3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,qBAAnC;;AACA,4BAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,4BAAI,CAAC/wB,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,6BAAO,EAAE;AAD6B,qBAAxC;AAGD,mBAtBH;AAwBD;AACF;AACF,aAhIH;AAmIA,iBAAK7D,cAAL,CAAoBmN,UAApB,CAA+BnM,SAA/B,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACoqC,YAAL,CAAkBC,QAAlB,GAA6B,KAA7B;AACA,sBAAI,CAACkB,QAAL,GAAgB,IAAhB;AACA,sBAAI,CAACjrC,MAAL,GAAc,IAAd;AACD,aALH;AAOD;;;sCAEWU,O,EAAwB;AAEhC,gBAAGA,OAAO,CAACuqC,QAAR,CAAiBpqC,YAAjB,IAAiC,IAApC,EAAyC;AACvC,mBAAKipC,YAAL,CAAkBC,QAAlB,GAA6B,KAA7B;AACA,mBAAKkB,QAAL,GAAgB,IAAhB;AACA,mBAAKjrC,MAAL,GAAc,IAAd;AACD,aAJD,MAIK;AACH,mBAAK8pC,YAAL,CAAkBC,QAAlB,GAA6B,IAA7B;AACA,mBAAKkB,QAAL,GAAgBvqC,OAAO,CAACuqC,QAAR,CAAiBpqC,YAAjB,CAA8BoJ,IAA9C;AACA,mBAAKjK,MAAL,GAAcU,OAAO,CAACuqC,QAAR,CAAiBpqC,YAA/B;AACD;AAED;;AAEH;;;oCAES6D,G,EAAG;AACX,gBAAGA,GAAG,CAAC2Q,GAAJ,IAAW,SAAX,IAAwB3Q,GAAG,CAAC2Q,GAAJ,IAAW,KAAnC,IAA4C3Q,GAAG,CAAC2Q,GAAJ,IAAW,OAA1D,EAAkE;AAChE,mBAAKzW,OAAL,CAAaiG,IAAb,CAAkB,KAAKomC,QAAvB;AACD;AAEF;;;;;;;yBApPUpB,kB,EAAkB,+K,EAAA,yH;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;;qBAAlB,oB;AAAgB,a,EAAA,K,EAAA,6D;;;;;;;;;;;;ACtB7B;;AACI;;AACI;;AACI;;AACI;;AAAU;;AACd;;AACJ;;AACJ;;AACA;;AACI;;AACG;;AACH;;AACJ;;AACJ;;;;AAH4B;;AAAA;;;;;;;;;wEDYfA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTzrC,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;AAEpB2sC,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AAKnBE,kBAAQ;kBADP,0DACO;mBADM,c,EAAgB,CAAC,QAAD,C;AACtB;;;;;;;;;;;;;;;;;;;AElBV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,qB;AAmDX,uCAAoB9wB,IAApB,EAA8CrI,IAA9C,EAAiE;AAAA;;AAA7C,eAAAqI,IAAA,GAAAA,IAAA;AAA0B,eAAArI,IAAA,GAAAA,IAAA;AAjDtC,eAAA+S,mBAAA,GAAsB,EAAtB;AAEA,eAAAqmB,aAAA,GAAyC,IAAI,oDAAJ,CAAoB,IAApB,CAAzC;AACA,eAAAC,qBAAA,GAAiD,IAAI,oDAAJ,CAAoB,IAApB,CAAjD;AACR;;AACQ,eAAAC,cAAA,GAA0C,IAAI,oDAAJ,CAAoB,IAApB,CAA1C;AACA,eAAAC,eAAA,GAA2C,IAAI,oDAAJ,CAAoB,IAApB,CAA3C;AACA,eAAAC,sBAAA,GAA+C,IAAI,oDAAJ,CAAoB,IAApB,CAA/C;AACA,eAAAC,iBAAA,GAA0C,IAAI,oDAAJ,CAAoB,IAApB,CAA1C;AACA,eAAAC,kBAAA,GAA8C,IAAI,oDAAJ,CAAoB,IAApB,CAA9C;AACA,eAAAC,cAAA,GAA0C,IAAI,oDAAJ,CAAoB,IAApB,CAA1C;AACA,eAAAC,qBAAA,GAAiD,IAAI,oDAAJ,CAAoB,IAApB,CAAjD;AACA,eAAAC,iBAAA,GAA8C,IAAI,oDAAJ,CAAoB,IAApB,CAA9C;AACA,eAAAC,cAAA,GAA2C,IAAI,oDAAJ,CAAoB,IAApB,CAA3C;AACA,eAAAC,iBAAA,GAA8C,IAAI,oDAAJ,CAAoB,IAApB,CAA9C;AACA,eAAAC,iBAAA,GAA+C,IAAI,oDAAJ,CAAoB,IAApB,CAA/C;AACA,eAAAC,wBAAA,GAAsD,IAAI,oDAAJ,CAAoB,IAApB,CAAtD;AACA,eAAAC,kBAAA,GAA+C,IAAI,oDAAJ,CAAoB,IAApB,CAA/C;AACA,eAAAC,WAAA,GAAwC,IAAI,oDAAJ,CAAoB,IAApB,CAAxC;AACA,eAAAC,mBAAA,GAA+C,IAAI,oDAAJ,CAAoB,IAApB,CAA/C;AACA,eAAAC,wBAAA,GAAqD,IAAI,oDAAJ,CAAoB,IAApB,CAArD;AACA,eAAAC,cAAA,GAA2C,IAAI,oDAAJ,CAAoB,IAApB,CAA3C;AAGA,eAAAhvB,OAAA,GAAU,8BAAV;AACA,eAAAlI,GAAA,GAAM,aAAN;AACA,eAAAnS,MAAA,GAAS,EAAT;AAER,eAAA8Y,SAAA,GAAY,KAAKqvB,aAAL,CAAmBtwB,YAAnB,EAAZ;AACA,eAAA8B,WAAA,GAAc,KAAKuvB,WAAL,CAAiBrxB,YAAjB,EAAd;AACA,eAAAiX,qBAAA,GAAwB,KAAKsZ,qBAAL,CAA2BvwB,YAA3B,EAAxB;AACA;;AACA,eAAA+jB,cAAA,GAAiB,KAAKyM,cAAL,CAAoBxwB,YAApB,EAAjB;AACA,eAAAqX,eAAA,GAAkB,KAAKoZ,eAAL,CAAqBzwB,YAArB,EAAlB;AACA,eAAAnP,UAAA,GAAa,KAAK6/B,sBAAL,CAA4B1wB,YAA5B,EAAb;AACA,eAAAhP,UAAA,GAAa,KAAK2/B,iBAAL,CAAuB3wB,YAAvB,EAAb;AACA,eAAAwL,kBAAA,GAAqB,KAAKolB,kBAAL,CAAwB5wB,YAAxB,EAArB;AACA,eAAA0L,cAAA,GAAiB,KAAKmlB,cAAL,CAAoB7wB,YAApB,EAAjB;AACA,eAAA4P,iBAAA,GAAoB,KAAKkhB,qBAAL,CAA2B9wB,YAA3B,EAApB;AACA,eAAAwrB,iBAAA,GAAoB,KAAKuF,iBAAL,CAAuB/wB,YAAvB,EAApB;AACA,eAAAhO,cAAA,GAAiB,KAAKg/B,cAAL,CAAoBhxB,YAApB,EAAjB;AACA,eAAAyxB,iBAAA,GAAoB,KAAKR,iBAAL,CAAuBjxB,YAAvB,EAApB;AACA,eAAA0W,iBAAA,GAAoB,KAAKwa,iBAAL,CAAuBlxB,YAAvB,EAApB;AACA,eAAAgX,wBAAA,GAA2B,KAAKma,wBAAL,CAA8BnxB,YAA9B,EAA3B;AACA,eAAAmgB,kBAAA,GAAqB,KAAKiR,kBAAL,CAAwBpxB,YAAxB,EAArB;AACA,eAAA0xB,mBAAA,GAAsB,KAAKJ,mBAAL,CAAyBtxB,YAAzB,EAAtB;AACA,eAAAyrB,wBAAA,GAA2B,KAAK8F,wBAAL,CAA8BvxB,YAA9B,EAA3B;AACA,eAAAnb,cAAA,GAAiB,KAAK2sC,cAAL,CAAoBxxB,YAApB,EAAjB;AAEoE;;;;6CAEjDrZ,K,EAAY;AAC7B,iBAAK2qC,mBAAL,CAAyBxnC,IAAzB,CAA8BnD,KAA9B;AACD;;;wCAEa1B,M,EAAgB;AAC5B,iBAAKqrC,aAAL,CAAmBxmC,IAAnB,CAAwB7E,MAAxB;AACD;;;0CAEeA,M,EAAc;AAC5B,iBAAKosC,WAAL,CAAiBvnC,IAAjB,CAAsB7E,MAAtB;AACD;;;iDAEsBA,M,EAAgB;AACrC,iBAAKsrC,qBAAL,CAA2BzmC,IAA3B,CAAgC7E,MAAhC;AACD;;;4CAEiBqb,M,EAAa;AAC7B,iBAAK8wB,kBAAL,CAAwBtnC,IAAxB,CAA6BwW,MAA7B;AACD;AAED;;;;;;yCAIerb,M,EAAgB;AAC7B,iBAAKwrC,eAAL,CAAqB3mC,IAArB,CAA0B7E,MAA1B;AACD;;;6CAEkBA,M,EAAgB;AACjC,iBAAKurC,cAAL,CAAoB1mC,IAApB,CAAyB7E,MAAzB;AACD;;;wCAEa+N,O,EAAgB;AAC5B,iBAAK09B,sBAAL,CAA4B5mC,IAA5B,CAAiCkJ,OAAjC;AACD;;;+CAEoBA,O,EAAa;AAChC,iBAAK29B,iBAAL,CAAuB7mC,IAAvB,CAA4BkJ,OAA5B;AACD;;;yCAEc/N,M,EAAgB;AAC7B,iBAAK2rC,kBAAL,CAAwB9mC,IAAxB,CAA6B7E,MAA7B;AACD;;;wCAEaqb,M,EAAgB;AAC5B,iBAAKuwB,cAAL,CAAoB/mC,IAApB,CAAyBwW,MAAzB;AACD;;;6CAEe;AACd,iBAAKwwB,qBAAL,CAA2BhnC,IAA3B,CAAgC,IAAhC;AACD;;;2CAEgB7E,M,EAAc;AAC7B,iBAAK8rC,iBAAL,CAAuBjnC,IAAvB,CAA4B7E,MAA5B;AACD;;;wCAEaA,M,EAAc;AAC1B,iBAAK+rC,cAAL,CAAoBlnC,IAApB,CAAyB7E,MAAzB;AACD;;;2CAEgBA,M,EAAc;AAC7B,iBAAKgsC,iBAAL,CAAuBnnC,IAAvB,CAA4B7E,MAA5B;AACD;;;2CAEgBsb,I,EAAa;AAC5B,iBAAK2wB,iBAAL,CAAuBpnC,IAAvB,CAA4ByW,IAA5B;AACD;;;kDAEuBA,I,EAAa;AACnC,iBAAK4wB,wBAAL,CAA8BrnC,IAA9B,CAAmCyW,IAAnC;AACD;;;kDAEuBtb,M,EAAe;AACrC,iBAAKssC,wBAAL,CAA8BznC,IAA9B,CAAmC7E,MAAnC;AACD;;;wCAEaA,M,EAAe;AAC3B,iBAAKusC,cAAL,CAAoB1nC,IAApB,CAAyB7E,MAAzB;AACD,W,CAED;;;;gDACsB+B,U,EAAe;AACnC,mBAAO,KAAKuY,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,6BAA9B,EAA6Dxb,UAA7D,CAAP;AACD,W,CAED;;;;+CACqBA,U,EAAe;AAClC,mBAAO,KAAKuY,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,4BAA9B,EAA4Dxb,UAA5D,CAAP;AACD,W,CAED;;;;sCACYA,U,EAAe;AACzB,mBAAO,KAAKuY,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,oBAA9B,EAAoDxb,UAApD,CAAP;AACD,W,CAED;;;;8CACoByO,Q,EAAgB;AAClC,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,WAA1D,CAAP;AACD,W,CAED;;;;0CACgBA,Q,EAAgB;AAC9B,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,oBAA5C,GAAmE,KAAK6E,GAAxE,GAA8E,cAA5F,CAAP;AACD,W,CAED;;;;wDAC8BxS,K,EAAe6pC,Q,EAAgB;AAC3D,mBAAO,KAAKpyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC1a,KAAjC,GAAyC,0BAAzC,GAAsE,KAAKwS,GAA3E,GAAiF,YAAjF,GAAgGq3B,QAAhG,GAA2G,EAAzH,CAAP;AACD,W,CAGD;;;;2CACiBl8B,Q,EAAgB;AAC/B,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,QAA1D,CAAP;AACD,W,CAGD;;;;sCACY/K,M,EAAgBknC,M,EAAc;AACxC,mBAAO,KAAKryB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC9X,MAAjC,GAA0C,YAA1C,GAAyD,KAAK4P,GAA9D,GAAoE,UAApE,GAAiFs3B,MAA/F,CAAP;AACD,W,CAGD;;;;uCACajnC,O,EAAiBinC,M,EAAc;AAC1C,mBAAO,KAAKryB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC7X,OAAjC,GAA2C,oBAA3C,GAAkE,KAAK2P,GAAvE,GAA6E,UAA7E,GAA0Fs3B,MAAxG,CAAP;AACD,W,CAED;;;;wCACcn8B,Q,EAAgB;AAC5B,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,SAA1D,CAAP;AACD,W,CAED;;;;gDACmB;AACjB,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,wBAA7B,CAAP;AACD,W,CAED;;;;yCACY;AACV,mBAAO,KAAKjD,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,mCAAf,GAAqD,KAAKlI,GAA1D,GAAgE,EAA9E,CAAP;AACD,W,CAED;;;;qCACQ;AACN,mBAAO,KAAKiF,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,+BAAf,GAAiD,KAAKlI,GAAtD,GAA4D,EAA1E,CAAP;AACD,W,CAED;;;;uCACU;AACR,mBAAO,KAAKiF,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iCAAf,GAAmD,KAAKlI,GAAxD,GAA8D,EAA5E,CAAP;AACD,W,CAED;;;;mCACM;AACJ,mBAAO,KAAKiF,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,6BAAf,GAA+C,KAAKlI,GAApD,GAA0D,EAAxE,CAAP;AACD,W,CAED;;;;sCACS;AACP,mBAAO,KAAKiF,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,gCAAf,GAAkD,KAAKlI,GAAvD,GAA6D,EAA3E,CAAP;AACD,W,CAGD;;;;4CACe;AACb,iBAAKnS,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,oCAAf,GAAsD,KAAKlI,GAA3D,GAAiE,UAAjE,GAA8E,KAAKnS,MAAjG,CAAP;AACD,W,CAGD;;;;6CACmBL,K,EAAK;AACtB,mBAAO,KAAKyX,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,oBAA3C,GAAkE,KAAKwS,GAArF,CAAP;AACD,W,CAED;;;;qCACWxS,K,EAAK;AACd,mBAAO,KAAKyX,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,YAA3C,GAA0D,KAAKwS,GAA7E,CAAP;AACD,W,CAED;;;;sCACYxS,K,EAAK;AACf,mBAAO,KAAKyX,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,oBAA3C,GAAkE,KAAKwS,GAArF,CAAP;AACD,W,CAED;;;;yCACe6V,M,EAAM;AACnB,mBAAO,KAAK5Q,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAmC2N,MAAnC,GAA4C,gBAA5C,GAA+D,KAAK7V,GAAlF,CAAP;AACD,W,CAED;;;;mDACyBxS,K,EAAOd,U,EAAU;AACxC,mBAAO,KAAKuY,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,gBAA3C,GAA8D,KAAKwS,GAAlF,EAAuFtT,UAAvF,CAAP;AACD,W,CAED;;;;6CACmBc,K,EAAOd,U,EAAU;AAClC,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,oBAA3C,GAAkE,KAAKwS,GAAvE,GAA6E,QAA7E,GAAwF,KAAKnS,MAA5G,EAAoHnB,UAApH,CAAP;AACD,W,CAGD;;;;mDACyBc,K,EAAOd,U,EAAU;AACxC,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,0BAA3C,GAAwE,KAAKwS,GAA7E,GAAmF,QAAnF,GAA8F,KAAKnS,MAAlH,EAA0HnB,UAA1H,CAAP;AACD,W,CAED;;;;gDACsBc,K,EAAOd,U,EAAY;AACvC,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC1a,KAAnC,GAA2C,uBAA3C,GAAqE,KAAKwS,GAA1E,GAAgF,QAAhF,GAA2F,KAAKnS,MAA/G,EAAuHnB,UAAvH,CAAP;AACD,W,CAED;;;;qCACW0D,M,EAAQ1D,U,EAAU;AAC3B,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC9X,MAAnC,GAA4C,YAA5C,GAA2D,KAAK4P,GAAhE,GAAsE,QAAtE,GAAiF,KAAKnS,MAArG,EAA6GnB,UAA7G,CAAP;AACD,W,CAED;;;;sCACY2D,O,EAAS3D,U,EAAU;AAC7B,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC7X,OAAnC,GAA6C,oBAA7C,GAAoE,KAAK2P,GAAzE,GAA+E,QAA/E,GAA0F,KAAKnS,MAA9G,EAAsHnB,UAAtH,CAAP;AACD,W,CAED;;;;8CACiB;AACf,mBAAO,KAAKuY,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,yBAA7B,CAAP;AACD,W,CAED;;;;yCACY;AACV,mBAAO,KAAKjD,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,uBAA7B,CAAP;AACD,W,CAED;;;;6CACgB;AACd,mBAAO,KAAKjD,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,+BAA7B,CAAP;AACD,W,CAGD;;;;wCACc1a,K,EAAK;AACjB,iBAAKK,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,uCAAf,GAAwD1a,KAAxD,GAA+D,OAA/D,GAAyE,KAAKwS,GAA9E,GAAoF,UAApF,GAAiG,KAAKnS,MAApH,CAAP;AACD,W,CAED;;;;yCACeL,K,EAAK;AAClB,iBAAKK,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,+CAAf,GAAgE1a,KAAhE,GAAuE,OAAvE,GAAiF,KAAKwS,GAAtF,GAA4F,UAA5F,GAAyG,KAAKnS,MAA5H,CAAP;AACD,W,CAED;;;;4CACkBgoB,M,EAAM;AACtB,iBAAKhoB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,gCAAf,GAAkD,KAAKlI,GAAvD,GAA6D,QAA7D,GAAuE6V,MAAvE,GAA+E,UAA/E,GAA4F,KAAKhoB,MAA/G,CAAP;AACD,W,CAED;;;;yCACegoB,M,EAAQnpB,U,EAAU;AAC/B,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC2N,MAAnC,GAA4C,gBAA5C,GAA+D,KAAK7V,GAApE,GAA0E,UAA1E,GAAuF,KAAKnS,MAA3G,EAAmHnB,UAAnH,CAAP;AACD,W,CAGD;;;;8CACoByO,Q,EAAkB;AACpC,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,4BAA1D,CAAP;AACD;;;8CAEmBA,Q,EAAmBzO,U,EAAU;AAC/C,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,gDAAf,GAAkE/M,QAAlE,GAA6E,OAA7E,GAAsF,KAAK6E,GAA3F,GAAgG,UAAhG,GAA2G,KAAKnS,MAAhH,GAAuH,EAAtI,EAA0InB,UAA1I,CAAP;AACD;;;iDAEsByO,Q,EAAkB;AACvC,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAmC/M,QAAnC,GAA8C,+BAA5D,CAAP;AACD;;;sDAE2B3N,K,EAAgBgqC,O,EAAkB;AAC5D,mBAAO,KAAKvyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,yDAAf,GAAyE1a,KAAzE,GAA+E,uCAA/E,GAAuHgqC,OAAtI,EAA8I,EAA9I,CAAP;AACD,W,CAGD;;;;6CACmBr8B,Q,EAAkB;AACnC,iBAAKtN,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,4CAAf,GAA4D/M,QAA5D,GAAqE,OAArE,GAA6E,KAAK6E,GAAlF,GAAsF,UAAtF,GAAiG,KAAKnS,MAAtG,GAA6G,EAA3H,CAAP;AACD;;;yCAEcsN,Q,EAAkB;AAC/B,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,mBAA5C,GAAgE,KAAK6E,GAArE,GAAyE,EAAvF,CAAP;AACD;;;2CAEgB7E,Q,EAAkB;AACjC,mBAAO,KAAK8J,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAAiC/M,QAAjC,GAA4C,iBAA5C,GAA8D,KAAK6E,GAAnE,GAAuE,EAArF,CAAP;AACD;;;0CAEe4a,M,EAAQluB,U,EAAU;AAChC,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC0S,MAAnC,GAA4C,iBAA5C,GAAgE,KAAK5a,GAArE,GAA2E,UAA3E,GAAwF,KAAKnS,MAA5G,EAAoHnB,UAApH,CAAP;AACD;;;2CAEgB+qC,W,EAAqBC,Y,EAAuB;AAC3D,mBAAO,KAAKzyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,mDAAf,GAAmEuvB,WAAnE,GAA+E,eAA/E,GAA+FC,YAA/F,GAA4G,OAA5G,GAAoH,KAAK13B,GAAzH,GAA6H,UAA7H,GAAwI,KAAKnS,MAA7I,GAAoJ,EAAlK,CAAP;AACD;;;0CAEe6pC,Y,EAAuB;AACrC,iBAAK7pC,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAiCwvB,YAAjC,GAA8C,iBAA9C,GAAgE,KAAK13B,GAArE,GAAyE,UAAzE,GAAoF,KAAKnS,MAAzF,GAAgG,EAA9G,CAAP;AACD;;;wCAEa+sB,M,EAAQluB,U,EAAU;AAC9B,iBAAKmB,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,iBAAf,GAAmC0S,MAAnC,GAA4C,wBAA5C,GAAuE,KAAK5a,GAA5E,GAAkF,UAAlF,GAA+F,KAAKnS,MAAnH,EAA2HnB,UAA3H,CAAP;AACD;;;wCAEairC,e,EAAyB;AACrC,iBAAK9pC,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAiCyvB,eAAjC,GAAiD,wBAAjD,GAA0E,KAAK33B,GAA/E,GAAmF,UAAnF,GAA8F,KAAKnS,MAAnG,GAA0G,EAAxH,CAAP;AACD,W,CAED;;;;sCACY+pC,e,EAAyB;AACnC,mBAAO,KAAK3yB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAA+B0vB,eAA/B,GAA+C,gBAA/C,GAAgE,KAAK53B,GAAnF,CAAP;AACD;;;0CAEe43B,e,EAAyB;AACvC,mBAAO,KAAK3yB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAA+B0vB,eAA/B,GAA+C,oBAA/C,GAAoE,KAAK53B,GAAvF,CAAP;AACD;;;0CAEe43B,e,EAA0B;AACxC,iBAAK/pC,MAAL,GAAc,KAAK+O,IAAL,CAAU26B,WAAV,EAAd;AACA,mBAAO,KAAKtyB,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,gCAAf,GAAgD0vB,eAAhD,GAAgE,OAAhE,GAAwE,KAAK53B,GAA7E,GAAiF,UAAjF,GAA4F,KAAKnS,MAAjG,GAAwG,EAAtH,CAAP;AACD;;;0CAEewH,M,EAAiB;AAC/B,mBAAO,KAAK4P,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,iBAAf,GAAiC7S,MAAjC,GAAwC,iBAAxC,GAA0D,KAAK2K,GAA7E,CAAP;AACD;;;2CAEgB3K,M,EAAgB;AAC/B,mBAAO,KAAK4P,IAAL,CAAUla,GAAV,CAAc,KAAKmd,OAAL,GAAe,eAAf,GAA+B7S,MAA/B,GAAsC,qBAAtC,GAA4D,KAAK2K,GAA/E,CAAP;AACD;;;wCAEapK,I,EAAe;AAC3B,mBAAO,KAAKqP,IAAL,CAAUiB,IAAV,CAAe,KAAKgC,OAAL,GAAe,gBAA9B,EAAgDtS,IAAhD,EAAsD;AAAEiiC,0BAAY,EAAE;AAAhB,aAAtD,CAAP;AACD;;;0CAEeC,e,EAAiBC,e,EAAiB;AAChD,mBAAO,KAAKpoB,mBAAL,CAAyBmoB,eAAe,GAAC,GAAhB,GAAoBC,eAA7C,CAAP;AACD;;;uCAEYD,e,EAAiBC,e,EAAiB;AAC7C,iBAAKpoB,mBAAL,CAAyBmoB,eAAe,GAAC,GAAhB,GAAoBC,eAA7C,IAAgE,EAAhE;AACA,iBAAKpoB,mBAAL,CAAyBmoB,eAAe,GAAC,GAAhB,GAAoBC,eAA7C,EAA8D1tC,IAA9D,GAAqEK,SAArE;AACA,iBAAKilB,mBAAL,CAAyBmoB,eAAe,GAAC,GAAhB,GAAoBC,eAA7C,EAA8Dt5B,MAA9D,GAAuE/T,SAAvE;AAED;;;yCAEcotC,e,EAAiBC,e,EAAiB;AAC/C,iBAAKpoB,mBAAL,CAAyBmoB,eAAe,GAAC,GAAhB,GAAoBC,eAA7C,IAAgErtC,SAAhE;AACD;;;6CAEkB;AACjB,mBAAO,KAAKilB,mBAAZ;AACD;;;;;;;yBAraUomB,qB,EAAqB,uH,EAAA,sH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;wEAEDA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACV1vB,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;;;ACrBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa2xB,yB;AAEX,6CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,8C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPtC;;AAAG;;AAAwB;;;;;;;;wEDOdA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTjvC,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;AEPtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AC2BY;;AACI;;AACI;;AACA;;AAAuC;;AAAU;;AACrD;;AAEJ;;;;UDXCgvC,e;AAKX,iCAAoBC,KAApB,EAAmDhO,MAAnD,EAA2EjiB,eAA3E,EAAqHrL,IAArH,EAAyI;AAAA;;AAAA;;AAArH,eAAAs7B,KAAA,GAAAA,KAAA;AAA+B,eAAAhO,MAAA,GAAAA,MAAA;AAAwB,eAAAjiB,eAAA,GAAAA,eAAA;AAA0C,eAAArL,IAAA,GAAAA,IAAA;;AA2BrH,eAAAu7B,OAAA,GAAU,YAAM;AACd,gBAAIC,KAAK,GAAG,SAARA,KAAQ,CAACttC,OAAD;AAAA,qBAAaA,OAAO,IAAI,OAAxB;AAAA,aAAZ;;AACAN,mBAAO,CAACC,GAAR,CAAY,QAAI,CAAC4tC,SAAL,CAAevlB,IAAf,CAAoBslB,KAApB,CAAZ;AACD,WAHD;AA3B4I;;;;qCAEpI;AAAA;;AACN,gBAAG,KAAKx7B,IAAL,CAAUwC,aAAV,MAA6B1U,SAAhC,EAA0C;AACxC,kBAAG,KAAKkS,IAAL,CAAUwC,aAAV,GAA0B,oBAA1B,KAAmD1U,SAAtD,EAAgE;AAC9D,qBAAK4e,QAAL,GAAgB,KAAK1M,IAAL,CAAUwC,aAAV,GAA0B,oBAA1B,CAAhB;AACD;AACF;;AAGD,iBAAKi5B,SAAL,GAAiB,KAAKz7B,IAAL,CAAU07B,kBAAV,EAAjB;AAEA,iBAAKrwB,eAAL,CAAqBswB,eAArB,CAAqCnuC,SAArC,CAA+C;AAC7CoF,kBAAI,EAAE,cAACI,CAAD,EAAO;AACX;AACA,oBAAIA,CAAC,CAAChF,IAAF,IAAU,mEAAkB4tC,cAAhC,EAAgD;AAC9C,0BAAI,CAACvwB,eAAL,CAAqBwwB,WAArB,CAAiC,EAAjC;AACD;AACF;AAN4C,aAA/C;AAQD;;;mCAEK;AACJ,iBAAK77B,IAAL,CAAUkM,MAAV;AACD;;;;;;;yBA7BUmvB,e,EAAe,+H,EAAA,uH,EAAA,iI,EAAA,+I;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,4nD;AAAA;AAAA;ACpB5B;;AAEI;;AAEI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAyB;;AAA8C;AAAA,qBAAS,IAAAnvB,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAK;;AAAM;;AACzG;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAMI;;AAOA;;AACI;;AACI;;AACA;;AAAuC;;AAAc;;AACzD;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAuC;;AAAW;;AACtD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AAGJ;;AACA;;AACI;;AAAiC;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAmD;;AAAM;;AACjH;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAlC4D;;AAAA;;AAwBxC;;AAAA;;;;;;;;;wED7BPmvB,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTlvC,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACOoB;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIJ;;AACI;;AAAsB;;AAAU;;AACpC;;;;;;;;AA0DR;;AACI;;AACI;;AAC+C;;AAA4B;;AAC3E;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qCAA2B,KAA3B;AAAkC,mBAAF,8DAAE;AAAF,WAAhC;;AAA4F;;AAAM;;AACtG;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qCAA2B,IAA3B;AAAiC,mBAAF,8DAAE;AAAF,WAA/B;;AAA2F;;AACvF;;AACZ;;AACJ;;AACA;;AAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAArB;;AAIJ;;;;;;AAXe;;AAAA;;AAEA;;AAAA;;AAOP;;AAAA;;;;;;AAsCwB;;;;;;AACA;;;;;;AAMA;;;;;;AACA;;;;;;AAMA;;;;;;AACA;;;;;;AAYJ;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACkE;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAClE;;AACwB;;AAAQ;;;;;;AAKxB;;AACI;;;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;AAHW;;AAAA;;;;;;AAIX;;AACwB;;AAAO;;;;;;AAPnC;;AACI;;AAKA;;AAEJ;;;;;;;;AAP6B;;AAAA;;AAKlB;;AAAA;;;;;;AAGX;;AAAkE;;AAAO;;;;;;AAGzE;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AAEI;;AACJ;;;;;;;;AA7CR;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAElC;;AACI;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAEA;;AAEJ;;AACA;;AACI;;AASA;;AACJ;;AACA;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;AA9CI;;AAEW;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AACE;;AAAA;;AAIA;;AAAA;;AASA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAQvB;;AAA8E;;AAAU;;;;;;AASpF;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAEI;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAaA;;AACI;;AACI;;;;;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;AAHZ;;AACI;;AAKJ;;;;;;AALW;;AAAA;;;;;;AATnB;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;;;;;AARiC;;AAAA;;;;;;AAkBrB;;AACI;;AACI;;;;;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;AAHZ;;AACI;;AAKJ;;;;;;AALW;;AAAA;;;;;;AATnB;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;;;;;AARiC;;AAAA;;;;;;AASjC;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACoB;;AAAI;;AAAwC;;AACpE;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AATkC;;AAAA;;AAMtB;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AAAuE;;AACnE;;AAAwC;;AAChD;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AATkC;;AAAA;;AAMtB;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AA1MhB;;AACI;;AAaA;;AAaA;;AAiBA;;AAiBA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAcA;;AAaA;;AAcA;;AAaJ;;;;;;AA5MS;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAiBA;;AAAA;;AAiBA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;;;;;AAkBT;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AACA;;AAEI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AACA;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;;;;;UDrZvByvC,qB;AA0CX,uCAAoBtvC,cAApB,EAAmE8mB,aAAnE,EAA+GlX,MAA/G,EAAgJuN,IAAhJ,EAAyKld,MAAzK,EAAgM;AAAA;;AAA5K,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAA8mB,aAAA,GAAAA,aAAA;AAA4C,eAAAlX,MAAA,GAAAA,MAAA;AAAiC,eAAAuN,IAAA,GAAAA,IAAA;AAAyB,eAAAld,MAAA,GAAAA,MAAA;AAxCzK,eAAAmd,IAAA,GAAO,CAAP;AAEA,eAAAC,QAAA,GAAW,EAAX;AAEA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAza,MAAA,GAAS,KAAT;AACA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAikB,gBAAA,GAAmB,KAAnB;AACA,eAAAje,iBAAA,GAAoB,KAApB;AACA,eAAAke,MAAA,GAAS,KAAT;AACA,eAAAuoB,WAAA,GAAc,KAAd;AAaA,eAAAt3B,YAAA,GAAe,EAAf;AAEA,eAAAK,KAAA,GAAQ,CAAR;AACA,eAAA2O,SAAA,GAAY,OAAZ;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,UAAA,GAAa;AAAEC,iBAAK,EAAE,EAAT;AAAaF,qBAAS,EAAE;AAAxB,WAAb;AACA,eAAAG,UAAA,GAAa,EAAb;AACA,eAAAC,SAAA,GAAY,kBAAZ;AAEQ,eAAAC,aAAA,GAA8B,IAAI,4CAAJ,EAA9B;AAQ2L;;;;qCAE3L;AAAA;;AAEN,iBAAKvnB,cAAL,CAAoBqgC,cAApB,CAAmCr/B,SAAnC,CACE,UAAAO,MAAM,EAAI;AACR,kBAAI,QAAI,CAACA,MAAL,IAAeA,MAAnB,EAA2B;AACzB,wBAAI,CAACiuC,aAAL,GAAqB,IAArB;AACA,wBAAI,CAAC3sC,MAAL,GAAc,KAAd;AACA,wBAAI,CAACkkB,gBAAL,GAAwB,KAAxB;AACA,wBAAI,CAACzJ,cAAL,GAAsB,KAAtB;AACD;;AACD,sBAAI,CAAC/b,MAAL,GAAcA,MAAd,CAPQ,CAQR;;AACA,kBAAI,QAAI,CAACA,MAAL,IAAe,IAAnB,EAAyB;AAEvB,wBAAI,CAACwO,OAAL,GAAe,QAAI,CAACxO,MAAL,CAAY,WAAZ,EAAyBwO,OAAxC;AACA,wBAAI,CAAC4X,OAAL,GAAe,QAAI,CAACpmB,MAAL,CAAYomB,OAA3B;AACA,wBAAI,CAAC6nB,aAAL,GAAqBjuC,MAArB;AACA,wBAAI,CAACguC,WAAL,GAAmB,IAAnB;AACArtC,0BAAU,CAAC,YAAM;AACf;AACAmE,mBAAC,CAAC,oBAAD,CAAD,CAAwB6E,KAAxB,CAA8B,MAA9B;AACA7E,mBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA,sBAAI4V,KAAK,GAAG7a,WAAW,CAAC,UAACC,GAAD,EAAO;AAC7B,wBAAG;AACC;AACAxG,uBAAC,CAAC,oBAAD,CAAD,CAAwB6E,KAAxB,CAA8B,MAA9B;;AACA,0BAAG,CAAC7E,CAAC,CAAC,oBAAD,CAAD,CAAwBqhB,EAAxB,CAA2B,UAA3B,CAAJ,EAA2C;AACzCzX,qCAAa,CAACwX,KAAD,CAAb;AACD;AAEJ,qBAPD,CAOC,OAAMjhB,CAAN,EAAQ;AACLpF,6BAAO,CAACC,GAAR,CAAYmF,CAAZ;AACH;AACF,mBAXsB,EAWpB,EAXoB,CAAvB;AAYD,iBAhBS,EAgBP,GAhBO,CAAV;AAiBD;AACF,aAlCH;AAqCA,iBAAKoJ,MAAL,CAAY6N,QAAZ,CAAqBzc,SAArB,CACE,UAAAuF,OAAO,EAAI;AACTrE,wBAAU,CAAC,YAAM;AACf,oBAAGqE,OAAH,EAAW;AACT,sBAAImX,cAAc,GAAG,QAAI,CAAC9N,MAAL,CAAY/E,iBAAZ,EAArB;;AACA,sBAAI8S,mBAAmB,GAAG,QAAI,CAAC/N,MAAL,CAAY9E,sBAAZ,EAA1B;;AAEA,sBAAG,CAAC6S,mBAAJ,EAAwB;AACtB,4BAAI,CAACN,QAAL,GAAgB,IAAhB;;AACA,4BAAI,CAACF,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,qBAA/D;;AACA,4BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,qBAAnE;AACD,mBAJD,MAIK;AACH,4BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,sBAA/D;;AACA,4BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,sBAAnE;;AACA,4BAAI,CAACsQ,QAAL,GAAgB,IAAhB;AACD;AAEF,iBAdD,MAcM,IAAG9W,OAAO,IAAE,IAAZ,EAAiB;AACrB;AACD,iBAFK,MAED;AACH,0BAAI,CAAC4W,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,sBAA/D;;AACA,0BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,sBAAnE;;AACA,0BAAI,CAACsQ,QAAL,GAAgB,KAAhB;AACD;AACF,eAtBS,EAsBP,GAtBO,CAAV;AAwBD,aA1BH;AA6BA,iBAAKzN,MAAL,CAAYkO,aAAZ,CAA0B9c,SAA1B,CACE,UAAAuF,OAAO,EAAI;AACTrE,wBAAU,CAAC,YAAM;AACf,oBAAGqE,OAAH,EAAW;AACT,0BAAI,CAAC8W,QAAL,GAAgB,IAAhB;;AACA,0BAAI,CAACF,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,sBAA/D;;AACA,0BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,sBAAnE;AACD,iBAJD,MAIM,IAAGxG,OAAO,IAAE,IAAZ,EAAiB;AACrB;AACD,iBAFK,MAED;AACH,0BAAI,CAAC4W,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,sBAAnE;;AACA,0BAAI,CAACsQ,QAAL,GAAgB,KAAhB;AACD;AACF,eAXS,EAWP,GAXO,CAAV;AAaD,aAfH;AAkBA;;;;;;;;;;;;AAYA,iBAAKrd,cAAL,CAAoBgoB,cAApB,CAAmChnB,SAAnC,CACE,UAAAC,IAAI,EAAI;AACN,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,wBAAI,CAAC6H,iBAAL,GAAyB,IAAzB;AACD,eAFD,MAEO;AACL,wBAAI,CAACA,iBAAL,GAAyB,KAAzB;AACD;AACF,aAPH,EAQE,UAAAhH,KAAK,EAAI,CAER,CAVH;AAaA,iBAAKylB,aAAL,CAAmBxmB,IAAnB,CAAwB,oEAAa,IAAb,CAAxB,EAA4CC,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAComB,UAAL,GAAkBpmB,IAAI,CAACgnB,KAAvB;AACAhnB,kBAAI,CAACqmB,SAAL,GAAiB,QAAI,CAACA,SAAL,GAAiB,YAAlC,GAAiD,QAAI,CAACA,SAAL,GAAiB,kBAAlE;;AACA,sBAAI,CAACY,kBAAL,CAAwB,QAAI,CAACb,UAA7B,EAAyC,QAAI,CAACC,SAA9C;AACD,aALH,EA/GM,CAuHN;;AACAjhB,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,WAA9B,EAzHM,CA0HN;;AACA9E,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B;AAAEE,sBAAQ,EAAE,QAAZ;AAAsBC,sBAAQ,EAAE;AAAhC,aAA5B;AAEAhF,aAAC,CAAC,iBAAD,CAAD,CAAqBkF,GAArB,CAAyB,QAAzB,EAAmC,SAAnC;AACAlF,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AAEA,iBAAKub,aAAL,CAAmBqB,aAAnB,CAAiC,KAAK7P,KAAtC,EAA6C,KAAK2O,SAAlD,EAA6D,KAAKC,SAAlE,EAA6ElmB,SAA7E,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACkmB,UAAL,GAAkB;AAAEC,qBAAK,EAAE,QAAI,CAACH,SAAd;AAAyBC,yBAAS,EAAE,QAAI,CAACA;AAAzC,eAAlB;AACA,sBAAI,CAACjP,YAAL,GAAoBhX,IAApB;;AACA,sBAAI,CAACgX,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnCA,uBAAO,CAAC,UAAD,CAAP,GAAsB,KAAtB;AACD,eAFD,EAHM,CAQN;;;AACA2E,eAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,eAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,aAZH,EAYK,UAAA/P,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAdH;AAgBD;;;4CAIiB;AAAA;;AAChB,iBAAKgH,iBAAL,GAAyB,IAAzB;AACA,gBAAI0oB,MAAM,GAAG,KAAKjwB,MAAL,CAAY2I,SAAZ,CAAsB3G,qBAAnC;AACA,iBAAKvD,cAAL,CAAoByvC,eAApB,CAAoCje,MAApC,EAA4CxwB,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAC6H,iBAAL,GAAyB,KAAzB;;AACA,sBAAI,CAAC9I,cAAL,CAAoBsoB,aAApB,CAAkC,QAAI,CAAC/mB,MAAvC;;AACA,sBAAI,CAACic,gBAAL,GAAwB,IAAxB;AACA,sBAAI,CAACF,cAAL,GAAsB,KAAtB;AACA,sBAAI,CAAC/b,MAAL,GAAc,IAAd;;AACA,sBAAI,CAACvB,cAAL,CAAoBuoB,gBAApB;;AACA,sBAAI,CAACvoB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,uBAAO,EAAE;AAAX,eAAlC;;AACA,sBAAI,CAACtP,cAAL,CAAoBsK,aAApB,CAAkC,IAAlC;;AACA,sBAAI,CAACtK,cAAL,CAAoBuK,cAApB,CAAmC,IAAnC;;AACA,sBAAI,CAACuc,aAAL,CAAmB2B,2BAAnB,CAA+C,IAA/C;;AACA,sBAAI,CAACxoB,MAAL,CAAY2D,OAAZ,CAAoB4tB,MAAM,GAAG,oBAA7B,EAAmD,EAAnD,EAAuD;AACrD3tB,uBAAO,EAAE;AAD4C,eAAvD;AAGD,aAfH,EAeK,UAAA/B,KAAK,EAAI;AACV,sBAAI,CAACgH,iBAAL,GAAyB,KAAzB,CADU,CAEV;AACA;AACA;;AACA,sBAAI,CAAC7I,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,uBAAO,EAAE;AAD6B,eAAxC;AAGD,aAvBH;AAyBD;;;4CAEiB;AAAA;;AAChB,iBAAKiF,iBAAL,GAAyB,IAAzB;AACA,iBAAKvH,MAAL,CAAY,SAAZ,IAAyB,WAAzB;AAGA,gBAAI4K,sBAAsB,GAAG,KAAK5K,MAAL,CAAY4K,sBAAzC;AACA,iBAAK5K,MAAL,CAAY,0BAAZ,IAA0C4K,sBAA1C;AACA,iBAAK5K,MAAL,CAAY,SAAZ,IAAyB,WAAzB;AAEAH,mBAAO,CAACC,GAAR,CAAY,KAAKE,MAAjB,EAAyB4K,sBAAzB;AACA,iBAAKnM,cAAL,CAAoBwe,kBAApB,CAAuCrS,sBAAvC,EAA+DnL,SAA/D,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,kBAAI,CAAC,OAAD,CAAJ,GAAgB,mBAAmB,QAAI,CAACM,MAAL,CAAY,iBAAZ,CAAnC;;AACA,kBAAIN,IAAI,CAAC,SAAD,CAAJ,IAAmB,QAAI,CAACM,MAAL,CAAYwO,OAAnC,EAA4C;AAC1C9O,oBAAI,CAAC,YAAD,CAAJ,GAAqB,KAArB;AACD,eAFD,MAEO;AACLA,oBAAI,CAAC,YAAD,CAAJ,GAAqB,IAArB;AACD;;AACD,sBAAI,CAACjB,cAAL,CAAoBse,oBAApB,CAAyC;AAAE,uBAAO,QAAI,CAAC/c,MAAd;AAAsB,wBAAQN;AAA9B,eAAzC;;AACA,sBAAI,CAAC6H,iBAAL,GAAyB,KAAzB;;AACA,sBAAI,CAAC7I,MAAL,CAAY2D,OAAZ,CAAoB3C,IAAI,CAAC,uBAAD,CAAJ,GAAgC,kBAApD,EAAwE,EAAxE,EAA4E;AAC1E4C,uBAAO,EAAE;AADiE,eAA5E;AAGD,aAdH,EAcK,UAAA/B,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,sBAAI,CAACgH,iBAAL,GAAyB,KAAzB;AACD,aAjBH;AAoBD;;;4CAEiB;AAChB,iBAAKoC,KAAL,CAAWzD,IAAX;AACD;;;8CAEmBohB,I,EAAO;AACzB,mBAAOA,IAAI,CAACa,IAAL,CAAU,UAAAhoB,OAAO;AAAA,qBAAIA,OAAO,CAACsnB,WAAR,KAAwB,QAA5B;AAAA,aAAjB,CAAP;AACD;;;6CAEkBf,K,EAAgBX,S,EAAiB;AAAA;;AAClD,iBAAKhP,KAAL,GAAa,CAAb;AACA,iBAAKqR,YAAL,GAAoB,IAApB,CAFkD,CAGlD;;AACAtjB,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EALkD,CAMlD;;AACA9E,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B;AAAEE,sBAAQ,EAAE,QAAZ;AAAsBC,sBAAQ,EAAE;AAAhC,aAA5B;AACAhF,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AACAnK,mBAAO,CAACC,GAAR,CAAY4mB,KAAZ,EAAmBX,SAAnB;AACA,iBAAKsC,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;;AACA,gBAAI,KAAKgW,UAAL,IAAmB,EAAvB,EAA2B;AACzB,mBAAKP,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACgX,YAAL,GAAoB,EAApB;AACAhX,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD;AAGAQ,0BAAU,CAAC,YAAM;AACf;AACAmE,mBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,mBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,iBAJS,EAIP,GAJO,CAAV;AAMD,eAbH,EAcE,UAAA/P,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAhBH;AAkBD,aAnBD,MAmBO;AACL,mBAAKglB,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACgX,YAAL,GAAoB,EAApB;AACAhX,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD,EAHM,CAMN;;AACA2E,iBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,eAVH,EAWE,UAAA/P,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAbH;AAeD;AACF;;;wCAEamE,G,EAAKgiB,K,EAAOX,S,EAAW;AACnC,gBAAIrhB,GAAG,CAAC2Q,GAAJ,IAAW,SAAX,IAAwB3Q,GAAG,CAAC2Q,GAAJ,IAAW,OAAnC,IAA8C3Q,GAAG,CAAC2Q,GAAJ,IAAW,KAA7D,EAAoE;AAClE,mBAAK2Q,aAAL,CAAmBnhB,IAAnB,CAAwB;AAAE6hB,qBAAK,EAALA,KAAF;AAASX,yBAAS,EAATA;AAAT,eAAxB;AACD;AACF;;;yCAEc;AAAA;;AACb;AACAjhB,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EAHa,CAIb;;AACA9E,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B;AAAEE,sBAAQ,EAAE,QAAZ;AAAsBC,sBAAQ,EAAE;AAAhC,aAA5B;AACAhF,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B;AACA9E,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AAEA,iBAAK+M,KAAL,IAAc,EAAd;;AAEA,gBAAI,KAAK+O,UAAL,IAAmB,EAAvB,EAA2B;AACzB,mBAAKP,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ,EADM,CAEN;;AACAoF,iBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA5Q,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD;AAGD,eATH,EASK,UAAAI,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAXH;AAaD,aAdD,MAcO;AACL,mBAAKglB,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AAENA,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD,EAFM,CAMN;;AACA2E,iBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,eAVH,EAUK,UAAA/P,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAZH;AAcD;AAGF;;;qCAEUmE,G,EAAKC,C,EAAG;AAAA;;AACjB;AACA,gBAAID,GAAG,CAAC+T,QAAR,EAAkB,CAEjB;;AACD,iBAAK/B,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,kBAAIA,OAAO,CAACkV,GAAR,IAAe1Q,CAAC,CAAC0Q,GAArB,EAA0B;AACxBlV,uBAAO,CAACooB,QAAR,GAAmB,CAACpoB,OAAO,CAACooB,QAA5B;AACApoB,uBAAO,CAACooB,QAAR,GAAmB,QAAI,CAACH,YAAL,GAAoBjoB,OAAvC,GAAiD,QAAI,CAACioB,YAAL,GAAoB,IAArE;AACA,uBAAO,IAAP;AACD,eAJD,MAIO;AACLjoB,uBAAO,CAACooB,QAAR,GAAmB,KAAnB;AACA,uBAAO,KAAP;AACD;AACF,aATD;AAWD;;;2CAEgB7jB,G,EAAM4G,G,EAAM;AAAA;;AAG3B,gBAAI,KAAKsa,UAAL,CAAgBC,KAAhB,IAAyBva,GAA7B,EAAkC;AAChC,kBAAI,KAAKqa,SAAL,IAAkB,KAAtB,EAA6B;AAC3B,qBAAKA,SAAL,GAAiB,MAAjB;AACA,qBAAKC,UAAL,CAAgBD,SAAhB,GAA4B,MAA5B;AACD,eAHD,MAGO;AACL,qBAAKA,SAAL,GAAiB,KAAjB;AACA,qBAAKC,UAAL,CAAgBD,SAAhB,GAA4B,KAA5B;AACD;AACF,aARD,MAQO;AACL,mBAAKD,SAAL,GAAiBpa,GAAjB;AACA,mBAAKqa,SAAL,GAAiB,KAAjB;AACA,mBAAKC,UAAL,GAAkB;AAAEC,qBAAK,EAAE,KAAKH,SAAd;AAAyBC,yBAAS,EAAE,KAAKA;AAAzC,eAAlB;AACD,aAf0B,CAiB3B;;;AACA7gB,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EAnB2B,CAoB3B;;AACA9E,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B;AAAEE,sBAAQ,EAAE,QAAZ;AAAsBC,sBAAQ,EAAE;AAAhC,aAA5B;AACAhF,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B;AACA9E,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AACA,iBAAK+M,KAAL,GAAa,CAAb;AACA,iBAAKsR,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;AAEA,iBAAKyV,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAI,CAACgX,YAAL,GAAoB,EAApB,CAFM,CAGN;;AACA5R,eAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,eAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA5Q,kBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,wBAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,eAFD;AAGD,aAVH,EAUK,UAAAI,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAZH;AAeD;;;uCAEY;AAAA;;AACX,iBAAKgH,iBAAL,GAAyB,IAAzB;AACA;;AACA,iBAAKvH,MAAL,CAAY,SAAZ,IAAyB,MAAzB;AAEA,gBAAI4K,sBAAsB,GAAG,KAAK5K,MAAL,CAAY4K,sBAAzC;AACA,iBAAK5K,MAAL,CAAY,SAAZ,IAAyB,MAAzB;AACA,iBAAKA,MAAL,CAAY,0BAAZ,IAA0C4K,sBAA1C,CAPW,CAQX;;AACA,iBAAKnM,cAAL,CAAoB0Z,aAApB,CAAkCvN,sBAAlC,EAA0DnL,SAA1D,CACE,UAAAC,IAAI,EAAI;AACN,kBAAIA,IAAI,CAAC,SAAD,CAAJ,IAAmB,QAAI,CAACM,MAAL,CAAYwO,OAAnC,EAA4C;AAC1C9O,oBAAI,CAAC,YAAD,CAAJ,GAAqB,KAArB;AACD,eAFD,MAEO;AACLA,oBAAI,CAAC,YAAD,CAAJ,GAAqB,IAArB;AACD;;AACD,sBAAI,CAACjB,cAAL,CAAoBse,oBAApB,CAAyC;AAAE,uBAAO,QAAI,CAAC/c,MAAd;AAAsB,wBAAQN;AAA9B,eAAzC;;AACA,sBAAI,CAAC6H,iBAAL,GAAyB,KAAzB;;AACA,sBAAI,CAAC7I,MAAL,CAAY2D,OAAZ,CAAoB3C,IAAI,CAAC,kBAAD,CAAJ,GAA2B,kBAA/C,EAAmE,EAAnE,EAAuE;AACrE4C,uBAAO,EAAE;AAD4D,eAAvE;AAGD,aAZH,EAYK,UAAA/B,KAAK,EAAI;AACV,sBAAI,CAACgH,iBAAL,GAAyB,KAAzB;;AACA,sBAAI,CAAC7I,MAAL,CAAY6B,KAAZ,CAAkB,sBAAlB,EAA0C,OAA1C,EAAmD;AACjD+B,uBAAO,EAAE;AADwC,eAAnD;AAGD,aAjBH;AAqBD;;;wCAEa;AAAA;;AACZ,iBAAKiF,iBAAL,GAAyB,IAAzB;AACA,iBAAKvH,MAAL,CAAY,SAAZ,IAAyB,OAAzB;AAEA,gBAAI4K,sBAAsB,GAAG,KAAK5K,MAAL,CAAY4K,sBAAzC;AACA,iBAAK5K,MAAL,CAAY,0BAAZ,IAA0C4K,sBAA1C;AACA,iBAAK5K,MAAL,CAAY,SAAZ,IAAyB,OAAzB;AACAH,mBAAO,CAACC,GAAR,CAAY,KAAKE,MAAjB;AACA,iBAAKvB,cAAL,CAAoBue,cAApB,CAAmCpS,sBAAnC,EAA2DnL,SAA3D,CACE,UAAAC,IAAI,EAAI;AACN,kBAAIA,IAAI,CAAC,SAAD,CAAJ,IAAmB,QAAI,CAACM,MAAL,CAAYwO,OAAnC,EAA4C;AAC1C9O,oBAAI,CAAC,YAAD,CAAJ,GAAqB,KAArB;AACD,eAFD,MAEO;AACLA,oBAAI,CAAC,YAAD,CAAJ,GAAqB,IAArB;AACD;;AACD,sBAAI,CAACjB,cAAL,CAAoBse,oBAApB,CAAyC;AAAE,uBAAO,QAAI,CAAC/c,MAAd;AAAsB,wBAAQN;AAA9B,eAAzC;;AACA,sBAAI,CAAC6H,iBAAL,GAAyB,KAAzB;;AACA,sBAAI,CAAC7I,MAAL,CAAY2D,OAAZ,CAAoB3C,IAAI,CAAC,mBAAD,CAAJ,GAA4B,kBAAhD,EAAoE,EAApE,EAAwE;AACtE4C,uBAAO,EAAE;AAD6D,eAAxE,EARM,CAWN;;AACD,aAbH,EAaK,UAAA/B,KAAK,EAAI;AACV,sBAAI,CAACgH,iBAAL,GAAyB,KAAzB,CADU,CAEV;;AACA,sBAAI,CAAC7I,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,uBAAO,EAAE;AAD6B,eAAxC;AAGD,aAnBH;AAsBD;;;8CAEmBglB,I,EAAO;AAAA;;AACzB;AACAxiB,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,WAA9B,EAHyB,CAIzB;;AACA9E,aAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B;AAAEE,sBAAQ,EAAE,QAAZ;AAAsBC,sBAAQ,EAAE;AAAhC,aAA5B;AAEAhF,aAAC,CAAC,iBAAD,CAAD,CAAqBkF,GAArB,CAAyB,QAAzB,EAAmC,SAAnC;AACAlF,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AAEA,gBAAIwG,QAAQ,GAAG,KAAKxQ,MAAL,CAAY2I,SAAZ,CAAsB3G,qBAArC;AACAnC,mBAAO,CAACC,GAAR,CAAY,KAAKE,MAAjB;;AAEA,gBAAIsnB,IAAI,IAAIvnB,SAAZ,EAAuB;AAErB,kBAAIiR,EAAE,GAAGsW,IAAI,CAAC5nB,IAAL,CAAU2V,GAAV,IAAiBtV,SAAjB,GAA6BunB,IAAI,CAAC5nB,IAAL,CAAU2V,GAAvC,GAA6C,EAAtD;AACA,kBAAInF,KAAK,GAAGoX,IAAI,CAAC5nB,IAAL,CAAUwQ,KAAV,IAAmBnQ,SAAnB,GAA+BunB,IAAI,CAAC5nB,IAAL,CAAUwQ,KAAzC,GAAiD,EAA7D;AACA,kBAAIhN,MAAJ;AAEAokB,kBAAI,CAAC5nB,IAAL,CAAU8nB,QAAV,CAAmBzmB,OAAnB,CAA2B,UAAAZ,OAAO,EAAI;AACpC,oBAAIA,OAAO,CAACsnB,WAAR,IAAuB,QAA3B,EAAqC;AACnCvkB,wBAAM,GAAG/C,OAAO,CAACunB,QAAR,GAAmB,GAAnB,GAAyBvnB,OAAO,CAACwnB,SAA1C;AACA,yBAAO,IAAP;AACD,iBAHD,MAGO;AACL,yBAAO,KAAP;AACD;AACF,eAPD;AAQAzkB,oBAAM,GAAGA,MAAM,IAAInD,SAAV,GAAsBmD,MAAtB,GAA+B,EAAxC;AACA,kBAAI0kB,IAAI,GAAGN,IAAI,CAAC5nB,IAAL,CAAUkoB,IAAV,IAAkB7nB,SAAlB,GAA8BunB,IAAI,CAAC5nB,IAAL,CAAUkoB,IAAxC,GAA+C,EAA1D;AACA,kBAAIC,GAAG,GAAGP,IAAI,CAAC5nB,IAAL,CAAUmoB,GAAV,IAAiB9nB,SAAjB,GAA6BunB,IAAI,CAAC5nB,IAAL,CAAUmoB,GAAvC,GAA6C,EAAvD;AACA,kBAAIC,WAAW,GAAG,EAAlB;AAEA,kBAAI/lB,UAAU,GAAG;AACfiP,kBAAE,EAAEA,EADW;AAEfd,qBAAK,EAAEA,KAFQ;AAGfhN,sBAAM,EAAEA,MAHO;AAIf0kB,oBAAI,EAAEA,IAJS;AAKfC,mBAAG,EAAEA,GALU;AAMfC,2BAAW,EAAEA;AANE,eAAjB;AAQAjoB,qBAAO,CAACC,GAAR,CAAY0Q,QAAZ,EAAsBzO,UAAtB;AACA,mBAAKtD,cAAL,CAAoBspB,mBAApB,CAAwCvX,QAAxC,EAAkDzO,UAAlD,EAA8DtC,SAA9D,CACE,UAAAC,IAAI,EAAI;AACN;AAEAiB,0BAAU,CAAC,YAAM;AACf;AACAmE,mBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,mBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;;AACA,0BAAI,CAAC5R,MAAL,CAAY2D,OAAZ,CAAoB,sCAApB,EAA4D,EAA5D,EAAgE;AAC9DC,2BAAO,EAAE;AADqD,mBAAhE;;AAGA,0BAAI,CAACijB,aAAL,CAAmByC,YAAnB,CAAgCtoB,IAAhC;;AACAiB,4BAAU,CAAC,YAAM;AACf,4BAAI,CAACgJ,KAAL,CAAWse,IAAX;AACD,mBAFS,EAEP,EAFO,CAAV;AAGD,iBAXS,EAWP,GAXO,CAAV;;AAYA,wBAAI,CAAC1C,aAAL,CAAmB2B,2BAAnB,CAA+CxnB,IAA/C;AACD,eAjBH,EAiBK,UAAAa,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,yBAAO,EAAE;AAD6B,iBAAxC;;AAGA3B,0BAAU,CAAC,YAAM;AACf;AACAmE,mBAAC,CAAC,kBAAD,CAAD,CAAsB6E,KAAtB,CAA4B,MAA5B;AACA7E,mBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,iBAJS,EAIP,GAJO,CAAV;AAMD,eA5BH;AA8BD;AAEF;;;yCAEc;AAAA;;AACb,iBAAK8X,YAAL,GAAoB,IAApB;AACA,iBAAKrR,KAAL,GAAa,CAAb;AACA,iBAAK2O,SAAL,GAAiB,OAAjB;AACA,iBAAKC,SAAL,GAAiB,KAAjB;AACA,iBAAK0C,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;AACA,iBAAK8V,UAAL,GAAkB;AAAEC,mBAAK,EAAE,KAAKH,SAAd;AAAyBC,uBAAS,EAAE,KAAKA;AAAzC,aAAlB;AACA,iBAAKJ,aAAL,CAAmBqB,aAAnB,CAAiC,KAAK7P,KAAtC,EAA6C,KAAK2O,SAAlD,EAA6D,KAAKC,SAAlE,EAA6ElmB,SAA7E,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACgX,YAAL,GAAoBhX,IAApB;;AACA,sBAAI,CAACgX,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnCA,uBAAO,CAAC,UAAD,CAAP,GAAsB,KAAtB;AACD,eAFD;AAKD,aARH,EAQK,UAAAI,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAVH;AAYD;;;;;;;yBA3kBUwtC,qB,EAAqB,wK,EAAA,+K,EAAA,2J,EAAA,wH,EAAA,yH;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC9ClC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAGA;;AAA6B;AAAA,qBAAS,IAAAG,eAAA,EAAT;AAA0B,aAA1B;;AACzB;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AACpC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACA;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AAAmB;;;;AAA+D;;AACtF;;AACA;;AACI;;AACgD;;AAA4B;;AAC5E;;AACI;;AAAmD;AAAA,qBAAS,IAAA16B,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAQ;;AAClF;;AAA8B;AAAA,qBAAS,IAAA0J,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAS;;AAC/D;;AAA8B;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAa;;AACvE;;AAA8B;AAAA,qBAAS,IAAAqL,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAgB;;AAC9E;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AAAwF;AAAA,qBAAc,IAAAliB,YAAA,EAAd;AAA4B,aAA5B;;AAEpF;;AACI;;AACA;;AAAuC;;AAA2B;;AACtE;;AAEA;;AAEI;;AACI;;AAkBJ;;AAIA;;AACI;;AACI;;AAII;;AACI;;AACI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AACpC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAqD;AAAA,qBAAS,IAAAmiB,gBAAA,SAAyB,OAAzB,CAAT;AAA0C,aAA1C;;AACjD;;AAAM;;AAAK;;AACX;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AAAqD;AAAA,qBAAS,IAAAA,gBAAA,SAAyB,SAAzB,CAAT;AAA4C,aAA5C;;AACjD;;AAAM;;AAAO;;AACb;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AAAqD;AAAA,qBAAS,IAAAA,gBAAA,SAAyB,MAAzB,CAAT;AAAyC,aAAzC;;AACjD;;AAAM;;AAAI;;AACV;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAC0D;AAAA,qBAAY,IAAA9W,YAAA,EAAZ;AAA0B,aAA1B;;AAGtD;;AAgDJ;;AACJ;;AACA;;AACJ;;AAGJ;;AACA;;AACI;;AACI;;AAEI;;AASA;;AAgNJ;;AACJ;;AACA;;AACI;;AACI;;AASA;;AAUA;;AASJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAkE;AAAA,qBAAS,IAAA+W,mBAAA,kBAAT;AAA0C,aAA1C;;AAA4C;;AAAI;;AAEtH;;AACJ;;AACJ;;AACJ;;AAEA;;AAEJ;;;;AArd2C;;AAKJ;;AAAA;;AAK8C;;AAAA;;AAS9D;;AAAA;;AAiBS;;AAAA;;AAMO;;AAAA;;AAkBU;;AAAA,wFAAkB,YAAlB,EAAkB,IAAlB;;AAUN;;AAAA;;AA8C4B;;AAAA;;AAMA;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AACE;;AAAA;;AAKX;;AAAA,oGAA8B,wBAA9B,EAA8B,GAA9B,EAA8B,cAA9B,EAA8B,KAA9B;;AAIT;;AAAA;;AAkDiB;;AAAA;;AASpC;;AAAA;;AASA;;AAAA;;AAoNA;;AAAA;;AAUD;;AAAA;;AAUA;;AAAA;;AAc0B;;AAAA;;;;;;;qBD5a7C,CACV,oEAAQ,YAAR,EAAsB,CACpB,kEAAM,IAAN,EAAY,kEAAM;AAChBjM,kBAAM,EAAE;AADQ,WAAN,CAAZ,CADoB,EAKpB,kEAAM,KAAN,EAAa,kEAAM;AACjBA,kBAAM,EAAE;AADS,WAAN,CAAb,CALoB,EAQpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CARoB,EASpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CAToB,CAAtB,CADU;;;;;;wEAcDsxB,qB,EAAqB;gBAlBjC,uDAkBiC;iBAlBvB;AACT3vC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAIToe,sBAAU,EAAE,CACV,oEAAQ,YAAR,EAAsB,CACpB,kEAAM,IAAN,EAAY,kEAAM;AAChBD,oBAAM,EAAE;AADQ,aAAN,CAAZ,CADoB,EAKpB,kEAAM,KAAN,EAAa,kEAAM;AACjBA,oBAAM,EAAE;AADS,aAAN,CAAb,CALoB,EAQpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CARoB,EASpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CAToB,CAAtB,CADU;AAJH,W;AAkBuB,U;;;;;;;;;;;;;AAqCTH,uBAAa,EAAE,CAAF;kBAAnC,uDAAmC;mBAAzB,U;AAAyB,WAAE,C;AAC7B2xB,uBAAa,EAAE,CAAF;kBAArB;AAAqB,WAAE,C;AACyBtkC,eAAK,EAAE,CAAF;kBAArD,uDAAqD;mBAA3C,iB,EAAmB;AAAE,wBAAQ;AAAV,a;AAAwB,WAAE,C;AAC/B0e,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,Y;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AExFtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAmBa8lB,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,+C;AAAA;AAAA;ACjBhC;;AAEA;;AACA;;AAEA;;;;;;;;;wEDYaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT/vC,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEZnB8vC,S;;;;;AAEX,2BACqB7O,MADrB,EAEqB/hB,QAFrB,EAE8C;AAAA;;AAAA;;AAE5C,uCAAM+hB,MAAN,EAAc/hB,QAAd;AAHmB,mBAAA+hB,MAAA,GAAAA,MAAA;AACA,mBAAA/hB,QAAA,GAAAA,QAAA;AAAyB;AAG7C;;;;0CAGC+vB,K,EACAc,K,EAA0B;;;;;;;;;0BAErB,KAAKC,a;;;;;;AACR,6BAAM,KAAK9wB,QAAL,CAAcU,KAAd,CAAoB;AACxBqwB,mCAAW,EAAElwB,MAAM,CAACC,QAAP,CAAgBonB,MAAhB,GAAyB,gBAAzB,GAA2C2I,KAAK,CAACxmB;AADtC,uBAApB,CAAN;;;AAKI2mB,mC,GAAgBjB,KAAK,CAAC7tC,IAAN,CAAW+e,K;;4BAC7B,EAAE+vB,aAAa,YAAYjqC,KAA3B,KAAqCiqC,aAAa,CAAC7rC,MAAd,KAAyB,C;;;;;wDACzD,I;;;4BAEH,CAAC,KAAK8b,KAAN,IAAe,KAAKA,KAAL,CAAW9b,MAAX,KAAsB,C;;;;;wDAChC,K;;;AAGX,0BAAI,CAAC6rC,aAAa,CAACC,KAAd,CAAoB,UAACC,IAAD;AAAA,+BAAU,QAAI,CAACjwB,KAAL,CAAW6D,QAAX,CAAoBosB,IAApB,CAAV;AAAA,uBAApB,CAAL,EAA+D;AAC7D,6BAAKnP,MAAL,CAAYoP,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;wDACMH,aAAa,CAACC,KAAd,CAAoB,UAACC,IAAD;AAAA,+BAAU,QAAI,CAACjwB,KAAL,CAAW6D,QAAX,CAAoBosB,IAApB,CAAV;AAAA,uBAApB,C;;;;;;;;;AACR;;;;QA/B4B,kE;;;yBAAlBN,S,EAAS,8G,EAAA,wH;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACV1yB,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACSoB;;AAWd;;AACc;;;;;;AADd;;AAAA;;;;UDmBOkzB,qB;AAUX,uCAAoBtd,eAApB,EAAoEjjB,MAApE,EAAsGuN,IAAtG,EAAuH;AAAA;;AAAnG,eAAA0V,eAAA,GAAAA,eAAA;AAAgD,eAAAjjB,MAAA,GAAAA,MAAA;AAAkC,eAAAuN,IAAA,GAAAA,IAAA;AATtG,eAAAE,QAAA,GAAW,EAAX;AAS0H;;;;qCAElH;AAAA;;AAEN,iBAAK/V,YAAL,GAAoB,KAAKurB,eAAL,CAAqBxW,cAArB,CAAoCrb,SAApC,CAClB,UAAAO,MAAM,EAAI;AACR,kBAAG,QAAI,CAACA,MAAL,IAAeA,MAAlB,EAAyB;AACvB,wBAAI,CAAC6uC,aAAL,GAAqB,IAArB;AACD;;AAEDhvC,qBAAO,CAACC,GAAR,CAAYE,MAAZ;;AAEA,kBAAGA,MAAM,IAAE,IAAX,EAAgB;AACd,wBAAI,CAACA,MAAL,GAAcA,MAAd;AAEA,wBAAI,CAAC6uC,aAAL,GAAqB,QAAI,CAAC7uC,MAA1B;;AACA,oBAAG,QAAI,CAACA,MAAL,IAAe,IAAlB,EAAuB;AACrBW,4BAAU,CAAC,YAAM;AACf;AACAmE,qBAAC,CAAC,oBAAD,CAAD,CAAwB6E,KAAxB,CAA8B,MAA9B;AACA7E,qBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA,wBAAI4V,KAAK,GAAG7a,WAAW,CAAC,UAACC,GAAD,EAAO;AAC7B,0BAAG;AACC;AACAxG,yBAAC,CAAC,oBAAD,CAAD,CAAwB6E,KAAxB,CAA8B,MAA9B;;AACA,4BAAG,CAAC7E,CAAC,CAAC,oBAAD,CAAD,CAAwBqhB,EAAxB,CAA2B,UAA3B,CAAJ,EAA2C;AACzCzX,uCAAa,CAACwX,KAAD,CAAb;AACD;AAEJ,uBAPD,CAOC,OAAMjhB,CAAN,EAAQ;AACLpF,+BAAO,CAACC,GAAR,CAAYmF,CAAZ;AACH;AACF,qBAXsB,EAWpB,EAXoB,CAAvB;AAYD,mBAhBS,EAgBP,GAhBO,CAAV;AAiBA;;AACV;;AAGS;AACF,eA3BD,MA2BK;AACH,wBAAI,CAAC4pC,aAAL,GAAqB,IAArB;AACD;AAEF,aAvCiB,EAuChB,UAAAtuC,KAAK,EAAI,CAAE,CAvCK,CAApB;AA2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,iBAAK8N,MAAL,CAAYkO,aAAZ,CAA0B9c,SAA1B,CACE,UAAAuF,OAAO,EAAI;AACTrE,wBAAU,CAAC,YAAM;AAChB;AACC,oBAAGqE,OAAH,EAAW;AACT,sBAAImX,cAAc,GAAG,QAAI,CAAC9N,MAAL,CAAY/E,iBAAZ,EAArB;;AACA,sBAAI8S,mBAAmB,GAAG,QAAI,CAAC/N,MAAL,CAAY9E,sBAAZ,EAA1B,CAFS,CAGZ;;;AAEG,sBAAG,CAAC4S,cAAJ,EAAmB;AAEjB,4BAAI,CAACP,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,qBAA/D;;AACA,4BAAI,CAACsQ,QAAL,GAAgB,IAAhB;;AACA,4BAAI,CAACF,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,qBAAnE;AACD,mBALD,MAKK;AAEH,4BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,oBAA/D;;AACA,4BAAI,CAACsQ,QAAL,GAAgB,IAAhB;;AACA,4BAAI,CAACF,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,oBAAnE;AAED;AAGF,iBAnBD,MAmBM,IAAGxG,OAAO,IAAE,IAAZ,EAAiB;AACrB;AACD,iBAFK,MAED;AACH,0BAAI,CAAC4W,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,oBAA/D;;AACA,0BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,oBAAnE;;AACA,0BAAI,CAACsQ,QAAL,GAAgB,KAAhB;AACD;AACF,eA5BS,EA4BP,GA5BO,CAAV;AA8BD,aAhCH;AAmCA,iBAAKzN,MAAL,CAAY6N,QAAZ,CAAqBzc,SAArB,CACE,UAAAuF,OAAO,EAAI;AACTrE,wBAAU,CAAC,YAAM;AACf,oBAAGqE,OAAH,EAAW;AACT,0BAAI,CAAC8W,QAAL,GAAgB,IAAhB;;AACA,0BAAI,CAACF,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,QAArD,EAA+D,oBAA/D;;AACA,0BAAI,CAACoQ,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,oBAAnE;AACD,iBAJD,MAIM,IAAGxG,OAAO,IAAE,IAAZ,EAAiB;AACrB;AACD,iBAFK,MAED;AACH,0BAAI,CAAC4W,IAAL,CAAUS,QAAV,CAAmB,QAAI,CAACC,aAAL,CAAmB9Q,aAAtC,EAAqD,YAArD,EAAmE,oBAAnE;;AACA,0BAAI,CAACsQ,QAAL,GAAgB,KAAhB;AACD;AACF,eAXS,EAWP,GAXO,CAAV;AAaD,aAfH;AAiBD;;;wCAEU;AACT,iBAAK/V,YAAL,CAAkBC,WAAlB;AACD;;;;;;;yBA5JU4oC,qB,EAAqB,+K,EAAA,2J,EAAA,wH;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACnClC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAaJ;;AACA;;AAqBJ;;AACJ;;AACA;;AAEI;;AACI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AACpC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACT;;AAOK;;AACA;;AACI;;AAeJ;;AACJ;;AACJ;;;;AAtF2C;;AAKJ;;AAAA;;AAqCP;;AAAA;;AAkBT;;AAAA;;;;;;qBDxCT,CACV,oEAAQ,YAAR,EAAsB,CACpB,kEAAM,IAAN,EAAY,kEAAM;AAChBnyB,kBAAM,EAAE;AADQ,WAAN,CAAZ,CADoB,EAKpB,kEAAM,KAAN,EAAa,kEAAM;AACjBA,kBAAM,EAAE;AADS,WAAN,CAAb,CALoB,EAQpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CARoB,EASpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CAToB,CAAtB,CADU;;;;;;wEAeDmyB,qB,EAAqB;gBAnBjC,uDAmBiC;iBAnBvB;AACTxwC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAIToe,sBAAU,EAAE,CACV,oEAAQ,YAAR,EAAsB,CACpB,kEAAM,IAAN,EAAY,kEAAM;AAChBD,oBAAM,EAAE;AADQ,aAAN,CAAZ,CADoB,EAKpB,kEAAM,KAAN,EAAa,kEAAM;AACjBA,oBAAM,EAAE;AADS,aAAN,CAAb,CALoB,EAQpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CARoB,EASpB,uEAAW,WAAX,EAAwB,oEAAQ,mBAAR,CAAxB,CAToB,CAAtB,CADU;AAJH,W;AAmBuB,U;;;;;;;;;AAQAH,uBAAa,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,mB;AAAkC,WAAE;;;;;;;;;;;;;;;;;;;AE/CjD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAmBawyB,qB;AAEX,yCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA;AAAA;ACjBlC;;AAAG;;AAAqB;;;;;;;;wEDiBXA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT1wC,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEnBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACmB4C;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAsC,OAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,WAAtC,EAAsC,OAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,WAAtC;;AAKJ;;;;;;;;AAH6C,kGAAuB,UAAvB,EAAuB,iBAAvB;;;;;;;;AAI7C;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAsC,OAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,WAAtC,EAAsC,OAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,WAAtC;;AAKJ;;;;;;;;AAHkD,kGAAuB,UAAvB,EAAuB,iBAAvB;;;;;;;;AAIlD;;AAC0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAD1B;;;;;;;;AAIA;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA,2CAA8D,eAAY,WAAZ,EAAyBoD,KAAzB,GAAiC,UAA/F,GAA4G,eAAY,WAAZ,EAAyBA,KAAzB,GAAiC,UAA7I;AAAuJ,WAAvJ;;AADJ;;AAMA;;AACJ;;AAkCA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACU;;AAA+B;;AACrD;;AACJ;;;;;;AAxCY;;AAAA;;;;;;AA3BhB;;AAEI;;AAOA;;AAOA;;AAIA;;AAgDJ;;;;;;;;;;AA7DS;;AAAA;;AAOA;;AAAA;;AAIyB;;AAAA;;AAEG;;AAAA;;;;;;;;;;;;AArBzC;;AACI;;AAqEJ;;;;;;AArE8B;;AAAA;;;;;;;;;;;;AAJ1C;;AACI;;AACI;;AACI;;AAuEJ;;AACJ;;AACJ;;;;;;;AA3ES;;AAAA;;AAEiD;;AAAA;;;;UDQrEqtC,gB;AAyBX,kCAAoBvwC,WAApB,EAAsDC,cAAtD,EAAqGC,MAArG,EAA4H;AAAA;;AAAxG,eAAAF,WAAA,GAAAA,WAAA;AAAkC,eAAAC,cAAA,GAAAA,cAAA;AAA+C,eAAAC,MAAA,GAAAA,MAAA;AArB7F,eAAAE,OAAA,GAAwB,IAAI,4CAAJ,EAAxB;AACA,eAAAC,aAAA,GAA8B,IAAI,4CAAJ,EAA9B;AAIR,eAAAiqB,aAAA,GAAgB,KAAhB;AAOA,eAAAkmB,aAAA,GAAgB,EAAhB;AACA,eAAAjwC,aAAA,GAAgB,KAAhB;AAEA,eAAAkwC,WAAA,GAAc,IAAI,wDAAJ,CAAc;AAC1BC,wBAAY,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,kBAAL,EAAD,CAAd;AADY,WAAd,CAAd;AAOC;;;;qCAEU;AAAA;;AACT,iBAAKF,WAAL,GAAmB,KAAKzwC,WAAL,CAAiBc,KAAjB,CAAuB;AACxC4vC,0BAAY,EAAE,KAAK1wC,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB;AAD0B,aAAvB,CAAnB;AAIA,iBAAKoM,SAAL;AACA;;AACA,iBAAK/M,OAAL,CAAaY,IAAb,CAAkB,oEAAa,IAAb,CAAlB,EAAsCC,SAAtC,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAACC,cAAL,CAAoBD,IAApB;AACD,aAJH;AAOA,iBAAKb,aAAL,CAAmBW,IAAnB,CAAwB,oEAAa,IAAb,CAAxB,EAA4CC,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAC0vC,sBAAL,CAA4B1vC,IAAI,CAAC,OAAD,CAAhC,EAA2CA,IAAI,CAAC,GAAD,CAA/C;AACD,aAHH;AAKA,iBAAKe,cAAL;AACD;;;2CAGgB;AACfE,sBAAU,CAAC,YAAM;AACf;AACAmE,eAAC,CAAC,mBAAD,CAAD,CAAuBC,OAAvB,CAA+B;AAC7BC,uBAAO,EAAE;AADoB,eAA/B;AAGD,aALS,EAKP,GALO,CAAV;AAMD;;;sCAEWtE,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAM;AACf,kBAAID,OAAO,CAAC2uC,WAAR,CAAoBxuC,YAApB,IAAoC,IAAxC,EAA8C;AAC5C,wBAAI,CAACb,MAAL,GAAcU,OAAO,CAAC2uC,WAAR,CAAoBxuC,YAAlC;AACA,wBAAI,CAACquC,YAAL,GAAoB,QAAI,CAACD,WAAL,CAAiB7uC,GAAjB,CAAqB,cAArB,CAApB;;AACA,wBAAI,CAAC8uC,YAAL,CAAkBpuC,KAAlB;;AACA,wBAAI,CAACkuC,aAAL,GAAqB,EAArB,CAJ4C,CAM5C;;AAEA,wBAAI,CAAChvC,MAAL,CAAYT,KAAZ,CAAkBwB,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,sBAAGA,OAAO,CAAC2D,KAAR,IAAiB,EAApB,EAAuB;AACrB,4BAAI,CAACwrC,eAAL,CAAqBnvC,OAAO,CAAC2D,KAA7B,EAAoC3D,OAAO,CAACgF,QAA5C,EAAsDhF,OAAO,CAACovC,yBAA9D,EAAyFpvC,OAAO,CAACe,QAAjG;;AACA,4BAAI,CAAC8tC,aAAL,CAAmB7tC,IAAnB,CAAwBhB,OAAO,CAACovC,yBAAhC;AACD,mBAHD,MAGK;AACH,4BAAI,CAACD,eAAL,CAAqBnvC,OAAO,CAACc,aAA7B,EAA4Cd,OAAO,CAACgF,QAApD,EAA8DhF,OAAO,CAACovC,yBAAtE,EAAiGpvC,OAAO,CAACe,QAAzG;;AACA,4BAAI,CAAC8tC,aAAL,CAAmB7tC,IAAnB,CAAwBhB,OAAO,CAACc,aAAhC;AACD;AAGF,iBAVD;;AAYA,oBAAI,QAAI,CAACjB,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AACrD,0BAAI,CAACsB,UAAL,GAAkB,IAAlB;AACA,0BAAI,CAACC,MAAL,GAAc,KAAd;AACA,0BAAI,CAACC,OAAL,GAAe,KAAf;AACD,iBAJD,MAIO,IAAI,QAAI,CAACvB,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD,0BAAI,CAACsB,UAAL,GAAkB,KAAlB;AACA,0BAAI,CAACC,MAAL,GAAc,IAAd;AACA,0BAAI,CAACC,OAAL,GAAe,KAAf;AACD,iBAJM,MAIA,IAAI,QAAI,CAACvB,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD,0BAAI,CAACsB,UAAL,GAAkB,KAAlB;AACA,0BAAI,CAACC,MAAL,GAAc,KAAd;AACA,0BAAI,CAACC,OAAL,GAAe,IAAf;AACD;AAEF,eAlCD,MAkCO;AACL,wBAAI,CAACvB,MAAL,GAAc,IAAd;AACD;AACF,aAtCS,EAsCP,EAtCO,CAAV;AAwCD;;;iDAEsB0B,K,EAAOC,K,EAAO;AAAA;;AAEnC,gBAAGD,KAAK,CAACE,IAAN,MAAgB,EAAnB,EAAsB;AACpB,kBAAIC,cAAc,GAAGH,KAArB;AACA,kBAAII,gBAAgB,GAAG,EAAvB;;AACA,kBAAI,KAAK9B,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AACrD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYoB,wBAA/B;AACD,eAFD,MAEO,IAAI,KAAKpB,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYwB,gBAA/B;AACD,eAFM,MAEA,IAAI,KAAKxB,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYyB,iBAA/B;AACD,eAFM,MAED,IAAI,KAAKzB,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AACxD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYgC,qBAA/B;AACD;;AAEDnC,qBAAO,CAACC,GAAR,CAAY,KAAKE,MAAjB;;AAEA,kBAAI,KAAKgvC,aAAL,CAAmBrtC,KAAnB,KAA6B,EAA7B,IAAmC,KAAKqtC,aAAL,CAAmBrtC,KAAnB,KAA6B5B,SAApE,EAA+E;AAC7E,oBAAIgC,UAAU,GAAG;AACf9B,sBAAI,EAAE,WADS;AAEfgC,0BAAQ,EAAE,SAFK;AAGfP,uBAAK,EAAEG;AAHQ,iBAAjB,CAD6E,CAM7E;;AACA,qBAAKpD,cAAL,CAAoB0D,qBAApB,CAA0CL,gBAA1C,EAA4DC,UAA5D,EAAwEtC,SAAxE,CACE,UAAAC,IAAI,EAAI,CACN;AACD,iBAHH,EAGK,UAAAa,KAAK,EAAI;AACXV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,sBAAG,OAAOA,KAAK,CAACA,KAAb,IAAsB,QAAzB,EACC,QAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;;AAGA,sBAAG/B,KAAK,CAAC2nB,UAAN,IAAoB,IAAvB,EAA4B;AAC1B,4BAAI,CAAC8mB,aAAL,CAAmB7tC,IAAnB,CAAwBU,cAAxB;;AACA,4BAAI,CAACnD,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,6BAAO,EAAE;AADgC,qBAA3C;AAGD;AACF,iBAfH;AAiBD,eAxBD,MAwBO;AACL,oBAAIJ,QAAQ,GAAG,KAAK8sC,aAAL,CAAmBrtC,KAAnB,CAAf;AACA,oBAAII,aAAU,GAAG;AACf9B,sBAAI,EAAE,WADS;AAEfgC,0BAAQ,EAAE,SAFK;AAGfP,uBAAK,EAAEG,cAHQ;AAIfhB,8BAAY,EAAEqB;AAJC,iBAAjB;AAMArC,uBAAO,CAACC,GAAR,CAAYiC,aAAZ;AACA,qBAAKtD,cAAL,CAAoB0D,qBAApB,CAA0CL,gBAA1C,EAA4DC,aAA5D,EAAwEtC,SAAxE,CACE,UAAAC,IAAI,EAAI,CACN;AACD,iBAHH,EAGK,UAAAa,KAAK,EAAI;AACVV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;;AAEA,sBAAGA,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACrB,4BAAI,CAAC4sC,aAAL,CAAmB7tC,IAAnB,CAAwBU,cAAxB;;AACA,4BAAI,CAACnD,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,6BAAO,EAAE;AADgC,qBAA3C;AAGD,mBALD,MAKK;AACH,4BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,6BAAO,EAAE;AAD6B,qBAAxC;AAGD;AACF,iBAhBH;AAkBD;AACF;AAGF;;;0CAEektC,O,EAAS7tC,K,EAAO;AAAA;;AAC9B;AACA,gBAAI6tC,OAAO,CAAC9sC,aAAR,CAAsBC,MAAtB,IAAgC,CAApC,EAAuC;AACrC,kBAAId,cAAc,GAAG2tC,OAAO,CAAC9sC,aAAR,CAAsB,CAAtB,EAAyBhB,KAAzB,CAA+BN,wBAApD;AACA,kBAAIU,gBAAgB,GAAG,EAAvB;;AACA,kBAAI,KAAK9B,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AACrD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYoB,wBAA/B;AACD,eAFD,MAEO,IAAI,KAAKpB,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYwB,gBAA/B;AACD,eAFM,MAEA,IAAI,KAAKxB,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYyB,iBAA/B;AACD,eAFM,MAED,IAAI,KAAKzB,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AACxD+B,gCAAgB,GAAG,KAAK9B,MAAL,CAAYgC,qBAA/B;AACD;;AAED,kBAAI,KAAKgtC,aAAL,CAAmBrtC,KAAnB,KAA6B5B,SAAjC,EAA4C;AAC1C,oBAAIgC,UAAU,GAAG;AACf9B,sBAAI,EAAE,WADS;AAEfgC,0BAAQ,EAAE,SAFK;AAGfP,uBAAK,EAAEG;AAHQ,iBAAjB;AAKAhC,uBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,qBAAKtD,cAAL,CAAoB0D,qBAApB,CAA0CL,gBAA1C,EAA4DC,UAA5D,EAAwEtC,SAAxE,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,0BAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,2BAAO,EAAE;AADgC,mBAA3C;;AAGA,0BAAI,CAAC7D,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;AACD,iBAPH,EAOK,UAAAjF,KAAK,EAAI;AACXV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAGA,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACpB,4BAAI,CAAC4sC,aAAL,CAAmBrtC,KAAnB,IAA4BE,cAA5B;;AACA,4BAAI,CAACpD,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,4BAAI,CAAC9G,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,6BAAO,EAAE;AADgC,qBAA3C;AAGD,mBANF,MAMM;AACH,4BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,6BAAO,EAAE;AAD6B,qBAAxC;AAGD;AACF,iBApBH;AAsBD,eA7BD,MA6BO;AACL,oBAAIJ,QAAQ,GAAG,KAAK8sC,aAAL,CAAmBrtC,KAAnB,CAAf;AACA,oBAAII,aAAU,GAAG;AACf9B,sBAAI,EAAE,WADS;AAEfgC,0BAAQ,EAAE,SAFK;AAGfP,uBAAK,EAAEG,cAHQ;AAIfhB,8BAAY,EAAEqB;AAJC,iBAAjB;AAMArC,uBAAO,CAACC,GAAR,CAAYiC,aAAZ;AACA,qBAAKtD,cAAL,CAAoB0D,qBAApB,CAA0CL,gBAA1C,EAA4DC,aAA5D,EAAwEtC,SAAxE,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,0BAAI,CAACjB,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,0BAAI,CAAC9G,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,2BAAO,EAAE;AADgC,mBAA3C;AAGD,iBAPH,EAOK,UAAA/B,KAAK,EAAI;AACVV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAGA,KAAK,CAAC2nB,UAAN,IAAoB,IAAvB,EAA4B;AAC1B,4BAAI,CAAC8mB,aAAL,CAAmBrtC,KAAnB,IAA4BE,cAA5B;;AACA,4BAAI,CAACpD,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,4BAAI,CAAC9G,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,6BAAO,EAAE;AADgC,qBAA3C;AAGD;AACF,iBAhBH;AAkBD;AAEF;AAGF;;;uCAEY;AACX,iBAAKxD,aAAL,GAAqB,EAArB;AACD;;;yCAIcY,I,EAAM;AAAA;;AACnB,iBAAKX,aAAL,GAAqB,IAArB;AACA,iBAAKD,aAAL,GAAqB,EAArB;AACAe,mBAAO,CAACC,GAAR,CAAY,KAAKE,MAAjB;;AACA,gBAAI,KAAKA,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AACrD,kBAAIgC,UAAU,GAAG;AACfS,oBAAI,EAAE9C,IADS;AAEfqD,0BAAU,EAAE,YAFG;AAGf9C,oBAAI,EAAE,EAHS;AAIf+C,mBAAG,EAAE,EAJU;AAKfC,wBAAQ,EAAE,OALK;AAMfC,sBAAM,EAAE,EANO;AAOfC,oBAAI,EAAE,EAPS;AAQff,sBAAM,EAAE,EARO;AASfgB,sBAAM,EAAE,CATO;AAUfC,qBAAK,EAAE;AAVQ,eAAjB,CADqD,CAarD;;AAEA,mBAAK5E,cAAL,CAAoB6E,qBAApB,CAA0CvB,UAA1C,EAAsDtC,SAAtD,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACZ,aAAL,GAAqBY,IAAI,CAAC,MAAD,CAAzB;AACA,wBAAI,CAACX,aAAL,GAAqB,KAArB;AACD,eALH,EAKK,UAAAwB,KAAK,EAAI;AACV;AACA,wBAAI,CAACxB,aAAL,GAAqB,KAArB;AACD,eARH;AAWD,aA1BD,MA0BO,IAAI,KAAKiB,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD,kBAAI8C,KAAK,GAAG,KAAK7C,MAAL,CAAYuD,kBAAxB;AACA,kBAAIxB,aAAU,GAAG;AACfS,oBAAI,EAAE9C,IADS;AAEfqD,0BAAU,EAAE,YAFG;AAGfS,kCAAkB,EAAE,YAHL;AAIfN,sBAAM,EAAE,EAJO;AAKfE,sBAAM,EAAE,CALO;AAMfC,qBAAK,EAAE;AANQ,eAAjB;AASA,mBAAK5E,cAAL,CAAoBgF,WAApB,CAAgC1B,aAAhC,EAA4CtC,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN;AACA,wBAAI,CAACZ,aAAL,GAAqBY,IAAI,CAAC,MAAD,CAAzB;AACA,wBAAI,CAACX,aAAL,GAAqB,KAArB;AACD,eALH,EAKK,UAAAwB,KAAK,EAAI;AACV;AACA,wBAAI,CAACxB,aAAL,GAAqB,KAArB;AACD,eARH;AAUD,aArBM,MAqBA,IAAI,KAAKiB,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AAErD,kBAAIgC,aAAU,GAAG;AACfS,oBAAI,EAAE9C,IADS;AAEfqD,0BAAU,EAAE,YAFG;AAGf9C,oBAAI,EAAE,EAHS;AAIf+C,mBAAG,EAAE,EAJU;AAKfC,wBAAQ,EAAE,OALK;AAMfC,sBAAM,EAAE,EANO;AAOfC,oBAAI,EAAE,EAPS;AAQff,sBAAM,EAAE,EARO;AASfgB,sBAAM,EAAE,CATO;AAUfC,qBAAK,EAAE;AAVQ,eAAjB;AAaA;;;;;;;;;;AAUD,aAzBM,MAyBA,IAAI,KAAKrD,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AAEzD,kBAAIgC,aAAU,GAAG;AACfS,oBAAI,EAAE9C,IADS;AAEfqD,0BAAU,EAAE,YAFG;AAGf9C,oBAAI,EAAE,QAHS;AAIf+C,mBAAG,EAAE,EAJU;AAKfC,wBAAQ,EAAE,OALK;AAMfC,sBAAM,EAAE,EANO;AAOfC,oBAAI,EAAE,EAPS;AAQff,sBAAM,EAAE,EARO;AASfgB,sBAAM,EAAE,CATO;AAUfC,qBAAK,EAAE;AAVQ,eAAjB;AAaA,mBAAK5E,cAAL,CAAoB6E,qBAApB,CAA0CvB,aAA1C,EAAsDtC,SAAtD,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACZ,aAAL,GAAqBY,IAAI,CAAC,MAAD,CAAzB;AACA,wBAAI,CAACX,aAAL,GAAqB,KAArB;AACD,eALH,EAKK,UAAAwB,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,wBAAI,CAACxB,aAAL,GAAqB,KAArB;AACD,eARH;AAUD,aAzBM,MAyBA;AACL,mBAAKA,aAAL,GAAqB,KAArB;AACD,aAvGkB,CAwGnB;;AAED;;;8CAEmB2F,G,EAAKC,C,EAAG;AAC1B,gBAAID,GAAG,CAAC2Q,GAAJ,IAAW,SAAX,IAAwB3Q,GAAG,CAAC2Q,GAAJ,IAAW,OAAnC,IAA8C3Q,GAAG,CAAC2Q,GAAJ,IAAW,KAA7D,EAAoE;AAClE,kBAAI3T,KAAK,GAAGgD,GAAG,CAACE,MAAJ,CAAWlD,KAAvB;AACA,mBAAK7C,aAAL,CAAmBgG,IAAnB,CAAwB;AAAEnD,qBAAK,EAALA,KAAF;AAASiD,iBAAC,EAADA;AAAT,eAAxB;AACD;AACF;;;yCAEcD,G,EAAK;AAClB,gBAAIA,GAAG,CAACE,MAAJ,IAAc7E,SAAlB,EAA6B;AAC3B,mBAAKnB,OAAL,CAAaiG,IAAb,CAAkBH,GAAG,CAACE,MAAJ,CAAWlD,KAA7B;AACD;AAEF;;;sCACQ;AACP,iBAAKutC,WAAL,CAAiBvhC,YAAjB,CAA8BlO,IAA9B,CAAmC,oEAAa,GAAb,CAAnC,EAAsDC,SAAtD,CAAgE,UAAAkO,YAAY,EAAI,CAC9E;AACD,aAFD;AAGD;;;6CAEkB1I,C,EAAIN,C,EAAI4rB,E,EAAKkf,E,EAAK;AACnC,gBAAIxqC,CAAC,IAAIlF,SAAT,EAAoB;AAClB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B4F,sBAAM,EAAE,IADoB;AAE5BC,wBAAQ,EAAE,KAFkB;AAG5BE,8BAAc,EAAE,IAHY;AAI5BqqC,yBAAS,EAAG;AAJgB,eAAvB,CAAP;AAMD,aAPD,MAOO;AACL,qBAAO,KAAKlxC,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B4F,sBAAM,EAAED,CADoB;AAE5BE,wBAAQ,EAAER,CAFkB;AAG5BU,8BAAc,EAAEkrB,EAHY;AAI5Bmf,yBAAS,EAAGD;AAJgB,eAAvB,CAAP;AAMD;AAEF;;;0CAEexqC,C,EAAIN,C,EAAI4rB,E,EAAKkf,E,EAAK;AAChC,iBAAKP,YAAL,GAAoB,KAAKD,WAAL,CAAiB7uC,GAAjB,CAAqB,cAArB,CAApB;;AAEA,gBAAI6E,CAAC,IAAIlF,SAAT,EAAoB;AAClB,mBAAKmvC,YAAL,CAAkB/tC,IAAlB,CAAuB,KAAKguC,kBAAL,EAAvB;AACD,aAFD,MAEO;AACL,mBAAKD,YAAL,CAAkB/tC,IAAlB,CAAuB,KAAKguC,kBAAL,CAAwBlqC,CAAxB,EAA2BN,CAA3B,EAA8B4rB,EAA9B,EAAkCkf,EAAlC,CAAvB;AACD;;AAGD,iBAAKhvC,cAAL;AACD;;;wCAEakB,K,EAAO;AAAA;;AACnB,iBAAKutC,YAAL,GAAoB,KAAKD,WAAL,CAAiB7uC,GAAjB,CAAqB,cAArB,CAApB;AAEA,gBAAIiF,cAAc,GAAG,KAAK6pC,YAAL,CAAkB3sC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,gBAAhC,EAAkDsB,KAAvE,CAHmB,CAInB;;AACA,gBAAG2D,cAAc,IAAI,EAAlB,IAAwBA,cAAc,IAAI,IAA7C,EAAkD;AAChDA,4BAAc,GAAG,KAAK6pC,YAAL,CAAkB3sC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,QAAhC,EAA0CsB,KAA3D,CADgD,CAEhD;AACD;;AAED,gBAAI,KAAK1B,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA5C,EAAuD;AAErD,kBAAI8C,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,kBAAIW,UAAU,GAAG;AACfE,wBAAQ,EAAE,SADK;AAEfP,qBAAK,EAAE2D;AAFQ,eAAjB,CAJqD,CASrD;AACA;;AACA,mBAAK5G,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACE,UAAAC,IAAI,EAAI;AACN;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,yBAAO,EAAE;AADgC,iBAA3C;;AAGA,wBAAI,CAAC7D,cAAL,CAAoB+G,kBAApB,CAAuC,KAAvC;AACD,eARH,EAQK,UAAAjF,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,yBAAO,EAAE;AAD6B,iBAAxC;;AAIA,wBAAI,CAAC7D,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;AACD,eAfH;AAiBD,aA5BD,MA4BO,IAAI,KAAKxF,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAApC,EAA+C;AACpD,kBAAI0F,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AAEA,kBAAIO,aAAU,GAAG;AACfE,wBAAQ,EAAE,SADK;AAEfP,qBAAK,EAAE2D;AAFQ,eAAjB,CAHoD,CAQpD;;AAEA,mBAAK5G,cAAL,CAAoB6G,wBAApB,CAA6CG,MAA7C,EAAqD1D,aAArD,EAAiEtC,SAAjE,CACE,UAAAC,IAAI,EAAI;AACN;AACA,wBAAI,CAACjB,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,wBAAI,CAAC/G,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,yBAAO,EAAE;AADgC,iBAA3C;AAGD,eARH,EAQK,UAAA/B,KAAK,EAAI;AACV;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,yBAAO,EAAE;AAD6B,iBAAxC;AAGD,eAbH;AAgBD,aA1BM,MA0BA,IAAI,KAAKtC,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAArC,EAAgD;AACrD,kBAAI2F,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA1B;AAEA,kBAAIM,aAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAE2D;AAHQ,eAAjB,CAHqD,CASrD;;AAEA,mBAAK5G,cAAL,CAAoB6G,wBAApB,CAA6CI,OAA7C,EAAsD3D,aAAtD,EAAkEtC,SAAlE,CACE,UAAAC,IAAI,EAAI;AACN;AACA,wBAAI,CAACjB,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,wBAAI,CAAC/G,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,yBAAO,EAAE;AADgC,iBAA3C;AAGD,eARH,EAQK,UAAA/B,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAVH;AAYD,aAvBM,MAuBA,IAAI,KAAKP,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAzC,EAAoD;AACzD,kBAAIkwB,MAAM,GAAG,KAAKjwB,MAAL,CAAYgC,qBAAzB;AACA,mBAAKvD,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;AAEA,kBAAIzD,aAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAE2D;AAHQ,eAAjB,CAJyD,CAUzD;;AAEA,mBAAK5G,cAAL,CAAoB6G,wBAApB,CAA6C2qB,MAA7C,EAAqDluB,aAArD,EAAiEtC,SAAjE,CACE,UAAAC,IAAI,EAAI;AACN;AACA,wBAAI,CAACjB,cAAL,CAAoB+G,kBAApB,CAAuC,IAAvC;;AACA,wBAAI,CAAC/G,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,yBAAO,EAAE;AADgC,iBAA3C;AAGD,eARH,EAQK,UAAA/B,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAVH;AAYD;;AACD,iBAAKyuC,aAAL,CAAmBrpC,MAAnB,CAA0BhE,KAA1B,EAAiC,CAAjC;AACA,iBAAKutC,YAAL,CAAkBtpC,QAAlB,CAA2BjE,KAA3B;AAED;;;;;;;yBAvhBUotC,gB,EAAgB,2H,EAAA,+K,EAAA,yH;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,g2E;AAAA;AAAA;ACtB7B;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AAAG;AAAA,qBAAS,IAAAO,eAAA,EAAT;AAA0B,aAA1B;;AAA4C;;AAA4B;;AACjC;;AAAO;;AACjD;;AAEI;;AAEI;;AA6EJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA7FM;;AAW2C;;AAAA;;;;;;;;;wEDWpCP,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACT3wC,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;AAElB+wC,qBAAW,EAAE,CAAF;kBAAnB;AAAmB,WAAE;;;;;;;;;;;;;;;;;;;AE1BxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAmBaM,oB;AAEX,wCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,+F;AAAA;AAAA;ACjBjC;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;;;;wEDWaA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTvxC,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEnBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACkC4B;;;;;;AAAkD,2FAAgB,SAAhB,EAAgB,oBAAhB;;;;;;AAGlD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACN;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAI;;AACvE;;AACI;;AAAuC;;AAAU;;AACjD;;AACI;;AAAI;;AAAY;;AAChB;;AAAG;;AAC8E;;AACrF;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AAC9E;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAI;;AAC5E;;AACI;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4E;;AAA+B;;AACvH;;AACJ;;;;;;;;AA9ByE;;AAEtC;;AAAA;;AAE0E;;AAAA;;AAO5D;;AAAA,wFAAoB,UAApB,EAAoB,KAApB;;;;;;;;;;;;AAlBrD;;AACI;;AACI;;AACI;;AAAQ;;AAAY;;AACpB;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AA+BJ;;;;;;AArC0B;;AAAA;;AAMa;;AAAA;;;;;;AAmDvB;;;;;;AAAkD,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAGlD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACD;;AACjD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAA+B;;AAC1G;;AACA;;AACI;;AAAsD;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAClD;;AACJ;;AACA;;AACI;;AAAuC;;AAAuB;;AAC9D;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACI;;AACJ;;AACJ;;AAEA;;AACI;;AAAwD;;AAAW;;AACnE;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAtCyE;;AAEtC;;AAAA;;AAE0E;;AAAA;;;;;;AAPrH;;AAEI;;AACI;;AAuCJ;;AACJ;;;;AAxC2C;;AAAA;;;;;;AA6D/B;;;;;;AAAkD,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAGlD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACD;;AACjD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyE;;AAA+B;;AACpH;;AACJ;;;;;;;;AAfyE;;AAEtC;;AAAA;;AAE0E;;AAAA;;;;;;AAPrH;;AAEI;;AACI;;AAgBJ;;AACJ;;;;AAjB2C;;AAAA;;;;;;;;AA7InE;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACI;;AACJ;;AACJ;;AAEA;;AACI;;AAAwD;;AAAW;;AACnE;;AACI;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAqB;;AAAI;;AAClD;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAA4B;;AAAiC;;AAAO;;AAE1H;;AACI;;AAwCJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAM;;AAAI;;AACnC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAA4B;;AAAiC;;AAAO;;AAE7G;;AACI;;AACI;;AA4CJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AAGC;;AACG;;AACI;;AACI;;AAAsB;;AAAG;;AAAiB;;AAAI;;AAC9C;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAA4B;;AAAiC;;AAAO;;AAEvH;;AACI;;AACI;;AAqBJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AA8DJ;;;;;;AAlOM;;AAwBgH;;AAAA;;AAsDtE;;AAAA;;AA4DA;;AAAA;;;;UDrHnCsxC,2B;AAuBX,6CAAoBnxC,cAApB,EAAmED,WAAnE,EAA6F;AAAA;;AAAzE,eAAAC,cAAA,GAAAA,cAAA;AAA+C,eAAAD,WAAA,GAAAA,WAAA;AArBnE,eAAAqqB,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAlhB,OAAA,GAAU,CAAV;AAKA,eAAAioC,kBAAA,GAAqB,IAAI,wDAAJ,CAAc;AACjC/rC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAD0B;AAEjCgsC,sBAAU,EAAG,IAAI,0DAAJ,CAAgB,EAAhB,CAFoB;AAGjCC,+BAAmB,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,yBAAL,EAAD,CAAd,CAHY;AAIjCC,kBAAM,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,YAAL,EAAD,CAAd,CAJyB;AAKjCC,4BAAgB,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,sBAAL,EAAD,CAAd;AALe,WAAd,CAArB;AAaC;;;;qCAEU;AAET,iBAAKP,kBAAL,GAA0B,KAAKrxC,WAAL,CAAiBc,KAAjB,CAAuB;AAC/CwE,mBAAK,EAAE,EADwC;AAE/CgsC,wBAAU,EAAG,EAFkC;AAG/CC,iCAAmB,EAAE,KAAKvxC,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKywC,yBAAL,EAAD,CAAvB,CAH0B;AAI/CC,oBAAM,EAAE,KAAKzxC,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAK2wC,YAAL,EAAD,CAAvB,CAJuC;AAK/CC,8BAAgB,EAAE,KAAK3xC,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAK6wC,sBAAL,EAAD,CAAvB;AAL6B,aAAvB,CAA1B;AAOA,iBAAKzkC,SAAL;AACA,iBAAK2d,UAAL;AACA,iBAAK7oB,cAAL;AACD;;;sCAEWC,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAK;AACd,kBAAG,QAAI,CAACX,MAAL,IAAeU,OAAO,CAAC2lB,kBAAR,CAA2BxlB,YAA7C,EAA0D;AACxD,oBAAG,QAAI,CAACsvC,gBAAL,IAAyB,IAA5B,EAAiC;AAC/B,0BAAI,CAACA,gBAAL,CAAsBrvC,KAAtB;;AACA,0BAAI,CAACivC,mBAAL,CAAyBjvC,KAAzB;;AACA,0BAAI,CAACmvC,MAAL,CAAYnvC,KAAZ;AACD;AACF;;AACD,sBAAI,CAACwoB,UAAL;;AACA,sBAAI,CAACtpB,MAAL,GAAcU,OAAO,CAAC2lB,kBAAR,CAA2BxlB,YAAzC;;AACA,kBAAG,QAAI,CAACb,MAAL,IAAe,IAAlB,EAAuB;AACrB,wBAAI,CAAC6vC,kBAAL,CAAwBzvC,GAAxB,CAA4B,OAA5B,EAAqCC,QAArC,CAA8C,QAAI,CAACL,MAAL,CAAY8D,KAA1D,EAAiE;AAACxD,2BAAS,EAAC;AAAX,iBAAjE;AACD;;AACD,sBAAI,CAACG,cAAL;AACH,aAdW,EAcT,EAdS,CAAV;AAeD;;;2CAEa;AACZE,sBAAU,CAAC,YAAM;AACf;AACAmE,eAAC,CAAC,mBAAD,CAAD,CAAuBC,OAAvB,CAA+B;AAC7BC,uBAAO,EAAG;AADmB,eAA/B;AAGD,aALS,EAKP,GALO,CAAV;AAMD;;;uCAEoB;AACnB,iBAAK8jB,aAAL,GAAqB,IAArB;AACA;;;;AAID;;;sCAEQ;AACP,iBAAK+mB,kBAAL,CAAwBniC,YAAxB,CAAqClO,IAArC,CAA0C,oEAAa,GAAb,CAA1C,EAA6DC,SAA7D,CAAuE,UAAAkO,YAAY,EAAI,CACrF;AACD,aAFD;AAGD;;;yCAEW;AACV,mBAAO,KAAKnP,WAAL,CAAiBc,KAAjB,CAAuB;AAC5BsF,oBAAM,EAAE;AADoB,aAAvB,CAAP;AAGD;;;sCAEW;AACV,iBAAKqrC,MAAL,GAAc,KAAKJ,kBAAL,CAAwBzvC,GAAxB,CAA4B,QAA5B,CAAd;AACA,iBAAK6vC,MAAL,CAAY9uC,IAAZ,CAAiB,KAAK+uC,YAAL,EAAjB;AACA,iBAAKzvC,cAAL;AACD;;;uCAEYkB,K,EAAO;AAClB,iBAAKsuC,MAAL,GAAc,KAAKJ,kBAAL,CAAwBzvC,GAAxB,CAA4B,QAA5B,CAAd;AACA,iBAAK6vC,MAAL,CAAYrqC,QAAZ,CAAqBjE,KAArB;AACD;;;mDAEwB;AACvB,iBAAKouC,mBAAL,GAA2B,KAAKF,kBAAL,CAAwBzvC,GAAxB,CAA4B,qBAA5B,CAA3B;AACA,iBAAK2vC,mBAAL,CAAyB5uC,IAAzB,CAA8B,KAAK6uC,yBAAL,EAA9B;AACA,iBAAKvvC,cAAL;AACD;;;oDAEyBkB,K,EAAO;AAC/B,iBAAKouC,mBAAL,GAA2B,KAAKF,kBAAL,CAAwBzvC,GAAxB,CAA4B,qBAA5B,CAA3B;AACA,iBAAK2vC,mBAAL,CAAyBnqC,QAAzB,CAAkCjE,KAAlC;AACD;;;gDAEqB;AACpB,iBAAKwuC,gBAAL,GAAwB,KAAKN,kBAAL,CAAwBzvC,GAAxB,CAA4B,kBAA5B,CAAxB;AACA,iBAAK+vC,gBAAL,CAAsBhvC,IAAtB,CAA2B,KAAKivC,sBAAL,EAA3B;AACA,iBAAK3vC,cAAL;AACD;;;iDAEsBkB,K,EAAO;AAC5B,iBAAKwuC,gBAAL,GAAwB,KAAKN,kBAAL,CAAwBzvC,GAAxB,CAA4B,kBAA5B,CAAxB;AACA,iBAAK+vC,gBAAL,CAAsBvqC,QAAtB,CAA+BjE,KAA/B;AACD;;;sDAGwB;AACvB,mBAAO,KAAKnD,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B2C,sBAAQ,EAAE,EADkB;AAE5BiD,oBAAM,EAAE;AAFoB,aAAvB,CAAP;AAID;;;mDAEqB;AACpB,mBAAO,KAAK1G,WAAL,CAAiBc,KAAjB,CAAuB;AAC5BsF,oBAAM,EAAE;AADoB,aAAvB,CAAP;AAGD;;;;;;;yBApIUgrC,2B,EAA2B,+K,EAAA,2H;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,67G;AAAA;AAAA;ACrBxC;;;;AAAwC;;;;;;;;;wEDqB3BA,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTxxC,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK6B,U;;;;;;;AAS7B+nB,4BAAkB;kBAA1B;AAA0B;;;;;;;;;;;;;;;;;;;AEhC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACmB4B;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoG;;AAEjD;;AAChB;;AACxC;;;;;;AACA;;AACI;;AACJ;;;;;;;;AAdR;;AACI;;AACI;;AAAwD;;AAAgB;;AAC5E;;AACA;;AACI;;AACmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwF;;AAC3G;;AAKA;;AAIJ;;AACJ;;;;;;;;;AAfgE;;AAAA;;AAIM;;AAAA;;AACM;;AAAA;;AAKrC;;AAAA;;;;;;AAa3B;;AAAqI;;AAAM;;;;;;;;;;AAAjG,8HAA8C,UAA9C,EAA8C,sCAA9C;;AAA2F;;AAAA;;;;;;AAEzI;;AACI;;AACJ;;;;;;;;AARJ;;AACI;;AAC2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAiB;;AAAiB;;AAClC;;AACJ;;AACA;;AAGJ;;;;;;;;;;;AATsB;;AAIS;;AAAA;;AAEI;;AAAA;;;;;;AAY/B;;AACI;;AACJ;;;;;;;;AAVJ;;AACI;;AACmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AAC5E;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAEZ;;AAChB;;AACxC;;AACA;;AAGJ;;;;;;;;;AAXkC;;AAQC;;AAAA;;;;;;AApBvC;;AAEI;;AAUA;;AAYJ;;;;;;;;AAtB+C;;AAAA;;AAUY;;AAAA;;;;;;AAwBnE;;;;;;AAAuL;;;;;;;;AACvL;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAA2B;;;;;;;;AACzK;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAuE;;AAA4B;;;;;;AAPnM;;AACI;;AACI;;AAA0B;;AAAS;;AACvC;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;;;;;AAJgB;;AAAA;;AACqD;;AAAA;;AACA;;AAAA;;;;;;AAoE7C;;;;;;AAA4D,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAI5D;;;;;;;;AALJ;;AACI;;AAIA;;AAEA;;AACI;;AACI;AAAA;AAAA;AAAA;;AADJ;;AAIJ;;AACA;;AACI;;AAA8C;;AACF;;AAChD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAC3C;;AACxC;;AACJ;;;;;;;;AArB0E;;AAGvC;;AAAA;;AAGD;;AAAA;;;;;;;;;;;;AARtC;;AAEI;;AAsBJ;;;;AAtBwC;;AAAA;;;;;;;;;;;;;;;;UD/G/CgqB,sB;AAiCX,wCAAoB5xC,cAApB,EAAmED,WAAnE,EAAqGE,MAArG,EAA4H;AAAA;;AAAxG,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AA7B7F,eAAA4xC,WAAA,GAA4B,IAAI,4CAAJ,EAA5B;AACA,eAAAC,cAAA,GAA+B,IAAI,4CAAJ,EAA/B;AAER,eAAA1nB,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAlhB,OAAA,GAAU,CAAV;AAEA,eAAA4oC,aAAA,GAAgB,KAAhB;AAEA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,gBAAA,GAAmB,EAAnB;AAEA,eAAAC,SAAA,GAAY,EAAZ;AAEA,eAAAC,SAAA,GAAY,IAAI,wDAAJ,CAAc;AACxBd,sBAAU,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKe,gBAAL,EAAD,CAAd,CADY;AAExBx6B,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAFY;AAGxBy6B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWr+B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAHiB;AAIxB2wB,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWt+B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAJiB;AAKxB4wB,qBAAS,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,eAAL,EAAD,CAAd,CALa;AAMxBC,2BAAe,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,oBAAL,EAAD,CAAd,CANO;AAOxBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW3+B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAPc,WAAd,CAAZ;AAa+H;;;;qCAEpH;AAAA;;AACTzf,sBAAU,CAAC,YAAM;AACf;AACAmE,eAAC,CAAC,kBAAD,CAAD,CAAsBC,OAAtB,CAA8B;AAC5BC,uBAAO,EAAE;AADmB,eAA9B;AAGD,aALS,EAKP,IALO,CAAV;AAMA,iBAAKskB,UAAL;AAEA,iBAAKgnB,WAAL,CAAiB9wC,IAAjB,CAAsB,oEAAa,IAAb,CAAtB,EAA0CC,SAA1C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAC2xC,kBAAL,CAAwB3xC,IAAxB;AACD,aAHH;AAMA,iBAAK6wC,cAAL,CAAoB/wC,IAApB,CAAyB,oEAAa,IAAb,CAAzB,EAA6CC,SAA7C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAC4xC,0BAAL,CAAgC5xC,IAAI,CAAC,KAAD,CAApC,EAA6CA,IAAI,CAAC,GAAD,CAAjD;AACD,aAHH;AAMA,iBAAKkxC,SAAL,GAAiB,KAAKpyC,WAAL,CAAiBc,KAAjB,CAAuB;AACtCwwC,wBAAU,EAAE,KAAKtxC,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB,CAD0B;AAEtC8W,wBAAU,EAAE,KAF0B;AAGtCy6B,mBAAK,EAAE,EAH+B;AAItCC,mBAAK,EAAE,EAJ+B;AAKtCC,uBAAS,EAAE,KAAKxyC,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAK0xC,eAAL,EAAD,CAAvB,CAL2B;AAMtCC,6BAAe,EAAE,KAAK1yC,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB,CANqB;AAOtC6xC,sBAAQ,EAAE;AAP4B,aAAvB,CAAjB;AAUA,iBAAKzlC,SAAL;AAED;;;uCAEoB;AACnB;;;;;AAKD;;;sCAEWjL,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAM;AACf,kBAAI,QAAI,CAACX,MAAL,IAAeU,OAAO,CAAC2kB,SAAR,CAAkBxkB,YAArC,EAAmD;AACjD,wBAAI,CAAC0wC,mBAAL,GAA2B,QAAI,CAACX,SAAL,CAAexwC,GAAf,CAAmB,iBAAnB,CAA3B;;AACA,wBAAI,CAACmxC,mBAAL,CAAyBzwC,KAAzB;;AAEA,wBAAI,CAAC0wC,eAAL,GAAuB,QAAI,CAACZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAvB;;AACA,wBAAI,CAACoxC,eAAL,CAAqB1wC,KAArB;;AAEA,wBAAI,CAAC6vC,SAAL,GAAiB,EAAjB;AACD;;AACD,sBAAI,CAAC3wC,MAAL,GAAcU,OAAO,CAAC2kB,SAAR,CAAkBxkB,YAAhC;;AACA,kBAAI,QAAI,CAACb,MAAL,IAAe,IAAnB,EAAyB;AAEvB,wBAAI,CAACywC,cAAL,GAAsB,EAAtB;AACA,wBAAI,CAACC,gBAAL,GAAwB,EAAxB;;AAEA,qBAAK,IAAI/rC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,QAAI,CAAC3E,MAAL,CAAY8vC,UAAZ,CAAuBntC,MAA3C,EAAmDgC,CAAC,EAApD,EAAwD;AACtD,sBAAM8sC,GAAG,GAAG,QAAI,CAACzxC,MAAL,CAAY8vC,UAAZ,CAAuBnrC,CAAvB,EAA0B,YAA1B,CAAZ;AACA,sBAAM+sC,IAAI,GAAG,QAAI,CAAC1xC,MAAL,CAAY8vC,UAAZ,CAAuBnrC,CAAvB,EAA0B,eAA1B,CAAb;;AACA,0BAAI,CAAC8rC,cAAL,CAAoBtvC,IAApB,CAAyBswC,GAAzB;;AAEA,sBAAIA,GAAG,IAAI,YAAP,IAAuBC,IAAI,IAAI,EAAnC,EAAuC;AACrC,4BAAI,CAAChB,gBAAL,CAAsBvvC,IAAtB,CAA2BswC,GAA3B;;AACA,4BAAI,CAACE,aAAL,CAAmBF,GAAnB,EAAwBC,IAAxB;;AAEA,4BAAI,CAACf,SAAL,CAAexvC,IAAf,CAAoB;AAAE8vB,2BAAK,EAAEwgB,GAAT;AAAc/vC,2BAAK,EAAEgwC;AAArB,qBAApB;AACD;;AAED,sBAAIA,IAAI,IAAI,EAAZ,EAAgB;AACd,4BAAI,CAAChB,gBAAL,CAAsBvvC,IAAtB,CAA2BswC,GAA3B;;AACA,4BAAI,CAACE,aAAL,CAAmBF,GAAnB,EAAwBC,IAAxB;;AAEA,4BAAI,CAACf,SAAL,CAAexvC,IAAf,CAAoB;AAAE8vB,2BAAK,EAAEwgB,GAAT;AAAc/vC,2BAAK,EAAEgwC;AAArB,qBAApB;AACD;AACF,iBAvBsB,CAwBvB;;;AACA,wBAAI,CAACd,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,EAAiCC,QAAjC,CAA0C,QAAI,CAACL,MAAL,CAAYqW,UAAtD,EAAkE;AAAE/V,2BAAS,EAAE;AAAb,iBAAlE;;AACA,wBAAI,CAACswC,SAAL,CAAexwC,GAAf,CAAmB,OAAnB,EAA4BC,QAA5B,CAAqC,QAAI,CAACL,MAAL,CAAY+wC,KAAjD,EAAwD;AAAEzwC,2BAAS,EAAE;AAAb,iBAAxD;;AACA,wBAAI,CAACswC,SAAL,CAAexwC,GAAf,CAAmB,OAAnB,EAA4BC,QAA5B,CAAqC,QAAI,CAACL,MAAL,CAAY8wC,KAAjD,EAAwD;AAAExwC,2BAAS,EAAE;AAAb,iBAAxD;;AACA,wBAAI,CAACsxC,iBAAL,CAAuB,QAAI,CAAC5xC,MAAL,CAAY6xC,OAAnC;;AACA,wBAAI,CAACjB,SAAL,CAAexwC,GAAf,CAAmB,UAAnB,EAA+BC,QAA/B,CAAwC,QAAI,CAACL,MAAL,CAAY0I,KAApD,EAA2D;AAAEpI,2BAAS,EAAE;AAAb,iBAA3D;AACD;AACF,aA1CS,EA0CP,EA1CO,CAAV;AA2CD;;;sCAGQ;AAAA;;AACP,iBAAKswC,SAAL,CAAexwC,GAAf,CAAmB,OAAnB,EAA4BsN,YAA5B,CAAyClO,IAAzC,CAA8C,oEAAa,IAAb,CAA9C,EAAkEC,SAAlE,CAA4E,UAAAqyC,MAAM,EAAI;AACpF,sBAAI,CAACrzC,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI/pB,OAAO,GAAG,QAAI,CAAC1F,MAAL,CAAYyB,iBAA1B;AACA,kBAAIM,UAAU,GAAG;AACfE,wBAAQ,EAAE,OADK;AAEfP,qBAAK,EAAEowC;AAFQ,eAAjB;;AAIA,sBAAI,CAACrzC,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDtC,SAArD,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;AACD,eANH,EAMK,UAAAO,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,qBAApB,EAA2C,EAA3C,EAA+C;AAC7CC,2BAAO,EAAE;AADoC,mBAA/C;AAGD;AACF,eApBH;AAsBD,aA7BD;AA+BA,iBAAKsuC,SAAL,CAAepsB,QAAf,CAAwB,YAAxB,EAAsC9W,YAAtC,CAAmDlO,IAAnD,CAAwD,iEAAUO,SAAV,CAAxD,EAA8E,oEAAa,IAAb,CAA9E,EAAkG,iEAAlG,EAA8GN,SAA9G,CAAwH,UAAA8vB,aAAa,EAAI;AACvI1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;AACA1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;;AACA,sBAAI,CAAC9wB,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI1tB,UAAU,GAAG,EAAjB;AACA,kBAAI2D,OAAO,GAAG,QAAI,CAAC1F,MAAL,CAAYyB,iBAA1B;AACA,kBAAIS,QAAQ,GAAGqtB,aAAa,CAAC,CAAD,CAA5B;AACA,kBAAIO,QAAQ,GAAGP,aAAa,CAAC,CAAD,CAA5B;;AAEA,kBAAIrtB,QAAQ,IAAInC,SAAhB,EAA2B;AACzBgC,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB;AAHI,iBAAb;AAKD,eAND,MAMO,IAAI5tB,QAAQ,IAAInC,SAAZ,IAAyB,QAAI,CAACC,MAAL,CAAYqW,UAAZ,IAA0B,CAAC,CAAxD,EAA2D;AAChEtU,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB,QAHI;AAIXjvB,8BAAY,EAAE,CAAC;AAJJ,iBAAb;AAMD,eAPM,MAOA;AACLkB,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB,QAHI;AAIXjvB,8BAAY,EAAEqB;AAJH,iBAAb;AAMD;;AAEDrC,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;;AACA,sBAAI,CAACtD,cAAL,CAAoB0D,qBAApB,CAA0CuD,OAA1C,EAAmD3D,UAAnD,EAA+DtC,SAA/D,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD,eANH,EAOE,UAAAlvB,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AAEA,wBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAAEC,2BAAO,EAAE;AAAX,mBAA9C;;AACA,0BAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,8BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,mBAAnC;;AACA,0BAAI,CAACouC,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,EAAiCC,QAAjC,CAA0CyvB,QAA1C,EAAoD;AAAExvB,6BAAS,EAAE;AAAb,mBAApD;;AACA,0BAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyByZ,QAAzB;AACD,iBALD,MAKO;AACL,0BAAI,CAACpxB,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAE+B,2BAAO,EAAE;AAAX,mBAAxC;AAED;AACF,eArBH;AAuBD,aAvDD;AAyDA,iBAAKsuC,SAAL,CAAexwC,GAAf,CAAmB,OAAnB,EAA4BsN,YAA5B,CAAyClO,IAAzC,CAA8C,oEAAa,IAAb,CAA9C,EAAkEC,SAAlE,CAA4E,UAAAsyC,QAAQ,EAAI;AACtF,kBAAIA,QAAQ,CAACnwC,IAAT,MAAmB,EAAvB,EAA2B;AACzB,wBAAI,CAACnD,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,oBAAI/pB,OAAO,GAAG,QAAI,CAAC1F,MAAL,CAAYyB,iBAA1B;AACA,oBAAIM,UAAU,GAAG;AACfE,0BAAQ,EAAE,SADK;AAEfP,uBAAK,EAAEqwC;AAFQ,iBAAjB;;AAIA,wBAAI,CAACtzC,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDtC,SAArD,CACE,UAAAC,IAAI,EAAI;AACNG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,0BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,0BAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,0BAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,qBAApB,EAA2C,EAA3C,EAA+C;AAC7CC,2BAAO,EAAE;AADoC,mBAA/C;AAID,iBAVH,EAUK,UAAA/B,KAAK,EAAI;AACVV,yBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AACA,0BAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,8BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,mBAAnC;;AACA,0BAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,OAAQlvB,KAAK,CAACA,KAAd,IAAwB,QAA5B,EAAsC;AACpC,4BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,6BAAO,EAAE;AAD6B,qBAAxC;AAGD;AAEF,iBArBH;AAuBD;AAEF,aAjCD;AAmCA,iBAAKsuC,SAAL,CAAexwC,GAAf,CAAmB,WAAnB,EAAgCsN,YAAhC,CAA6ClO,IAA7C,CAAkD,oEAAa,IAAb,CAAlD,EAAsEC,SAAtE,CAAgF,UAAAqyC,MAAM,EAAI;AACxF,sBAAI,CAACrzC,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI/pB,OAAO,GAAG,QAAI,CAAC1F,MAAL,CAAYyB,iBAA1B;AACA,kBAAIM,UAAU,GAAG;AACfE,wBAAQ,EAAE,WADK;AAEfP,qBAAK,EAAEowC,MAAM,CAAC,CAAD,CAAN,CAAU,QAAV;AAFQ,eAAjB,CAHwF,CAOxF;;AACAjyC,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;;AACA,sBAAI,CAACtD,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDtC,SAArD,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;AACD,eANH,EAMK,UAAAO,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,yBAApB,EAA+C,EAA/C,EAAmD;AACjDC,2BAAO,EAAE;AADwC,mBAAnD;AAGD;AACF,eApBH;AAsBD,aA/BD;AAgCD;;;2CAEgB;AAAA;;AACf,iBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAIvtB,QAAQ,GAAG,KAAK0uC,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,EAAiCsB,KAAhD;AACA,gBAAIgE,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA1B;AACA,gBAAIM,UAAU,GAAG;AACfE,sBAAQ,EAAE,YADK;AAEfP,mBAAK,EAAE;AAFQ,aAAjB;AAIA7B,mBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,iBAAKtD,cAAL,CAAoB6G,wBAApB,CAA6CI,OAA7C,EAAsD3D,UAAtD,EAAkEtC,SAAlE,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA;;;;AAGA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,sBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAACmhB,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,EAAiCC,QAAjC,CAA0C,CAAC,CAA3C,EAA8C;AAAEC,yBAAS,EAAE;AAAb,eAA9C;;AACA,sBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;;AAEA,sBAAI,CAAC3X,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,SAA1C,EAAqD;AAACC,uBAAO,EAAE;AAAV,eAArD;AACD,aAZH,EAaE,UAAA/B,KAAK,EAAI;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA;;;;;AAIA,sBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,kBAAIjC,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,wBAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAAEC,yBAAO,EAAE;AAAX,iBAA9C;;AACA,wBAAI,CAACsuC,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,EAAiCC,QAAjC,CAA0C,CAAC,CAA3C,EAA8C;AAAEC,2BAAS,EAAE;AAAb,iBAA9C;;AACA,wBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;AACD,eAJD,MAIO;AACL,wBAAI,CAAC3X,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAE+B,yBAAO,EAAE;AAAX,iBAAxC;AAED;AACF,aA7BH;AA+BD;;;kDAEuBoC,G,EAAKC,C,EAAG;AAAA;;AAE9BhE,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC6wC,eAAL,GAAuB,QAAI,CAACZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAvB;;AACA,sBAAI,CAACoxC,eAAL,CAAqBjvC,EAArB,CAAwBoC,CAAxB,EAA2BmT,UAA3B,CAAsC;AAAEk6B,0BAAU,EAAEttC,GAAG,CAACE,MAAJ,CAAWlD,KAAzB;AAAgCuwC,6BAAa,EAAE;AAA/C,eAAtC;;AACA,kBAAIvtC,GAAG,CAACE,MAAJ,CAAWlD,KAAX,IAAoB,EAAxB,EAA4B;AAE1B,wBAAI,CAACgvC,gBAAL,CAAsB/rC,CAAtB,IAA2BD,GAAG,CAACE,MAAJ,CAAWlD,KAAtC;AACD,eAHD,MAGO;AAEL,wBAAI,CAACgvC,gBAAL,CAAsB/qC,MAAtB,CAA6BhB,CAA7B,EAAgC,CAAhC;AACD;AAIF,aAbS,EAaP,GAbO,CAAV;AAcD;;;4CAEiB;AAChB,mBAAO,KAAKnG,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B4F,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWuN,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AADoB,aAAvB,CAAP;AAGD;;;wCAEaqxB,G,EAAMC,I,EAAO;AACzB,iBAAKF,eAAL,GAAuB,KAAKZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAvB;;AACA,gBAAIqxC,GAAG,IAAI1xC,SAAX,EAAsB;AACpB,mBAAKyxC,eAAL,CAAqBrwC,IAArB,CAA0B,KAAK0vC,gBAAL,CAAsBY,GAAtB,EAA2BC,IAA3B,CAA1B;AACD,aAFD,MAEO;AACL,mBAAKlB,aAAL,GAAqB,IAArB;AACA,mBAAKgB,eAAL,CAAqBrwC,IAArB,CAA0B,KAAK0vC,gBAAL,EAA1B;AACD;AACF;;;2CAEgBlvC,K,EAAO;AAAA;;AACtB,gBAAM6vC,eAAe,GAAG,KAAKZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAxB;AAEA,gBAAM6wB,KAAK,GAAG,KAAKugB,eAAL,CAAqBjvC,EAArB,CAAwBZ,KAAxB,EAA+BvB,GAA/B,CAAmC,YAAnC,EAAiDsB,KAA/D;AACA,gBAAMA,KAAK,GAAG,KAAK8vC,eAAL,CAAqBjvC,EAArB,CAAwBZ,KAAxB,EAA+BvB,GAA/B,CAAmC,eAAnC,EAAoDsB,KAAlE,CAJsB,CAMtB;;AAEA,gBAAIuvB,KAAK,IAAI,IAAb,EAAmB;AAEjB,kBAAIvrB,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA1B;AAEA,kBAAIM,UAAU,GAAG;AACfE,wBAAQ,EAAEgvB,KADK;AAEfvvB,qBAAK,EAAEA;AAFQ,eAAjB;AAKA,mBAAKjD,cAAL,CAAoB6G,wBAApB,CAA6CI,OAA7C,EAAsD3D,UAAtD,EAAkEtC,SAAlE,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AAEA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,0BAApB,EAAgD,EAAhD,EAAoD;AAClDC,yBAAO,EAAE;AADyC,iBAApD;AAID,eATH,EASK,UAAA/B,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,oBAAI,OAAQjC,KAAK,CAACA,KAAd,IAAwB,QAA5B,EAAsC;AACpC,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD;AACF,eAjBH;AAmBD,aA5BD,MA4BO;AACL,mBAAKkuC,aAAL,GAAqB,KAArB;AACD;;AACD,iBAAKE,gBAAL,CAAsB/qC,MAAtB,CAA6BhE,KAA7B,EAAoC,CAApC;AACA,iBAAKgvC,SAAL,CAAehrC,MAAf,CAAsBhE,KAAtB,EAA6B,CAA7B;AACA6vC,2BAAe,CAAC5rC,QAAhB,CAAyBjE,KAAzB;AACD;;;gDAEqB+C,G,EAAKC,C,EAAG;AAC5B,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK8gB,cAAL,CAAoB1rC,IAApB,CAAyB;AAAEH,iBAAG,EAAHA,GAAF;AAAOC,eAAC,EAADA;AAAP,aAAzB;AACD;;;wCAEaD,G,EAAKC,C,EAAG;AACpB,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK6gB,WAAL,CAAiBzrC,IAAjB,CAAsB;AAAEH,iBAAG,EAAHA,GAAF;AAAOC,eAAC,EAADA;AAAP,aAAtB;AACD;;;2CAEgB8sC,G,EAAMC,I,EAAO;AAC5B,gBAAID,GAAG,IAAI1xC,SAAX,EAAsB;AACpB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0yC,0BAAU,EAAE,IAAI,0DAAJ,CAAgBP,GAAhB,EAAqB,CAAC,0DAAWh/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAArB,CADgB;AAE5B6xB,6BAAa,EAAE,IAAI,0DAAJ,CAAgBP,IAAhB,EAAsB,CAAC,0DAAWj/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAFa,eAAvB,CAAP;AAID,aALD,MAKO;AACL,qBAAO,KAAK5hB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0yC,0BAAU,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWv/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB,CADgB;AAE5B6xB,6BAAa,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWx/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAFa,eAAvB,CAAP;AAID;AAEF;;;qDAE0B1b,G,EAAKC,C,EAAG;AAAA;;AAEjC,iBAAK6sC,eAAL,GAAuB,KAAKZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAvB;AACA,gBAAM6wB,KAAK,GAAG,KAAKugB,eAAL,CAAqBjvC,EAArB,CAAwBoC,CAAxB,EAA2BvE,GAA3B,CAA+B,YAA/B,EAA6CsB,KAA3D;AACA,gBAAMouB,QAAQ,GAAGprB,GAAG,CAACE,MAAJ,CAAWlD,KAA5B;AACA,gBAAMgE,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA5B;AACA,gBAAMM,UAAU,GAAG;AAAEE,sBAAQ,EAAEgvB,KAAZ;AAAmBvvB,mBAAK,EAAEouB;AAA1B,aAAnB;;AAEA,gBAAImB,KAAK,IAAIlxB,SAAT,IAAsB+vB,QAAQ,IAAI,EAAtC,EAA0C;AAExC,mBAAK6gB,SAAL,CAAehsC,CAAf,IAAoB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEouB;AAAvB,eAApB;AACA,mBAAKrxB,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDvC,IAArD,CAA0D,oEAAa,IAAb,CAA1D,EAA8EC,SAA9E,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,oBAAIwB,KAAK,IAAI,YAAb,EAA2B,CAE1B;;AACD,wBAAI,CAACxyB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AACD,eATH,EASK,UAAAa,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AACA,oBAAI0wB,KAAK,IAAI,YAAb,EAA2B;AACzB,sBAAMvxB,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,sBAAI,CAAC,cAAD,CAAJ,GAAuB,OAAvB;AACAA,sBAAI,CAAC,gBAAD,CAAJ,GAAyBowB,QAAzB;AACApwB,sBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,0BAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;AACD;;AACD,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,0BAApB,EAAgD,EAAhD,EAAoD;AAClDC,2BAAO,EAAE;AADyC,mBAApD;AAGD;AACF,eA9BH;AAgCD,aAnCD,MAmCO;AACL,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACA,mBAAKkhB,SAAL,CAAehsC,CAAf,IAAoB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAE;AAAvB,eAApB;AACD;AACF;;;6CAEkB1B,M,EAAQ;AAAA;;AAEzB,iBAAKwxC,eAAL,GAAuB,KAAKZ,SAAL,CAAexwC,GAAf,CAAmB,YAAnB,CAAvB;AACA,gBAAM6wB,KAAK,GAAG,KAAKugB,eAAL,CAAqBjvC,EAArB,CAAwBvC,MAAM,CAAC2E,CAA/B,EAAkCvE,GAAlC,CAAsC,YAAtC,EAAoDsB,KAAlE;AACA,gBAAMouB,QAAQ,GAAG9vB,MAAM,CAAC0E,GAAP,CAAWE,MAAX,CAAkBlD,KAAnC;AACA,gBAAMgE,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA5B;AACA,gBAAMM,UAAU,GAAG;AAAEE,sBAAQ,EAAEgvB,KAAZ;AAAmBvvB,mBAAK,EAAEouB;AAA1B,aAAnB;;AAEA,gBAAImB,KAAK,IAAIlxB,SAAb,EAAwB;AAEtB,mBAAK4wC,SAAL,CAAexvC,IAAf,CAAoB;AAAE8vB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEouB;AAAvB,eAApB;AACA,mBAAKrxB,cAAL,CAAoBysC,WAApB,CAAgCxlC,OAAhC,EAAyC3D,UAAzC,EAAqDvC,IAArD,CAA0D,oEAAa,IAAb,CAA1D,EAA8EC,SAA9E,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAAC8wC,aAAL,GAAqB,KAArB;AACD,eAPH,EAOK,UAAAjwC,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AACA,wBAAI,CAACiwC,aAAL,GAAqB,KAArB;;AACA,oBAAIvf,KAAK,IAAI,YAAb,EAA2B;AACzB,sBAAMvxB,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,sBAAI,CAAC,cAAD,CAAJ,GAAuB,OAAvB;AACAA,sBAAI,CAAC,gBAAD,CAAJ,GAAyBowB,QAAzB;AACApwB,sBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AAEA,0BAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;AAED;;AAED,oBAAIa,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,WAAW4uB,KAAX,GAAmB,UAAvC,EAAmD,EAAnD,EAAuD;AACrD3uB,2BAAO,EAAE;AAD4C,mBAAvD;AAGD;;AACD,wBAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD,eAhCH;AAkCD,aArCD,MAqCO;AACL,mBAAKhxB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD;AACF;;;0CAGe9tB,K,EAAO;AACrB,gBAAMuwC,cAAc,GAAG,KAAKtB,SAAL,CAAexwC,GAAf,CAAmB,WAAnB,CAAvB;AACA8xC,0BAAc,CAACtsC,QAAf,CAAwBjE,KAAxB;AACD;;;+CAEoBsD,C,EAAI;AACvB,gBAAIA,CAAC,IAAIlF,SAAT,EAAoB;AAClB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B6yC,2BAAW,EAAE,IAAI,0DAAJ,CAAgBltC,CAAhB,EAAmB,CAAC,0DAAWwN,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB;AADe,eAAvB,CAAP;AAGD,aAJD,MAIO;AACL,qBAAO,KAAK5hB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B6yC,2BAAW,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW1/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AADe,eAAvB,CAAP;AAGD;AAEF;;;4CAEiBlb,M,EAAS;AACzB,iBAAKqsC,mBAAL,GAA2B,KAAKX,SAAL,CAAexwC,GAAf,CAAmB,iBAAnB,CAA3B;;AACA,gBAAI8E,MAAM,IAAInF,SAAd,EAAyB;AACvB,mBAAKwxC,mBAAL,CAAyBpwC,IAAzB,CAA8B,KAAKgwC,oBAAL,CAA0BjsC,MAA1B,CAA9B;AACD,aAFD,MAEO;AACL,mBAAKqsC,mBAAL,CAAyBpwC,IAAzB,CAA8B,KAAKgwC,oBAAL,EAA9B;AACD;AACF;;;+CAEoBxvC,K,EAAO;AAC1B,iBAAK4vC,mBAAL,GAA2B,KAAKX,SAAL,CAAexwC,GAAf,CAAmB,iBAAnB,CAA3B;AACA,iBAAKmxC,mBAAL,CAAyB3rC,QAAzB,CAAkCjE,KAAlC;AACD;;;;;;;yBA9iBU0uC,sB,EAAsB,+K,EAAA,2H,EAAA,yH;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,gB;AAAA,owH;AAAA;AAAA;ACvBnC;;AAEI;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAW;;AAAI;;AACxC;;AAAmB;AAAA,qBAAS,IAAAsB,aAAA,EAAT;AAAwB,aAAxB;;AAAkE;;AAA4B;;AACvE;;AAAO;;AACjD;;AAEI;;AAmBA;;AA0BJ;;AACJ;;AACJ;;AACJ;;AAEA;;AA0DA;;AAMA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAe;;AAAI;;AAC5C;;AAAmB;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AAA8B;;AAA4B;;AACnC;;AAAO;;AAEjD;;AACI;;AAyBJ;;AACJ;;AACJ;;AACJ;;AAkFJ;;;;AAlPM;;AAMuD;;AAAA;;AAIA;;AAAA;;AAoBrB;;AAAA;;AA8BQ;;AAAA;;AAyEN;;AAAA;;;;;;;;;wED9G7BvB,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTjyC,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;;;;AAExB+mB,mBAAS,EAAE,CAAF;kBAAjB;AAAiB,WAAE;;;;;;;;;;;;;;;;;;;AE3BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACwCoC;;;;;;AAAkD,2FAAgB,SAAhB,EAAgB,oBAAhB;;;;;;AAGlD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAC5B;;AACrC;;AACI;;AAAuC;;AAAU;;AACjD;;AACI;;AAAI;;AAAY;;AAChB;;AAAG;;AAC8E;;AACrF;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AAC9E;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAI;;AAC5E;;AACI;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAC/B;;AACJ;;AACJ;;AACZ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAA+B;;AAC/G;;AACJ;;;;;;;;AA9ByE;;AAEtC;;AAAA;;AAE0E;;AAAA;;AAOpD;;AAAA,wFAAoB,UAApB,EAAoB,KAApB;;;;;;;;;;;;AA/BjE;;AACI;;AAEI;;AAA8D;;AAAK;;AACnE;;AACI;;AACI;;AAAQ;;AAAY;;AACpB;;AAAQ;;AAAG;;AACf;;AACJ;;AACJ;;AACA;;AACI;;AAA8D;;AAAW;;AACzE;;AACI;;AACJ;;AACJ;;AAEA;;AACI;;AAA8D;;AAAO;;AACrE;;AA+BJ;;AACJ;;;;;;AAhD+C;;AAAA;;AASA;;AAAA;;AAOJ;;AAAA;;;;;;AAwDvC;;;;;;AAAkD,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAGlD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACN;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAI;;AACvE;;AACI;;AAAuC;;AAAU;;AACjD;;AACI;;AAAI;;AAAY;;AAChB;;AAAG;;AAC8E;;AACrF;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AAC9E;;AAA6C;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAAI;;AAC5E;;AACI;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAyB,WAAzB;;AAA2B;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyE;;AAA+B;;AACpH;;AACJ;;;;;;;;AA9ByE;;AAEtC;;AAAA;;AAE0E;;AAAA;;AAO5D;;AAAA,wFAAoB,UAApB,EAAoB,KAApB;;;;;;AAlBrD;;AACI;;AACI;;AACI;;AAAQ;;AAAY;;AACpB;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AA+BJ;;;;;;AArC0B;;AAAA;;AAMa;;AAAA;;;;;;AA4DnB;;;;;;AAAsD,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAGtD;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACF;;AAChD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAA+B;;AAC1H;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwF;;AAA0B;;AAC9H;;AACJ;;;;;;AAhBmC;;AAAA;;AAE8E;;AAAA;;;;;;AA4BjG;;;;;;AAA0D,4FAAgB,SAAhB,EAAgB,qBAAhB;;;;;;AAG1D;;;;;;;;AAJJ;;AACI;;AAGA;;AACA;;AACI;;AAAiE;AAAA;AAAA;AAAA;;AAAjE;;AACJ;;AACA;;AACI;;AAA8C;;AACF;;AAChD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqF;;AAA+B;;AAChI;;AACA;;AACI;;AAAiE;;AAA0B;;AAC/F;;AACJ;;;;;;AAhBmC;;AAAA;;AAEoG;;AAAA;;;;;;AAdnJ;;AACI;;AACI;;AACI;;AACA;;AACI;;AACI;;AAAQ;;AAA6B;;AACrC;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AAmBJ;;AACJ;;AACJ;;;;;;;AA9BS;;AAAA;;AAKmB;;AAAA;;AAImB;;AAAA;;;;;;AA3C3D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAQ;;AAAQ;;AAChB;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AAmBJ;;AACA;;AACI;;AAgCJ;;AACJ;;AACJ;;;;;;;AAlES;;AAAA;;AAWsC;;AAAA;;AAqBd;;AAAA;;;;;;;;AA5KzD;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACI;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAW;;AAAI;;AACxC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAA4B;;AAAiC;;AAAO;;AAElH;;AACI;;AACI;;AAqDJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAc;;AAAI;;AAAuC;;AAAM;;AAAO;;AAC/F;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAA4B;;AAAiC;;AAAO;;AAEvH;;AACI;;AAwCJ;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAuB;;AAAI;;AAAuC;;AAAQ;;AAAO;;AAC1G;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAA4B;;AAAiC;;AAAO;;AAC7H;;AACI;;AACI;;AAoEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AA8DJ;;;;;;AAjRM;;AAiByC;;AAAA;;AAoEoE;;AAAA;;AAsDjE;;AAAA;;;;UDrHrC+sB,0B;AAuBX,4CAAoB3zC,cAApB,EAAmED,WAAnE,EAA6F;AAAA;;AAAzE,eAAAC,cAAA,GAAAA,cAAA;AAA+C,eAAAD,WAAA,GAAAA,WAAA;AArBnE,eAAAqqB,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAlhB,OAAA,GAAU,CAAV;AAKA,eAAAyqC,iBAAA,GAAoB,IAAI,wDAAJ,CAAc;AAChCvuC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADyB;AAEhCwuC,uBAAW,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,iBAAL,EAAD,CAAd,CAFmB;AAGhCC,4BAAgB,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,sBAAL,EAAD,CAAd,CAHc;AAIhCC,kCAAsB,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,4BAAL,EAAD,CAAd;AAJQ,WAAd,CAApB;AAaC;;;;qCAEU;AAET,iBAAKN,iBAAL,GAAyB,KAAK7zC,WAAL,CAAiBc,KAAjB,CAAuB;AAC9CwE,mBAAK,EAAE,EADuC;AAE9CwuC,yBAAW,EAAE,KAAK9zC,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKgzC,iBAAL,EAAD,CAAvB,CAFiC;AAG9CC,8BAAgB,EAAE,KAAKh0C,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKkzC,sBAAL,EAAD,CAAvB,CAH4B;AAI9CC,oCAAsB,EAAE,KAAKl0C,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKozC,4BAAL,EAAD,CAAvB;AAJsB,aAAvB,CAAzB;AAMA,iBAAKhnC,SAAL;AACA,iBAAK2d,UAAL;AACA,iBAAK7oB,cAAL;AACD;;;sCAEWC,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAK;AACd,kBAAG,QAAI,CAACX,MAAL,IAAeU,OAAO,CAAC2kB,SAAR,CAAkBxkB,YAApC,EAAiD;AAC/C,oBAAG,QAAI,CAAC6xC,sBAAL,IAA+B,IAAlC,EAAuC;AACrC,0BAAI,CAACA,sBAAL,CAA4B5xC,KAA5B;;AACA,0BAAI,CAAC0xC,gBAAL,CAAsB1xC,KAAtB;;AACA,0BAAI,CAACwxC,WAAL,CAAiBxxC,KAAjB;AACD;AACF;;AACD,sBAAI,CAACwoB,UAAL;;AACA,sBAAI,CAACtpB,MAAL,GAAcU,OAAO,CAAC2kB,SAAR,CAAkBxkB,YAAhC;;AACA,kBAAG,QAAI,CAACb,MAAL,IAAe,IAAlB,EAAuB;AACrB,wBAAI,CAACqyC,iBAAL,CAAuBjyC,GAAvB,CAA2B,OAA3B,EAAoCC,QAApC,CAA6C,QAAI,CAACL,MAAL,CAAY8D,KAAzD,EAAgE;AAACxD,2BAAS,EAAC;AAAX,iBAAhE;AACD;;AACD,sBAAI,CAACG,cAAL;AACH,aAdW,EAcT,EAdS,CAAV;AAeD;;;2CAEa;AACZE,sBAAU,CAAC,YAAM;AACf;AACAmE,eAAC,CAAC,mBAAD,CAAD,CAAuBC,OAAvB,CAA+B;AAC7BC,uBAAO,EAAG;AADmB,eAA/B;AAGD,aALS,EAKP,GALO,CAAV;AAMD;;;uCAEoB;AACnB;;;;;AAKD;;;sCAEQ;AACP,iBAAKqtC,iBAAL,CAAuB3kC,YAAvB,CAAoClO,IAApC,CAAyC,oEAAa,GAAb,CAAzC,EAA4DC,SAA5D,CAAsE,UAAAkO,YAAY,EAAI,CACpF;AACD,aAFD;AAGD;;;8CAEgB;AACf,mBAAO,KAAKnP,WAAL,CAAiBc,KAAjB,CAAuB;AAC5BW,kBAAI,EAAE,EADsB;AAE5BoW,wBAAU,EAAE,GAFgB;AAG5BzR,oBAAM,EAAE;AAHoB,aAAvB,CAAP;AAKD;;;2CAEgB;AACf,iBAAK0tC,WAAL,GAAmB,KAAKD,iBAAL,CAAuBjyC,GAAvB,CAA2B,aAA3B,CAAnB;AACA,iBAAKkyC,WAAL,CAAiBnxC,IAAjB,CAAsB,KAAKoxC,iBAAL,EAAtB;AACA,iBAAK9xC,cAAL;AACD;;;4CAEiBkB,K,EAAO;AACvB,iBAAK2wC,WAAL,GAAmB,KAAKD,iBAAL,CAAuBjyC,GAAvB,CAA2B,aAA3B,CAAnB;AACA,iBAAKkyC,WAAL,CAAiB1sC,QAAjB,CAA0BjE,KAA1B;AACD;;;gDAEqB;AACpB,iBAAK6wC,gBAAL,GAAwB,KAAKH,iBAAL,CAAuBjyC,GAAvB,CAA2B,kBAA3B,CAAxB;AACA,iBAAKoyC,gBAAL,CAAsBrxC,IAAtB,CAA2B,KAAKsxC,sBAAL,EAA3B;AACA,iBAAKhyC,cAAL;AACD;;;iDAEsBkB,K,EAAO;AAC5B,iBAAK6wC,gBAAL,GAAwB,KAAKH,iBAAL,CAAuBjyC,GAAvB,CAA2B,kBAA3B,CAAxB;AACA,iBAAKoyC,gBAAL,CAAsB5sC,QAAtB,CAA+BjE,KAA/B;AACD;;;sDAE2B;AAC1B,iBAAK+wC,sBAAL,GAA8B,KAAKL,iBAAL,CAAuBjyC,GAAvB,CAA2B,wBAA3B,CAA9B;AACA,iBAAKsyC,sBAAL,CAA4BvxC,IAA5B,CAAiC,KAAKwxC,4BAAL,EAAjC;AACA,iBAAKlyC,cAAL;AACD;;;uDAE4BkB,K,EAAO;AAClC,iBAAK+wC,sBAAL,GAA8B,KAAKL,iBAAL,CAAuBjyC,GAAvB,CAA2B,wBAA3B,CAA9B;AACA,iBAAKsyC,sBAAL,CAA4B9sC,QAA5B,CAAqCjE,KAArC;AACD;;;uDAE4BA,K,EAAO;AAClC,gBAAM8nB,OAAO,GAAe,KAAK4oB,iBAAL,CAAuB7tB,QAAvB,CAAgC,wBAAhC,EAA2DjiB,EAA3D,CAA8DZ,KAA9D,EAAqEvB,GAArE,CAAyE,SAAzE,CAA5B;AACAqpB,mBAAO,CAACC,MAAR,CAAe/nB,KAAf,EAAsB,KAAKixC,+BAAL,EAAtB;AACA,iBAAKnyC,cAAL;AACD;;;0DAE+BkB,K,EAAOioB,E,EAAI;AACzC,gBAAMH,OAAO,GAAe,KAAK4oB,iBAAL,CAAuB7tB,QAAvB,CAAgC,wBAAhC,EAA2DjiB,EAA3D,CAA8DZ,KAA9D,EAAqEvB,GAArE,CAAyE,SAAzE,CAA5B;AACAqpB,mBAAO,CAAC7jB,QAAR,CAAiBgkB,EAAjB;AACD;;;mDAEqB;AACpB,mBAAO,KAAKprB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B2C,sBAAQ,EAAE,EADkB;AAE5BiD,oBAAM,EAAE;AAFoB,aAAvB,CAAP;AAID;;;yDAE2B;AAC1B,mBAAO,KAAK1G,WAAL,CAAiBc,KAAjB,CAAuB;AAC5BuqB,sBAAQ,EAAE,EADkB;AAE5B5nB,sBAAQ,EAAE,EAFkB;AAG5B6nB,sBAAQ,EAAE,EAHkB;AAI5BC,qBAAO,EAAE,IAAI,wDAAJ,CAAc,EAAd;AAJmB,aAAvB,CAAP;AAMD;;;4DAE8B;AAC7B,mBAAO,KAAKvrB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0qB,0BAAY,EAAE,KADc;AAE5BC,wBAAU,EAAE;AAFgB,aAAvB,CAAP;AAID;;;;;;;yBAzJUmoB,0B,EAA0B,+K,EAAA,2H;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,szK;AAAA;AAAA;ACtBvC;;;;AAAuC;;;;;;;;;wEDsB1BA,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACTh0C,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK4B,U;;;;;;;AAS5B+mB,mBAAS;kBAAjB;AAAiB;;;;;;;;;;;;;;;;;;;AEjCpB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACiCgC;;AAAwR;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AACxR;;AAAkG;;AAAK;;;;;;AAInG;;AAAwG;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AACxG;;AAUc;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAVd;;;;;;AAU0L;;;;;;;;AAC1L;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAgF,QAAhF,EAAgF;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAhF;;AAAxD;;;;;;AAAiV;;;;;;;;AAEjV;;AAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8N;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AApB3P;;AACI;;AACA;;AAGA;;AACI;;AACA;;AAWA;;AAEA;;AACJ;;AACJ;;;;;;AArBuE;;AAAA;;AACA;;AAAA;;AAIlB;;AAAA;;AACvB;;AAAA;;AAWF;;AAAA;;AAEkF;;AAAA;;;;;;AAMtG;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAuBoB;;AAAwC;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAD5C;;AACI;;AACJ;;;;;;AADQ;;AAAA;;;;;;AAYN;;AAAuG;;AAA4B;;AAA+B;;AAAO;;;;;;AAAxI;;;;;;AAJ3C;;AAGI;;AAAO;;AAAmJ;;AAA4B;;AAAwC;;AAAO;;AAAI;;AACzO;;AAAM;;AAA6K;;AACvL;;;;;;AAFe;;AAAA;;AACD;;AAAA;;;;;;AAgBE;;AACI;;AACJ;;;;;;AADgG;;AAAA;;;;;;;;AAtChI;;AACI;;AAEI;;AACI;;AACI;;AAEI;;AACI;;AAGA;;AAAG;;;;AAAqF;;AAC5F;;AAIJ;;AACA;;AAOA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAyB;;AAAuC;;AAAO;;AAExH;;AACI;;AACI;;AACI;;AAA6D;;AAAM;;AACnE;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAA6D;;AAAO;;AACpE;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AAA6D;;AAAK;;AAClE;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAA6D;;AAAK;;AAClE;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,sEAA6D,MAA7D;AAAmE,WAAnE;;AAAyJ;;AAC9L;;AACJ;;AACA;;AACI;;AAA6D;;AAAW;;AACxE;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,sEAA+D,YAA/D;AAA2E,WAA3E;;AAAmL;;AAC1N;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGJ;;AACJ;;;;;;;;;AA/DiE;;AAAA,4KAAmE,eAAnE,EAAmE,uFAAnE;;AAGjB;;AAAA;;AAGrB;;AAAA;;AAMJ;;AAAA;;AASF;;AAAA;;AAKoG;;AAAA;;AAMlE;;AAAA;;AASiE;;AAAA;;AAMuE;;AAAA;;AAMsB;;AAAA;;;;;;AA3DzN;;AACI;;AAqEJ;;;;;;AArE6E;;AAAA;;;;;;;;AA9DzF;;AACI;;AAC2E;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAA8B;;AAChH;;AAAkF;;AAAI;;AAAO;;AAErI;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqF;;AAA4F;;AAAuC;;AAAO;;AACnO;;AAAG;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAmF;;AAAyB;;AAA2B;;AAAO;;AAGjJ;;AACI;;AAQI;;;;AAuBA;;AACI;;AAAkE;;AAAa;;AAC/E;;AACI;;AAGA;;AAGA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAKJ;;AACJ;;AACJ;;AAGJ;;AACA;;AAuEJ;;AACJ;;AAIJ;;;;;;;;;AAxI0D;;AAAA,qHAA+C,eAA/C,EAA+C,gCAA/C;;AAEd;;AAAA;;AAMnC;;AAAA;;AASkE;;AAAA;;AA0BV;;AAAA;;AAGA;;AAAA;;AAc/C;;AAAA;;;;;;AA9DtB;;AACI;;AA0IJ;;;;;;AA1IiD;;AAAA;;;;;;;;AAgKjD;;AACI;;AACI;;AAC+C;;AAA4B;;AAC3E;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qCAA2B,KAA3B;AAAkC,mBAAF,8DAAE;AAAF,WAAhC;;AAA4F;;AAAM;;AACtG;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qCAA2B,IAA3B;AAAiC,mBAAF,8DAAE;AAAF,WAA/B;;AAA2F;;AACvF;;AACZ;;AACJ;;AACA;;AAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAArB;;AAIJ;;;;;;AAXe;;AAAA;;AAEA;;AAAA;;AAOP;;AAAA;;;;;;AAsCwB;;;;;;AACA;;;;;;AAMA;;;;;;AACA;;;;;;AAMA;;;;;;AACA;;;;;;AAYJ;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACkE;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAClE;;AACwB;;AAAQ;;;;;;AAKxB;;AACI;;;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;AAHW;;AAAA;;;;;;AAIX;;AACwB;;AAAO;;;;;;AAPnC;;AACI;;AAKA;;AAEJ;;;;;;;;AAP6B;;AAAA;;AAKlB;;AAAA;;;;;;AAGX;;AAAkE;;AAAO;;;;;;AAGzE;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AAEI;;AACJ;;;;;;;;AA7CR;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAElC;;AACI;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAEA;;AAEJ;;AACA;;AACI;;AASA;;AACJ;;AACA;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;AA9CI;;AAEW;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AACE;;AAAA;;AAIA;;AAAA;;AASA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAQvB;;AAA8E;;AAAU;;;;;;AASpF;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAEI;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAaA;;AACI;;AACI;;;;;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;AAHZ;;AACI;;AAKJ;;;;;;AALW;;AAAA;;;;;;AATnB;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;;;;;AARiC;;AAAA;;;;;;AAkBrB;;AACI;;AACI;;;;;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;AAHZ;;AACI;;AAKJ;;;;;;AALW;;AAAA;;;;;;AATnB;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;;;;;AARiC;;AAAA;;;;;;AASjC;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACoB;;AAAI;;AAAwC;;AACpE;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AATkC;;AAAA;;AAMtB;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AAAuE;;AACnE;;AAAwC;;AAChD;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AATkC;;AAAA;;AAMtB;;AAAA;;;;;;AAIZ;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAHY;;AAAA;;;;;;AA1MhB;;AACI;;AAaA;;AAaA;;AAiBA;;AAiBA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAaA;;AAcA;;AAaA;;AAcA;;AAaJ;;;;;;AA5MS;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAiBA;;AAAA;;AAiBA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;;;;;AAkBT;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AACA;;AAEI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AACA;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;;;;;;;UD/gBvBwtB,yB;AAiCX,2CAAoBn0C,MAApB,EACoB6mB,aADpB,EAEoBpe,QAFpB,EAGoBrB,gBAHpB,EAIoBrH,cAJpB,EAKoBq0C,OALpB,EAKuD;AAAA;;AALnC,eAAAp0C,MAAA,GAAAA,MAAA;AACA,eAAA6mB,aAAA,GAAAA,aAAA;AACA,eAAApe,QAAA,GAAAA,QAAA;AACA,eAAArB,gBAAA,GAAAA,gBAAA;AACA,eAAArH,cAAA,GAAAA,cAAA;AACA,eAAAq0C,OAAA,GAAAA,OAAA;AA5BpB,eAAAp8B,YAAA,GAAe,EAAf;AACA,eAAAxB,SAAA,GAAY,EAAZ;AACQ,eAAA69B,mBAAA,GAAoC,IAAI,4CAAJ,EAApC;AACA,eAAAC,0BAAA,GAA2C,IAAI,4CAAJ,EAA3C;AACA,eAAAhtB,aAAA,GAA+B,IAAI,4CAAJ,EAA/B;AAER,eAAAjP,KAAA,GAAQ,CAAR;AACA,eAAA2O,SAAA,GAAY,OAAZ;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,UAAA,GAAa;AAACC,iBAAK,EAAG,EAAT;AAAaF,qBAAS,EAAG;AAAzB,WAAb;AACA,eAAAG,UAAA,GAAa,EAAb;AACA,eAAAC,SAAA,GAAY,kBAAZ;AAKA,eAAAf,mBAAA,GAAsB,EAAtB;AACA,eAAAiuB,eAAA,GAAkB,EAAlB;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,SAAA,GAAY,EAAZ;AACA,eAAAjrC,IAAA,GAAO,IAAP;AAUA,eAAA8d,QAAA,GAAW,EAAX;AAH0D;;;;qCAIlD;AAAA;;AAEN,iBAAKxnB,cAAL,CAAoBwW,YAApB,GAAmCxV,SAAnC,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACwV,SAAL,GAAiBxV,IAAjB,CADM,CAEN;AACD,aAJH,EAKE,UAAAa,KAAK,EAAI,CACP;AACD,aAPH;AAUA,iBAAKuF,gBAAL,CAAsBof,UAAtB,CAAiCzlB,SAAjC,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAI,CAAC4iC,MAAL,GAAc5iC,IAAd;AACD,aAJH,EAII,UAAAa,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aANH;AASA,iBAAKwyC,mBAAL,CAAyBvzC,IAAzB,CAA8B,oEAAa,IAAb,CAA9B,EAAkDC,SAAlD,CACE,UAAAC,IAAI,EAAI;AACN,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAAC2zC,gBAAL,CAAsB3zC,IAAtB;AACD;AACF,aALH;AASA,iBAAKszC,0BAAL,CAAgCxzC,IAAhC,CAAqC,oEAAa,IAAb,CAArC,EAAyDC,SAAzD,CACE,UAAAC,IAAI,EAAI;AACN,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAAC4zC,sBAAL,CAA4B5zC,IAA5B;AACD;AACF,aALH;AAQA,iBAAK6lB,aAAL,CAAmBqB,aAAnB,CAAiC,KAAK7P,KAAtC,EAA6C,KAAK2O,SAAlD,EAA6D,KAAKC,SAAlE,EAA6ElmB,SAA7E,CACE,UAAAC,IAAI,EAAG;AACL,sBAAI,CAACkmB,UAAL,GAAkB;AAACC,qBAAK,EAAG,QAAI,CAACH,SAAd;AAAyBC,yBAAS,EAAG,QAAI,CAACA;AAA1C,eAAlB;AACA,sBAAI,CAACjP,YAAL,GAAoBhX,IAApB;;AACA,sBAAI,CAACgX,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnCA,uBAAO,CAAC,UAAD,CAAP,GAAsB,KAAtB;AACD,eAFD,EAHK,CAQL;;;AACA2E,eAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,eAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,aAZH,EAYI,UAAA/P,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAdH;AAiBA,iBAAKylB,aAAL,CAAmBxmB,IAAnB,CAAwB,oEAAa,IAAb,CAAxB,EAA4CC,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAComB,UAAL,GAAmBpmB,IAAI,CAACgnB,KAAxB;AACAhnB,kBAAI,CAACqmB,SAAL,GAAiB,QAAI,CAACA,SAAL,GAAiB,YAAlC,GAAiD,QAAI,CAACA,SAAL,GAAiB,kBAAlE;;AACA,sBAAI,CAACY,kBAAL,CAAwB,QAAI,CAACb,UAA7B,EAAyC,QAAI,CAACC,SAA9C;AACD,aALH;AAOD;;;sCAGWrlB,O,EAAwB;AAAA;;AAElCb,mBAAO,CAACC,GAAR,CAAYY,OAAZ;;AACA,gBAAGA,OAAO,CAAC6yC,eAAR,CAAwB1yC,YAAxB,IAAwC,IAA3C,EAAgD;AAC9CF,wBAAU,CAAC,YAAM;AAEf,oBAAGD,OAAO,CAAC6yC,eAAR,CAAwB1yC,YAAxB,IAAwC,QAAI,CAAColB,QAAhD,EAAyD;AACvD,0BAAI,CAACA,QAAL,GAAgB,EAAhB,CADuD,CAEvD;;AACA,0BAAI,CAACmC,YAAL,GAAoB,IAApB;AACA,0BAAI,CAACorB,kBAAL,GAA0B,IAA1B;AACA,0BAAI,CAACN,QAAL,GAAgB,EAAhB;AACA,0BAAI,CAACC,cAAL,GAAsB,EAAtB;AACA,0BAAI,CAACC,SAAL,GAAiB,EAAjB;AACD;;AACD,wBAAI,CAACntB,QAAL,GAAgBvlB,OAAO,CAAC6yC,eAAR,CAAwB1yC,YAAxC;AACAhB,uBAAO,CAACC,GAAR,CAAY,QAAI,CAACmmB,QAAjB;;AACA,oBAAG,QAAI,CAACA,QAAL,CAActjB,MAAd,IAAwB,CAA3B,EAA6B;AAC3B,0BAAI,CAAClE,cAAL,CAAoB4kC,uBAApB,CAA4C,KAA5C;;AACA,0BAAI,CAAC6P,QAAL,GAAgB,EAAhB;AACA,0BAAI,CAACC,cAAL,GAAsB,EAAtB;AACA,0BAAI,CAACC,SAAL,GAAiB,EAAjB;AACD,iBALD,MAKK;AACJ;;;;;AAKA;AAEF,eA1BS,EA0BP,EA1BO,CAAV;AA4BD,aA7BD,MA6BK;AACH,mBAAKntB,QAAL,GAAgB,EAAhB;AACA,mBAAKitB,QAAL,GAAgB,EAAhB;AACA,mBAAKC,cAAL,GAAsB,EAAtB;AACA,mBAAKC,SAAL,GAAiB,EAAjB;AACA,mBAAKhrB,YAAL,GAAoB,IAApB;AACA,mBAAKorB,kBAAL,GAA0B,IAA1B;AACD;AACF;;;4CAEiB7xC,K,EAAOqP,E,EAAI6F,O,EAAO;AAAA;;AAClC,iBAAKoP,QAAL,CAActgB,MAAd,CAAqBhE,KAArB,EAA2B,CAA3B;AACA,iBAAKmE,gBAAL,CAAsB2tC,uBAAtB,CAA8CziC,EAA9C,EAAkD6F,OAAlD;AAEA,iBAAK/Q,gBAAL,CAAsB2/B,gBAAtB,CAAuCz0B,EAAvC,EAA2CvR,SAA3C,CACE,UAAAC,IAAI,EAAG;AACLG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,+BAApB,EAAqD,MAArD,EAA6D;AAC3DC,uBAAO,EAAG;AADiD,eAA7D;;AAGA,sBAAI,CAACwD,gBAAL,CAAsBM,cAAtB,CAAqC4K,EAArC;;AACA,kBAAG,QAAI,CAACiiC,eAAL,CAAqBtwC,MAArB,GAA8B,CAAjC,EAAmC;AACjC,wBAAI,CAACswC,eAAL,CAAqBlyC,OAArB,CAA6B,UAAA2yC,iBAAiB,EAAI;AAChD,sBAAGA,iBAAiB,CAACljC,QAAlB,CAA2BQ,EAA3B,IAAiCA,EAApC,EAAuC;AAErCrQ,8BAAU,CAAC,YAAM;AACf+yC,uCAAiB,CAACljC,QAAlB,CAA2BvK,cAA3B,CAA0CgiB,IAA1C;AACD,qBAFS,EAEP,GAFO,CAAV;AAGD;AACF,iBAPD;AAQD;AACF,aAjBH,EAiBI,UAAA1nB,KAAK,EAAI;AACTV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,+BAAlB,EAAmD,OAAnD,EAA4D;AAC1D+B,uBAAO,EAAG;AADgD,eAA5D;AAGD,aAtBH;;AAwBA,gBAAG,KAAK2jB,QAAL,CAActjB,MAAd,IAAwB,CAA3B,EAA6B;AAC3B,mBAAKlE,cAAL,CAAoB4kC,uBAApB,CAA4C,KAA5C,EAD2B,CAE3B;;AACA;;;;AAKD;AAGF;;;mDAEwB3+B,G,EAAKorB,Q,EAAU6jB,O,EAASp8B,U,EAAU;AACzD,iBAAKw7B,mBAAL,CAAyBluC,IAAzB,CAA8B;AAACoc,mBAAK,EAAGvc,GAAT;AAAcorB,sBAAQ,EAAGA,QAAzB;AAAmC6jB,qBAAO,EAAEA,OAA5C;AAAqDp8B,wBAAU,EAAGA;AAAlE,aAA9B;AACD;;;wCAEa7V,K,EAAO6V,U,EAAY5V,K,EAAOkkB,K,EAAK;AAC3C,iBAAKmtB,0BAAL,CAAgCnuC,IAAhC,CAAqC;AAACoH,eAAC,EAAEvK,KAAJ;AAAWuN,eAAC,EAAEsI,UAAd;AAA0B5S,eAAC,EAAEhD,KAA7B;AAAoCw7B,eAAC,EAAEtX;AAAvC,aAArC;AACD;;;2CAEgBnmB,I,EAAI;AAAA;;;;AACnB,gBAAGA,IAAI,IAAG,IAAV,EAAe;AACb,kBAAIylB,aAAa,GAAG,CAAH,KAAGzlB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE6X,UAAN,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEvG,EAAtC;AACA,kBAAI8e,QAAQ,GAAGpwB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEowB,QAArB;AACA,kBAAI4c,QAAQ,GAAGhtC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEi0C,OAArB;AAEA,kBAAIp8B,UAAU,GAAG7X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE6X,UAAvB;AAEAA,wBAAU,CAACE,UAAX,CAAsBi1B,QAAtB,IAAkC5c,QAAlC;AAEA,mBAAKhqB,gBAAL,CAAsButC,gBAAtB,CAAuC97B,UAAvC,EAAmD9X,SAAnD,CACE,UAAAC,IAAI,EAAG;AACLG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,+BAApB,EAAqD,MAArD,EAA6D;AAC3DC,yBAAO,EAAG;AADiD,iBAA7D;AAGD,eANH,EAMI,UAAA/B,KAAK,EAAI;AACTV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,+BAAlB,EAAmD,OAAnD,EAA4D;AAC1D+B,yBAAO,EAAG;AADgD,iBAA5D;AAGD,eAXH;AAcD;AACF;;;iDAEsB5C,I,EAAI;AAAA;;AACzB,gBAAGA,IAAI,IAAI,IAAX,EAAgB;AACdG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,kBAAIylB,aAAa,GAAGzlB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEuP,CAAN,CAAQ+B,EAA5B;AACA,kBAAI8e,QAAQ,GAAGpwB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEuM,CAArB;AACA,kBAAItK,KAAK,GAAGjC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEiF,CAAlB;AACA,kBAAIkhB,KAAK,GAAGnmB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEy9B,CAAlB;AAEA,mBAAKlX,QAAL,CAAcllB,OAAd,CACE,UAAAZ,OAAO,EAAE;AACP,oBAAGA,OAAO,CAAC6Q,EAAR,IAAcmU,aAAjB,EAA+B;AAC7BhlB,yBAAO,CAACsX,UAAR,CAAmBf,YAAnB,CAAgC/U,KAAhC,EAAuCkkB,KAAvC,IAAgDiK,QAAhD;AACD;AACF,eALH;AAOA,kBAAIvY,UAAU,GAAG7X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEuP,CAAvB;AACApP,qBAAO,CAACC,GAAR,CAAYyX,UAAZ;AACA,mBAAKzR,gBAAL,CAAsButC,gBAAtB,CAAuC97B,UAAvC,EAAmD9X,SAAnD,CACE,UAAAC,IAAI,EAAG;AACLG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,+BAApB,EAAqD,MAArD,EAA6D;AAC3DC,yBAAO,EAAG;AADiD,iBAA7D;AAGD,eANH,EAMI,UAAA/B,KAAK,EAAI;AACTV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,+BAAlB,EAAmD,OAAnD,EAA4D;AAC1D+B,yBAAO,EAAG;AADgD,iBAA5D;AAGD,eAXH;AAcD;AACF;;;kCAEOmD,M,EAAQ9D,K,EAAK;AAAA;;AAEnBhB,sBAAU,CAAC,YAAM;AACfd,qBAAO,CAACC,GAAR,CAAY,2BAAyB6B,KAAzB,GAA+B,EAA3C;;AACA,kBAAImwB,aAAa,GAAG,QAAI,CAACF,SAAL,CAAepmB,aAAf,CAA6BN,gBAA7B,CAA8C,2BAAyBvJ,KAAvE,EAA8E,CAA9E,CAApB;;AACA,kBAAGmwB,aAAa,CAAC1Q,SAAd,CAAwBgD,QAAxB,CAAiC,MAAjC,CAAH,EAA4C;AAC1C,wBAAI,CAAC3lB,cAAL,CAAoB0L,WAApB,CAAgC1E,MAAhC,EAAwC,MAAxC,EAAgDhG,SAAhD,CACE,UAAAC,IAAI,EAAE;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,0BAAI,CAACjB,cAAL,CAAoBm1C,uBAApB,CAA4C;AAAC7lC,2BAAO,EAAE,IAAV;AAAgBrO,wBAAI,EAAEA;AAAtB,mBAA5C,EAFI,CAIJ;;;AACA,0BAAI,CAACjB,cAAL,CAAoBwK,kBAApB,CAAuC,IAAvC;;AACA,0BAAI,CAACxK,cAAL,CAAoBuK,cAApB,CAAmCtJ,IAAnC,EANI,CAOJ;;;AAEA,sBAAG,QAAI,CAACyH,QAAL,CAAckC,kBAAd,MAAsC,CAAC,QAAI,CAAClC,QAAL,CAAciC,aAAd,EAA1C,EAAwE;AACtE,wBAAG,QAAI,CAACjC,QAAL,CAAcoC,sBAAd,MAA0C,CAAC,QAAI,CAACpC,QAAL,CAAcmC,iBAAd,EAA9C,EAAgF;AAC9E,8BAAI,CAACnC,QAAL,CAAcsC,gBAAd,CAA+B,IAA/B;;AACA,8BAAI,CAACtC,QAAL,CAAcuC,uBAAd,CAAsC,KAAtC;AACD;AACF;;AAED,sBAAI+0B,WAAW,GAAGzzB,QAAQ,CAACE,gBAAT,CAA0B,iBAA1B,CAAlB;AACAuzB,6BAAW,CAAC19B,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC7B,wBAAG,CAACA,OAAO,CAACihB,SAAR,CAAkBgD,QAAlB,CAA2B,MAA3B,CAAJ,EAAuC;AACrCjkB,6BAAO,CAACihB,SAAR,CAAkBkD,GAAlB,CAAsB,MAAtB;AACD;AACF,mBAJD;AAKD,iBAvBH,EAwBE,UAAA/jB,KAAK,EAAE;AACLV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,iBA1BH;AA4BD,eA7BD,MA6BK;AACHV,uBAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AACDD,qBAAO,CAACC,GAAR,CAAYgyB,aAAZ;AACD,aApCS,EAoCP,GApCO,CAAV;AAuCD;;;0CAEexK,I,EAAI;AAClB,iBAAKksB,kBAAL,GAA0BlsB,IAA1B;AACA,iBAAK3d,KAAL,CAAWzD,IAAX;AACD;;;8CAEmBohB,I,EAAK;AACvB,mBAAOA,IAAI,CAACa,IAAL,CAAU,UAAAhoB,OAAO;AAAA,qBAAIA,OAAO,CAACsnB,WAAR,KAAwB,QAA5B;AAAA,aAAjB,CAAP;AACD;;;qCAEU/iB,G,EAAKC,C,EAAC;AAAA;;AACf;AACA,gBAAGD,GAAG,CAAC+T,QAAP,EAAgB,CAEf;;AACD,iBAAK/B,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAG;AAClC,kBAAGA,OAAO,CAACkV,GAAR,IAAe1Q,CAAC,CAAC0Q,GAApB,EAAwB;AACtBlV,uBAAO,CAACooB,QAAR,GAAmB,CAACpoB,OAAO,CAACooB,QAA5B;AACApoB,uBAAO,CAACooB,QAAR,GAAmB,QAAI,CAACH,YAAL,GAAoBjoB,OAAvC,GAAiD,QAAI,CAACioB,YAAL,GAAoB,IAArE;AACA,uBAAO,IAAP;AACD,eAJD,MAIK;AACHjoB,uBAAO,CAACooB,QAAR,GAAmB,KAAnB;AACA,uBAAO,KAAP;AACD;AACF,aATD;AAWD;;;yCAEW;AAAA;;AACV,iBAAKH,YAAL,GAAoB,IAApB;AACA,iBAAKrR,KAAL,GAAa,CAAb;AACA,iBAAK2O,SAAL,GAAiB,OAAjB;AACA,iBAAKC,SAAL,GAAiB,KAAjB;AACA,iBAAK0C,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;AACA,iBAAK8V,UAAL,GAAkB;AAAEC,mBAAK,EAAE,KAAKH,SAAd;AAAyBC,uBAAS,EAAE,KAAKA;AAAzC,aAAlB;AACA,iBAAKJ,aAAL,CAAmBqB,aAAnB,CAAiC,KAAK7P,KAAtC,EAA6C,KAAK2O,SAAlD,EAA6D,KAAKC,SAAlE,EAA6ElmB,SAA7E,CACE,UAAAC,IAAI,EAAG;AACL,sBAAI,CAACgX,YAAL,GAAoBhX,IAApB;;AACA,sBAAI,CAACgX,YAAL,CAAkB3V,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnCA,uBAAO,CAAC,UAAD,CAAP,GAAsB,KAAtB;AACD,eAFD;AAKD,aARH,EAQI,UAAAI,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAVH;AAYD;;;yCAEW;AAAA;;AACV;AACAuE,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EAHU,CAIV;;AACA9E,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC;AAACE,sBAAQ,EAAE,QAAX;AAAqBC,sBAAQ,EAAE;AAA/B,aAAlC;AACAhF,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B;AACA9E,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AAEA,iBAAK+M,KAAL,IAAc,EAAd;;AAEA,gBAAG,KAAK+O,UAAL,IAAmB,EAAtB,EAAyB;AACvB,mBAAKP,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAE;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ,EADI,CAEJ;;AACAoF,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA5Q,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD;AAGD,eATH,EASI,UAAAI,KAAK,EAAE;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAXH;AAaD,aAdD,MAcK;AACH,mBAAKglB,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAG;AAELA,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD,EAFK,CAML;;AACA2E,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,eAVH,EAUI,UAAA/P,KAAK,EAAE;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAZH;AAcD;AAGF;;;8CAEmB+mB,I,EAAK;AAAA;;AACvB;AACAxiB,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,WAA9B,EAHuB,CAIvB;;AACA9E,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC;AAACE,sBAAQ,EAAE,QAAX;AAAqBC,sBAAQ,EAAE;AAA/B,aAAlC;AAEAhF,aAAC,CAAC,iBAAD,CAAD,CAAqBkF,GAArB,CAAyB,QAAzB,EAAmC,SAAnC;AACAlF,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AAEA,gBAAIwG,QAAQ,GAAG,EAAf;AACA;;;;;;;;;AASA,gBAAG8W,IAAI,IAAIvnB,SAAX,EAAqB;AAEnB,kBAAIiR,EAAE,GAAGsW,IAAI,CAAC5nB,IAAL,CAAU2V,GAAV,IAAiBtV,SAAjB,GAA6BunB,IAAI,CAAC5nB,IAAL,CAAU2V,GAAvC,GAA6C,EAAtD;AACA,kBAAInF,KAAK,GAAGoX,IAAI,CAAC5nB,IAAL,CAAUwQ,KAAV,IAAmBnQ,SAAnB,GAA+BunB,IAAI,CAAC5nB,IAAL,CAAUwQ,KAAzC,GAAiD,EAA7D;AACA,kBAAIhN,MAAJ;AAEAokB,kBAAI,CAAC5nB,IAAL,CAAU8nB,QAAV,CAAmBzmB,OAAnB,CAA2B,UAAAZ,OAAO,EAAI;AACpC,oBAAGA,OAAO,CAACsnB,WAAR,IAAuB,QAA1B,EAAmC;AACjCvkB,wBAAM,GAAG/C,OAAO,CAACunB,QAAR,GAAmB,GAAnB,GAAyBvnB,OAAO,CAACwnB,SAA1C;AACA,yBAAO,IAAP;AACD,iBAHD,MAGK;AACH,yBAAO,KAAP;AACD;AACF,eAPD;AAQAzkB,oBAAM,GAAGA,MAAM,IAAInD,SAAV,GAAsBmD,MAAtB,GAA+B,EAAxC;AACA,kBAAI0kB,IAAI,GAAGN,IAAI,CAAC5nB,IAAL,CAAUkoB,IAAV,IAAkB7nB,SAAlB,GAA8BunB,IAAI,CAAC5nB,IAAL,CAAUkoB,IAAxC,GAA+C,EAA1D;AACA,kBAAIC,GAAG,GAAGP,IAAI,CAAC5nB,IAAL,CAAUmoB,GAAV,IAAiB9nB,SAAjB,GAA6BunB,IAAI,CAAC5nB,IAAL,CAAUmoB,GAAvC,GAA6C,EAAvD;AACA,kBAAIC,WAAW,GAAG,EAAlB;AAEAR,kBAAI,CAAC5nB,IAAL,CAAU,MAAV,IAAoB,EAApB;AAAuB;AACvB4nB,kBAAI,CAAC5nB,IAAL,CAAU,YAAV,IAA0B,EAA1B;AAEA,kBAAIqC,UAAU,GAAG;AACfiP,kBAAE,EAAGA,EADU;AAEfd,qBAAK,EAAEA,KAFQ;AAGfhN,sBAAM,EAAEA,MAHO;AAIf0kB,oBAAI,EAAEA,IAJS;AAKfC,mBAAG,EAAEA,GALU;AAMfC,2BAAW,EAAEA;AANE,eAAjB;AASAjoB,qBAAO,CAACC,GAAR,CAAYwnB,IAAZ,EAAkB,KAAKksB,kBAAvB;AACA,mBAAK7pC,KAAL,CAAWse,IAAX;AAED,kBAAIsd,OAAO,GAAG,KAAKiO,kBAAL,CAAwBxiC,EAAtC;AAEC,mBAAKiV,QAAL,CAAcllB,OAAd,CACE,UAAAkxB,WAAW,EAAI;;;AACb,oBAAGA,WAAW,CAACjhB,EAAZ,IAAkBu0B,OAArB,EAA6B;AAC3B1lC,yBAAO,CAACC,GAAR,CAAYmyB,WAAZ;AACA,wBAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAExa,UAAb,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEf,YAAF,CAAevV,IAAf,CAAoBmmB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE5nB,IAA1B,CAAvB;AACD;AACF,eANH;AASA,mBAAKoG,gBAAL,CAAsButC,gBAAtB,CAAuC,KAAKG,kBAA5C,EAAgE/zC,SAAhE,CACE,UAAAC,IAAI,EAAE;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ,EADI,CAEJ;;AACAoF,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;;AAEA,wBAAI,CAAC3G,KAAL,CAAWse,IAAX;;AAEA,wBAAI,CAACvpB,MAAL,CAAY2D,OAAZ,CAAoB,sBAApB,EAA4C,MAA5C,EAAoD;AAClDC,yBAAO,EAAG;AADwC,iBAApD;AAID,eAbH,EAaI,UAAA/B,KAAK,EAAE;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADO,CAEP;;AACAuE,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;;AAEA,wBAAI,CAAC3G,KAAL,CAAWse,IAAX;;AAEA,wBAAI,CAACvpB,MAAL,CAAY6B,KAAZ,CAAkB,sBAAlB,EAA0C,MAA1C,EAAkD;AAChD+B,yBAAO,EAAG;AADsC,iBAAlD;AAID,eAzBH;AA2BA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCD;AAEF;;;2CAEgBoC,G,EAAM4G,G,EAAI;AAAA;;AAGzB,gBAAG,KAAKsa,UAAL,CAAgBC,KAAhB,IAAyBva,GAA5B,EAAgC;AAC9B,kBAAG,KAAKqa,SAAL,IAAkB,KAArB,EAA2B;AACzB,qBAAKA,SAAL,GAAiB,MAAjB;AACA,qBAAKC,UAAL,CAAgBD,SAAhB,GAA4B,MAA5B;AACD,eAHD,MAGK;AACH,qBAAKA,SAAL,GAAiB,KAAjB;AACA,qBAAKC,UAAL,CAAgBD,SAAhB,GAA4B,KAA5B;AACD;AACF,aARD,MAQK;AACH,mBAAKD,SAAL,GAAiBpa,GAAjB;AACA,mBAAKqa,SAAL,GAAiB,KAAjB;AACA,mBAAKC,UAAL,GAAkB;AAACC,qBAAK,EAAG,KAAKH,SAAd;AAAyBC,yBAAS,EAAG,KAAKA;AAA1C,eAAlB;AACD,aAfwB,CAiBzB;;;AACA7gB,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EAnByB,CAoBzB;;AACA9E,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC;AAACE,sBAAQ,EAAE,QAAX;AAAqBC,sBAAQ,EAAE;AAA/B,aAAlC;AACAhF,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B;AACA9E,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AACA,iBAAK+M,KAAL,GAAa,CAAb;AACA,iBAAKsR,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;AAEA,iBAAKyV,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAI,CAACgX,YAAL,GAAoB,EAApB,CAFI,CAGJ;;AACA5R,eAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,eAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACA5Q,kBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,wBAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,eAFD;AAGD,aAVH,EAUI,UAAAI,KAAK,EAAE;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aAZH;AAeD;;;qCAEU+mB,I,EAAMxD,C,EAAG;AAAA;;AAClBjkB,mBAAO,CAACC,GAAR,CAAYwnB,IAAZ,EAAkBxD,CAAlB;AAEA,iBAAKmC,QAAL,CAAcllB,OAAd,CACE,UAAAwW,UAAU,EAAE;AACV,kBAAG,CAAA+P,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEtW,EAAN,KAAYuG,UAAU,CAACvG,EAA1B,EAA6B;AAC3BuG,0BAAU,CAACE,UAAX,CAAsBf,YAAtB,CAAmC/Q,MAAnC,CAA0Cme,CAA1C,EAA6C,CAA7C;AACD;AACF,aALH;AAQA,iBAAKhe,gBAAL,CAAsButC,gBAAtB,CAAuC/rB,IAAvC,EAA6C7nB,SAA7C,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,+BAApB,EAAqD,MAArD,EAA6D;AAC3DC,uBAAO,EAAG;AADiD,eAA7D;AAGD,aANH,EAOE,UAAA/B,KAAK,EAAE;AACLV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,sBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkB,+BAAlB,EAAmD,OAAnD,EAA4D;AAC1D+B,uBAAO,EAAG;AADgD,eAA5D;AAGD,aAZH;AAcAzC,mBAAO,CAACC,GAAR,CAAY,KAAKmmB,QAAjB,EAA2BqB,IAA3B;AACD;;;wCAEa5iB,G,EAAKgiB,K,EAAOX,S,EAAW;AACnC,gBAAGrhB,GAAG,CAAC2Q,GAAJ,IAAW,SAAX,IAAwB3Q,GAAG,CAAC2Q,GAAJ,IAAW,OAAnC,IAA8C3Q,GAAG,CAAC2Q,GAAJ,IAAW,KAA5D,EAAkE;AAChE,mBAAK2Q,aAAL,CAAmBnhB,IAAnB,CAAwB;AAAC6hB,qBAAK,EAALA,KAAD;AAAQX,yBAAS,EAATA;AAAR,eAAxB;AACD;AACF;;;6CAEkBW,K,EAAeX,S,EAAc;AAAA;;AAC9C,iBAAKhP,KAAL,GAAa,CAAb;AACA,iBAAKqR,YAAL,GAAoB,IAApB,CAF8C,CAG9C;;AACAtjB,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,aAAC,CAAC,iBAAD,CAAD,CAAqB8E,QAArB,CAA8B,aAA9B,EAL8C,CAM9C;;AACA9E,aAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC;AAACE,sBAAQ,EAAE,QAAX;AAAqBC,sBAAQ,EAAE;AAA/B,aAAlC;AACAhF,aAAC,CAAC,MAAD,CAAD,CAAUiF,WAAV,CAAsB,YAAtB;AACAjF,aAAC,CAAC,MAAD,CAAD,CAAUkF,GAAV,CAAc,eAAd,EAA+B,EAA/B;AACA,iBAAKqe,SAAL,CAAe7c,aAAf,CAA6BsE,SAA7B,GAAyC,CAAzC;;AACA,gBAAG,KAAKgW,UAAL,IAAmB,EAAtB,EAAyB;AACvB,mBAAKP,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACgX,YAAL,GAAoB,EAApB;AACAhX,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD,EAHM,CAMN;;AACA2E,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,eAVH,EAWE,UAAA/P,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAbH;AAeD,aAhBD,MAgBK;AACH,mBAAKglB,aAAL,CAAmB+C,kBAAnB,CAAsC,KAAKvR,KAA3C,EAAkD,KAAK2O,SAAvD,EAAkE,KAAKC,SAAvE,EAAkF,KAAKG,UAAvF,EAAmG,KAAKC,SAAxG,EAAmHtmB,SAAnH,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,wBAAI,CAACgX,YAAL,GAAoB,EAApB;AACAhX,oBAAI,CAACqB,OAAL,CAAa,UAAAZ,OAAO,EAAI;AACtB,0BAAI,CAACuW,YAAL,CAAkBvV,IAAlB,CAAuBhB,OAAvB;AACD,iBAFD,EAHM,CAMN;;AACA2E,iBAAC,CAAC,wBAAD,CAAD,CAA4B6E,KAA5B,CAAkC,MAAlC;AACA7E,iBAAC,CAAC,iBAAD,CAAD,CAAqBwL,MAArB;AACD,eAVH,EAWE,UAAA/P,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAbH;AAeD;AACF;;;uCAIYszC,Y,EAAcpuC,M,EAAQ3B,K,EAAK;AAAA;;AACtCjE,mBAAO,CAACC,GAAR,CAAY+zC,YAAZ;AACA,gBAAIC,KAAK,GAAG,KAAKhuC,gBAAL,CAAsBiuC,YAAtB,CAAmCF,YAAnC,CAAZ;;AACA,gBAAGC,KAAK,IAAI/zC,SAAZ,EAAsB;AACpB,mBAAKtB,cAAL,CAAoB0L,WAApB,CAAgC1E,MAAhC,EAAwC,MAAxC,EAAgDhG,SAAhD,CACE,UAAAC,IAAI,EAAG;AACLG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,oBAAGA,IAAI,IAAIK,SAAX,EAAqB;AACnB,0BAAI,CAAC+F,gBAAL,CAAsBkuC,YAAtB,CAAmCH,YAAnC;;AACA,sBAAMf,OAAO,GAAG,QAAI,CAACA,OAAL,CAAamB,uBAAb,CAAqC,mFAArC,CAAhB;;AACA,sBAAMC,YAAY,GAAG,QAAI,CAACC,EAAL,CAAQxZ,eAAR,CAAwBmY,OAAxB,CAArB;;AACA,0BAAI,CAACG,eAAL,CAAqB9xC,IAArB,CAA0B+yC,YAA1B;;AACqBA,8BAAY,CAAC1jC,QAAb,CAAuB1M,KAAvB,GAA+BA,KAAK,GAAG,KAAR,GAAgBpE,IAAI,CAACoE,KAAL,CAAW,CAAX,EAAcmuC,aAA7D;AACAiC,8BAAY,CAAC1jC,QAAb,CAAuB/K,MAAvB,GAAgCA,MAAhC;AACAyuC,8BAAY,CAAC1jC,QAAb,CAAuBQ,EAAvB,GAA4B6iC,YAA5B;AACAK,8BAAY,CAAC1jC,QAAb,CAAuByV,QAAvB,GAAkCvmB,IAAlC;AACAw0C,8BAAY,CAAC1jC,QAAb,CAAuB4jC,gBAAvB;AACtB;AACF,eAdH,EAcK,UAAA7zC,KAAK,EAAG;AACTV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAhBH;AAmBD,aApBD,MAoBK,CAEJ;AAEF;;;;;;;yBAlrBUsyC,yB,EAAyB,yH,EAAA,+K,EAAA,2J,EAAA,8J,EAAA,+K,EAAA,uI;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;;;;;;;iFAML,8D;;;;;;;;;;;;;;;;;;;;;AChCjC;;AACI;;AACI;;AACI;;AAEI;;AAAiB;;AACrB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AA6IJ;;AACJ;;AAEJ;;AAOA;;AAAmG;AAAA,qBAAc,IAAAvsC,YAAA,EAAd;AAA4B,aAA5B;;AAE/F;;AACI;;AACA;;AAAuC;;AAA2B;;AACtE;;AAEA;;AAEI;;AACI;;AAkBJ;;AAIA;;AACI;;AACI;;AAII;;AACI;;AACI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AACpC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAqD;AAAA,qBAAS,IAAAmiB,gBAAA,SAAyB,OAAzB,CAAT;AAA0C,aAA1C;;AACjD;;AAAM;;AAAK;;AACX;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AAAqD;AAAA,qBAAS,IAAAA,gBAAA,SAAyB,SAAzB,CAAT;AAA4C,aAA5C;;AACjD;;AAAM;;AAAO;;AACb;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AAAqD;AAAA,qBAAS,IAAAA,gBAAA,SAAyB,MAAzB,CAAT;AAAyC,aAAzC;;AACjD;;AAAM;;AAAI;;AACV;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAC0D;AAAA,qBAAY,IAAA9W,YAAA,EAAZ;AAA0B,aAA1B;;AAGtD;;AAgDJ;;AACJ;;AACA;;AACJ;;AAGJ;;AACA;;AACI;;AACI;;AAEI;;AASA;;AAgNJ;;AACJ;;AACA;;AACI;;AACI;;AASA;;AAUA;;AASJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAkE;AAAA,qBAAS,IAAA+W,mBAAA,kBAAT;AAA0C,aAA1C;;AAA4C;;AAAI;;AAEtH;;AACJ;;AACJ;;AACJ;;AAEA;;AAEJ;;AAEA;;;;AAljBkB;;AAAA;;AAuJ0C;;AAAA,wFAAkB,YAAlB,EAAkB,IAAlB;;AAUjB;;AAAA;;AA8C4B;;AAAA;;AAMA;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AACE;;AAAA;;AAKX;;AAAA,oGAA8B,wBAA9B,EAA8B,GAA9B,EAA8B,cAA9B,EAA8B,KAA9B;;AAIT;;AAAA;;AAkDiB;;AAAA;;AASpC;;AAAA;;AASA;;AAAA;;AAoNA;;AAAA;;AAUD;;AAAA;;AAUA;;AAAA;;AAc0B;;AAAA;;;;;;;;;;wEDxhB9CmqB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTz0C,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;AAE3Bi1C,yBAAe,EAAE,CAAF;kBAAvB;AAAuB,WAAE,C;AACgC5pC,eAAK,EAAE,CAAF;kBAA9D,uDAA8D;mBAApD,4B,EAA8B;AAAC,wBAAQ;AAAT,a;AAAsB,WAAE,C;AACxC0e,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,Y;AAAuB,WAAE,C;AACZuJ,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AACeuiB,YAAE,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,W,EAAa;AAACE,kBAAI,EAAE;AAAP,a;AAA4B,WAAE;;;;;;;;;;;;;;;;;;;AElCxD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAmBaC,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,wI;AAAA;AAAA;ACjBhC;;AACC;;AACC;;AACI;;AACA;;AACF;;AACA;;AAGH;;AACD;;;;;;;;;wEDOaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTl2C,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AEnBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAsBA,UAAMi2C,MAAM,GAAW,CACrB;AAACxgB,YAAI,EAAE,EAAP;AAAWygB,kBAAU,EAAE,SAAvB;AAAkCC,iBAAS,EAAE;AAA7C,OADqB;AAErB;;AACA;AACA;AAAC1gB,YAAI,EAAE,SAAP;AAAkBvpB,iBAAS,EAAE,+FAA7B;AAAmDkqC,mBAAW,EAAE,CAAC,oEAAD,CAAhE;AAA6Eh1C,YAAI,EAAE;AAAC+e,eAAK,EAAE,CAAC,MAAD;AAAR;AAAnF,OAJqB,EAKrB;AAACsV,YAAI,EAAE,MAAP;AAAevpB,iBAAS,EAAE,+FAA1B;AAAgDkqC,mBAAW,EAAE,CAAC,oEAAD,CAA7D;AAA0Eh1C,YAAI,EAAE;AAAC+e,eAAK,EAAE,CAAC,OAAD;AAAR;AAAhF,OALqB,EAMrB;AAACsV,YAAI,EAAE,QAAP;AAAiBvpB,iBAAS,EAAE;AAA5B,OANqB;AAOrB;AACA;AAACupB,YAAI,EAAE,IAAP;AAAavpB,iBAAS,EAAE;AAAxB,OARqB,CAAvB;;UAeamqC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAajX,OAAb,CAAqB6W,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBI,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACR9W,mBAAO,EAAE,CAAC,6DAAaH,OAAb,CAAqB6W,MAArB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,W;AAKX,6BAAoBv6B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAHZ,eAAAC,gBAAA,GAAmB,0CAAnB;AACA,eAAAu6B,QAAA,GAAW,uDAAX;AAEiC;;;;uCAE5BhxC,K,EAAa;AACxB,mBAAO,KAAKwW,IAAL,CAAUiB,IAAV,CAAe,KAAKhB,gBAAL,GAAsB,eAAtB,GAAsCw6B,kBAAkB,CAAC,+OAA6OjxC,KAA7O,GAAmP,0BAApP,CAAxD,GAAwU,YAAxU,GAAqV,KAAKgxC,QAAzW,EAAmX,IAAnX,CAAP;AACD;;;sCAEWhxC,K,EAAa;AACvB,mBAAO,KAAKwW,IAAL,CAAUiB,IAAV,CAAe,KAAKhB,gBAAL,GAAsB,eAAtB,GAAsCw6B,kBAAkB,CAAC,idAUjDjxC,KAViD,gBAAD,CAAxD,GAU0B,YAV1B,GAUuC,KAAKgxC,QAV3D,EAUqE,IAVrE,CAAP;AAWD;;;;;;;yBAvBUD,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVn5B,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACnBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACQoB;;AAEI;;AACI;;AAA6B;;AAAwB;;AACzD;;AACA;;AAEI;;AAEJ;;AACJ;;;;;;;AAR0B;;AAAA;;AACW;;AAAA;;AAEW;;AAAA;;AAGpC;;AAAA;;;;;;AAYhB;;AAAoF;;AACpF;;;;;;;;AADuC;;AAA6C;;AAAA;;;;;;AAgBxF;;;;;;AAAuL;;;;;;;;AACvL;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAA2B;;;;;;;;AACzK;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAuE;;AAA4B;;;;;;AAPnM;;AACI;;AACI;;AAA6B;;AAAS;;AAC1C;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;;;;;AAJgB;;AAAA;;AACqD;;AAAA;;AACA;;AAAA;;;;;;;;AAkB7C;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAE5C;;AAChB;;AACxC;;;;;;AACA;;AACI;;AACJ;;;;;;;;AAdR;;AACI;;AACI;;AAA8B;;AAAgB;;AAClD;;AACA;;AACI;;AACmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AADnB;;AAEA;;AAKA;;AAIJ;;AACJ;;;;;;;;;AAfsC;;AAAA;;AAIgC;;AAAA;;AACxD;;AAAA;;AAKyB;;AAAA;;;;;;AAY3B;;AAC8C;;AAAM;;;;;;;;;;AADf,qHAAyC,UAAzC,EAAyC,wCAAzC;;AACS;;AAAA;;;;;;AAElD;;AACI;;AACJ;;;;;;;;AATJ;;AACI;;AAC6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAAiB;;AAAiB;;AAClC;;AAEJ;;AACA;;AAGJ;;;;;;;;;;;AAVsB;;AAIS;;AAAA;;AAGI;;AAAA;;;;;;AAY/B;;AACI;;AACJ;;;;;;;;AAVJ;;AACI;;AACmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AADnB;;AAEA;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAEP;;AAChB;;AACxC;;AACA;;AAGJ;;;;;;;;;AAXkC;;AAQC;;AAAA;;;;;;AArBvC;;AAEI;;AAWA;;AAYJ;;;;;;;;AAvB+C;;AAAA;;AAWY;;AAAA;;;;;;AAqC/C;;AACgD;;AAAgB;;;;;;;;AAA5D;;AAA4C;;AAAA;;;;;;AAIhD;;AAEoD;;AAA+B;;;;;;;;AADzC;;;;;;;;AAdtD;;AAEI;;AACI;;AAA8B;;AAAiB;;AACnD;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAEJ;;AAEA;;AACI;;AAGJ;;AACA;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAET;;AAChB;;AACxC;;AACJ;;AACJ;;;;;;;;;AApBsC;;AAAA;;AAKD;;AAAA;;AAKhB;;AAAA;;;;;;AAsBT;;AAE0D;;AAAiB;;;;;;;;;;AADvE,gIAAoD,UAApD,EAAoD,oDAApD;;AACsD;;AAAA;;;;;;AAE9D;;AACI;;AACJ;;;;;;;;AAVJ;;AACI;;AAC6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAAiB;;AAAiB;;AAClC;;AAGJ;;AACA;;AAGJ;;;;;;;;;;;AAX2B;;AAII;;AAAA;;AAII;;AAAA;;;;;;AAQ3B;;AACwD;;AAAgB;;;;;;;;;;;AAApE;;AADyC;;AACW;;AAAA;;;;;;AAQ5D;;AACI;;AACJ;;;;;;;;AAfJ;;AACI;;AAC4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAAiB;;AAAiB;;AAClC;;AAEJ;;AAEA;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAET;;AAChB;;AACxC;;AACA;;AAGJ;;;;;;;;;;;AAhBuC;;AAIN;;AAAA;;AASE;;AAAA;;;;;;AA3BvC;;AAEI;;AAYA;;AAiBJ;;;;;;;;AA7BoD;;AAAA;;AAYY;;AAAA;;;;;;;;;;;;;;;;;;;;AA9JpF;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAW;;AAAI;;AACxC;;AACI;;AAYJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAuD;;AAAK;;AAC5D;;AACI;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAC5D;;AAEJ;;AACA;;AACK;;AAEmD;;AAA+B;;AACvF;;AACJ;;AACJ;;AAEA;;AAWA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAoB;;AAAI;;AACjD;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAA4B;;AACpE;;AAAO;;AACjD;;AACI;;AAkBA;;AA2BJ;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAU;;AAAI;;AACvC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAA4B;;AAC5E;;AAAO;;AACjD;;AAEI;;AAyBA;;AAIA;;AAgCJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AApLM;;AAOoC;;AAAA;;AAmBD;;AAAA;;AAKiB;;AAAA;;AAMV;;AAAA;;AAeQ;;AAAA;;AAGK;;AAAA;;AAmBvB;;AAAA;;AAqCyB;;AAAA;;AAID;;AAAA;;AA8BnB;;AAAA;;;;UD3H9Bs5B,qB;AAyCX,uCAAqBv2C,cAArB,EAAoED,WAApE,EAAsGE,MAAtG,EAA6H;AAAA;;AAAxG,eAAAD,cAAA,GAAAA,cAAA;AAA+C,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AArC9F,eAAAu2C,aAAA,GAA8B,IAAI,4CAAJ,EAA9B;AACA,eAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAER,eAAArsB,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAlhB,OAAA,GAAU,CAAV;AACA,eAAAsN,SAAA,GAAY,EAAZ;AACA,eAAA9C,cAAA,GAAiB,EAAjB;AACA,eAAA2oB,WAAA,GAAc,EAAd;AACA,eAAAoa,YAAA,GAAe,EAAf;AAGA,eAAAC,QAAA,GAAW,IAAI,wDAAJ,CAAc;AACvBC,uBAAW,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,iBAAL,EAAD,CAAd,CADU;AAEvBr1C,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFiB;AAGvBoW,sBAAU,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAHU;AAIvBvS,iBAAK,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKyxC,WAAL,EAAD,CAAd,CAJgB;AAKvBC,wBAAY,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,kBAAL,EAAD,CAAd;AALS,WAAd,CAAX;AAQA,eAAArC,SAAA,GAAY,EAAZ;AACA,eAAAsC,WAAA,GAAc,EAAd;AAEA,eAAAxC,QAAA,GAAW,EAAX;AAEA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAArY,YAAA,GAAe,EAAf;AAMA,eAAA6a,eAAA,GAAkB,KAAlB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AAEgI;;;;qCAErH;AAAA;;AACT,iBAAKn3C,cAAL,CAAoBmW,iBAApB,GAAwCnV,SAAxC,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAAC0S,cAAL,GAAsB1S,IAAtB;AACA,sBAAI,CAAC0S,cAAL,GAAsB,QAAI,CAACA,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AACpD,oBAAIA,CAAC,CAAC2G,UAAF,IAAgB,cAApB,EAAoC;AAClC,yBAAO,IAAP;AACD,iBAFD,MAEO;AACL,yBAAO,KAAP;AACD;AACF,eANqB,CAAtB;AAOA;AACD,aAXH;AAcAnU,sBAAU,CAAC,YAAM;AACf;AACAmE,eAAC,CAAC,kBAAD,CAAD,CAAsBC,OAAtB,CAA8B;AAC5BC,uBAAO,EAAE;AADmB,eAA9B;AAGD,aALS,EAKP,IALO,CAAV;AAMA,iBAAKskB,UAAL;AAEA,iBAAK8rB,QAAL,GAAgB,KAAK52C,WAAL,CAAiBc,KAAjB,CAAuB;AACrC+1C,yBAAW,EAAE,KAAK72C,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB,CADwB;AAErCU,kBAAI,EAAE,EAF+B;AAGrCoW,wBAAU,EAAG,IAHwB;AAIrCvS,mBAAK,EAAE,KAAKtF,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB,CAJ8B;AAKrCi2C,0BAAY,EAAE,KAAKh3C,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB;AALuB,aAAvB,CAAhB;AAQA,iBAAKoM,SAAL;AACA,iBAAKspC,aAAL,CAAmBz1C,IAAnB,CAAwB,oEAAa,IAAb,CAAxB,EAA4CC,SAA5C,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACm2C,aAAL,CAAmBn2C,IAAnB;AACD,aAHH;AAMA,iBAAKw1C,gBAAL,CAAsB11C,IAAtB,CAA2B,oEAAa,IAAb,CAA3B,EAA+CC,SAA/C,CACE,UAAAC,IAAI,EAAI;AAEN,sBAAI,CAACo2C,0BAAL,CAAgCp2C,IAAI,CAAC,KAAD,CAApC,EAA6CA,IAAI,CAAC,GAAD,CAAjD;AACD,aAJH;AAOA,iBAAKjB,cAAL,CAAoBwW,YAApB,GAAmCxV,SAAnC,CACE,UAAAC,IAAI,EAAI;AACN,sBAAI,CAACwV,SAAL,GAAiBxV,IAAjB,CADM,CAEN;AACD,aAJH,EAKE,UAAAa,KAAK,EAAI,CACP;AACD,aAPH;AAUD;;;uCAEoB;AACnB,iBAAKuoB,aAAL,GAAqB,IAArB;AACA;;;;AAID;;;sCAEWpoB,O,EAAwB;AAAA;;AAClCC,sBAAU,CAAC,YAAM;AACf,kBAAI,QAAI,CAACX,MAAL,IAAeU,OAAO,CAACulB,QAAR,CAAiBplB,YAApC,EAAkD;AAChD,wBAAI,CAAC20C,YAAL,GAAoB,QAAI,CAACJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;;AACA,wBAAI,CAACo1C,YAAL,CAAkB10C,KAAlB;;AAEA,wBAAI,CAACi1C,gBAAL,GAAwB,QAAI,CAACX,QAAL,CAAch1C,GAAd,CAAkB,aAAlB,CAAxB;;AACA,wBAAI,CAAC21C,gBAAL,CAAsBj1C,KAAtB;;AAEA,wBAAI,CAACk1C,UAAL,GAAkB,QAAI,CAACZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;;AACA,wBAAI,CAAC41C,UAAL,CAAgBl1C,KAAhB;;AAEA,wBAAI,CAACg6B,YAAL,GAAoB,EAApB;AACA,wBAAI,CAACqY,cAAL,GAAsB,EAAtB;AACD;;AACD,sBAAI,CAACnzC,MAAL,GAAcU,OAAO,CAACulB,QAAR,CAAiBplB,YAA/B,CAde,CAef;;AACA,kBAAI,QAAI,CAACb,MAAL,IAAe,IAAnB,EAAyB;AAEvB,wBAAI,CAAC+6B,WAAL,GAAmB,EAAnB;AACA,wBAAI,CAACoa,YAAL,GAAoB,EAApB;AACA,wBAAI,CAACO,WAAL,GAAmB,EAAnB;AACA,wBAAI,CAACtC,SAAL,GAAiB,EAAjB;;AAEA,oBAAG,QAAI,CAACpzC,MAAL,CAAYi2C,mBAAZ,IAAmCl2C,SAAtC,EAAgD;AAC9C,uBAAK,IAAI4E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,QAAI,CAAC3E,MAAL,CAAYi2C,mBAAZ,CAAgCtzC,MAApD,EAA4DgC,CAAC,EAA7D,EAAiE;AAC/D,wBAAMssB,KAAK,GAAG,QAAI,CAACjxB,MAAL,CAAYi2C,mBAAZ,CAAgCtxC,CAAhC,EAAmC,OAAnC,CAAd;AACA,wBAAMjD,KAAK,GAAG,QAAI,CAAC1B,MAAL,CAAYi2C,mBAAZ,CAAgCtxC,CAAhC,EAAmC,OAAnC,CAAd;;AACA,4BAAI,CAACuxC,cAAL,CAAoBjlB,KAApB,EAA2BvvB,KAA3B;AACD;AACF;;AAID,wBAAI,CAAC0zC,QAAL,CAAch1C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,QAAI,CAACL,MAAL,CAAYqW,UAArD,EAAiE;AAAE/V,2BAAS,EAAG;AAAd,iBAAjE;;AACA,wBAAI,CAAC80C,QAAL,CAAch1C,GAAd,CAAkB,MAAlB,EAA0BC,QAA1B,CAAmC,QAAI,CAACL,MAAL,CAAYC,IAA/C,EAAqD;AAAEK,2BAAS,EAAE;AAAb,iBAArD;;AAEA,qBAAK,IAAIqE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,QAAI,CAAC3E,MAAL,CAAY8D,KAAZ,CAAkBnB,MAAtC,EAA8CgC,CAAC,EAA/C,EAAmD;AAEjD,sBAAMssB,MAAK,GAAG,QAAI,CAACjxB,MAAL,CAAY8D,KAAZ,CAAkBa,CAAlB,EAAqB,YAArB,CAAd;AACA,sBAAMjD,MAAK,GAAG,QAAI,CAAC1B,MAAL,CAAY8D,KAAZ,CAAkBa,CAAlB,EAAqB,eAArB,CAAd;;AAEA,0BAAI,CAACyuC,SAAL,CAAejyC,IAAf,CAAoB8vB,MAApB;;AAEA,sBAAIvvB,MAAK,IAAI,EAAb,EAAiB;AACf,4BAAI,CAACy0C,QAAL,CAAcllB,MAAd,EAAqBvvB,MAArB;;AACA,4BAAI,CAACg0C,WAAL,CAAiBv0C,IAAjB,CAAsB8vB,MAAtB;;AAGA,4BAAI,CAACkiB,cAAL,CAAoBhyC,IAApB,CAAyB;AAAE8vB,2BAAK,EAAEA,MAAT;AAAgBvvB,2BAAK,EAAEA;AAAvB,qBAAzB;AACD;AAEF;;AAEDf,0BAAU,CAAC,YAAM;AAAA;AAEb,wBAAMswB,KAAK,GAAG,QAAI,CAACjxB,MAAL,CAAY87B,UAAZ,CAAuBn3B,CAAvB,EAA0B,OAA1B,CAAd;AACA,wBAAMjD,KAAK,GAAG,QAAI,CAAC1B,MAAL,CAAY87B,UAAZ,CAAuBn3B,CAAvB,EAA0B,OAA1B,CAAd;AAEA,wBAAIq3B,gBAAgB,GAAG,EAAvB;;AACA,4BAAI,CAAC5pB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC9B,0BAAIA,CAAC,CAAC2G,UAAF,IAAgBmc,KAAhB,IAAyBA,KAAK,IAAI,cAAtC,EAAsD;AACpD9iB,yBAAC,CAAC8tB,cAAF,CAAiBrtB,MAAjB,CAAwB,UAAAL,CAAC,EAAI;AAC3B,8BAAIA,CAAC,CAAC2tB,OAAF,IAAax6B,KAAjB,EAAwB;AACtBs6B,4CAAgB,GAAGztB,CAAC,CAAC4tB,gBAArB;AACA,mCAAO,IAAP;AACD,2BAHD,MAGO;AACL,mCAAO,KAAP;AACD;AACF,yBAPD;AAQA,+BAAO,IAAP;AACD,uBAVD,MAUO;AACL,+BAAO,KAAP;AACD;AACF,qBAdD;;AAeA,4BAAI,CAACia,eAAL,CAAqBnlB,KAArB,EAA4BvvB,KAA5B,EAAmCs6B,gBAAnC;;AACA,4BAAI,CAACqa,aAAL,CAAmBplB,KAAnB,EAA0BtsB,CAA1B;;AAEA,4BAAI,CAACm2B,YAAL,CAAkB35B,IAAlB,CAAuB;AAAE8vB,2BAAK,EAAEA,KAAT;AAAgBvvB,2BAAK,EAAEA;AAAvB,qBAAvB;AAxBa;;AACf,uBAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,QAAI,CAAC3E,MAAL,CAAY87B,UAAZ,CAAuBn5B,MAA3C,EAAmDgC,CAAC,EAApD,EAAwD;AAAA;AAwBvD;AACF,iBA1BS,EA0BP,GA1BO,CAAV;AA6BAhE,0BAAU,CAAC,YAAM;AACf,sBAAIV,IAAI,GAAG,QAAI,CAACm1C,QAAL,CAAch1C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,0BAAI,CAACwT,SAAL,CAAenU,OAAf,CAAuB,UAAA6vB,EAAE,EAAI;AAC3B,wBAAIA,EAAE,CAACsL,OAAH,IAAcj8B,IAAlB,EAAwB;AAEtB,8BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACD;AACF,mBALD,EAFe,CAQf;;;AACAr3B,mBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACzBC,2BAAO,EAAE;AADgB,mBAA3B;AAKD,iBAdS,EAcP,IAdO,CAAV;AAgBArE,0BAAU,CAAC,YAAM;AAEf;AACAmE,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AAC1BC,2BAAO,EAAE;AADiB,mBAA5B;AAKD,iBARS,EAQP,IARO,CAAV;AASD;AACF,aA5GS,EA4GP,GA5GO,CAAV;AA8GD;;;sCAEQ;AAAA;;AAEP,iBAAKowC,QAAL,CAAc5wB,QAAd,CAAuB,YAAvB,EAAqC9W,YAArC,CAAkDlO,IAAlD,CAAuD,iEAAUO,SAAV,CAAvD,EAA6E,oEAAa,IAAb,CAA7E,EAAiG,iEAAjG,EAA6GN,SAA7G,CAAuH,UAAA8vB,aAAa,EAAI;AACtI1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;AACA1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;;AACA,sBAAI,CAAC9wB,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI1tB,UAAU,GAAG,EAAjB;AACA,kBAAIc,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYwB,gBAAxB;AACA,kBAAIU,QAAQ,GAAGqtB,aAAa,CAAC,CAAD,CAA5B;AACA,kBAAIO,QAAQ,GAAGP,aAAa,CAAC,CAAD,CAA5B;;AAEA,kBAAIrtB,QAAQ,IAAInC,SAAhB,EAA2B;AACzBgC,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB;AAHI,iBAAb;AAKD,eAND,MAMO,IAAI5tB,QAAQ,IAAInC,SAAZ,IAAyB,QAAI,CAACC,MAAL,CAAYqW,UAAZ,IAA0B,CAAC,CAAxD,EAA2D;AAChEtU,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB,QAHI;AAIXjvB,8BAAY,EAAE,CAAC;AAJJ,iBAAb;AAMD,eAPM,MAOA;AACLkB,0BAAU,GAAG;AACX9B,sBAAI,EAAE,YADK;AAEXgC,0BAAQ,EAAE,YAFC;AAGXP,uBAAK,EAAEouB,QAHI;AAIXjvB,8BAAY,EAAEqB;AAJH,iBAAb;AAMD;;AAEDrC,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;;AACA,sBAAI,CAACtD,cAAL,CAAoB0D,qBAApB,CAA0CU,KAA1C,EAAiDd,UAAjD,EAA6DtC,SAA7D,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD,eANH,EAOE,UAAAlvB,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AAEA,wBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAAEC,2BAAO,EAAE;AAAX,mBAA9C;;AACA,0BAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,8BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,mBAAnC;;AACA,0BAAI,CAAC4yC,QAAL,CAAch1C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyCyvB,QAAzC,EAAmD;AAAExvB,6BAAS,EAAE;AAAb,mBAAnD;;AACA,0BAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyByZ,QAAzB;AACD,iBALD,MAKO;AACL,0BAAI,CAACpxB,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAE+B,2BAAO,EAAE;AAAX,mBAAxC;AAED;AACF,eArBH;AAuBD,aAvDD;AAwDD;;;2CAEgB;AAAA;;AACf,iBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAIvtB,QAAQ,GAAG,KAAKkzC,QAAL,CAAch1C,GAAd,CAAkB,YAAlB,EAAgCsB,KAA/C;AACA,gBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYwB,gBAAxB;AACA,gBAAIO,UAAU,GAAG;AACfE,sBAAQ,EAAE,YADK;AAEfP,mBAAK,EAAE;AAFQ,aAAjB;AAIA7B,mBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,iBAAKtD,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA;;;;AAGA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,sBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAC2lB,QAAL,CAAch1C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,CAAC,CAA1C,EAA6C;AAAEC,yBAAS,EAAE;AAAb,eAA7C;;AACA,sBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;AACD,aAVH,EAWE,UAAA9V,KAAK,EAAI;AACPV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA;;;;;AAIA,sBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,kBAAIjC,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,wBAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAAEC,yBAAO,EAAE;AAAX,iBAA9C;;AACA,wBAAI,CAAC8yC,QAAL,CAAch1C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,CAAC,CAA1C,EAA6C;AAAEC,2BAAS,EAAE;AAAb,iBAA7C;;AACA,wBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;AAED,eALD,MAKO;AACL,wBAAI,CAAC3X,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAE+B,yBAAO,EAAE;AAAX,iBAAxC;AAED;AACF,aA5BH;AA8BD;;;uCAEYoC,G,EAAK;AAAA;;AAChB,iBAAKjG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAM6mB,OAAO,GAAG5xC,GAAG,CAACE,MAAJ,CAAWlD,KAA3B;AACA,gBAAM+D,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAA3B;AACA,gBAAMO,UAAU,GAAG;AAAEE,sBAAQ,EAAE,MAAZ;AAAoBP,mBAAK,EAAE40C;AAA3B,aAAnB;AACA,iBAAK73C,cAAL,CAAoB4Z,UAApB,CAA+B5S,MAA/B,EAAuC1D,UAAvC,EAAmDvC,IAAnD,CAAwD,oEAAa,GAAb,CAAxD,EAA2EC,SAA3E,CACE,UAAAC,IAAI,EAAI;AACNG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA/vB,kBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,kBAAI,CAAC,UAAD,CAAJ,GAAmB42C,OAAnB;;AACA,sBAAI,CAAC73C,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AAEAW,wBAAU,CAAC,YAAM;AACf,oBAAIV,IAAI,GAAG,QAAI,CAACm1C,QAAL,CAAch1C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,wBAAI,CAACwT,SAAL,CAAenU,OAAf,CAAuB,UAAA6vB,EAAE,EAAI;AAC3B,sBAAIA,EAAE,CAACsL,OAAH,IAAcj8B,IAAlB,EAAwB;AAEtB,4BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACD;AACF,iBALD,EAFe,CAQf;;;AACAr3B,iBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACzBC,yBAAO,EAAE;AADgB,iBAA3B;AAKD,eAdS,EAcP,IAdO,CAAV;AAeD,aAxBH,EAwBK,UAAAzE,KAAK,EAAI;AACVV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,kBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,kBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,kBAAI,CAAC,UAAD,CAAJ,GAAmB42C,OAAnB;;AACA,sBAAI,CAAC73C,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,sBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,kBAAI,OAAQlvB,KAAK,CAACA,KAAd,IAAwB,QAA5B,EAAsC;AACpC,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,yBAAO,EAAE;AAD6B,iBAAxC;AAGD,eAJD,MAIO;AACL,wBAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,cAApB,EAAoC,EAApC,EAAwC;AACtCC,yBAAO,EAAE;AAD6B,iBAAxC;AAGD;;AAED3B,wBAAU,CAAC,YAAM;AACf,oBAAIV,IAAI,GAAG,QAAI,CAACm1C,QAAL,CAAch1C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,wBAAI,CAACwT,SAAL,CAAenU,OAAf,CAAuB,UAAA6vB,EAAE,EAAI;AAC3B,sBAAIA,EAAE,CAACsL,OAAH,IAAcj8B,IAAlB,EAAwB;AAEtB,4BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACD;AACF,iBALD,EAFe,CAQf;;;AACAr3B,iBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACzBC,yBAAO,EAAE;AADgB,iBAA3B;AAKD,eAdS,EAcP,IAdO,CAAV;AAeD,aA1DH;AA4DD;;;wCAEaN,G,EAAKC,C,EAAG;AACpB,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAKwlB,aAAL,CAAmBpwC,IAAnB,CAAwB;AAAEH,iBAAG,EAAHA,GAAF;AAAOC,eAAC,EAADA;AAAP,aAAxB;AACD;;;gDAEqBD,G,EAAKC,C,EAAG;AAC5B,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAKylB,gBAAL,CAAsBrwC,IAAtB,CAA2B;AAAEH,iBAAG,EAAHA,GAAF;AAAOC,eAAC,EAADA;AAAP,aAA3B;AACD;;;gDAEqBD,G,EAAKC,C,EAAG;AAAA;;AAC5B,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK+lB,YAAL,GAAoB,KAAKJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;AACA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;AACA,gBAAMQ,QAAQ,GAAG,KAAKszC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAtD;AACA,gBAAMouB,QAAQ,GAAGprB,GAAG,CAACE,MAAJ,CAAWlD,KAA5B;AAEA,iBAAK8zC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCC,QAArC,CAA8CyvB,QAA9C,EAAwD;AAAExvB,uBAAS,EAAE;AAAb,aAAxD;;AAEA,gBAAIwvB,QAAQ,IAAI,EAAhB,EAAoB;AAClB,kBAAI/tB,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAEgvB,KAFK;AAGfvvB,qBAAK,EAAEouB,QAHQ;AAIfjvB,4BAAY,EAAEqB;AAJC,eAAjB;AAOA,mBAAK44B,YAAL,CAAkBn2B,CAAlB,IAAuB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEouB;AAAvB,eAAvB;AACA,kBAAIrqB,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AACA3B,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;AAEA,mBAAKtD,cAAL,CAAoByZ,wBAApB,CAA6CzS,MAA7C,EAAqD1D,UAArD,EAAiEvC,IAAjE,CAAsE,oEAAa,IAAb,CAAtE,EAA0FC,SAA1F,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ,EADM,CAEN;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD,eANH,EAOE,UAAAlvB,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADO,CAEP;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAIlvB,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,2BAApB,EAAiD,EAAjD,EAAqD;AACnDC,2BAAO,EAAE;AAD0C,mBAArD;AAGD;AACF,eArBH;AAwBD,aApCD,MAoCO;AACL,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD;AACF;;;wCAEa9qB,C,EAAG;AAAA;;AACf,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK+lB,YAAL,GAAoB,KAAKJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;AACA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;AACA,gBAAMA,KAAK,GAAG,KAAK8zC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;;AACA,gBAAIuvB,KAAK,IAAI,EAAT,IAAevvB,KAAK,IAAI,EAA5B,EAAgC;AAE9B,kBAAIK,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAEgvB,KAFK;AAGfvvB,qBAAK,EAAEA;AAHQ,eAAjB;AAKA,kBAAI+D,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AAEA,kBAAIw6B,gBAAgB,GAAG,EAAvB;AACA,mBAAK5pB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC9B,oBAAIA,CAAC,CAAC2G,UAAF,IAAgBmc,KAAhB,IAAyBA,KAAK,IAAI,cAAtC,EAAsD;AACpD9iB,mBAAC,CAAC8tB,cAAF,CAAiBrtB,MAAjB,CAAwB,UAAAL,CAAC,EAAI;AAC3B,wBAAIA,CAAC,CAAC2tB,OAAF,IAAax6B,KAAjB,EAAwB;AACtBs6B,sCAAgB,GAAGztB,CAAC,CAAC4tB,gBAArB;AACA,6BAAO,IAAP;AACD,qBAHD,MAGO;AACL,6BAAO,KAAP;AACD;AACF,mBAPD;AAQA,yBAAO,IAAP;AACD,iBAVD,MAUO;AACL,yBAAO,KAAP;AACD;AACF,eAdD;AAeAt8B,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,mBAAKyzC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,aAA5B,EAA2CC,QAA3C,CAAoD27B,gBAApD,EAAsE;AAAE17B,yBAAS,EAAE;AAAb,eAAtE;AAEA,mBAAKw6B,YAAL,CAAkB35B,IAAlB,CAAuB;AAAE8vB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEA;AAAvB,eAAvB;AAEA,mBAAKjD,cAAL,CAAoByZ,wBAApB,CAA6CzS,MAA7C,EAAqD1D,UAArD,EAAiEvC,IAAjE,CAAsE,oEAAa,IAAb,CAAtE,EAA0FC,SAA1F,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAAC41C,gBAAL,GAAwB,KAAxB;AACAj1C,0BAAU,CAAC,YAAM;AAEf;AACAmE,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AAC1BC,2BAAO,EAAE;AADiB,mBAA5B;AAKD,iBARS,EAQP,IARO,CAAV;AASD,eAfH,EAgBE,UAAAzE,KAAK,EAAI;AACPV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAACmmB,gBAAL,GAAwB,KAAxB;;AACA,oBAAI,OAAQr1C,KAAK,CAACA,KAAd,IAAwB,QAA5B,EAAsC;AACpC,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,+BAApB,EAAqD,IAArD,EAA2D;AACzDC,2BAAO,EAAE;AADgD,mBAA3D;AAGD;;AAED3B,0BAAU,CAAC,YAAM;AAEf;AACAmE,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AAC1BC,2BAAO,EAAE;AADiB,mBAA5B;AAKD,iBARS,EAQP,IARO,CAAV;AASD,eAxCH;AA0CD,aAxED,MAwEO;AACL,mBAAKvG,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD;AACF;;;wCAEa/qB,G,EAAKC,C,EAAG;AAAA;;AAEpB,gBAAID,GAAG,CAACE,MAAJ,IAAc7E,SAAlB,EAA6B;AAC3BY,wBAAU,CAAC,YAAM;AACf,wBAAI,CAAC60C,YAAL,GAAoB,QAAI,CAACJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;;AACA,wBAAI,CAACo1C,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBmT,UAAxB,CAAmC;AAAEmZ,uBAAK,EAAEvsB,GAAG,CAACE,MAAJ,CAAWlD,KAApB;AAA2BA,uBAAK,EAAE;AAAlC,iBAAnC,EAFe,CAGf;;;AACA,oBAAIgD,GAAG,CAACE,MAAJ,CAAWlD,KAAX,IAAoB,EAAxB,EAA4B;AAC1B,sBAAI06B,WAAW,GAAG,QAAI,CAAChqB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAChD,2BAAOA,CAAC,CAAC,YAAD,CAAD,IAAmBzJ,GAAG,CAACE,MAAJ,CAAWlD,KAArC;AACD,mBAFiB,EAEf,GAFe,EAEV,gBAFU,CAAlB;;AAGA,0BAAI,CAACq5B,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,WAAtB;AACA,0BAAI,CAAC+Y,YAAL,CAAkBxwC,CAAlB,IAAuBD,GAAG,CAACE,MAAJ,CAAWlD,KAAlC;AACD,iBAND,MAMO;AACL,sBAAI06B,aAAW,GAAG,EAAlB;AACA,0BAAI,CAACrB,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,aAAtB;;AACA,0BAAI,CAAC+Y,YAAL,CAAkBxvC,MAAlB,CAAyBhB,CAAzB,EAA4B,CAA5B;AACD;AAIF,eAlBS,EAkBP,GAlBO,CAAV;AAmBD,aApBD,MAoBO;AAEL,kBAAIuhB,KAAK,GAAG7a,WAAW,CAAC,UAACC,GAAD,EAAS;AAC/B,oBAAI;AACF,sBAAI8wB,WAAW,GAAG,QAAI,CAAChqB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAChD,2BAAOA,CAAC,CAAC,YAAD,CAAD,IAAmBzJ,GAA1B;AACD,mBAFiB,EAEf,GAFe,EAEV,gBAFU,CAAlB;;AAGA,0BAAI,CAACq2B,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,WAAtB;;AACA,0BAAI,CAAC+Y,YAAL,CAAkBh0C,IAAlB,CAAuBuD,GAAvB,EALE,CAMF;;;AACA,sBAAI,QAAI,CAACq2B,WAAL,IAAoBh7B,SAAxB,EAAmC;AACjC2O,iCAAa,CAACwX,KAAD,CAAb;AACD;AAEF,iBAXD,CAWE,OAAOjhB,CAAP,EAAU;AACVpF,yBAAO,CAACC,GAAR,CAAYmF,CAAZ;AACD;AACF,eAfsB,EAepB,GAfoB,CAAvB;AAiBA;;;;;;;;AAUD;AACF;;;6CAEkBP,G,EAAKC,C,EAAG;AAAA;;AAEzBhE,sBAAU,CAAC,YAAM;AACf,sBAAI,CAACq1C,UAAL,GAAkB,QAAI,CAACZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;;AACA,sBAAI,CAAC41C,UAAL,CAAgBzzC,EAAhB,CAAmBoC,CAAnB,EAAsBmT,UAAtB,CAAiC;AAAEk6B,0BAAU,EAAEttC,GAAG,CAACE,MAAJ,CAAWlD,KAAzB;AAAgCuwC,6BAAa,EAAE;AAA/C,eAAjC,EAFe,CAGf;;;AACA,kBAAIvtC,GAAG,CAACE,MAAJ,CAAWlD,KAAX,IAAoB,EAAxB,EAA4B;AAE1B,wBAAI,CAACg0C,WAAL,CAAiB/wC,CAAjB,IAAsBD,GAAG,CAACE,MAAJ,CAAWlD,KAAjC;AACD,eAHD,MAGO;AAEL,wBAAI,CAACg0C,WAAL,CAAiB/vC,MAAjB,CAAwBhB,CAAxB,EAA2B,CAA3B;AACD;AAIF,aAdS,EAcP,GAdO,CAAV;AAeD;;;qDAE0BD,G,EAAKC,C,EAAG;AAAA;;AACjC,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAKumB,UAAL,GAAkB,KAAKZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;AACA,gBAAM6wB,KAAK,GAAG,KAAK+kB,UAAL,CAAgBzzC,EAAhB,CAAmBoC,CAAnB,EAAsBvE,GAAtB,CAA0B,YAA1B,EAAwCsB,KAAtD;AACA,gBAAMouB,QAAQ,GAAGprB,GAAG,CAACE,MAAJ,CAAWlD,KAA5B,CAJiC,CAMjC;;AAEA,gBAAIouB,QAAQ,IAAI,EAAhB,EAAoB;AAClB,kBAAM/tB,UAAU,GAAG;AAAEE,wBAAQ,EAAEgvB,KAAZ;AAAmBvvB,qBAAK,EAAEouB;AAA1B,eAAnB;AAEA,mBAAKqjB,cAAL,CAAoBxuC,CAApB,IAAyB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEouB;AAAvB,eAAzB;AACA,kBAAIrqB,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AAIA,mBAAK/C,cAAL,CAAoB4Z,UAApB,CAA+B5S,MAA/B,EAAuC1D,UAAvC,EAAmDvC,IAAnD,CAAwD,oEAAa,IAAb,CAAxD,EAA4EC,SAA5E,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC,EAFM,CAGN;;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AACD,eANH,EAMK,UAAAa,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADU,CAEV;;AAEA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,oBAAI,OAAQlvB,KAAK,CAACA,KAAd,IAAwB,QAA5B,EAAsC;AACpC,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD,iBAJD,MAIO;AACL,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,eAApB,EAAqC,EAArC,EAAyC;AACvCC,2BAAO,EAAE;AAD8B,mBAAzC;AAGD;AACF,eAtBH;;AAyBA,kBAAI2uB,KAAK,IAAI,YAAb,EAA2B;AACzB,oBAAMvxB,IAAI,GAAG,KAAKM,MAAlB;AACAN,oBAAI,CAAC,cAAD,CAAJ,GAAuB,MAAvB;AACAA,oBAAI,CAAC,WAAD,CAAJ,GAAoBowB,QAApB;AACApwB,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACA,qBAAKjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;AACD;AAEF,aAzCD,MAyCO;AACL,mBAAKjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACA,mBAAK0jB,cAAL,CAAoBxuC,CAApB,IAAyB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAE;AAAvB,eAAzB;AACD;AACF;;;wCAEa1B,M,EAAQ;AAAA;;AAEpB,iBAAKg2C,UAAL,GAAkB,KAAKZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;AACA,gBAAM6wB,KAAK,GAAG,KAAK+kB,UAAL,CAAgBzzC,EAAhB,CAAmBvC,MAAM,CAAC2E,CAA1B,EAA6BvE,GAA7B,CAAiC,YAAjC,EAA+CsB,KAA7D;AACA,gBAAMouB,QAAQ,GAAG9vB,MAAM,CAAC0E,GAAP,CAAWE,MAAX,CAAkBlD,KAAnC;AACA,gBAAM+D,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAA3B;AACA,gBAAMO,UAAU,GAAG;AAAEE,sBAAQ,EAAEgvB,KAAZ;AAAmBvvB,mBAAK,EAAEouB;AAA1B,aAAnB,CANoB,CAOpB;;AAEA,iBAAKqjB,cAAL,CAAoBhyC,IAApB,CAAyB;AAAE8vB,mBAAK,EAAEA,KAAT;AAAgBvvB,mBAAK,EAAEouB;AAAvB,aAAzB;;AAEA,gBAAImB,KAAK,IAAIlxB,SAAT,IAAsB+vB,QAAQ,IAAI,EAAtC,EAA0C;AACxC,mBAAKrxB,cAAL,CAAoB4Z,UAApB,CAA+B5S,MAA/B,EAAuC1D,UAAvC,EAAmDvC,IAAnD,CAAwD,oEAAa,IAAb,CAAxD,EAA4EC,SAA5E,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACA;;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAACi2C,eAAL,GAAuB,KAAvB;AACD,eAPH,EAOK,UAAAp1C,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,wBAAI,CAACo1C,eAAL,GAAuB,KAAvB;;AAEA,wBAAI,CAACl3C,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,oBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACrB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,eAApB,EAAqC,SAArC,EAAgD;AAACC,2BAAO,EAAE;AAAV,mBAAhD;AACD,iBAFD,MAEK;AACH,0BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAAC0V,OAAxB,EAAiC,OAAjC,EAA0C;AAAC3T,2BAAO,EAAE;AAAV,mBAA1C;AACD;AACF,eAnBH;AAqBD,aAtBD,MAsBO;AACL,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACD;AACF;;;6CAEkBuN,C,EAAI/wB,C,EAAIi9B,C,EAAE;AAC3B,gBAAIlM,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B2xB,qBAAK,EAAE,IAAI,0DAAJ,CAAgB+L,CAAhB,EAAmB,CAAC,0DAAWvqB,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CADqB;AAE5B1e,qBAAK,EAAE,IAAI,0DAAJ,CAAgBuK,CAAhB,EAAmB,CAAC,0DAAWwG,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CAFqB;AAG5BoK,2BAAW,EAAE,IAAI,0DAAJ,CAAgB0e,CAAhB,EAAmB,CAAC,0DAAWz2B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB;AAHe,eAAvB,CAAP;AAKD,aAND,MAMO;AACL,qBAAO,KAAK5hB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B2xB,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWxe,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADqB;AAE5B1e,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+Q,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAFqB;AAG5BoK,2BAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW/X,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAHe,eAAvB,CAAP;AAKD;AACF;;;4CAEiB4c,C,EAAI/wB,C,EAAE;AACtB,mBAAO,KAAKzN,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B2xB,mBAAK,EAAE+L,CADqB;AAE5Bt7B,mBAAK,EAAEuK;AAFqB,aAAvB,CAAP;AAID;;;sCAEW+wB,C,EAAI/wB,C,EAAE;AAChB,gBAAI+wB,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0yC,0BAAU,EAAE,IAAI,0DAAJ,CAAgBhV,CAAhB,EAAmB,CAAC,0DAAWvqB,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CADgB;AAE5B6xB,6BAAa,EAAE,IAAI,0DAAJ,CAAgBhmC,CAAhB,EAAmB,CAAC,0DAAWwG,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB;AAFa,eAAvB,CAAP;AAID,aALD,MAKO;AACL,qBAAO,KAAK5hB,WAAL,CAAiBc,KAAjB,CAAuB;AAC5B0yC,0BAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWv/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADgB;AAE5B6xB,6BAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWx/B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAFa,eAAvB,CAAP;AAID;AAEF;;;mCAEQ4c,C,EAAI/wB,C,EAAI;AACf,iBAAK+pC,UAAL,GAAkB,KAAKZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;;AACA,gBAAI48B,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,mBAAKi2C,UAAL,CAAgB70C,IAAhB,CAAqB,KAAKo0C,WAAL,CAAiBvY,CAAjB,EAAoB/wB,CAApB,CAArB;AACD,aAFD,MAEO;AACL,mBAAK0pC,eAAL,GAAuB,IAAvB;AACA,mBAAKK,UAAL,CAAgB70C,IAAhB,CAAqB,KAAKo0C,WAAL,EAArB;AACD;AAEF;;;yCAEcvY,C,EAAI/wB,C,EAAI;AACrB,iBAAK8pC,gBAAL,GAAwB,KAAKX,QAAL,CAAch1C,GAAd,CAAkB,aAAlB,CAAxB;AACA,iBAAK21C,gBAAL,CAAsB50C,IAAtB,CAA2B,KAAKm0C,iBAAL,CAAuBtY,CAAvB,EAA0B/wB,CAA1B,CAA3B;AACD;;;0CAEe+wB,C,EAAI/wB,C,EAAIi9B,C,EAAI;AAC1B,iBAAKsM,YAAL,GAAoB,KAAKJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;;AACA,gBAAI48B,CAAC,IAAIj9B,SAAT,EAAoB;AAClB,mBAAKy1C,YAAL,CAAkBr0C,IAAlB,CAAuB,KAAKs0C,kBAAL,CAAwBzY,CAAxB,EAA2B/wB,CAA3B,EAA8Bi9B,CAA9B,CAAvB;AACD,aAFD,MAEO;AACL,mBAAKsM,YAAL,CAAkBr0C,IAAlB,CAAuB,KAAKs0C,kBAAL,EAAvB;AACA,mBAAKG,gBAAL,GAAwB,IAAxB;AACD;AACF;;;wCAEaj0C,K,EAAO;AAAA;;AACnB,iBAAK6zC,YAAL,GAAoB,KAAKJ,QAAL,CAAch1C,GAAd,CAAkB,cAAlB,CAApB;AAEA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,OAAhC,EAAyCsB,KAAvD;AACA,gBAAMA,KAAK,GAAG,KAAK8zC,YAAL,CAAkBjzC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,OAAhC,EAAyCsB,KAAvD,CAJmB,CAMnB;;AAEA,gBAAIuvB,KAAK,IAAI,EAAb,EAAiB;AAEf,kBAAIxrB,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AAEA,kBAAIO,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAEgvB,KAFK;AAGfvvB,qBAAK,EAAEA;AAHQ,eAAjB;AAMA,mBAAKjD,cAAL,CAAoB6G,wBAApB,CAA6CG,MAA7C,EAAqD1D,UAArD,EAAiEtC,SAAjE,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACzCC,yBAAO,EAAE;AADgC,iBAA3C;;AAGA,wBAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;AACD,eAPH,EAOK,UAAAO,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,oBAAIA,KAAK,CAAC6B,MAAN,IAAgB,GAApB,EAAyB;AACvB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGD;AACF,eAdH;AAgBD,aA1BD,MA0BO;AACL,mBAAKszC,gBAAL,GAAwB,KAAxB;AACD;;AAED,iBAAK9a,YAAL,CAAkBn1B,MAAlB,CAAyBhE,KAAzB,EAAgC,CAAhC;AACA,iBAAK6zC,YAAL,CAAkB5vC,QAAlB,CAA2BjE,KAA3B;AACA,iBAAKwzC,YAAL,CAAkBxvC,MAAlB,CAAyBhE,KAAzB,EAAgC,CAAhC;AACA,iBAAKo5B,WAAL,CAAiBp1B,MAAjB,CAAwBhE,KAAxB,EAA+B,CAA/B;AACD;;;sCAEWA,K,EAAO;AAAA;;AACjB,iBAAKq0C,UAAL,GAAkB,KAAKZ,QAAL,CAAch1C,GAAd,CAAkB,OAAlB,CAAlB;AAGA,gBAAM6wB,KAAK,GAAG,KAAK+kB,UAAL,CAAgBzzC,EAAhB,CAAmBZ,KAAnB,EAA0BvB,GAA1B,CAA8B,YAA9B,EAA4CsB,KAA1D;AACA,gBAAMA,KAAK,GAAG,KAAKs0C,UAAL,CAAgBzzC,EAAhB,CAAmBZ,KAAnB,EAA0BvB,GAA1B,CAA8B,eAA9B,EAA+CsB,KAA7D,CALiB,CAOjB;;AAEA,gBAAIuvB,KAAK,IAAI,EAAb,EAAiB;AAEf,kBAAIxrB,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AAEA,kBAAIO,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAEgvB,KAFK;AAGfvvB,qBAAK,EAAEA;AAHQ,eAAjB;AAMA,mBAAKjD,cAAL,CAAoB6G,wBAApB,CAA6CG,MAA7C,EAAqD1D,UAArD,EAAiEtC,SAAjE,CACE,UAAAC,IAAI,EAAI;AACNG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,wBAAI,CAAChB,MAAL,CAAY2D,OAAZ,CAAoB,eAApB,EAAqC,IAArC,EAA2C;AAACC,yBAAO,EAAE;AAAV,iBAA3C;;AACA,wBAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;AACD,eANH,EAMK,UAAAO,KAAK,EAAI;AACVV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,oBAAGA,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACrB,0BAAI,CAAC1D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAAC0V,OAAxB,EAAiC,OAAjC,EAA0C;AAAC3T,2BAAO,EAAE;AAAV,mBAA1C;AACD;AACF,eAXH;AAaD,aAvBD,MAuBO;AACL,mBAAKqzC,eAAL,GAAuB,KAAvB;AAED;;AACD,iBAAKxC,cAAL,CAAoBxtC,MAApB,CAA2BhE,KAA3B,EAAkC,CAAlC;AACA,iBAAKq0C,UAAL,CAAgBpwC,QAAhB,CAAyBjE,KAAzB;AACD;;;;;;;yBA30BUqzC,qB,EAAqB,+K,EAAA,2H,EAAA,yH;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,yjI;AAAA;AAAA;ACtBlC;;;;AAA8B;;;;;;;;;wEDsBjBA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT52C,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKuB,U;;;;;;;;;AAEvB2nB,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE;;;;;;;;;;;;;;;;;;;AE1BrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAmBaswB,uB;AAEX,2CAAc;AAAA;AAAG;;;;qCAET,CACP;;;qCAEO;AACN;AAEA12C,mBAAO,CAAC22C,IAAR,CAAa,+BAAb;AAED;;;;;;;yBAZUD,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,6C;AAAA,kB;AAAA,e;AAAA,++I;AAAA;AAAA;ACjBpC;;AAAM;AAAA,qBAAY,IAAA/qB,QAAA,EAAZ;AAAsB,aAAtB;;AAEF;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA2B;;AAAO;;AAClC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA4B;;AAA+B;;AAC3D;;AACI;;AAAQ;;AAAe;;AACvB;;AAAQ;;AAA0B;;AAClC;;AAAQ;;AAAe;;AAC3B;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AAEA;;AAGI;;AACI;;AACI;;AACI;;AAEI;;AAAkB;;AACtB;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AAAoB;;AAAe;;AACnC;;AACJ;;AACA;;AACI;;AAAwB;;AAAQ;;AAChC;;AACJ;;AACA;;AACI;;AAAyB;;AAA+B;;AACxD;;AACI;;AAAQ;;AAAe;;AACvB;;AAAQ;;AAA0B;;AAClC;;AAAQ;;AAAe;;AAC3B;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAEI;;AAAkB;;AACtB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA6B;;AAAoB;;AACjD;;AACI;;AAAQ;;AAAS;;AACjB;;AAAQ;;AAAG;;AACX;;AAAQ;;AAAU;;AACtB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwB;;AAAiB;;AACzC;;AACI;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAM;;AACd;;AAAQ;;AAAM;;AAClB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAqC;;AACnE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA6B;;AAAsC;;AACnE;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAEI;;AAAkB;;AACtB;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAA0B;;AAAQ;;AAClC;;AACI;;AAAQ;;AAAG;;AACf;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwB;;AAAQ;;AAChC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA6B;;AAA2C;;AACxE;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAEI;;AAAkB;;AACtB;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAEA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAsB;;AAA2B;;AACjD;;AACJ;;AACA;;AACI;;AAAoB;;AAA0B;;AAC9C;;AACJ;;AAEJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAEI;;AAAkB;;AACtB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAwC;;AAAM;;AAC9C;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAiE;;AAAU;;AAC/E;;AACJ;;AACA;;AACI;;AAA2C;;AAAc;;AACzD;;AACI;;AAAQ;;AAAW;;AACnB;;AAAQ;;AAAc;;AACtB;;AAAQ;;AAAQ;;AACpB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwB;;AAAM;;AAC9B;;AACI;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AACI;;AAAwB;;AAAQ;;AAChC;;AACI;;AAAQ;;AAAG;;AACf;;AACJ;;AACA;;AACI;;AAAuB;;AAAM;;AAC7B;;AACI;;AAAQ;;AAAG;;AACf;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAGA;;AACI;;AAAoE;;AAChE;;AAAK;;AACb;;AACA;;AACI;;AAAuE;;AACnE;;AAAK;;AACb;;AACA;;AAGJ;;AACJ;;AACJ;;AACJ;;;;;;;;;wED3Pa+qB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTn4C,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;AEnBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;UAUam4C,qB;AAYX,uCAAoBh4C,cAApB,EAA2D;AAAA;;AAAvC,eAAAA,cAAA,GAAAA,cAAA;AAA0C;;;;qCAEtD,CACP;;;8CAEmBiB,I,EAAK;AAAA;;AACvBiB,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC+1C,iBAAL,CAAuBxwC,IAAvB;AAED,aAHS,EAGP,GAHO,CAAV;AAKD;;;uCAEYinC,e,EAAiBC,e,EAAe;AAC3C,iBAAK3uC,cAAL,CAAoB2H,cAApB,CAAmC+mC,eAAnC,EAAoDC,eAApD;AACAvtC,mBAAO,CAACC,GAAR,CAAY,KAAKrB,cAAL,CAAoB4H,gBAApB,EAAZ;AACD;;;;;;;yBA5BUowC,qB,EAAqB,+K;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACTlC;;AAAuJ;AAAA,qBAAc,IAAAnwC,YAAA,yCAAd;AAA2D,aAA3D;;AACnJ;;AAAuC;;AAAS;;AAChD;;AACG;;AACH;;AAEJ;;;;AANmE,2FAAqB,YAArB,EAAqB,IAArB,EAAqB,UAArB,EAAqB,KAArB;;AACxB;;AAAA;;AAEP;;AAAA;;;;;;;;wEDMvBmwC,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTr4C,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;AASiBo4C,2BAAiB,EAAE,CAAF;kBAAjE,uDAAiE;mBAAvD,mB,EAAqB;AAAC,wBAAQ;AAAT,a;AAAkC,WAAE;;;;;;;;;;;;;;;;;;;AEnBtE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACSgB;;AACI;;AACJ;;;;;;AA+BA;;;;;;AAAuL;;;;;;;;AACvL;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAA2B;;;;;;;;AACzK;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAuE;;AAA4B;;;;;;AAPnM;;AACI;;AACI;;AAA0B;;AAAS;;AACvC;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;;;;;AAJgB;;AAAA;;AACqD;;AAAA;;AACA;;AAAA;;;;;;AAUzD;;AACI;;AACJ;;;;;;;;AAF6C;;AACzC;;AAAA;;;;;;AAIJ;;AAEoD;;AAA+B;;;;;;AADzC;;;;;;AAE1C;;AAEgD;;AAA+B;;;;;;AAhB3F;;AACI;;AACI;;AAAuB;;AAAK;;AAChC;;AACA;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAGA;;AAGJ;;AACA;;AACI;;AAEoD;;AAAO;;AAC/D;;AACJ;;AACJ;;;;;;;;AAlBmC;;AAAA;;AAKd;;AAAA;;AAGA;;AAAA;;AAKD;;AAAA;;;;;;AAWR;;AAAiJ;;AACjJ;;;;;;;;AADqC,2GAAmC,UAAnC,EAAmC,sEAAnC;;AAA4G;;AAAA;;;;;;AAGrJ;;AACI;;AACJ;;;;;;;;;;;;;;AAhFZ;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACI;;AAEA;;AAGJ;;AACJ;;AAYA;;AACI;;AACI;;AAAyB;;AAAM;;AACnC;;AACA;;AACI;;AACI;;AAA8P;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAA9P;;AACA;;AACH;;AACL;;AACJ;;AAEA;;AAWA;;AAyBA;;AACI;;AAA2D;;AAAS;;AACpE;;AACI;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AAAiB;;AAAmB;;AACpC;;AAEJ;;AACA;;AAGJ;;AACJ;;AACJ;;;;;;;;AA7E2C;;AAAA;;AAsB2E;;AAAA;;AAMjF;;AAAA;;AAWA;;AAAA;;AA8BE;;AAAA;;AAGI;;AAAA;;;;;;AAwBf;;AACI;;AAAgB;;;;;;;;AADmB;;AACnC;;AAAA;;;;;;AAQR;;AAEI;;AACJ;;;;;;AAcQ;;AACgD;;AAAgB;;;;;;;;AAA5D;;AAA4C;;AAAA;;;;;;AAGhD;;AAEoD;;AAA+B;;;;;;;;AADzC;;;;;;;;AAZtD;;AACI;;AACI;;AAA8B;;AAAiB;;AACnD;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAEJ;;AACA;;AACI;;AAIJ;;AACA;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAET;;AAChB;;AACxC;;AACJ;;AACJ;;;;;;;;;;;AApBsC;;AAAA;;AAKD;;AAAA;;AAIhB;;AAAA;;;;;;AAZzB;;AACI;;AAuBJ;;;;;;AAvB8B;;AAAA;;;;;;AAgCd;;AAE6F;;AAAiB;;;;;;;;;;AAD1G,gIAAoD,UAApD,EAAoD,2FAApD;;AACyF;;AAAA;;;;;;AAEjG;;AAEI;;AACJ;;;;;;AAMI;;AACwD;;AAAgB;;;;;;;;;;;AAApE;;AADyC;;AACW;;AAAA;;;;;;AAO5D;;AAEI;;AACJ;;;;;;;;AA7BR;;AACI;;AACI;;AAC6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAAiB;;AAAiB;;AAClC;;AAGJ;;AACA;;AAIJ;;AACA;;AACI;;AAC4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAAiB;;AAAiB;;AAClC;;AAEJ;;AACA;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAET;;AAChB;;AACxC;;AACA;;AAIJ;;AACJ;;;;;;;;;;;AA9B0B;;AAAA;;AAIS;;AAAA;;AAII;;AAAA;;AAKD;;AAAA;;AAID;;AAAA;;AAQE;;AAAA;;;;;;AA5B3C;;AAEI;;AAiCJ;;;;;;;;AAjC8B;;AAAA;;;;;;;;AA6D9B;;AAEI;;AACI;;AAGI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAHJ;;AAIA;;AACI;;AAA0F;;AAC9C;;AAChD;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgE;;AACpC;;AACxC;;AACJ;;AACJ;;;;;;;AAdwC;;AAAA;;AAC0B;;AAAA;;AAKnD;;AAAA;;;;;;AAgCC;;AACI;;AAAM;;AAAe;;AAAO;;AAA2B;;AAAkB;;AAC7E;;;;;;AADU;;AAAA;;AAAiD;;AAAA;;;;;;AAF/D;;;;;;AAQI;;AACI;;AAAwD;;AAAqB;;AAC7E;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAKJ;;;;;;;AAX+B;;AAAA;;AAA6B;;AAAA;;AAGhD;;AAAA;;;;;;AALhB;;;;;;;;AAZJ;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAoC,QAApC,EAAoC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAApC,EAAoC,OAApC,EAAoC;AAAA;;AAAA;;AAAA;AAAA,WAApC;;AAIA;;AAOA;;AAgBJ;;;;;;;;AA5BiE,8FAA0B,OAA1B,EAA0B,qBAA1B;;AAKO;;AAAA;;AAOA;;AAAA;;;;;;;;AAiBxE;;AAGI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAHJ;;;;;;AAA0D;;;;;;AAU1D;;AACI;;AACkB;;AAAmC;;AACzD;;;;;;AAFQ;;AAAA;;;;;;;;AAGR;;AACI;;AAAI;AAAA;;AAAA;;AAAA;;AAAA,4CAAyB,YAAQ,cAAR,EAAwBh1C,KAAjD,EAAwD,YAAQ,0BAAR,EAAoCA,KAA5F,EAAmG,YAAQ,OAAR,EAAiBA,KAApH;AAAmH,WAAnH;;AACc;;AAAwC;;AAC9D;;;;;;AACA;;AACI;;AACI;;AACE;;AACE;;AACJ;;AACJ;;AACJ;;;;;;;;AAzDJ;;AAGI;;AA6BA;;AAIA;;AACI;;AACI;AAAA;AAAA;AAAA;;AADJ;;AAIJ;;AACA;;AAIA;;AAIA;;AAQA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiE;;AACrC;;AACxC;;AACJ;;;;;;;;;;;AA9DoC;;AAO3B;;AAAA;;AA2BA;;AAAA;;AAQiC;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;AApD9C;;AAEI;;AA+DJ;;;;AA/D6D;;AAAA;;;;;;;;;;;;;;;;;;;;AAjPjF;;AACI;;AAuFA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAU;;AAAI;;AACvC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAA4B;;AAC5E;;AAAO;;AACjD;;AACI;;AACI;;AACI;;AAA8C;;AAAe;;AACjE;;AACA;;AACI;;AAC4B;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAAiB;;AAAiB;;AAClC;;AAEJ;;AACA;;AACI;;AAEoD;;AAA+B;;AACvF;;AAEA;;AAKJ;;AACJ;;AAGA;;AA0BA;;AAuCJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAwD;;AAAU;;AAClE;;AACI;;AAKJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAO;;AAAI;;AACpC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAA4B;;AAC5B;;AAAO;;AACjD;;AACI;;AAiBJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAsB;;AAAG;;AAAQ;;AAAI;;AACrC;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAqE;;AAA4B;;AAC1E;;AAAO;;AACjD;;AACI;;AAkEJ;;AACJ;;AACJ;;AACJ;;AAEJ;;;;;;AAtTM;;AACI;;AAAA;;AA2FqD;;AAAA;;AAWN;;AAAA;;AAKiB;;AAAA;;AAIf;;AAAA;;AASR;;AAAA;;AA2BR;;AAAA;;AA+DH;;AAAA;;AAyBmB;;AAAA;;AAInB;;AAAA;;;;;;UDpN3Bi1C,6B;AAqET,+CAAoBl4C,cAApB,EACoBD,WADpB,EAEoBE,MAFpB,EAGoBC,WAHpB,EAIoBm0C,OAJpB,EAIuD;AAAA;;AAJnC,eAAAr0C,cAAA,GAAAA,cAAA;AACA,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAm0C,OAAA,GAAAA,OAAA;AAnEZ,eAAAl0C,OAAA,GAAwB,IAAI,4CAAJ,EAAxB;AACR,eAAAiqB,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAlhB,OAAA,GAAU,CAAV;AACA,eAAAoN,iBAAA,GAAoB,EAApB;AACA,eAAA5C,cAAA,GAAiB,EAAjB;AACA,eAAA2oB,WAAA,GAAc,EAAd;AACA,eAAAoa,YAAA,GAAe,EAAf;AACA,eAAA1a,YAAA,GAAe,EAAf;AACA,eAAAxtB,SAAA,GAAY,EAAZ;AAEA,eAAA2pC,aAAA,GAAgB,EAAhB;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,YAAA,GAAe,EAAf;AAEA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,SAAA,GAAY,EAAZ;AAEA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAA/D,QAAA,GAAW,EAAX;AACA,eAAApY,YAAA,GAAe,EAAf;AAIA,eAAAh8B,aAAA,GAAe,EAAf;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAEQ,eAAAm4C,eAAA,GAAgC,IAAI,4CAAJ,EAAhC;AACA,eAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AACA,eAAAC,cAAA,GAA+B,IAAI,4CAAJ,EAA/B;AAER;;AACO,eAAAC,QAAA,GAAW,yBAAX;AAEP,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAA3B,gBAAA,GAAmB,KAAnB;AAEA,eAAA4B,QAAA,GAAW,IAAI,wDAAJ,CAAc;AACrB1zC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW2O,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADc;AAErBngB,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFe;AAGrBoW,sBAAU,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAHQ;AAIrBtS,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW0O,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAJW;AAKrBpd,eAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CALgB;AAMrBwyC,wBAAY,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,kBAAL,EAAD,CAAd,CANO;AAOrBgC,oBAAQ,EAAG,IAAI,0DAAJ,CAAgB,EAAhB,CAPU;AAQrBC,kBAAM,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,YAAL,EAAD,CAAd,CARa;AASrBC,mBAAO,EAAE,IAAI,wDAAJ,CAAc,CAAC,KAAKC,aAAL,EAAD,CAAd,CATY;AAUrBlqB,oBAAQ,EAAG,IAAI,wDAAJ,CAAc,CAAC,KAAKmqB,cAAL,EAAD,CAAd,CAVU;AAWrBz4C,qBAAS,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAXS;AAYrBD,oBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB;AAZU,WAAd,CAAX;AAmBA,eAAA24C,kBAAA,GAAqB,KAArB;AACA,eAAA9E,eAAA,GAAkB,EAAlB;AAQC;;;;qCAEU;AAAA;;AACP;;;;;;AAUA,iBAAKiE,eAAL,CAAqB13C,IAArB,CAA0B,oEAAa,IAAb,CAA1B,EAA8CC,SAA9C,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAACs4C,eAAL,CAAqBt4C,IAArB;AACH,aAHL;AAMA,iBAAKy3C,gBAAL,CAAsB33C,IAAtB,CAA2B,oEAAa,IAAb,CAA3B,EAA+CC,SAA/C,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAACu4C,gBAAL,CAAsBv4C,IAAtB;AACH,aAHL;AAMA;;;;;;AAMA,iBAAKjB,cAAL,CAAoB+tC,iBAApB,CAAsC/sC,SAAtC,CACI,UAAAoM,MAAM,EAAI;AAEN,kBAAGA,MAAM,IAAI,IAAb,EAAkB;AAEd,wBAAI,CAACoB,SAAL,GAAiB,EAAjB;;AACA,wBAAI,CAACxO,cAAL,CAAoBkW,mBAApB,GAA0ClV,SAA1C,CACI,UAAAC,IAAI,EAAI;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,uBAAK,IAAIiF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjF,IAAI,CAACiD,MAAzB,EAAiCgC,CAAC,EAAlC,EAAsC;AAClC,4BAAI,CAACsI,SAAL,CAAetI,CAAf,IAAoBjF,IAAI,CAACiF,CAAD,CAAxB;AACH;AACJ,iBANL;AAQH;AACJ,aAfL;AAkBA,iBAAKlG,cAAL,CAAoBkW,mBAApB,GAA0ClV,SAA1C,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAACuN,SAAL,GAAiB,EAAjB;;AACA,mBAAK,IAAItI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjF,IAAI,CAACiD,MAAzB,EAAiCgC,CAAC,EAAlC,EAAsC;AAClC,wBAAI,CAACsI,SAAL,CAAetI,CAAf,IAAoBjF,IAAI,CAACiF,CAAD,CAAxB;AACH;AACJ,aANL;AASA,iBAAK/F,OAAL,CAAaY,IAAb,CAAkB,oEAAa,IAAb,CAAlB,EAAsCC,SAAtC,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAACC,cAAL,CAAoBD,IAApB;AACH,aAHL;AAMA,iBAAKu7B,kBAAL;AACA,iBAAKid,oBAAL;AAEA,iBAAKV,QAAL,GAAgB,KAAKh5C,WAAL,CAAiBc,KAAjB,CAAuB;AACnCwE,mBAAK,EAAE,EAD4B;AAEnC7D,kBAAI,EAAE,EAF6B;AAGnCoW,wBAAU,EAAG,IAHsB;AAInCtS,sBAAQ,EAAE,EAJyB;AAKnCf,iBAAG,EAAE,EAL8B;AAMnCwyC,0BAAY,EAAE,KAAKh3C,WAAL,CAAiBe,KAAjB,CAAuB,EAAvB,CANqB;AAOnCk4C,sBAAQ,EAAG,EAPwB;AAQnCC,oBAAM,EAAE,KAAKl5C,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKo4C,YAAL,EAAD,CAAvB,CAR2B;AASnCC,qBAAO,EAAE,KAAKp5C,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKs4C,aAAL,EAAD,CAAvB,CAT0B;AAUnClqB,sBAAQ,EAAE,KAAKnvB,WAAL,CAAiBe,KAAjB,CAAuB,CAAC,KAAKu4C,cAAL,EAAD,CAAvB,CAVyB;AAWnCz4C,uBAAS,EAAG,KAXuB;AAYnCD,sBAAQ,EAAG;AAZwB,aAAvB,CAAhB;AAeA,iBAAKuM,SAAL;AACH;AAED;;;;;;;;0CAMgBjH,G,EAAKC,C,EAAG;AACpB9E,mBAAO,CAACC,GAAR,CAAY4E,GAAZ;;AACA,gBAAIA,GAAG,CAACE,MAAJ,IAAc7E,SAAlB,EAA6B;AAEzB,mBAAKnB,OAAL,CAAaiG,IAAb,CAAkB;AAACnD,qBAAK,EAAEgD,GAAG,CAACE,MAAJ,CAAWlD,KAAnB;AAA0BC,qBAAK,EAAEgD;AAAjC,eAAlB;AACH;AACJ;;;iDAEsB;AAAA;;AACnB,iBAAKlG,cAAL,CAAoBsW,gBAApB,GAAuCtV,SAAvC,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAACsV,iBAAL,GAAyBtV,IAAzB;AAEH,aAJL;AAMH;;;yCAEcA,I,EAAM;AAAA;;AACjB,iBAAKX,aAAL,GAAqB,IAArB;AACA,iBAAKD,aAAL,GAAqB,EAArB;AAEA,gBAAI4C,KAAK,GAAGhC,IAAI,CAACgC,KAAjB;AACA,gBAAIC,KAAK,GAAGjC,IAAI,CAACiC,KAAjB;AAEA,iBAAK8sB,aAAL,GAAqB,KAAK+oB,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,CAArB;;AAEA,gBAAI,KAAKJ,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAAxC,IAAqD,CAAC,KAAK0uB,aAAL,CAAmBlsB,EAAnB,CAAsBZ,KAAtB,EAA6BvB,GAA7B,CAAiC,MAAjC,EAAyCsB,KAAnG,EAA0G;AACtG,kBAAIK,UAAU,GAAG;AACbS,oBAAI,EAAEd,KADO;AAEbqB,0BAAU,EAAE,YAFC;AAGb9C,oBAAI,EAAE,EAHO;AAIb+C,mBAAG,EAAE,EAJQ;AAKbC,wBAAQ,EAAE,OALG;AAMbC,sBAAM,EAAE,EANK;AAObC,oBAAI,EAAE,EAPO;AAQbf,sBAAM,EAAE,EARK;AASbgB,sBAAM,EAAE,CATK;AAUbC,qBAAK,EAAE;AAVM,eAAjB;AAaA;;AACA,mBAAK5E,cAAL,CAAoB6E,qBAApB,CAA0CvB,UAA1C,EAAsDtC,SAAtD,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,oBAAIy4C,WAAW,GAAGz4C,IAAI,CAACkE,IAAL,CAAUgL,MAAV,CACd,UAAAT,CAAC,EAAI;AACD,yBAAOA,CAAC,CAACpK,QAAF,IAAc,QAAI,CAAC/D,MAAL,CAAY+D,QAAjC;AACH,iBAHa,CAAlB;AAKAo0C,2BAAW,CAACp3C,OAAZ,CAAoB,UAAAZ,OAAO,EAAI;AAC3BA,yBAAO,CAAC,YAAD,CAAP,GAAwBA,OAAO,CAAC2D,KAAR,GAAc,GAAd,GAAkB3D,OAAO,CAAC4D,QAAlD;AACH,iBAFD;AAGAlE,uBAAO,CAACC,GAAR,CAAYq4C,WAAZ;AACA,wBAAI,CAACr5C,aAAL,GAAqBq5C,WAArB;AACA,wBAAI,CAACp5C,aAAL,GAAqB,KAArB;AACH,eAfL,EAeO,UAAAwB,KAAK,EAAI;AACR;AACA,wBAAI,CAACxB,aAAL,GAAqB,KAArB;AACH,eAlBL;AAqBH,aApCD,MAoCO,IAAG,KAAKiB,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAAxC,IAAqD,KAAK0uB,aAAL,CAAmBlsB,EAAnB,CAAsBZ,KAAtB,EAA6BvB,GAA7B,CAAiC,MAAjC,EAAyCsB,KAAjG,EAAuG;AAE1G,mBAAK5C,aAAL,GAAqB,EAArB;AACA,mBAAKH,WAAL,CAAiBqF,YAAjB,CAA8BtC,KAA9B,EAAqCjC,SAArC,CACI,UAAAC,IAAI,EAAE;AACFG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,oBAAGA,IAAI,CAACkE,IAAL,CAAUjB,MAAV,GAAmB,CAAtB,EAAwB;AAGpB,sBAAMkB,GAAG,GAAGnE,IAAI,CAACkE,IAAL,CAAUC,GAAV,CAAc,UAAA1D,OAAO;AAAA,2BACjC;AACI2D,2BAAK,EAAEpC,KADX;AAEIuC,gCAAU,EAAE9D,OAAO,CAAC,CAAD,CAAP,CAAWuB,KAF3B;AAGIsB,yBAAG,EAAG7C,OAAO,CAAC,CAAD,CAAP,CAAWuB;AAHrB,qBADiC;AAAA,mBAArB,CAAZ;AAQAmC,qBAAG,CAAC9C,OAAJ,CAAY,UAAAZ,OAAO,EAAI;AACvB,wBAAI+D,SAAS,GAAG/D,OAAO,CAAC8D,UAAR,CAAmBE,KAAnB,CAAyB,GAAzB,CAAhB;AACA,wBAAIF,UAAU,GAAGC,SAAS,CAACA,SAAS,CAACvB,MAAV,GAAmB,CAApB,CAA1B;AAEA,wBAAIyB,SAAS,GAAGjE,OAAO,CAAC6C,GAAR,CAAYmB,KAAZ,CAAkB,GAAlB,CAAhB;AACA,wBAAInB,GAAG,GAAGoB,SAAS,CAACA,SAAS,CAACzB,MAAV,GAAmB,CAApB,CAAnB;AAGAxC,2BAAO,CAACkE,YAAR,GAAuBJ,UAAvB;AACA9D,2BAAO,CAACmE,QAAR,GAAmBtB,GAAnB;AAEC,mBAXD;AAeA,0BAAI,CAAClE,aAAL,GAAqB+E,GAArB;AACAhE,yBAAO,CAACC,GAAR,CAAY,QAAI,CAAChB,aAAjB;AACA,0BAAI,CAACC,aAAL,GAAqB,KAArB;AAGH;AACJ,eAnCL,EAoCI,UAAAwB,KAAK,EAAE;AACHV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,wBAAI,CAACxB,aAAL,GAAqB,KAArB;AACH,eAvCL;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCH,aA5EM,MA4EA;AACH,mBAAKA,aAAL,GAAqB,KAArB;AAGH;AAEJ;;;uCAEY;AACT,iBAAKD,aAAL,GAAqB,EAArB;AACH;;;+CAEoB;AAAA;;AACjB,iBAAKL,cAAL,CAAoBmW,iBAApB,GAAwCnV,SAAxC,CACI,UAAAC,IAAI,EAAI;AACJ,sBAAI,CAAC0S,cAAL,GAAsB1S,IAAtB;AACA;;AACA,sBAAI,CAACq3C,QAAL,GAAgB,QAAI,CAAC3kC,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC5C,oBAAIA,CAAC,CAAC2G,UAAF,IAAgB,cAApB,EAAoC;AAChC,yBAAO,IAAP;AACH,iBAFD,MAEO;AACH,yBAAO,KAAP;AACH;AACJ,eANe,CAAhB;AAQA,sBAAI,CAACiiC,QAAL,GAAgB,QAAI,CAACA,QAAL,CAAc,CAAd,EAAiB,gBAAjB,CAAhB;AAEH,aAdL;AAgBH;;;sCAGWr2C,O,EAAwB;AAAA;;AAChCC,sBAAU,CAAC,YAAM;AACb,kBAAI,QAAI,CAACX,MAAL,IAAeU,OAAO,CAAC6oB,OAAR,CAAgB1oB,YAAnC,EAAiD;AAC7C,wBAAI,CAAC20C,YAAL,GAAoB,QAAI,CAACgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;;AACA,wBAAI,CAACo1C,YAAL,CAAkB10C,KAAlB;;AAEA,wBAAI,CAACs3C,YAAL,GAAoB,QAAI,CAACZ,QAAL,CAAcp3C,GAAd,CAAkB,SAAlB,CAApB;;AACA,wBAAI,CAACg4C,YAAL,CAAkBt3C,KAAlB;;AAEA,wBAAI,CAAC2tB,aAAL,GAAqB,QAAI,CAAC+oB,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,CAArB;;AACA,wBAAI,CAACquB,aAAL,CAAmB3tB,KAAnB;;AAEA,wBAAI,CAACu3C,WAAL,GAAmB,QAAI,CAACb,QAAL,CAAcp3C,GAAd,CAAkB,QAAlB,CAAnB;;AACA,wBAAI,CAACi4C,WAAL,CAAiBv3C,KAAjB;;AAEA,wBAAI,CAACi3C,kBAAL,GAA0B,KAA1B;AACA,wBAAI,CAACA,kBAAL,GAA0B,KAA1B;AAGA,wBAAI,CAACf,SAAL,GAAiB,EAAjB;AAEA,wBAAI,CAAClc,YAAL,GAAoB,EAApB;AACH;;AACD,sBAAI,CAAC96B,MAAL,GAAcU,OAAO,CAAC6oB,OAAR,CAAgB1oB,YAA9B;;AAGA,kBAAI,QAAI,CAACb,MAAL,IAAe,IAAnB,EAAyB;AAErB,oBAAM6C,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAA1B;;AACA,wBAAI,CAACo2C,QAAL,CAAcp3C,GAAd,CAAkB,OAAlB,EAA2BC,QAA3B,CAAoC,QAAI,CAACL,MAAL,CAAY8D,KAAhD,EAAuD;AAAExD,2BAAS,EAAE;AAAb,iBAAvD;;AACA,wBAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,QAAI,CAACL,MAAL,CAAYy3C,QAAnD,EAA6D;AAAEn3C,2BAAS,EAAE;AAAb,iBAA7D;;AACA,oBAAG,QAAI,CAACN,MAAL,CAAYC,IAAZ,IAAoB,QAAvB,EAAgC;AAC5B,0BAAI,CAACu3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0Bk4C,OAA1B,CAAkC;AAACC,4BAAQ,EAAE,IAAX;AAAiBj4C,6BAAS,EAAE;AAA5B,mBAAlC;AACH,iBAFD,MAEK;AACD,0BAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0Bo4C,MAA1B,CAAiC;AAACD,4BAAQ,EAAE,IAAX;AAAiBj4C,6BAAS,EAAE;AAA5B,mBAAjC;AACH;;AACD,wBAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,QAAI,CAACL,MAAL,CAAYqW,UAArD,EAAiE;AAAE/V,2BAAS,EAAE;AAAb,iBAAjE;;AAGA,wBAAI,CAACN,MAAL,CAAYC,IAAZ,CAAiBc,OAAjB,CAAyB,UAAAZ,OAAO,EAAI;AAChC,sBAAGA,OAAO,IAAI,SAAd,EAAwB;AACpB,4BAAI,CAACq3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BC,QAA1B,CAAmCF,OAAnC,EAA4C;AAAEG,+BAAS,EAAE;AAAb,qBAA5C;;AACA,2BAAO,IAAP;AACH,mBAHD,MAGK;AACD,2BAAO,KAAP;AACH;AACJ,iBAPD;;AASA,oBAAIjB,SAAS,GAAG,QAAI,CAACW,MAAL,CAAYC,IAAZ,CAAiBC,IAAjB,CAAsB,UAAAC,OAAO;AAAA,yBAAIA,OAAO,IAAI,SAAf;AAAA,iBAA7B,CAAhB;;AACA,oBAAGd,SAAH,EAAa;AACT,0BAAI,CAACm4C,QAAL,CAAcp3C,GAAd,CAAkB,WAAlB,EAA+BC,QAA/B,CAAwC,IAAxC,EAA8C;AAACC,6BAAS,EAAE;AAAZ,mBAA9C;AACH,iBAFD,MAEK;AACD,0BAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,WAAlB,EAA+BC,QAA/B,CAAwC,KAAxC,EAA+C;AAACC,6BAAS,EAAE;AAAZ,mBAA/C;AACH;;AAED,oBAAIlB,QAAQ,GAAG,QAAI,CAACY,MAAL,CAAYC,IAAZ,CAAiBC,IAAjB,CAAsB,UAAAC,OAAO;AAAA,yBAAIA,OAAO,IAAI,QAAf;AAAA,iBAA7B,CAAf;;AACA,oBAAGf,QAAH,EAAY;AACR,0BAAI,CAACo4C,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,IAAvC,EAA6C;AAACC,6BAAS,EAAE;AAAZ,mBAA7C;AACH,iBAFD,MAEK;AACD,0BAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,KAAvC,EAA8C;AAACC,6BAAS,EAAE;AAAZ,mBAA9C;AACH,iBAlCoB,CAoCrB;;;AACA,wBAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,EAA8BC,QAA9B,CAAuC,QAAI,CAACL,MAAL,CAAY+D,QAAnD,EAA6D;AAAEzD,2BAAS,EAAE;AAAb,iBAA7D;;AACA,wBAAI,CAACk3C,QAAL,CAAcp3C,GAAd,CAAkB,KAAlB,EAAyBC,QAAzB,CAAkC,QAAI,CAACL,MAAL,CAAYgD,GAA9C,EAAmD;AAAE1C,2BAAS,EAAE;AAAb,iBAAnD;;AAEA,wBAAI,CAAC02C,SAAL,GAAiB,QAAI,CAACh3C,MAAL,CAAYgD,GAA7B;AAEA,wBAAI,CAAC+3B,WAAL,GAAmB,EAAnB;AACA,wBAAI,CAACoa,YAAL,GAAoB,EAApB;AACA,wBAAI,CAACyB,aAAL,GAAqB,EAArB;AACA,wBAAI,CAACC,cAAL,GAAsB,EAAtB;AACA,wBAAI,CAACpc,YAAL,GAAoB,EAApB;AAED;;;AAEC95B,0BAAU,CAAC,YAAM;AAAA;AAET,wBAAMswB,KAAK,GAAG,QAAI,CAACjxB,MAAL,CAAY87B,UAAZ,CAAuBn3B,CAAvB,EAA0B,OAA1B,CAAd;AACA,wBAAMjD,KAAK,GAAG,QAAI,CAAC1B,MAAL,CAAY87B,UAAZ,CAAuBn3B,CAAvB,EAA0B,OAA1B,CAAd;AAEA,wBAAIq3B,gBAAgB,GAAG,EAAvB;;AACA,4BAAI,CAAC5pB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC5B,0BAAIA,CAAC,CAAC2G,UAAF,IAAgBmc,KAAhB,IAAyBA,KAAK,IAAI,cAAtC,EAAsD;AAClD9iB,yBAAC,CAAC8tB,cAAF,CAAiBrtB,MAAjB,CAAwB,UAAAL,CAAC,EAAI;AACzB,8BAAGA,CAAC,CAAC2tB,OAAF,IAAax6B,KAAhB,EAAsB;AAClBs6B,4CAAgB,GAAGztB,CAAC,CAAC4tB,gBAArB;AACA,mCAAO,IAAP;AACH,2BAHD,MAGK;AACD,mCAAO,KAAP;AACH;AACJ,yBAPD;AAQA,+BAAO,IAAP;AACH,uBAVD,MAUO;AACH,+BAAO,KAAP;AACH;AACJ,qBAdD;;AAgBA,4BAAI,CAAC1B,YAAL,CAAkB91B,CAAlB,IAAuBjD,KAAvB;;AAEA,4BAAI,CAAC00C,eAAL,CAAqBnlB,KAArB,EAA4BvvB,KAA5B,EAAmCs6B,gBAAnC;;AACA,4BAAI,CAACqa,aAAL,CAAmBplB,KAAnB,EAA0BtsB,CAA1B;;AAEA,4BAAI,CAACm2B,YAAL,CAAkB35B,IAAlB,CAAuB;AAAE8vB,2BAAK,EAAEA,KAAT;AAAgBvvB,2BAAK,EAAEA;AAAvB,qBAAvB;AA3BS;;AACb,uBAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,QAAI,CAAC3E,MAAL,CAAY87B,UAAZ,CAAuBn5B,MAA3C,EAAmDgC,CAAC,EAApD,EAAwD;AAAA;AA4BvD;AACJ,iBA9BS,EA8BP,GA9BO,CAAV;AAiCAhE,0BAAU,CAAC,YAAM;AACb,sBAAIqC,GAAG,GAAG,QAAI,CAACw0C,QAAL,CAAcp3C,GAAd,CAAkB,KAAlB,EAAyBsB,KAAnC;;AACA,0BAAI,CAACq1C,QAAL,CAAch2C,OAAd,CAAsB,UAAA6vB,EAAE,EAAI;AACxB,wBAAGA,EAAE,CAACsL,OAAH,IAAcl5B,GAAjB,EAAqB;AAEjB,8BAAI,CAACi0C,cAAL,GAAsBrmB,EAAE,CAACuL,gBAAzB;AACH;AACJ,mBALD,EAFa,CAQb;;;AACAr3B,mBAAC,CAAC,cAAD,CAAD,CAAkBC,OAAlB,CAA0B;AACtBC,2BAAO,EAAE;AADa,mBAA1B;AAKH,iBAdS,EAcP,IAdO,CAAV;AAgBArE,0BAAU,CAAC,YAAM;AAEb;AACAmE,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AACxBC,2BAAO,EAAE;AADe,mBAA5B;AAKH,iBARS,EAQP,IARO,CAAV;AAUArE,0BAAU,CAAC,YAAM;AACb,sBAAIV,IAAI,GAAG,QAAI,CAACu3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,0BAAI,CAACsT,iBAAL,CAAuBjU,OAAvB,CAA+B,UAAA6vB,EAAE,EAAI;AACjC,wBAAGA,EAAE,CAACsL,OAAH,IAAcj8B,IAAjB,EAAsB;AAElB,8BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACH;AACJ,mBALD,EAFa,CAQb;;;AACAr3B,mBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACvBC,2BAAO,EAAE;AADc,mBAA3B;AAKH,iBAdS,EAcP,IAdO,CAAV;;AAgBA,wBAAI,CAACvG,cAAL,CAAoBg6C,6BAApB,CAAkD51C,KAAlD,EAAyD,SAAzD,EAAoEpD,SAApE,CACI,UAAAC,IAAI,EAAI;AACJ;AACA,uBAAK,IAAIiF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjF,IAAI,CAACiD,MAAzB,EAAiCgC,CAAC,EAAlC,EAAsC;AAClC,wBAAIO,MAAM,GAAGxF,IAAI,CAACiF,CAAD,CAAJ,CAAQ,eAAR,CAAb;AACA,wBAAI1E,IAAI,GAAGP,IAAI,CAACiF,CAAD,CAAJ,CAAQ,UAAR,CAAX;;AACA,4BAAI,CAAC+zC,UAAL,CAAgBxzC,MAAhB,EAAwBjF,IAAxB;;AACA,4BAAI,CAAC22C,aAAL,CAAmBz1C,IAAnB,CAAwBzB,IAAI,CAACiF,CAAD,CAA5B;AACH;AACJ,iBATL,EASO,UAAApE,KAAK,EAAI,CACR;AACH,iBAXL;;AAcA,wBAAI,CAAC9B,cAAL,CAAoBg6C,6BAApB,CAAkD51C,KAAlD,EAAyD,SAAzD,EAAoEpD,SAApE,CACI,UAAAC,IAAI,EAAI;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,uBAAK,IAAIiF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjF,IAAI,CAACiD,MAAzB,EAAiCgC,CAAC,EAAlC,EAAsC;AAClC,wBAAIb,KAAK,GAAGpE,IAAI,CAACiF,CAAD,CAAJ,CAAQb,KAApB;AACA,wBAAI+J,YAAY,GAAGnO,IAAI,CAACiF,CAAD,CAAJ,CAAQ,2BAAR,CAAnB;AACA,wBAAIO,MAAM,GAAGxF,IAAI,CAACiF,CAAD,CAAJ,CAAQ,eAAR,CAAb;AACA,wBAAI1E,IAAI,GAAGP,IAAI,CAACiF,CAAD,CAAJ,CAAQ,UAAR,CAAX;AACA,wBAAIvD,wBAAwB,GAAG,QAAI,CAACpB,MAAL,CAAYoB,wBAA3C;;AAEA,wBAAG0C,KAAK,IAAI,EAAZ,EAAe;AACX,0BAAIohC,GAAG,GAAGhgC,MAAM,CAACf,KAAP,CAAa,GAAb,CAAV;AACAL,2BAAK,GAAGohC,GAAG,CAACA,GAAG,CAACviC,MAAJ,GAAW,CAAZ,CAAX;AACH;;AACD,4BAAI,CAACg2C,WAAL,CAAiB70C,KAAjB,EAAwB+J,YAAxB,EAAsCzM,wBAAtC,EAAgE8D,MAAhE,EAAwEjF,IAAxE;;AACA,4BAAI,CAAC42C,cAAL,CAAoB11C,IAApB,CAAyBzB,IAAI,CAACiF,CAAD,CAA7B;AACH;AACJ,iBAjBL,EAiBO,UAAApE,KAAK,EAAI;AACRV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,iBAnBL;AAqBH;AAGJ,aA5LS,EA4LP,EA5LO,CAAV;AA8LH;;;2CAEgBmE,G,EAAK;AAAA;;AAElB,iBAAKjG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAImpB,SAAS,GAAGl0C,GAAG,CAACE,MAAJ,CAAWlD,KAA3B;AACA,gBAAIm3C,SAAJ;AACA,iBAAK5rC,SAAL,CAAelM,OAAf,CAAuB,UAAAZ,OAAO,EAAI;AAC9B,kBAAIA,OAAO,CAAC,OAAD,CAAP,CAAiB40B,WAAjB,MAAkC6jB,SAAS,CAAC7jB,WAAV,EAAtC,EAA+D;AAC3D8jB,yBAAS,GAAG14C,OAAO,CAAC,OAAD,CAAnB;AACA;AACH;AACJ,aALD;;AAOA,gBAAI04C,SAAS,IAAI94C,SAAjB,EAA4B;AACxB,kBAAI8C,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,kBAAIW,UAAU,GAAG;AACbE,wBAAQ,EAAE,UADG;AAEbP,qBAAK,EAAEm3C;AAFM,eAAjB;AAKA,mBAAKp6C,cAAL,CAAoBwZ,kBAApB,CAAuCpV,KAAvC,EAA8Cd,UAA9C,EAA0DtC,SAA1D,CACI,UAAAC,IAAI,EAAI;AACJ;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACAA,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,oBAAI,CAAC,UAAD,CAAJ,GAAmBm5C,SAAS,CAAC9jB,WAAV,EAAnB;;AACA,wBAAI,CAACt2B,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBuoB,gBAApB;;AACA,wBAAI,CAACvoB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;AACH,eAVL,EAUO,UAAAxN,KAAK,EAAI;AACR;AACA,oBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,oBAAI,CAAC,UAAD,CAAJ,GAAmBm5C,SAAS,CAAC9jB,WAAV,EAAnB;;AACA,wBAAI,CAACt2B,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBuoB,gBAApB;;AACA,wBAAI,CAACvoB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,oBAAG,OAAOjC,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,oCAAoCQ,KAAxD,EAA+D,EAA/D,EAAmE;AAC/DP,2BAAO,EAAE;AADsD,mBAAnE;AAGH;AACJ,eA7BL;AA+BH,aAtCD,MAsCO;AACH,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACH;AAEJ;;;sCAEW/qB,G,EAAK;AAAA;;AACb,iBAAKjG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAIqpB,QAAQ,GAAGp0C,GAAG,CAACE,MAAJ,CAAWlD,KAA1B;AACA,gBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,gBAAIW,UAAJ;;AACA,gBAAI,KAAKi1C,SAAL,IAAkB,EAAtB,EAA0B;AAEtBj1C,wBAAU,GAAG;AACT9B,oBAAI,EAAE,YADG;AAETgC,wBAAQ,EAAE,cAFD;AAGTP,qBAAK,EAAEo3C;AAHE,eAAb;AAMH,aARD,MAQO;AACH/2C,wBAAU,GAAG;AACT9B,oBAAI,EAAE,YADG;AAETgC,wBAAQ,EAAE,cAFD;AAGTP,qBAAK,EAAEo3C,QAHE;AAITj4C,4BAAY,EAAE,KAAKm2C;AAJV,eAAb;AAMH;;AAEDn3C,mBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,iBAAKtD,cAAL,CAAoByZ,wBAApB,CAA6CrV,KAA7C,EAAoDd,UAApD,EAAgEvC,IAAhE,CAAqE,oEAAa,IAAb,CAArE,EAAyFC,SAAzF,CACI,UAAAs5C,QAAQ,EAAI;AACRl5C,qBAAO,CAACC,GAAR,CAAYi5C,QAAZ;AACA,sBAAI,CAAC/B,SAAL,GAAiB8B,QAAjB;AACA,kBAAIp5C,IAAI,GAAE,EAAV;AACAA,kBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,kBAAI,CAAC,SAAD,CAAJ,GAAkBo5C,QAAlB;AACAp5C,kBAAI,CAAC,0BAAD,CAAJ,GAAmC,QAAI,CAACM,MAAL,CAAYoB,wBAA/C,CANQ,CAOR;;AACA,sBAAI,CAAC3C,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAChxB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,sBAAI,CAACjB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,uBAAO,EAAE;AAAX,eAAlC;;AAEApN,wBAAU,CAAC,YAAM;AAEb,wBAAI,CAACo2C,QAAL,CAAch2C,OAAd,CAAsB,UAAA6vB,EAAE,EAAI;AACxB,sBAAGA,EAAE,CAACsL,OAAH,IAAc4c,QAAjB,EAA0B;AACtB,4BAAI,CAAC7B,cAAL,GAAsBrmB,EAAE,CAACuL,gBAAzB;AACH;AACJ,iBAJD,EAFa,CAOb;;;AACAr3B,iBAAC,CAAC,cAAD,CAAD,CAAkBC,OAAlB,CAA0B;AACtBC,yBAAO,EAAE;AADa,iBAA1B;AAIH,eAZS,EAYP,IAZO,CAAV;AAaH,aA1BL,EA2BI,UAAAzE,KAAK,EAAI;AACLV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,sBAAI,CAACy2C,SAAL,GAAiB8B,QAAjB;;AACA,sBAAI,CAACr6C,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,kBAAM/vB,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,kBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,kBAAI,CAAC,SAAD,CAAJ,GAAkBo5C,QAAlB;;AACA,sBAAI,CAACr6C,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,sBAAI,CAACjB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,uBAAO,EAAE;AAAX,eAAlC;;AACA,sBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,kBAAG,OAAOjC,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,yBAAO,EAAE;AAD6B,iBAAxC;AAGH,eAJD,MAIK;AACD,wBAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,+BAA+BQ,KAAnD,EAA0D,EAA1D,EAA8D;AAC1DP,yBAAO,EAAE;AADiD,iBAA9D;AAGH;;AACD3B,wBAAU,CAAC,YAAM;AAEb,wBAAI,CAACo2C,QAAL,CAAch2C,OAAd,CAAsB,UAAA6vB,EAAE,EAAI;AACxB,sBAAGA,EAAE,CAACsL,OAAH,IAAc4c,QAAjB,EAA0B;AACtB,4BAAI,CAAC7B,cAAL,GAAsBrmB,EAAE,CAACuL,gBAAzB;AACH;AACJ,iBAJD,EAFa,CAOb;;;AACAr3B,iBAAC,CAAC,cAAD,CAAD,CAAkBC,OAAlB,CAA0B;AACtBC,yBAAO,EAAE;AADa,iBAA1B;AAIH,eAZS,EAYP,IAZO,CAAV;AAaH,aA3DL;AA+DH;;;gDAEqBN,G,EAAKC,C,EAAG;AAAA;;AAC1B,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK+lB,YAAL,GAAoB,KAAKgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;AACA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;AACA,gBAAMQ,QAAQ,GAAG,KAAKszC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAtD;AACA,gBAAMouB,QAAQ,GAAGprB,GAAG,CAACE,MAAJ,CAAWlD,KAA5B;;AACA,gBAAIouB,QAAQ,IAAI,EAAhB,EAAoB;AAChB,kBAAI/tB,UAAU,GAAG;AACb9B,oBAAI,EAAE,YADO;AAEbgC,wBAAQ,EAAEgvB,KAFG;AAGbvvB,qBAAK,EAAEouB,QAHM;AAIbjvB,4BAAY,EAAEqB;AAJD,eAAjB;AAOA,mBAAKszC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCC,QAArC,CAA8CyvB,QAA9C,EAAwD;AAAExvB,yBAAS,EAAE;AAAb,eAAxD;AAEA,mBAAKw6B,YAAL,CAAkBn2B,CAAlB,IAAuB;AAAEssB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEouB;AAAvB,eAAvB;AACA,kBAAIjtB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,mBAAK3C,cAAL,CAAoByZ,wBAApB,CAA6CrV,KAA7C,EAAoDd,UAApD,EAAgEvC,IAAhE,CAAqE,oEAAa,IAAb,CAArE,EAAyFC,SAAzF,CACI,UAAAC,IAAI,EAAI;AACJ;AACAA,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AACH,eARL,EASI,UAAAa,KAAK,EAAI;AACL;AACA,wBAAI,CAAC9B,cAAL,CAAoBooB,gBAApB,CAAqC;AAAE9Y,yBAAO,EAAE,CAAX;AAAcjK,uBAAK,EAAE,QAAI,CAAC9D,MAAL,CAAY8D;AAAjC,iBAArC;;AACA,wBAAI,CAACrF,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,oBAAG,OAAOjC,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,wCAAwCQ,KAA5D,EAAmE,EAAnE,EAAuE;AACnEP,2BAAO,EAAE;AAD0D,mBAAvE;AAGH;AACJ,eAxBL;AA2BH,aAxCD,MAwCO;AACH,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACH;AACJ;;;wCAEa9qB,C,EAAG;AAAA;;AACb,iBAAKlG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,iBAAK+lB,YAAL,GAAoB,KAAKgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;AACA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;AACA,gBAAMA,KAAK,GAAG,KAAK8zC,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBvE,GAAxB,CAA4B,OAA5B,EAAqCsB,KAAnD;;AAEA,gBAAIuvB,KAAK,IAAI,EAAT,IAAevvB,KAAK,IAAI,EAA5B,EAAgC;AAC5B,kBAAIK,UAAJ;;AACA,kBAAI,KAAK04B,YAAL,CAAkB91B,CAAlB,KAAwB,EAA5B,EAAgC;AAC5B5C,0BAAU,GAAG;AACT9B,sBAAI,EAAE,YADG;AAETgC,0BAAQ,EAAEgvB,KAFD;AAGTvvB,uBAAK,EAAEA;AAHE,iBAAb;AAKH,eAND,MAMO;AACHK,0BAAU,GAAG;AACT9B,sBAAI,EAAE,YADG;AAETgC,0BAAQ,EAAEgvB,KAFD;AAGTvvB,uBAAK,EAAEA,KAHE;AAITb,8BAAY,EAAE,KAAK45B,YAAL,CAAkB91B,CAAlB;AAJL,iBAAb;AAMH;;AAED,mBAAKm2B,YAAL,CAAkB35B,IAAlB,CAAuB;AAAE8vB,qBAAK,EAAEA,KAAT;AAAgBvvB,qBAAK,EAAEA;AAAvB,eAAvB;AACA,kBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,mBAAK3C,cAAL,CAAoByZ,wBAApB,CAA6CrV,KAA7C,EAAoDd,UAApD,EAAgEvC,IAAhE,CAAqE,oEAAa,IAAb,CAArE,EAAyFC,SAAzF,CACI,UAAAC,IAAI,EAAI;AACJ;AACAA,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AAEA,wBAAI,CAACk2C,gBAAL,GAAwB,KAAxB;AACAj1C,0BAAU,CAAC,YAAM;AAEb,sBAAIq7B,gBAAgB,GAAG,EAAvB;;AACA,0BAAI,CAAC5pB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC5B,wBAAIA,CAAC,CAAC2G,UAAF,IAAgBmc,KAAhB,IAAyBA,KAAK,IAAI,cAAtC,EAAsD;AAClD9iB,uBAAC,CAAC8tB,cAAF,CAAiBrtB,MAAjB,CAAwB,UAAAL,CAAC,EAAI;AACzB,4BAAGA,CAAC,CAAC2tB,OAAF,IAAax6B,KAAhB,EAAsB;AAClBs6B,0CAAgB,GAAGztB,CAAC,CAAC4tB,gBAArB;AACA,iCAAO,IAAP;AACH,yBAHD,MAGK;AACD,iCAAO,KAAP;AACH;AACJ,uBAPD;AAQA,6BAAO,IAAP;AACH,qBAVD,MAUO;AACH,6BAAO,KAAP;AACH;AACJ,mBAdD,EAHa,CAmBb;;;AACAr3B,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AACxBC,2BAAO,EAAE;AADe,mBAA5B;AAKH,iBAzBS,EAyBP,IAzBO,CAAV;AA0BH,eApCL,EAqCI,UAAAzE,KAAK,EAAI;AACL;AACA,wBAAI,CAAC9B,cAAL,CAAoBooB,gBAApB,CAAqC;AAAE9Y,yBAAO,EAAE,CAAX;AAAcjK,uBAAK,EAAE,QAAI,CAAC9D,MAAL,CAAY8D;AAAjC,iBAArC;;AACA,wBAAI,CAACrF,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAAC6nC,gBAAL,GAAwB,KAAxB;;AACA,wBAAI,CAACn3C,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA7B,0BAAU,CAAC,YAAM;AAEb,sBAAIq7B,gBAAgB,GAAG,EAAvB;;AACA,0BAAI,CAAC5pB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC5B,wBAAIA,CAAC,CAAC2G,UAAF,IAAgBmc,KAAhB,IAAyBA,KAAK,IAAI,cAAtC,EAAsD;AAClD9iB,uBAAC,CAAC8tB,cAAF,CAAiBrtB,MAAjB,CAAwB,UAAAL,CAAC,EAAI;AACzB,4BAAGA,CAAC,CAAC2tB,OAAF,IAAax6B,KAAhB,EAAsB;AAClBs6B,0CAAgB,GAAGztB,CAAC,CAAC4tB,gBAArB;AACA,iCAAO,IAAP;AACH,yBAHD,MAGK;AACD,iCAAO,KAAP;AACH;AACJ,uBAPD;AAQA,6BAAO,IAAP;AACH,qBAVD,MAUO;AACH,6BAAO,KAAP;AACH;AACJ,mBAdD;;AAgBA,0BAAI,CAACqZ,YAAL,GAAoB,QAAI,CAACgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;;AACA,0BAAI,CAACo1C,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBmT,UAAxB,CAAmC;AAAEmZ,yBAAK,EAAEA,KAAT;AAAgBvvB,yBAAK,EAAEA,KAAvB;AAA8B8oB,+BAAW,EAAEwR;AAA3C,mBAAnC,EApBa,CAsBb;;;AACAl3B,mBAAC,CAAC,gBAAD,CAAD,CAAoBC,OAApB,CAA4B;AACxBC,2BAAO,EAAE;AADe,mBAA5B;;AAGA,sBAAG,OAAOzE,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,4BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,6BAAO,EAAE;AAD6B,qBAAxC;AAGH,mBAJD,MAIK;AACD,4BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,wCAAwCQ,KAA5D,EAAmE,EAAnE,EAAuE;AACnEP,6BAAO,EAAE;AAD0D,qBAAvE;AAGH;AAEJ,iBApCS,EAoCP,IApCO,CAAV;AAqCH,eAjFL;AAmFH,aAvGD,MAuGO;AACH,mBAAK7D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACH;AACJ;;;wCAEa/qB,G,EAAKC,C,EAAG;AAAA;;AAElB,gBAAID,GAAG,CAACE,MAAJ,IAAc7E,SAAlB,EAA6B;AACzBY,wBAAU,CAAC,YAAM;AACb,wBAAI,CAAC60C,YAAL,GAAoB,QAAI,CAACgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;;AACA,wBAAI,CAACo1C,YAAL,CAAkBjzC,EAAlB,CAAqBoC,CAArB,EAAwBmT,UAAxB,CAAmC;AAAEmZ,uBAAK,EAAEvsB,GAAG,CAACE,MAAJ,CAAWlD,KAApB;AAA2BA,uBAAK,EAAE;AAAlC,iBAAnC;;AACA,oBAAIgD,GAAG,CAACE,MAAJ,CAAWlD,KAAX,IAAoB,EAAxB,EAA4B;AACxB,sBAAI06B,WAAW,GAAG,QAAI,CAAChqB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC9C,2BAAOA,CAAC,CAAC,YAAD,CAAD,IAAmBzJ,GAAG,CAACE,MAAJ,CAAWlD,KAArC;AACH,mBAFiB,EAEf,GAFe,EAEV,gBAFU,CAAlB;;AAGA,0BAAI,CAACq5B,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,WAAtB;AACA,0BAAI,CAAC+Y,YAAL,CAAkBxwC,CAAlB,IAAuBD,GAAG,CAACE,MAAJ,CAAWlD,KAAlC;AACA,0BAAI,CAAC+4B,YAAL,CAAkB91B,CAAlB,IAAuB,EAAvB;AACH,iBAPD,MAOO;AACH,0BAAI,CAAC81B,YAAL,CAAkB90B,MAAlB,CAAyBhB,CAAzB,EAA4B,CAA5B;;AACA,sBAAIy3B,aAAW,GAAG,EAAlB;AACA,0BAAI,CAACrB,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,aAAtB;;AACA,0BAAI,CAAC+Y,YAAL,CAAkBxvC,MAAlB,CAAyBhB,CAAzB,EAA4B,CAA5B;AACH;AACJ,eAhBS,EAgBP,GAhBO,CAAV;AAiBH,aAlBD,MAkBO;AAEH,kBAAImG,IAAI,GAAG,IAAX;AACA,kBAAIob,KAAK,GAAG7a,WAAW,CAAC,UAACC,GAAD,EAAO;AAE3B,oBAAG;AACC,sBAAI8wB,WAAW,GAAG,QAAI,CAAChqB,cAAL,CAAoBxD,MAApB,CAA2B,UAAAT,CAAC,EAAI;AAC9C,2BAAOA,CAAC,CAAC,YAAD,CAAD,IAAmBzJ,GAA1B;AACH,mBAFiB,EAEf,GAFe,EAEV,gBAFU,CAAlB;;AAGA,0BAAI,CAACq2B,WAAL,CAAiBp2B,CAAjB,IAAsBy3B,WAAtB;;AACA,0BAAI,CAAC+Y,YAAL,CAAkBh0C,IAAlB,CAAuBuD,GAAvB;;AACAgK,+BAAa,CAACwX,KAAD,CAAb;AACH,iBAPD,CAOC,OAAMjhB,CAAN,EAAQ;AACLpF,yBAAO,CAACC,GAAR,CAAYmF,CAAZ;AACH;AAGJ,eAdsB,EAcpB,GAdoB,CAAvB;AAgBH;AACJ;;;sCAGQ;AAAA;;AAEL,iBAAKuyC,QAAL,CAAcp3C,GAAd,CAAkB,OAAlB,EAA2BsN,YAA3B,CAAwClO,IAAxC,CAA6C,oEAAa,IAAb,CAA7C,EAAiEC,SAAjE,CACI,UAAAkwB,YAAY,EAAI;AACZ,kBAAIA,YAAY,CAAChtB,MAAb,GAAsB,CAAtB,IAA2BgtB,YAAY,CAAC/tB,IAAb,MAAuB,EAAtD,EAA0D;AACtD,wBAAI,CAAC01C,cAAL,GAAsB,KAAtB;;AACA,wBAAI,CAAC74C,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,oBAAI5sB,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAAxB;AACA,oBAAIW,UAAU,GAAG;AACbE,0BAAQ,EAAE,OADG;AAEbP,uBAAK,EAAEiuB;AAFM,iBAAjB;;AAIA,wBAAI,CAAClxB,cAAL,CAAoBwZ,kBAApB,CAAuCpV,KAAvC,EAA8Cd,UAA9C,EAA0DtC,SAA1D,CACI,UAAAC,IAAI,EAAI;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,sBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,sBAAI,CAAC,WAAD,CAAJ,GAAoBiwB,YAApB;;AACA,0BAAI,CAAClxB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,0BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,0BAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AAEH,iBATL,EAUI,UAAAa,KAAK,EAAI;AACLV,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,sBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,sBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,sBAAI,CAAC,WAAD,CAAJ,GAAoBiwB,YAApB;;AACA,0BAAI,CAAClxB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,0BAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,0BAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,8BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,mBAAnC;;AACA,0BAAI,CAAC/D,cAAL,CAAoBu6C,iBAApB,CAAsCrpB,YAAtC;;AACA,sBAAG,OAAOpvB,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,4BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,6BAAO,EAAE;AAD6B,qBAAxC;AAGH,mBAJD,MAIK;AACD,4BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,iCAAiCQ,KAArD,EAA4D,EAA5D,EAAgE;AAC5DP,6BAAO,EAAE;AADmD,qBAAhE;AAGH;AACJ,iBA5BL;AA8BH,eAtCD,MAsCO,IAAIqtB,YAAY,CAAChtB,MAAb,GAAsB,CAA1B,EAA6B;AAEhC,wBAAI,CAAC20C,cAAL,GAAsB,IAAtB;AACH;AACJ,aA5CL;AA+CA,iBAAKE,QAAL,CAAchzB,QAAd,CAAuB,YAAvB,EAAqC9W,YAArC,CAAkDlO,IAAlD,CAAuD,iEAAUO,SAAV,CAAvD,EAA6E,oEAAa,IAAb,CAA7E,EAAiG,iEAAjG,EAA6GN,SAA7G,CAAuH,UAAA8vB,aAAa,EAAI;AACpI1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;AACA1vB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2ByvB,aAAa,CAAC,CAAD,CAAxC;;AACA,sBAAI,CAAC9wB,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI1tB,UAAU,GAAG,EAAjB;AACA,kBAAIc,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAAxB;AACA,kBAAIc,QAAQ,GAAGqtB,aAAa,CAAC,CAAD,CAA5B;AACA,kBAAIO,QAAQ,GAAGP,aAAa,CAAC,CAAD,CAA5B;;AAEA,kBAAGrtB,QAAQ,IAAInC,SAAf,EAAyB;AACrBgC,0BAAU,GAAG;AACT9B,sBAAI,EAAE,YADG;AAETgC,0BAAQ,EAAE,YAFD;AAGTP,uBAAK,EAAEouB;AAHE,iBAAb;AAKH,eAND,MAMM,IAAG5tB,QAAQ,IAAInC,SAAZ,IAAyB,QAAI,CAACC,MAAL,CAAYqW,UAAZ,IAA0B,CAAC,CAAvD,EAAyD;AAC3DtU,0BAAU,GAAG;AACT9B,sBAAI,EAAE,YADG;AAETgC,0BAAQ,EAAE,YAFD;AAGTP,uBAAK,EAAEouB,QAHE;AAITjvB,8BAAY,EAAG,CAAC;AAJP,iBAAb;AAMH,eAPK,MAOD;AACDkB,0BAAU,GAAG;AACT9B,sBAAI,EAAE,YADG;AAETgC,0BAAQ,EAAE,YAFD;AAGTP,uBAAK,EAAEouB,QAHE;AAITjvB,8BAAY,EAAGqB;AAJN,iBAAb;AAMH;;AAEDrC,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;;AACA,sBAAI,CAACtD,cAAL,CAAoB0D,qBAApB,CAA0CU,KAA1C,EAAiDd,UAAjD,EAA6DtC,SAA7D,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;AACH,eANL,EAOI,UAAAlvB,KAAK,EAAI;AACLV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AAEA,wBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAEA,oBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACrB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAACC,2BAAO,EAAE;AAAV,mBAA9C;;AACA,0BAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,8BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,mBAAnC;;AACA,0BAAI,CAACg1C,QAAL,CAAcp3C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyCyvB,QAAzC,EAAmD;AAAExvB,6BAAS,EAAE;AAAb,mBAAnD;;AACA,0BAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyByZ,QAAzB;AACD,iBALD,MAKK;AACH,0BAAI,CAACpxB,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAC+B,2BAAO,EAAE;AAAV,mBAAxC;AAED;AACJ,eArBL;AAuBH,aAvDD;AA2DA,iBAAKk1C,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,EAA8BsN,YAA9B,CAA2ClO,IAA3C,CAAgD,oEAAa,IAAb,CAAhD,EAAoEC,SAApE,CACI,UAAAw5C,UAAU,EAAI;AAEV,sBAAI,CAACx6C,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI5sB,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAAxB;AACA,kBAAIW,UAAU,GAAG;AACb9B,oBAAI,EAAE,WADO;AAEbgC,wBAAQ,EAAG,UAFE;AAGbP,qBAAK,EAAEu3C;AAHM,eAAjB;AAKAp5C,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;;AACA,sBAAI,CAACtD,cAAL,CAAoB0D,qBAApB,CAA0CU,KAA1C,EAAiDd,UAAjD,EAA6DtC,SAA7D,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AAEH,eAPL,EAQI,UAAAa,KAAK,EAAI;AACLV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;;AAEA,wBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,oBAAG,OAAOjC,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,2BAAO,EAAE;AAD2B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,oCAAoCQ,KAAxD,EAA+D,EAA/D,EAAmE;AAC/DP,2BAAO,EAAE;AADsD,mBAAnE;AAGH;AACJ,eAtBL;AAyBH,aApCL;AAuCA,iBAAKk1C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BsN,YAA1B,CAAuClO,IAAvC,CAA4C,oEAAa,GAAb,CAA5C,EAA+DC,SAA/D,CACI,UAAA62C,OAAO,EAAI;AACP,sBAAI,CAAC73C,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;;AACA,kBAAI5sB,KAAK,GAAG,QAAI,CAAC7C,MAAL,CAAYoB,wBAAxB;AACA,kBAAIW,UAAU,GAAG;AACbE,wBAAQ,EAAE,MADG;AAEbP,qBAAK,EAAE40C;AAFM,eAAjB;;AAIA,sBAAI,CAAC73C,cAAL,CAAoBwZ,kBAApB,CAAuCpV,KAAvC,EAA8Cd,UAA9C,EAA0DtC,SAA1D,CACI,UAAAC,IAAI,EAAI;AACJ;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA/vB,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,oBAAI,CAAC,UAAD,CAAJ,GAAmB42C,OAAnB;;AACA,wBAAI,CAAC73C,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AAEAiB,0BAAU,CAAC,YAAM;AACb,sBAAIV,IAAI,GAAG,QAAI,CAACu3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,0BAAI,CAACsT,iBAAL,CAAuBjU,OAAvB,CAA+B,UAAA6vB,EAAE,EAAI;AACjC,wBAAGA,EAAE,CAACsL,OAAH,IAAcj8B,IAAjB,EAAsB;AAElB,8BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACH;AACJ,mBALD,EAFa,CAQb;;;AACAr3B,mBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACvBC,2BAAO,EAAE;AADc,mBAA3B;AAKH,iBAdS,EAcP,IAdO,CAAV;AAgBH,eA1BL,EA2BI,UAAAzE,KAAK,EAAI;AACL;AACA,oBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;AACAA,oBAAI,CAAC,UAAD,CAAJ,GAAmB42C,OAAnB;;AACA,wBAAI,CAAC73C,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,oBAAG,OAAOxN,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,gCAAgCQ,KAApD,EAA2D,EAA3D,EAA+D;AAC3DP,2BAAO,EAAE;AADkD,mBAA/D;AAGH;;AACD3B,0BAAU,CAAC,YAAM;AACb,sBAAIV,IAAI,GAAG,QAAI,CAACu3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BsB,KAArC;;AACA,0BAAI,CAACsT,iBAAL,CAAuBjU,OAAvB,CAA+B,UAAA6vB,EAAE,EAAI;AACjC,wBAAGA,EAAE,CAACsL,OAAH,IAAcj8B,IAAjB,EAAsB;AAElB,8BAAI,CAACizC,QAAL,GAAgBtiB,EAAE,CAACuL,gBAAnB;AACH;AACJ,mBALD,EAFa,CAQb;;;AACAr3B,mBAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACvBC,2BAAO,EAAE;AADc,mBAA3B;AAKH,iBAdS,EAcP,IAdO,CAAV;AAeH,eA5DL;AA8DH,aAtEL;AAwEH;;;2CAEa;AAAA;;AACV,iBAAKvG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAIvtB,QAAQ,GAAG,KAAKs1C,QAAL,CAAcp3C,GAAd,CAAkB,YAAlB,EAAgCsB,KAA/C;AACA,gBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,gBAAIW,UAAU,GAAG;AACbE,sBAAQ,EAAE,YADG;AAEbP,mBAAK,EAAE;AAFM,aAAjB;AAIA7B,mBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,iBAAKtD,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA;;;;AAGA,sBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,sBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAC+nB,QAAL,CAAcp3C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,CAAC,CAA1C,EAA6C;AAAEC,yBAAS,EAAE;AAAb,eAA7C;;AACA,sBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;;AAEA,sBAAI,CAAC3X,MAAL,CAAY2D,OAAZ,CAAoB,mBAApB,EAAyC,IAAzC,EAA+C;AAACC,uBAAO,EAAE;AAAV,eAA/C;AACH,aAZL,EAaI,UAAA/B,KAAK,EAAI;AACLV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA;;;;;AAIA,sBAAI,CAAC9B,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,0BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,eAAnC;;AACA,kBAAGjC,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACnB,wBAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAACC,yBAAO,EAAE;AAAV,iBAA9C;;AACA,wBAAI,CAACk1C,QAAL,CAAcp3C,GAAd,CAAkB,YAAlB,EAAgCC,QAAhC,CAAyC,CAAC,CAA1C,EAA6C;AAAEC,2BAAS,EAAE;AAAb,iBAA7C;;AACA,wBAAI,CAACN,MAAL,CAAYqW,UAAZ,GAAyB,CAAC,CAA1B;AACH,eAJD,MAIK;AACD,wBAAI,CAAC3X,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AAAC+B,yBAAO,EAAE;AAAV,iBAAxC;AAEH;AACJ,aA7BL;AA+BH;;;6CAEkB06B,C,EAAI/wB,C,EAAIi9B,C,EAAE;AACzB,gBAAIlM,CAAC,IAAIj9B,SAAT,EAAoB;AAChB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B2xB,qBAAK,EAAE,IAAI,0DAAJ,CAAgB+L,CAAhB,EAAmB,CAAC,0DAAWvqB,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CADmB;AAE1B1e,qBAAK,EAAE,IAAI,0DAAJ,CAAgBuK,CAAhB,EAAmB,CAAC,0DAAWwG,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CAFmB;AAG1BoK,2BAAW,EAAG,IAAI,0DAAJ,CAAgB0e,CAAhB,EAAmB,CAAC,0DAAWz2B,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAnB;AAHY,eAAvB,CAAP;AAKH,aAND,MAMO;AACH,qBAAO,KAAK5hB,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B2xB,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWxe,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADmB;AAE1B1e,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW+Q,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAFmB;AAG1BoK,2BAAW,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW/X,QAAZ,EAAsB,0DAAW2N,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAHY,eAAvB,CAAP;AAKH;AACJ;;;uCAEYnb,C,EAAE;AAEX,gBAAIA,CAAC,IAAIlF,SAAT,EAAoB;AAChB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgBD,CAAhB,EAAmB,CAAC,0DAAWwN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAAnB;AADkB,eAAvB,CAAP;AAGH,aAJD,MAIO;AACH,qBAAO,KAAK74C,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWuN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAApB;AADkB,eAAvB,CAAP;AAGH;AACJ;;;wCAEapyC,C,EAAI+3B,C,EAAE;AAChB,gBAAI/3B,CAAC,IAAIlF,SAAT,EAAoB;AAChB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgBD,CAAhB,EAAmB,CAAC,0DAAWwN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAAnB,CADkB;AAE1Bp3C,oBAAI,EAAE+8B;AAFoB,eAAvB,CAAP;AAIH,aALD,MAKO;AACH,qBAAO,KAAKx+B,WAAL,CAAiBc,KAAjB,CAAuB;AAC1B4F,sBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWuN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAAtB,CADkB;AAE1Bp3C,oBAAI,EAAE;AAFoB,eAAvB,CAAP;AAIH;AACJ;;;yCAEc8jB,C,EAAIm1B,K,EAAQC,O,EAAUl0C,C,EAAI+3B,C,EAAI53B,I,EAAK;AAC9C,gBAAIH,CAAC,IAAIlF,SAAT,EAAoB;AAChB,qBAAO,KAAKvB,WAAL,CAAiBc,KAAjB,CAAuB;AAC1BwE,qBAAK,EAAG,IAAI,0DAAJ,CAAgBigB,CAAhB,EAAmB,CAAC,0DAAWtR,QAAZ,CAAnB,CADkB;AAE1B5E,4BAAY,EAAE,IAAI,0DAAJ,CAAgBqrC,KAAhB,EAAuB,CAAC,0DAAWzmC,QAAZ,CAAvB,CAFY;AAG1BrR,wCAAwB,EAAE,IAAI,0DAAJ,CAAgB+3C,OAAhB,EAAyB,CAAC,0DAAW1mC,QAAZ,CAAzB,CAHA;AAI1BvN,sBAAM,EAAE,IAAI,0DAAJ,CAAgBD,CAAhB,EAAmB,CAAC,0DAAWwN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAAnB,CAJkB;AAK1Bp3C,oBAAI,EAAE+8B,CALoB;AAM1B53B,oBAAI,EAAEA;AANoB,eAAvB,CAAP;AAQH,aATD,MASO;AACH,qBAAO,KAAK5G,WAAL,CAAiBc,KAAjB,CAAuB;AAC1BwE,qBAAK,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW2O,QAAZ,CAAtB,CADmB;AAE1B5E,4BAAY,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAW4E,QAAZ,CAAtB,CAFY;AAG1BrR,wCAAwB,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWqR,QAAZ,CAAtB,CAHA;AAI1BvN,sBAAM,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWuN,QAAZ,EAAsB,0DAAW4N,OAAX,CAAmB,KAAKg3B,QAAxB,CAAtB,CAAtB,CAJkB;AAK1Bp3C,oBAAI,EAAE,IALoB;AAM1BmF,oBAAI,EAAE;AANoB,eAAvB,CAAP;AAQH;AACJ;;;wCAGaV,G,EAAKC,C,EAAG;AAElB,gBAAID,GAAG,YAAY,sEAAnB,EAAsC;AAClC,kBAAIA,GAAG,CAAChC,aAAJ,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B,oBAAImB,KAAK,GAAGY,GAAG,CAAChC,aAAJ,CAAkB,CAAlB,EAAqB,OAArB,EAA8B,cAA9B,CAAZ;AACA,qBAAKs1C,eAAL,CAAqB;AAAE/+B,sBAAI,EAAEnV,KAAR;AAAea,mBAAC,EAAEA;AAAlB,iBAArB;AACH;AACJ,aALD,MAKO;AACH,kBAAIb,OAAK,GAAGY,GAAG,CAACE,MAAJ,CAAWlD,KAAvB;AACA,mBAAKw1C,eAAL,CAAqBryC,IAArB,CAA0B;AAAEoU,oBAAI,EAAEnV,OAAR;AAAea,iBAAC,EAAEA;AAAlB,eAA1B;AACH;AACJ;;;yCAEcD,G,EAAKC,C,EAAG;AAEnB,gBAAID,GAAG,YAAY,sEAAnB,EAAsC;AAClC,kBAAIA,GAAG,CAAChC,aAAJ,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B9C,uBAAO,CAACC,GAAR,CAAY4E,GAAG,CAAChC,aAAJ,CAAkB,CAAlB,CAAZ;AACA,oBAAIoB,KAAK,GAAG,EAAZ;;AACA,oBAAGY,GAAG,CAAChC,aAAJ,CAAkB,CAAlB,EAAqB,OAArB,EAA8B,0BAA9B,KAA6D3C,SAAhE,EAA0E;AACtE+D,uBAAK,GAAGY,GAAG,CAAChC,aAAJ,CAAkB,CAAlB,EAAqB,OAArB,EAA8B,YAA9B,CAAR;AACH,iBAFD,MAEK;AACDoB,uBAAK,GAAGY,GAAG,CAAChC,aAAJ,CAAkB,CAAlB,EAAqB,OAArB,EAA8B,0BAA9B,CAAR;AACH;;AACD,qBAAKu1C,gBAAL,CAAsB;AAAEh/B,sBAAI,EAAEnV,KAAR;AAAea,mBAAC,EAAEA;AAAlB,iBAAtB;AACH;AACJ,aAXD,MAWO;AACH,kBAAIb,OAAK,GAAGY,GAAG,CAACE,MAAJ,CAAWlD,KAAvB;AACA,mBAAKy1C,gBAAL,CAAsBtyC,IAAtB,CAA2B;AAAEoU,oBAAI,EAAEnV,OAAR;AAAea,iBAAC,EAAEA;AAAlB,eAA3B;AACH;AACJ;;;0CAEejF,I,EAAM;AAAA;;AAClB,gBAAIiC,KAAK,GAAGjC,IAAI,CAAC,GAAD,CAAhB;AACA,iBAAK04C,YAAL,GAAoB,KAAKZ,QAAL,CAAcp3C,GAAd,CAAkB,SAAlB,CAApB;;AACA,gBAAI,KAAKw2C,aAAL,CAAmBj1C,KAAnB,KAA6B5B,SAAjC,EAA4C;AACxC,kBAAM+vB,QAAQ,GAAGpwB,IAAI,CAAC,MAAD,CAArB;AACA,kBAAMqC,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAEouB;AAHQ,eAAnB,CAFwC,CAOxC;;AACA,kBAAIjtB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,mBAAK3C,cAAL,CAAoByZ,wBAApB,CAA6CrV,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA/vB,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;AACH,eAPL,EAOO,UAAAa,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AAEA;;;;AAGA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AAEA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACnB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,mCAAmCQ,KAAvD,EAA8D,EAA9D,EAAkE;AAC9DP,2BAAO,EAAE;AADqD,mBAAlE;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,2BAAO,EAAE;AAD2B,mBAAxC;AAIH;AACJ,eA1BL;AA4BA,mBAAKs0C,aAAL,CAAmBj1C,KAAnB,IAA4BjC,IAA5B;AAGH,aAxCD,MAwCO;AACH,kBAAMwC,QAAQ,GAAG,KAAK00C,aAAL,CAAmBj1C,KAAnB,EAA0B,eAA1B,CAAjB;AACA,kBAAMmuB,UAAQ,GAAGpwB,IAAI,CAAC,MAAD,CAArB;AACA,kBAAMqC,aAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAEouB,UAHQ;AAIfjvB,4BAAY,EAAEqB;AAJC,eAAnB;AAOA,kBAAIW,OAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB,CAVG,CAWH;;AACA,mBAAK3C,cAAL,CAAoByZ,wBAApB,CAA6CrV,OAA7C,EAAoDd,aAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACAA,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;AACH,eAPL,EAOO,UAAAa,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,oBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAAChB,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,yBAAO,EAAE;AAD2B,iBAAxC,EAJQ,CAOR;;;AACA,wBAAI,CAAC7D,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAG,OAAOlvB,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,iCAAiCQ,OAArD,EAA4D,EAA5D,EAAgE;AAC5DP,2BAAO,EAAE;AADmD,mBAAhE;AAGH;AACJ,eA1BL;AA4BA,mBAAKs0C,aAAL,CAAmBj1C,KAAnB,IAA4BjC,IAA5B;AACH;AAGJ;;;2CAEgBA,I,EAAM;AAAA;;AACnB,gBAAIiC,KAAK,GAAGjC,IAAI,CAAC,GAAD,CAAhB;AACA,iBAAK+uB,aAAL,GAAqB,KAAK+oB,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,CAArB;AAEA,gBAAIoS,UAAU,GAAG,KAAKqkC,cAAL,CAAoB1uB,IAApB,CAAyB,UAAAhoB,OAAO;AAAA,qBAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEovC,yBAAT,KAAsC7vC,IAAI,CAACuZ,IAA3C,IAAmD,CAAA9Y,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE8Y,IAAT,KAAiBvZ,IAAI,CAACuZ,IAA7E;AAAA,aAAhC,CAAjB;;AAEA,gBAAI,KAAK49B,cAAL,CAAoBl1C,KAApB,KAA8B5B,SAA9B,IAA2C,CAACyS,UAAhD,EAA4D;AACxD,kBAAMsd,QAAQ,GAAGpwB,IAAI,CAAC,MAAD,CAArB;AACA,kBAAMqC,UAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAEouB;AAHQ,eAAnB;AAKAjwB,qBAAO,CAACC,GAAR,CAAYiC,UAAZ;AACA,kBAAIc,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,mBAAK3C,cAAL,CAAoByZ,wBAApB,CAA6CrV,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA/vB,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC,EALI,CAMJ;;;AACA,wBAAI,CAACq4C,kBAAL,GAA0B,KAA1B;AACH,eATL,EASO,UAAAx3C,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AAEA;;;;AAGA,wBAAI,CAAC9B,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACnB,0BAAI,CAAC21C,kBAAL,GAA0B,KAA1B;;AACA,0BAAI,CAACr5C,MAAL,CAAY2D,OAAZ,CAAoB,oCAAoCQ,KAAxD,EAA+D,EAA/D,EAAmE;AAC/DP,2BAAO,EAAE;AADsD,mBAAnE;AAGH,iBALD,MAKK;AACD,0BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,2BAAO,EAAE;AAD2B,mBAAxC;AAIH;AACJ,eA5BL;AA8BA,mBAAKu0C,cAAL,CAAoBl1C,KAApB,IAA6BjC,IAA7B;AAGH,aA1CD,MA0CO,IAAG,KAAKm3C,cAAL,CAAoBl1C,KAApB,KAA8B5B,SAA9B,IAA2C,CAACyS,UAA/C,EAA2D;AAC9D,kBAAMtQ,QAAQ,GAAG,KAAK20C,cAAL,CAAoBl1C,KAApB,EAA2B,eAA3B,CAAjB;AACA,kBAAMmuB,UAAQ,GAAGpwB,IAAI,CAAC,MAAD,CAArB;AACA,kBAAMqC,aAAU,GAAG;AACf9B,oBAAI,EAAE,YADS;AAEfgC,wBAAQ,EAAE,SAFK;AAGfP,qBAAK,EAAEouB,UAHQ;AAIfjvB,4BAAY,EAAEqB;AAJC,eAAnB;AAOA,kBAAIW,OAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACAvB,qBAAO,CAACC,GAAR,CAAYiC,aAAZ;AACA,mBAAKtD,cAAL,CAAoByZ,wBAApB,CAA6CrV,OAA7C,EAAoDd,aAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACAA,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB;;AACA,wBAAI,CAACjB,cAAL,CAAoBooB,gBAApB,CAAqCnnB,IAArC;AACH,eAPL,EAOO,UAAAa,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,oBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;AACAN,oBAAI,CAAC,SAAD,CAAJ,GAAkB,CAAlB,CAHQ,CAKR;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,wBAAI,CAAC/D,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,oBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,GAAnB,EAAuB;AACnB,0BAAI,CAAC1D,MAAL,CAAY2D,OAAZ,CAAoB,iCAAiCQ,OAArD,EAA4D,EAA5D,EAAgE;AAC5DP,2BAAO,EAAE;AADmD,mBAAhE;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,2BAAO,EAAE;AAD2B,mBAAxC;AAGH;AACJ,eAxBL;AA0BA,mBAAKu0C,cAAL,CAAoBl1C,KAApB,IAA6BjC,IAA7B;AACH,aAvCM,MAuCD,IAAG8S,UAAH,EAAc;AAChB,mBAAK9T,MAAL,CAAY6B,KAAZ,CAAkB,mDAAlB,EAAuE,OAAvE,EAAgF;AAC5E+B,uBAAO,EAAE;AADmE,eAAhF;AAGH;AAGJ;AAEF;;;;;;;;;;;;;;;qCAgBY2C,C,EAAI+3B,C,EAAI;AACf,iBAAKob,YAAL,GAAoB,KAAKZ,QAAL,CAAcp3C,GAAd,CAAkB,SAAlB,CAApB;;AACA,gBAAI6E,CAAC,IAAIlF,SAAT,EAAoB;AAChB,mBAAKq4C,YAAL,CAAkBj3C,IAAlB,CAAuB,KAAK02C,aAAL,CAAmB5yC,CAAnB,EAAsB+3B,CAAtB,CAAvB;AACH,aAFD,MAEO;AACH,mBAAKob,YAAL,CAAkBj3C,IAAlB,CAAuB,KAAK02C,aAAL,EAAvB;AACH;AAEJ;;;sCAEW9zB,C,EAAIm1B,K,EAAQE,K,EAAQn0C,C,EAAI+3B,C,EAAI;AAEpCr8B,sBAAU,CAAC,YAAM;AACb;AACAmE,eAAC,CAAC,mBAAD,CAAD,CAAuBC,OAAvB,CAA+B;AAC3BC,uBAAO,EAAE;AADkB,eAA/B;AAGH,aALS,EAKP,IALO,CAAV;AAMA,iBAAKypB,aAAL,GAAqB,KAAK+oB,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,CAArB;;AACA,gBAAI6E,CAAC,IAAIlF,SAAT,EAAoB;AAChB,kBAAIqF,IAAI,GAAG,KAAX;;AACA,kBAAGH,CAAC,CAACqd,QAAF,CAAW,MAAX,CAAH,EAAsB;AAClBld,oBAAI,GAAG,IAAP;AACH;;AACD,mBAAKqpB,aAAL,CAAmBttB,IAAnB,CAAwB,KAAK22C,cAAL,CAAoB/zB,CAApB,EAAuBm1B,KAAvB,EAA8BE,KAA9B,EAAqCn0C,CAArC,EAAwC+3B,CAAxC,EAA2C53B,IAA3C,CAAxB;AACH,aAND,MAMO;AACH,mBAAK2yC,kBAAL,GAA0B,IAA1B;AACA,mBAAKtpB,aAAL,CAAmBttB,IAAnB,CAAwB,KAAK22C,cAAL,EAAxB;AACH;AAEJ;;;0CAIe9a,C,EAAI/wB,C,EAAIi9B,C,EAAI;AAExB,iBAAKsM,YAAL,GAAoB,KAAKgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;;AACA,gBAAI48B,CAAC,IAAIj9B,SAAT,EAAoB;AAChB,mBAAKy1C,YAAL,CAAkBr0C,IAAlB,CAAuB,KAAKs0C,kBAAL,CAAwBzY,CAAxB,EAA2B/wB,CAA3B,EAA8Bi9B,CAA9B,CAAvB;AACH,aAFD,MAEO;AACH,mBAAK0M,gBAAL,GAAwB,IAAxB;AACA,mBAAKJ,YAAL,CAAkBr0C,IAAlB,CAAuB,KAAKs0C,kBAAL,EAAvB;AACH;AACJ;;;wCAEa9zC,K,EAAO;AAAA;;AAEjB,iBAAKwzC,YAAL,CAAkBxvC,MAAlB,CAAyBhE,KAAzB,EAAgC,CAAhC;AACA,iBAAKo5B,WAAL,CAAiBp1B,MAAjB,CAAwBhE,KAAxB,EAA+B,CAA/B;AACA,iBAAKm5B,YAAL,CAAkBn1B,MAAlB,CAAyBhE,KAAzB,EAAgC,CAAhC;AAEA,iBAAK6zC,YAAL,GAAoB,KAAKgC,QAAL,CAAcp3C,GAAd,CAAkB,cAAlB,CAApB;AAEA,gBAAM6wB,KAAK,GAAG,KAAKukB,YAAL,CAAkBjzC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,OAAhC,EAAyCsB,KAAvD;AACA,gBAAMA,KAAK,GAAG,KAAK8zC,YAAL,CAAkBjzC,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,OAAhC,EAAyCsB,KAAvD;;AAIA,gBAAIuvB,KAAK,IAAI,EAAb,EAAiB;AAEb,kBAAIpuB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,kBAAIW,UAAU,GAAG;AACb9B,oBAAI,EAAE,YADO;AAEbgC,wBAAQ,EAAEgvB,KAFG;AAGbvvB,qBAAK,EAAEA;AAHM,eAAjB,CAJa,CAUb;;AAEA,mBAAKjD,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJ;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACvB,cAAL,CAAoBooB,gBAApB,CAAqC;AAAE9Y,yBAAO,EAAE,CAAX;AAAcjK,uBAAK,EAAE,QAAI,CAAC9D,MAAL,CAAY8D;AAAjC,iBAArC;;AACA,wBAAI,CAACrF,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;AACH,eAPL,EAOO,UAAAxN,KAAK,EAAI;AACR;AACA,wBAAI,CAAC9B,cAAL,CAAoBooB,gBAApB,CAAqC;AAAE9Y,yBAAO,EAAE,CAAX;AAAcjK,uBAAK,EAAE,QAAI,CAAC9D,MAAL,CAAY8D;AAAjC,iBAArC;;AACA,wBAAI,CAACrF,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,wBAAI,CAAChxB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AACA,oBAAG,OAAOjC,KAAK,CAACA,KAAb,IAAuB,QAA1B,EAAmC;AAC/B,0BAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACtC+B,2BAAO,EAAE;AAD6B,mBAAxC;AAGH,iBAJD,MAIK;AACD,0BAAI,CAAC5D,MAAL,CAAY2D,OAAZ,CAAoB,mCAAmCQ,KAAvD,EAA8D,EAA9D,EAAkE;AAC9DP,2BAAO,EAAE;AADqD,mBAAlE;AAGH;AACJ,eAtBL;AAwBH,aApCD,MAoCK;AACD,mBAAKszC,gBAAL,GAAwB,KAAxB;AACH;;AAGD,iBAAKJ,YAAL,CAAkB5vC,QAAlB,CAA2BjE,KAA3B;AACH;;;wCAEaA,K,EAAO;AAAA;;AACjB,iBAAKy2C,YAAL,GAAoB,KAAKZ,QAAL,CAAcp3C,GAAd,CAAkB,SAAlB,CAApB;AAEA,gBAAM8E,MAAM,GAAG,KAAKkzC,YAAL,CAAkB71C,EAAlB,CAAqBZ,KAArB,EAA4BvB,GAA5B,CAAgC,QAAhC,EAA0CsB,KAAzD;AAEA,gBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,gBAAIW,UAAU,GAAG;AACbE,sBAAQ,EAAE,SADG;AAEbP,mBAAK,EAAEwD;AAFM,aAAjB;;AAMA,gBAAIA,MAAM,IAAI,EAAd,EAAkB;AACd,mBAAKzG,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;;AACA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,EAA2C;AACvCC,yBAAO,EAAE;AAD8B,iBAA3C;AAIH,eARL,EAQO,UAAA/B,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADQ,CAER;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,yBAAO,EAAE;AAD2B,iBAAxC;AAGH,eAdL;AAgBH;;AAGD,iBAAK81C,YAAL,CAAkBxyC,QAAlB,CAA2BjE,KAA3B;AAEA,iBAAKi1C,aAAL,CAAmBjxC,MAAnB,CAA0BhE,KAA1B,EAAiC,CAAjC;AACH;;;yCAEcA,K,EAAO;AAAA;;AAClB,iBAAK8sB,aAAL,GAAqB,KAAK+oB,QAAL,CAAcp3C,GAAd,CAAkB,UAAlB,CAArB;AAEA,gBAAM8E,MAAM,GAAG,KAAKupB,aAAL,CAAmBlsB,EAAnB,CAAsBZ,KAAtB,EAA6BvB,GAA7B,CAAiC,QAAjC,EAA2CsB,KAA1D;AAEA,gBAAImB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AAEA,gBAAIW,UAAU,GAAG;AACbE,sBAAQ,EAAE,SADG;AAEbP,mBAAK,EAAEwD;AAFM,aAAjB;;AAMA,gBAAIA,MAAM,IAAI,EAAd,EAAkB;AACd,mBAAKzG,cAAL,CAAoB6G,wBAApB,CAA6CzC,KAA7C,EAAoDd,UAApD,EAAgEtC,SAAhE,CACI,UAAAC,IAAI,EAAI;AACJG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,wBAAI,CAACjB,cAAL,CAAoB8G,cAApB,CAAmC,QAAI,CAACvF,MAAxC;AACA;;;;;;;;;;;;AAWA,wBAAI,CAACtB,MAAL,CAAY2D,OAAZ,CAAoB,8BAApB,EAAoD,EAApD,EAAwD;AACpDC,yBAAO,EAAE;AAD2C,iBAAxD;AAIH,eAnBL,EAmBO,UAAA/B,KAAK,EAAI;AACRV,uBAAO,CAACC,GAAR,CAAYS,KAAZ,EADQ,CAER;;AACA,wBAAI,CAAC7B,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAxB,EAA+B,OAA/B,EAAwC;AACpC+B,yBAAO,EAAE;AAD2B,iBAAxC;AAGH,eAzBL;AA2BH;;AAED,iBAAKy1C,kBAAL,GAA0B,KAA1B;AACA,iBAAKtpB,aAAL,CAAmB7oB,QAAnB,CAA4BjE,KAA5B;AAEA,iBAAKk1C,cAAL,CAAoBlxC,MAApB,CAA2BhE,KAA3B,EAAkC,CAAlC;AACH;;;mCAEQ+vB,S,EAAgB;AAAA;;AAErB/wB,sBAAU,CAAC,YAAM;AACb;AACJmE,eAAC,CAAC,eAAD,CAAD,CAAmBC,OAAnB,CAA2B;AACvBC,uBAAO,EAAE;AADc,eAA3B;AAGC,aALS,EAKP,GALO,CAAV;AAOA,iBAAKvG,cAAL,CAAoBgxB,aAApB,CAAkC,IAAlC;AACA,gBAAI5sB,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,gBAAIM,KAAK,GAAG,EAAZ;;AACA,gBAAGgwB,SAAH,EAAW;AACPhwB,mBAAK,GAAG,QAAR;AACA,mBAAK81C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BC,QAA1B,CAAmC,QAAnC,EAA6C;AAAEC,yBAAS,EAAE;AAAb,eAA7C;AACA,mBAAKk3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0Bk4C,OAA1B,CAAkC;AAACC,wBAAQ,EAAE,IAAX;AAAiBj4C,yBAAS,EAAE;AAA5B,eAAlC;;AACA,kBAAG,QAAO,KAAKN,MAAL,CAAYC,IAAZ,IAAoB,QAA3B,CAAH,EAAwC;AACpC,qBAAKD,MAAL,CAAYC,IAAZ,CAAiBkB,IAAjB,CAAsB,QAAtB;AACH,eAFD,MAEO;AACH,qBAAKnB,MAAL,CAAYC,IAAZ,GAAmB,QAAnB;AACH;AACJ,aATD,MASK;AACDyB,mBAAK,GAAG,cAAR;AACA,mBAAK81C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0BC,QAA1B,CAAmC,cAAnC,EAAmD;AAAEC,yBAAS,EAAE;AAAb,eAAnD;AACA,mBAAKk3C,QAAL,CAAcp3C,GAAd,CAAkB,MAAlB,EAA0Bo4C,MAA1B,CAAiC;AAACD,wBAAQ,EAAE,IAAX;AAAiBj4C,yBAAS,EAAE;AAA5B,eAAjC;;AACA,kBAAG,QAAO,KAAKN,MAAL,CAAYC,IAAZ,IAAoB,QAA3B,CAAH,EAAwC;AACpC,qBAAKD,MAAL,CAAYC,IAAZ,CAAiB0F,MAAjB,CAAwB,KAAK3F,MAAL,CAAYC,IAAZ,CAAiBsP,OAAjB,CAAyB,QAAzB,CAAxB,EAA4D,CAA5D;;AACA,oBAAG,KAAKvP,MAAL,CAAYC,IAAZ,CAAiB0C,MAAjB,IAA2B,CAA9B,EAAgC;AAC5B,uBAAK3C,MAAL,CAAYC,IAAZ,CAAiBkB,IAAjB,CAAsBO,KAAtB;AACH;AACJ,eALD,MAKO;AACH,qBAAK1B,MAAL,CAAYC,IAAZ,GAAmB,cAAnB;AACH;AACJ;;AAED,gBAAI8B,UAAU,GAAG;AACbE,sBAAQ,EAAE,MADG;AAEbP,mBAAK,EAAEA;AAFM,aAAjB;AAOA,iBAAKjD,cAAL,CAAoBwZ,kBAApB,CAAuCpV,KAAvC,EAA8Cd,UAA9C,EAA0DtC,SAA1D,CACI,UAAAC,IAAI,EAAI;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,sBAAI,CAACjB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AACA,sBAAI,CAAChxB,cAAL,CAAoB8G,cAApB,CAAmC7F,IAAnC;;AACA,sBAAI,CAACjB,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,uBAAO,EAAE;AAAX,eAAlC;;AAED,sBAAI,CAACtP,cAAL,CAAoB46C,aAApB,CAAkC,QAAI,CAACr5C,MAAL,CAAYC,IAA9C;AACF,aARL,EASI,UAAAM,KAAK,EAAI;AACLV,qBAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,kBAAMb,IAAI,GAAG,QAAI,CAACM,MAAlB;;AACA,sBAAI,CAACvB,cAAL,CAAoBgxB,aAApB,CAAkC,KAAlC;;AAGA,kBAAGlvB,KAAK,CAAC6B,MAAN,IAAgB,KAAnB,EAAyB;AACrB,wBAAI,CAAC3D,cAAL,CAAoBwoB,aAApB,CAAkC;AAAElZ,yBAAO,EAAE;AAAX,iBAAlC;;AACA,wBAAI,CAACtP,cAAL,CAAoB8G,cAApB,CAAmC;AAAE2D,4BAAU,EAAE3I,KAAK,CAACA,KAAN,CAAYiC;AAA1B,iBAAnC;;AAEA,wBAAI,CAAC9D,MAAL,CAAY2D,OAAZ,CAAoB,uBAApB,EAA6C,EAA7C,EAAiD;AAC7CC,yBAAO,EAAE;AADoC,iBAAjD;;AAGA,wBAAI,CAAC7D,cAAL,CAAoB46C,aAApB,CAAkC,QAAI,CAACr5C,MAAL,CAAYC,IAA9C;AACH,eARD,MAQK;AACD,wBAAI,CAACvB,MAAL,CAAY6B,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYiC,IAA9B,EAAoC,EAApC,EAAwC;AAAEF,yBAAO,EAAE;AAAX,iBAAxC;AACH;AAGJ,aA5BL;AA8BH;;;0CAEeg3C,mB,EAAqBlM,e,EAAiBtpC,K,EAAK;AAAA;;AACvD,gBAAIgwC,KAAK,GAAG,KAAKr1C,cAAL,CAAoB86C,eAApB,CAAoCD,mBAApC,EAAyDlM,eAAzD,CAAZ;;AACA,gBAAG0G,KAAK,IAAI/zC,SAAZ,EAAsB;AACpB,mBAAKtB,cAAL,CAAoBqK,eAApB,CAAoCwwC,mBAApC,EAAyD75C,SAAzD,CACE,UAAAC,IAAI,EAAG;AACLG,uBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,oBAAGA,IAAI,IAAIK,SAAX,EAAqB;AACnB,0BAAI,CAACtB,cAAL,CAAoBu1C,YAApB,CAAiCsF,mBAAjC,EAAsDlM,eAAtD;;AACA,sBAAM0F,OAAO,GAAG,QAAI,CAACA,OAAL,CAAamB,uBAAb,CAAqC,4FAArC,CAAhB;;AACA,sBAAMC,YAAY,GAAG,QAAI,CAACC,EAAL,CAAQxZ,eAAR,CAAwBmY,OAAxB,CAArB;;AACA,0BAAI,CAACG,eAAL,CAAqB9xC,IAArB,CAA0B+yC,YAA1B;;AACwBA,8BAAY,CAAC1jC,QAAb,CAAuB1M,KAAvB,GAA+BA,KAA/B;AACAowC,8BAAY,CAAC1jC,QAAb,CAAuBgpC,cAAvB,GAAwCpM,eAAxC;AACA8G,8BAAY,CAAC1jC,QAAb,CAAuB28B,eAAvB,GAAyCmM,mBAAzC,CAPL,CAQnB;;AACwBpF,8BAAY,CAAC1jC,QAAb,CAAuByL,gBAAvB,GAA0Cvc,IAA1C;AACAw0C,8BAAY,CAAC1jC,QAAb,CAAuBipC,mBAAvB;AACzB;AACF,eAfH,EAeK,UAAAl5C,KAAK,EAAG;AACTV,uBAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,eAjBH;AAoBD,aArBD,MAqBK,CAEJ;AAEF;;;;;;;yBArsDMo2C,6B,EAA6B,wK,EAAA,2H,EAAA,yH,EAAA,+I,EAAA,uI;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;iFAGJ,8D;;;;;;;;;;;;;;;;;;AC/BtC;;AA0TA;;;;AA1T8B;;;;;;;;;wED4BjBA,6B,EAA6B;gBALzC,uDAKyC;iBAL/B;AACPv4C,oBAAQ,EAAE,6BADH;AAEPC,uBAAW,EAAE,0CAFN;AAGPC,qBAAS,EAAE,CAAC,0CAAD;AAHJ,W;AAK+B,U;;;;;;;;;;;;;AAE7BirB,iBAAO,EAAE,CAAF;kBAAf;AAAe,WAAE,C;AACmC4qB,YAAE,EAAE,CAAF;kBAAtD,uDAAsD;mBAA5C,c,EAAgB;AAACE,kBAAI,EAAE;AAAP,a;AAA4B,WAAE;;;;;;;;;;;;;;;;;;;AEjC7D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAkBA,UAAI,sEAAYl1B,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBu6B,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI95C,OAAO,CAACU,KAAR,CAAco5C,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACtBA,eAASC,wBAAT,CAAkClkC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOnE,OAAO,CAACC,OAAR,GAAkBqoC,IAAlB,CAAuB,YAAW;AACxC,cAAI50C,CAAC,GAAG,IAAI60C,KAAJ,CAAU,yBAAyBpkC,GAAzB,GAA+B,GAAzC,CAAR;AACAzQ,WAAC,CAACi9B,IAAF,GAAS,kBAAT;AACA,gBAAMj9B,CAAN;AACA,SAJM,CAAP;AAKA;;AACD20C,8BAAwB,CAAC9gC,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACA8gC,8BAAwB,CAACpoC,OAAzB,GAAmCooC,wBAAnC;AACAG,YAAM,CAACnF,OAAP,GAAiBgF,wBAAjB;AACAA,8BAAwB,CAAC5oC,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACOiC;;AAAiC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAMtD;;;;;;AAA+C;;;;;;AAC/C;;;;;;AAA8C;;;;UDM7CgpC,kB;AAQX,oCAAoBv7C,cAApB,EAA2D;AAAA;;AAAvC,eAAAA,cAAA,GAAAA,cAAA;AAFpB,eAAAw7C,cAAA,GAAiB,CAAjB;AAE8D;;;;qCAEtD;AAAA;;AAEN,iBAAKx7C,cAAL,CAAoBguC,mBAApB,CAAwChtC,SAAxC,CACE,UAAAC,IAAI,EAAE;AACJG,qBAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,kBAAGA,IAAI,IAAE,IAAT,EAAc;AACZ,wBAAI,CAACu6C,cAAL,GAAsBC,IAAI,CAAC,QAAI,CAACD,cAAL,CAAoBxjC,QAApB,KAA+B/W,IAAhC,CAA1B;AACD;AACF,aANH,EAMI,UAAAa,KAAK,EAAE,CAER,CARH;AAUD;;;sCAEWG,O,EAAsB;AAAA;;AAChC,gBAAGA,OAAO,CAACy5C,QAAR,CAAiBt5C,YAAjB,IAAiC,IAApC,EAAyC;AACvC,mBAAKo5C,cAAL,GAAsB,CAAtB;AACA,mBAAKj6C,MAAL,GAAcU,OAAO,CAACy5C,QAAR,CAAiBt5C,YAA/B;AACA,mBAAKD,UAAL,GAAkB,IAAlB;AACA,mBAAKyuC,WAAL,GAAmB,IAAnB;AAEA;;AAEA,kBAAG,KAAKrvC,MAAL,CAAYoB,wBAAZ,IAAwCrB,SAA3C,EAAqD;AACnD,oBAAI8C,KAAK,GAAG,KAAK7C,MAAL,CAAYoB,wBAAxB;AACA,qBAAK3C,cAAL,CAAoBg6C,6BAApB,CAAkD51C,KAAlD,EAAyD,QAAzD,EAAmEpD,SAAnE,CACE,UAAAC,IAAI,EAAE;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,QAAI,CAACM,MAAvB;AACA,0BAAI,CAACY,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2BlB,IAA3B;AACA,0BAAI,CAACkB,UAAL,CAAgB,iBAAhB,IAAoC,QAAI,CAACZ,MAAL,CAAY,cAAZ,CAApC;AACA,0BAAI,CAACY,UAAL,CAAgB,0BAAhB,IAA6C,QAAI,CAACZ,MAAL,CAAY,0BAAZ,CAA7C;AACA,0BAAI,CAACY,UAAL,CAAgB,MAAhB,IAA0B,QAAI,CAACZ,MAAL,CAAYC,IAAtC;AACD,iBARH,EAQK,UAAAM,KAAK,EAAE;AACRV,yBAAO,CAACC,GAAR,CAAY,QAAI,CAACE,MAAjB;AACA,0BAAI,CAACY,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2B,EAA3B;AACA,0BAAI,CAACA,UAAL,CAAgB,iBAAhB,IAAoC,QAAI,CAACZ,MAAL,CAAY,cAAZ,CAApC;AACA,0BAAI,CAACY,UAAL,CAAgB,0BAAhB,IAA6C,QAAI,CAACZ,MAAL,CAAY,0BAAZ,CAA7C;AACA,0BAAI,CAACY,UAAL,CAAgB,OAAhB,IAA0B,QAAI,CAACZ,MAAL,CAAY,OAAZ,CAA1B;AACA,0BAAI,CAACY,UAAL,CAAgB,MAAhB,IAA0B,QAAI,CAACZ,MAAL,CAAYC,IAAtC;AACAJ,yBAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,iBAlBH;AAqBA,qBAAK9B,cAAL,CAAoBg6C,6BAApB,CAAkD51C,KAAlD,EAAyD,SAAzD,EAAoEpD,SAApE,CACE,UAAAC,IAAI,EAAE;AACJG,yBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,0BAAI,CAAC2vC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B3vC,IAA5B;AACA,0BAAI,CAAC2vC,WAAL,CAAiB,iBAAjB,IAAqC,QAAI,CAACrvC,MAAL,CAAY,cAAZ,CAArC;AACA,0BAAI,CAACqvC,WAAL,CAAiB,0BAAjB,IAA8C,QAAI,CAACrvC,MAAL,CAAY,0BAAZ,CAA9C;AACD,iBAPH,EAOK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAAC8uC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B,EAA5B;AACA,0BAAI,CAACA,WAAL,CAAiB,iBAAjB,IAAqC,QAAI,CAACrvC,MAAL,CAAY,cAAZ,CAArC;AACA,0BAAI,CAACqvC,WAAL,CAAiB,0BAAjB,IAA8C,QAAI,CAACrvC,MAAL,CAAY,0BAAZ,CAA9C,CAJQ,CAKR;AAED,iBAdH,EAvBmD,CAwCnD;;AACA,qBAAKA,MAAL,CAAYkkB,KAAZ,CAAkBnjB,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,sBAAGA,OAAO,CAACF,IAAR,IAAgBF,SAAnB,EAA6B;AAC3B,wBAAGI,OAAO,CAACF,IAAR,IAAgB,WAAnB,EAA+B;AAC7BE,6BAAO,CAACo2B,QAAR,CAAiBx1B,OAAjB,CAAyB,UAAA8gB,GAAG,EAAI;AAC9B,gCAAI,CAACo4B,cAAL,IAAuBp4B,GAAG,CAAC/S,KAA3B;AACD,uBAFD;AAGD;AACF;AACF,iBARD;AASD,eAlDD,MAkDM,IAAG,KAAK9O,MAAL,CAAYwB,gBAAZ,IAAgCzB,SAAnC,EAA6C;AACjD,oBAAI0F,MAAM,GAAG,KAAKzF,MAAL,CAAYwB,gBAAzB;AACA,qBAAK/C,cAAL,CAAoBg6C,6BAApB,CAAkDhzC,MAAlD,EAA0D,QAA1D,EAAoEhG,SAApE,CACE,UAAAC,IAAI,EAAE;AACJ;AACA,0BAAI,CAACkB,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2BlB,IAA3B;AACA,0BAAI,CAACkB,UAAL,CAAgB,kBAAhB,IAAqC,QAAI,CAACZ,MAAL,CAAY,kBAAZ,CAArC;AACD,iBANH,EAMK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAACK,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2B,EAA3B;AACA,0BAAI,CAACA,UAAL,CAAgB,kBAAhB,IAAqC,QAAI,CAACZ,MAAL,CAAY,kBAAZ,CAArC,CAHQ,CAIR;AAED,iBAZH;AAeA,qBAAKvB,cAAL,CAAoBg6C,6BAApB,CAAkDhzC,MAAlD,EAA0D,SAA1D,EAAqEhG,SAArE,CACE,UAAAC,IAAI,EAAE;AACJ,0BAAI,CAAC2vC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B3vC,IAA5B;AACA,0BAAI,CAAC2vC,WAAL,CAAiB,kBAAjB,IAAsC,QAAI,CAACrvC,MAAL,CAAY,kBAAZ,CAAtC;AACD,iBALH,EAKK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAAC8uC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B,EAA5B;AACA,0BAAI,CAACA,WAAL,CAAiB,kBAAjB,IAAsC,QAAI,CAACrvC,MAAL,CAAY,kBAAZ,CAAtC,CAHQ,CAIR;AAED,iBAXH,EAjBiD,CA+BjD;;AACA,oBAAG,KAAKA,MAAL,CAAYkkB,KAAZ,IAAqB,IAAxB,EAA6B;AAC3B,uBAAKlkB,MAAL,CAAYkkB,KAAZ,CAAkBnjB,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,wBAAGA,OAAO,CAACF,IAAR,IAAgBF,SAAnB,EAA6B;AAC3B,0BAAGI,OAAO,CAACF,IAAR,IAAgB,WAAnB,EAA+B;AAC7BE,+BAAO,CAACo2B,QAAR,CAAiBx1B,OAAjB,CAAyB,UAAA8gB,GAAG,EAAI;AAC9B,kCAAI,CAACo4B,cAAL,IAAuBp4B,GAAG,CAAC/S,KAA3B;AACD,yBAFD;AAGD;AACF;AACF,mBARD;AASD;AAEF,eA5CK,MA4CA,IAAG,KAAK9O,MAAL,CAAYyB,iBAAZ,IAAiC1B,SAApC,EAA8C;AAClD,oBAAI2F,OAAO,GAAG,KAAK1F,MAAL,CAAYyB,iBAA1B;AACA,qBAAKhD,cAAL,CAAoBg6C,6BAApB,CAAkD/yC,OAAlD,EAA2D,QAA3D,EAAqEjG,SAArE,CACE,UAAAC,IAAI,EAAE;AACJ;AACA,0BAAI,CAACkB,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2BlB,IAA3B;AACA,0BAAI,CAACkB,UAAL,CAAgB,mBAAhB,IAAsC,QAAI,CAACZ,MAAL,CAAY,mBAAZ,CAAtC;AACD,iBANH,EAMK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAACK,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2B,EAA3B;AACA,0BAAI,CAACA,UAAL,CAAgB,mBAAhB,IAAsC,QAAI,CAACZ,MAAL,CAAY,mBAAZ,CAAtC,CAHQ,CAIR;AAED,iBAZH;AAeA,qBAAKvB,cAAL,CAAoBg6C,6BAApB,CAAkD/yC,OAAlD,EAA2D,SAA3D,EAAsEjG,SAAtE,CACE,UAAAC,IAAI,EAAE;AACJ;AACA,0BAAI,CAAC2vC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B3vC,IAA5B;AACA,0BAAI,CAAC2vC,WAAL,CAAiB,mBAAjB,IAAuC,QAAI,CAACrvC,MAAL,CAAY,mBAAZ,CAAvC;AACD,iBANH,EAMK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAAC8uC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B,EAA5B;AACA,0BAAI,CAACA,WAAL,CAAiB,mBAAjB,IAAuC,QAAI,CAACrvC,MAAL,CAAY,mBAAZ,CAAvC,CAHQ,CAIR;AAED,iBAZH,EAjBkD,CAgClD;;AACA,oBAAG,KAAKA,MAAL,CAAYkkB,KAAZ,IAAqB,IAAxB,EAA6B;AAC3B,uBAAKlkB,MAAL,CAAYkkB,KAAZ,CAAkBnjB,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,wBAAGA,OAAO,CAACF,IAAR,IAAgBF,SAAnB,EAA6B;AAC3B,0BAAGI,OAAO,CAACF,IAAR,IAAgB,WAAnB,EAA+B;AAC7BE,+BAAO,CAACo2B,QAAR,CAAiBx1B,OAAjB,CAAyB,UAAA8gB,GAAG,EAAI;AAC9B,kCAAI,CAACo4B,cAAL,IAAuBp4B,GAAG,CAAC/S,KAA3B;AACD,yBAFD;AAGD;AACF;AACF,mBARD;AASD;AACF,eA5CK,MA4CA,IAAG,KAAK9O,MAAL,CAAYgC,qBAAZ,IAAqCjC,SAAxC,EAAkD;AACtD,oBAAIkwB,MAAM,GAAG,KAAKjwB,MAAL,CAAYgC,qBAAzB;AACA,qBAAKvD,cAAL,CAAoBg6C,6BAApB,CAAkDxoB,MAAlD,EAA0D,QAA1D,EAAoExwB,SAApE,CACE,UAAAC,IAAI,EAAE;AACJ;AACA,0BAAI,CAACkB,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2BlB,IAA3B;AACA,0BAAI,CAACkB,UAAL,CAAgB,uBAAhB,IAA0C,QAAI,CAACZ,MAAL,CAAY,uBAAZ,CAA1C;AACD,iBANH,EAMK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAACK,UAAL,GAAkB,EAAlB;AACA,0BAAI,CAACA,UAAL,CAAgB,OAAhB,IAA2B,EAA3B;AACA,0BAAI,CAACA,UAAL,CAAgB,uBAAhB,IAA0C,QAAI,CAACZ,MAAL,CAAY,uBAAZ,CAA1C,CAHQ,CAIR;AAED,iBAZH;AAeA,qBAAKvB,cAAL,CAAoBg6C,6BAApB,CAAkDxoB,MAAlD,EAA0D,SAA1D,EAAqExwB,SAArE,CACE,UAAAC,IAAI,EAAE;AACJ;AACA,0BAAI,CAAC2vC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B3vC,IAA5B;AACA,0BAAI,CAAC2vC,WAAL,CAAiB,uBAAjB,IAA2C,QAAI,CAACrvC,MAAL,CAAY,uBAAZ,CAA3C;AACD,iBANH,EAMK,UAAAO,KAAK,EAAE;AACR,0BAAI,CAAC8uC,WAAL,GAAmB,EAAnB;AACA,0BAAI,CAACA,WAAL,CAAiB,OAAjB,IAA4B,EAA5B;AACA,0BAAI,CAACA,WAAL,CAAiB,uBAAjB,IAA2C,QAAI,CAACrvC,MAAL,CAAY,uBAAZ,CAA3C,CAHQ,CAIR;AAED,iBAZH,EAjBsD,CAgCtD;;AACA,oBAAG,KAAKA,MAAL,CAAYkkB,KAAZ,IAAqB,IAAxB,EAA6B;AAC3B,uBAAKlkB,MAAL,CAAYkkB,KAAZ,CAAkBnjB,OAAlB,CAA0B,UAAAZ,OAAO,EAAI;AACnC,wBAAGA,OAAO,CAACF,IAAR,IAAgBF,SAAnB,EAA6B;AAC3B,0BAAGI,OAAO,CAACF,IAAR,IAAgB,WAAnB,EAA+B;AAC7BE,+BAAO,CAACo2B,QAAR,CAAiBx1B,OAAjB,CAAyB,UAAA8gB,GAAG,EAAI;AAC9B,kCAAI,CAACo4B,cAAL,IAAuBp4B,GAAG,CAAC/S,KAA3B;AACD,yBAFD;AAGD;AACF;AACF,mBARD;AASD;AACF;AACF,aA/LD,MA+LK;AACH,mBAAKmrC,cAAL,GAAsB,CAAtB;AACA,mBAAKr5C,UAAL,GAAkB,IAAlB;AACA,mBAAKyuC,WAAL,GAAmB,IAAnB;AACD;AACF;;;;;;;yBA7NU2K,kB,EAAkB,+K;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,ghB;AAAA;AAAA;AClB/B;;AACI;;AACI;;AACI;;AAEI;;AAAiB;;AAA4D;;AACjF;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;;;AAVwC;;AAAA;;AAMb;;AAAA;;AACD;;AAAA;;;;;;;;;wEDMbA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT57C,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;AAEpB67C,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE","file":"main-es5.js","sourcesContent":["/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lexicon-panel',\n  templateUrl: './lexicon-panel.component.html',\n  styleUrls: ['./lexicon-panel.component.scss']\n})\nexport class LexiconPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container-fluid\" >\n    <div class=\"row\" >\n        <div class=\"col-md-4 p-1\" >\n            <app-document-system-tree></app-document-system-tree>\n        </div>\n        <div class=\"col-md-8 p-1\" >\n            <app-text-detail></app-text-detail>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { LilaService } from 'src/app/services/lila/lila.service';\nimport { NgSelectComponent } from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-same-as',\n  templateUrl: './same-as.component.html',\n  styleUrls: ['./same-as.component.scss']\n})\nexport class SameAsComponent implements OnInit {\n\n  @Input() sameAsData: any[] | any;\n\n  private subject: Subject<any> = new Subject();\n  private subject_input: Subject<any> = new Subject();\n  subscription: Subscription;\n  object: any;\n  searchResults=[];\n  filterLoading = false;\n\n  @ViewChildren('sameAsSelect') sameAsList: QueryList<NgSelectComponent>;\n\n\n  memorySameAs = [];\n  isSense;\n  isForm;\n  isLexEntry;\n\n  sameAsForm = new FormGroup({\n    sameAsArray: new FormArray([this.createSameAsEntry()]),\n    isEtymon: new FormControl(null),\n    isCognate: new FormControl(null)\n  })\n\n  sameAsArray: FormArray;\n\n  constructor(private formBuilder: FormBuilder, \n              private lexicalService : LexicalEntriesService, \n              private toastr: ToastrService,\n              private lilaService: LilaService) {\n  }\n\n  ngOnInit() {\n    this.sameAsForm = this.formBuilder.group({\n      sameAsArray: this.formBuilder.array([]),\n      isEtymon: false,\n      isCognate: false,\n    })\n\n    this.subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.lexicalService.triggerSameAs$.subscribe(\n      data=> {\n        console.log(data);\n        if((data != undefined || data != null) && this.object != undefined){\n          this.object.type = data;\n          if(typeof(this.object.type) != \"string\"){\n            let isCognate = this.object.type.find(element => element == 'Cognate');\n            if(isCognate){\n                this.sameAsForm.get('isCognate').setValue(true, {emitEvent: false})\n            }else{\n                this.sameAsForm.get('isCognate').setValue(false, {emitEvent: false})\n            }\n    \n            let isEtymon = this.object.type.find(element => element == 'Etymon');\n            if(isEtymon){\n                this.sameAsForm.get('isEtymon').setValue(true, {emitEvent: false})\n            }else{\n                this.sameAsForm.get('isEtymon').setValue(false, {emitEvent: false})\n            }\n          }else{\n            if(this.object.type == 'Cognate'){\n              this.sameAsForm.get('isCognate').setValue(true, {emitEvent: false})\n            }else{\n              this.sameAsForm.get('isCognate').setValue(false, {emitEvent: false})\n            }\n\n            if(this.object.type == 'Etymon'){\n              this.sameAsForm.get('isEtymon').setValue(true, {emitEvent: false})\n            }else{\n              this.sameAsForm.get('isEtymon').setValue(false, {emitEvent: false})\n            }\n          }\n        }\n      },error=> {\n        console.log(error)\n      }\n    )\n\n    this.subject_input.pipe(debounceTime(1000)).subscribe(\n      data => {        \n        this.onChangeSameAsByInput(data['value'], data['i'])\n      }\n    )\n  \n    this.triggerTooltip();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if(changes.sameAsData.currentValue != undefined){\n        this.object = changes.sameAsData.currentValue;\n        this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n        this.sameAsArray.clear();\n        \n        this.memorySameAs = [];\n        console.log(this.object)\n  \n        this.object.array.forEach(element => {\n          this.addSameAsEntry(element.lexicalEntity, element.linkType == 'external')\n          this.memorySameAs.push(element.lexicalEntity);\n        });\n\n        //console.log(this.memorySameAs)\n        if(this.object.type != undefined){\n          if(typeof(this.object.type) != \"string\"){\n            let isCognate = this.object.type.find(element => element == 'Cognate');\n            if(isCognate){\n                this.sameAsForm.get('isCognate').setValue(true, {emitEvent: false})\n            }else{\n                this.sameAsForm.get('isCognate').setValue(false, {emitEvent: false})\n            }\n    \n            let isEtymon = this.object.type.find(element => element == 'Etymon');\n            if(isEtymon){\n                this.sameAsForm.get('isEtymon').setValue(true, {emitEvent: false})\n            }else{\n                this.sameAsForm.get('isEtymon').setValue(false, {emitEvent: false})\n            }\n          }else{\n            if(this.object.type == 'Cognate'){\n              this.sameAsForm.get('isCognate').setValue(true, {emitEvent: false})\n            }else{\n              this.sameAsForm.get('isCognate').setValue(false, {emitEvent: false})\n            }\n\n            if(this.object.type == 'Etymon'){\n              this.sameAsForm.get('isEtymon').setValue(true, {emitEvent: false})\n            }else{\n              this.sameAsForm.get('isEtymon').setValue(false, {emitEvent: false})\n            }\n          }\n          \n        }\n        \n\n        if(this.object.lexicalEntryInstanceName != undefined){\n          this.isLexEntry = true;\n          this.isForm = false;\n          this.isSense = false;\n        }else if(this.object.formInstanceName != undefined){\n          this.isLexEntry = false;\n          this.isForm = true;\n          this.isSense = false;\n        }else if(this.object.senseInstanceName != undefined){\n          this.isLexEntry = false;\n          this.isForm = false;\n          this.isSense = true;\n        }\n        \n      }else {\n        this.object = null;\n      }\n    }, 10);\n  }\n\n  onChangeSameAsByInput(value, index){\n    if(value.trim() != ''){\n      var selectedValues = value;\n      var lexicalElementId = '';\n      let parameters =  {};\n      if (this.object.lexicalEntryInstanceName != undefined) {\n        lexicalElementId = this.object.lexicalEntryInstanceName;\n      } else if (this.object.formInstanceName != undefined) {\n        lexicalElementId = this.object.formInstanceName;\n      } else if (this.object.senseInstanceName != undefined) {\n        lexicalElementId = this.object.senseInstanceName;\n      } else if (this.object.etymologyInstanceName != undefined) {\n        lexicalElementId = this.object.etymologyInstanceName;\n      }\n  \n      //console.log(this.memorySameAs[index])\n      if (this.memorySameAs[index] == undefined ||  this.memorySameAs[index]  == \"\") {\n        parameters = {\n          type: \"reference\",\n          relation: \"sameAs\",\n          value: selectedValues\n        }\n       \n  \n        this.memorySameAs[index] = selectedValues;\n      } else {\n        let oldValue = this.memorySameAs[index];\n        parameters = {\n          type: \"reference\",\n          relation: \"sameAs\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n       \n      }\n\n      this.lexicalService.updateGenericRelation(lexicalElementId, parameters).subscribe(\n        data => {\n          console.log(data)\n        }, error => {\n          console.log(error)\n          if(error.status == '200'){\n            this.toastr.success(\"SameAs Changed\", '', {\n              timeOut: 5000,\n            });\n\n            this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n            this.sameAsArray.at(index).get('inferred').setValue(true,{emitEvent: false} )\n          }else{\n            this.toastr.error(error.error.text, 'Error', {\n              timeOut: 5000,\n            });\n          }\n          \n        }\n      )\n    }\n    \n  }\n\n  onChangeSameAs(sameAs, index){\n    console.log(sameAs.selectedItems)\n    if(sameAs.selectedItems.length != 0){\n      let parameters = {};\n      var selectedValues = sameAs.selectedItems[0].value.lexicalEntry;\n\n      if(selectedValues == undefined){\n        sameAs.selectedItems[0].value.lexicalEntry;\n      }\n\n      let lexId = this.object.lexicalEntryInstanceName;\n    \n      if (this.memorySameAs[index] == undefined ||  this.memorySameAs[index]  == \"\") {\n        parameters = {\n          type: \"reference\",\n          relation: \"sameAs\",\n          value: selectedValues\n        }\n       \n  \n        this.memorySameAs[index] = selectedValues;\n      } else {\n        let oldValue = this.memorySameAs[index];\n        parameters = {\n          type: \"reference\",\n          relation: \"sameAs\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n       \n      }\n      console.log(parameters)\n      this.lexicalService.updateGenericRelation(lexId, parameters).subscribe(\n        data=>{\n          console.log(data)\n          this.sameAsArray.at(index).get('inferred').setValue(true,{emitEvent: false} )\n        }, error=>{\n          console.log(error)\n          if(error.status == 200){\n            this.toastr.success('SameAs Changed', '', {timeOut : 5000})\n            this.sameAsArray.at(index).get('inferred').setValue(true,{emitEvent: false} )\n          }else{\n            if(error.status == 200){\n              this.toastr.error(error.error.text, '', {timeOut : 5000})\n            }\n          }\n        }\n      )\n    }\n    \n    \n  }\n\n  onSearchFilter(data){\n    this.filterLoading = true;\n    this.searchResults = [];\n\n    let value = data.value;\n    let index = data.index;\n    console.log(data)\n    this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n    let isLila = this.sameAsArray.at(index).get('lila').value;\n\n    if(!isLila){\n      if(this.object.lexicalEntryInstanceName != undefined){\n        let parameters = {\n          text: data,\n          searchMode: \"startsWith\",\n          type: \"\",\n          pos: \"\",\n          formType: \"entry\",\n          author: \"\",\n          lang: \"\",\n          status: \"\",\n          offset: 0,\n          limit: 500\n        }\n        console.log(data.length)\n          this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n            data=>{\n              console.log(data)\n              this.searchResults = data['list']\n              console.log(this.searchResults)\n              this.filterLoading = false;\n            },error=>{\n              console.log(error)\n              this.filterLoading = false;\n            }\n          )\n        \n      }else if(this.object.formInstanceName != undefined){\n          let lexId = this.object.parentInstanceName;\n          let parameters = {\n            text: data,\n            searchMode: \"startsWith\",\n            representationType: \"writtenRep\",\n            author: \"\",\n            offset: 0,\n            limit: 500\n          }\n          console.log(parameters);\n          this.lexicalService.getFormList(parameters).subscribe(\n            data=>{\n              console.log(data)\n              this.searchResults = data['list']\n              this.filterLoading = false;\n            },error=>{\n              console.log(error)\n              this.filterLoading = false;\n            }\n          )\n        \n        \n      }else if(this.object.senseInstanceName != undefined){\n          let parameters = {\n            text: data,\n            searchMode: \"startsWith\",\n            type: \"\",\n            pos: \"\",\n            formType: \"entry\",\n            author: \"\",\n            lang: \"\",\n            status: \"\",\n            offset: 0,\n            limit: 500\n          }\n    \n          this.lexicalService.getLexicalSensesList(parameters).subscribe(\n            data=>{\n              this.searchResults = data\n              this.filterLoading = false;\n            },error=>{\n              console.log(error)\n              this.filterLoading = false;\n            }\n          )\n      }\n    }else if(isLila){\n      this.searchResults = [];\n      if(this.sameAsForm.get('isEtymon').value){\n          this.lilaService.queryEtymon(value).subscribe(\n              data=>{\n                  console.log(data)\n                  if(data.list.length > 0){\n                    const map = data.list.map(element => (\n                      {\n                        label: element[2]?.value, \n                        language : element[1]?.value,\n                        lexicalEntry : element[0]?.value\n                      })\n                    )\n\n                    \n                    \n\n                    this.searchResults = map;\n                    console.log(this.searchResults)\n                  }\n              },\n              error=>{\n                  console.log(error)\n              }\n          )\n      }\n\n\n      if(this.sameAsForm.get('isCognate').value){\n          this.lilaService.queryCognate(value).subscribe(\n              data=>{\n                  console.log(data);\n                  if(data.list.length > 0){\n\n                    \n                    const map = data.list.map(element => (\n                      {\n                        label: this.object.label, \n                        labelValue: element[0].value, \n                        pos : element[1].value\n                      })\n                    )\n\n                    map.forEach(element => {\n                      let tmpLblVal = element.labelValue.split('/');\n                      let labelValue = tmpLblVal[tmpLblVal.length - 1];\n\n                      let tmpLblPos = element.pos.split('/');\n                      let pos = tmpLblPos[tmpLblPos.length - 1];\n\n\n                      element.labelElement = labelValue;\n                      element.labelPos = pos;\n\n                    });\n\n                    \n\n                    this.searchResults = map;\n                    console.log(this.searchResults)\n\n                  }\n\n              },\n              error=>{\n                  console.log(error)\n              }\n          )\n      }\n    }\n    \n\n    console.log(data)\n  \n  }\n\n  triggerLilaSearch(index){\n    \n    \n    setTimeout(() => {\n      this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n      if(this.sameAsArray.at(index).get('lila').value){\n        const element = Array.from(this.sameAsList)[index];\n\n        /* if(element!=undefined){\n          \n          this.onSearchFilter({value: this.object.label, index: index})\n        } */\n\n        /* setTimeout(() => {\n          element.filter(this.object.label)\n        }, 100); */\n      }\n      \n      \n\n    }, 250);\n  }\n\n  deleteData(){\n    this.searchResults = [];\n  }\n\n  triggerSameAsInput(evt, i){\n    if(evt.target != undefined){\n      let value = evt.target.value;\n      this.subject_input.next({value, i})\n    }\n  }\n\n  triggerSameAs(evt,i){\n    console.log(evt.target.value)\n    if(evt.target != undefined){\n      this.subject.next({value: evt.target.value, index: i})\n    }\n  }\n\n  triggerTooltip() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.same-as-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 500);\n  }\n\n  createSameAsEntry(e?, i?) {\n    if(e == undefined){\n      return this.formBuilder.group({\n        entity: null,\n        inferred : false,\n        lila: false\n      })\n    }else{\n      return this.formBuilder.group({\n        entity: e,\n        inferred : i,\n        lila: false\n      })\n    }\n    \n  }\n\n  addSameAsEntry(e?, i?) {\n\n\n    this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n    if(e == undefined){\n      this.sameAsArray.push(this.createSameAsEntry());\n    }else{\n      this.sameAsArray.push(this.createSameAsEntry(e, i));\n    }\n\n    \n    \n    this.triggerTooltip();\n\n    \n  }\n\n  removeElement(index) {\n    this.sameAsArray = this.sameAsForm.get('sameAsArray') as FormArray;\n    const lexical_entity = this.sameAsArray.at(index).get('entity').value;\n\n    if (this.object.lexicalEntryInstanceName != undefined) {\n\n      let lexId = this.object.lexicalEntryInstanceName;\n\n      let parameters = {\n        relation: 'sameAs',\n        value: lexical_entity\n      }\n\n      \n\n      this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.updateCoreCard(this.object)\n          this.lexicalService.refreshLinkCounter('-1')\n          this.toastr.success(\"SameAs Removed\", 'Error', {\n            timeOut: 5000,\n          });\n        }, error => {\n          console.log(error)\n          if(error.status == 200){\n            this.toastr.success(\"SameAs Removed\", 'Error', {\n              timeOut: 5000,\n            });\n          }else{\n            this.toastr.error(error.error.text, 'Error', {\n              timeOut: 5000,\n            });\n          }\n          \n        }\n      )\n    } else if (this.object.formInstanceName != undefined) {\n      let formId = this.object.formInstanceName;\n\n      let parameters = {\n        relation: 'sameAs',\n        value: lexical_entity\n      }\n\n      \n\n      this.lexicalService.deleteLinguisticRelation(formId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.updateCoreCard(this.object)\n          this.lexicalService.refreshLinkCounter('-1')\n        }, error => {\n          //console.log(error)\n        }\n      )\n\n    } else if (this.object.senseInstanceName != undefined) {\n      let senseId = this.object.senseInstanceName;\n\n      let parameters = {\n        type: 'morphology',\n        relation: 'sameAs',\n        value: lexical_entity\n      }\n\n      //console.log(parameters)\n\n      this.lexicalService.deleteLinguisticRelation(senseId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.updateCoreCard(this.object)\n          this.lexicalService.refreshLinkCounter('-1')\n        }, error => {\n          //console.log(error)\n        }\n      )\n    }\n    this.memorySameAs.splice(index, 1)\n    this.sameAsArray.removeAt(index);\n  }\n\n}\n","\n\n<form [formGroup]=\"sameAsForm\">\n    <div class=\"form-group row mt-3\">\n        <div class=\"input-group col-sm-12\">\n            <div class=\"card\">\n                <span class=\"text-id\">SAME AS</span>\n                <a (click)=\"addSameAsEntry()\" class=\"pointer\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div formArrayName=\"sameAsArray\" class=\"mt-3\">\n                        <div *ngFor=\"let sameAs of sameAsForm.get('sameAsArray')['controls']; let i = index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"d-flex\">\n                                    <div class=\"form-group row ml-2  mr-2 w-100\" *ngIf=\"{switch : false}; let variable\">\n                                        <div class=\"input-group\" *ngIf=\"{boolean : sameAs.get('inferred').value}; let inf\">\n                                            <ng-select [isOpen]=\"dropdown\" #sameAsSelect formControlName=\"entity\" name=\"entity\"\n                                                (change)=\"onChangeSameAs(sameAsSelect, i)\" (focus)=\"deleteData()\"\n                                                (keyup)=\"triggerSameAs($event, i)\" bindValue=\"label\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                bindLabel=\"label\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                [hidden]=\"!sameAs.get('lila').value\" [readonly]=\"inf.boolean\">\n                                                <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\">\n                                           \n                                                    <div class=\"card-body p-0\">\n                                                        <span class=\"card-title m-0\" [ngOptionHighlight]=\"search\">{{item.label}}</span>\n                                                        <span style=\"color: blue;\">@{{item.language}}</span>\n                                                        <small class=\"card-text\">\n                                                           \n                                        \n                                                        </small>\n                                                       \n                                                    </div>\n                                        \n                                                </ng-template>\n                                               \n                                            </ng-select>\n                                            \n                                            <input formControlName=\"entity\" name=\"entity\" type=\"text\"\n                                                class=\"form-control \" (keyup)=\"triggerSameAsInput($event, i)\"\n                                                placeholder=\"Insert URI\" [hidden]=\"sameAs.get('lila').value\">\n\n                                            <div class=\"input-group-append\">\n                                               <!--  <div class=\"input-group-append ml-2 form-check\">\n                                                    <input class=\"form-check-input same-as-tooltip\" type=\"checkbox\"\n                                                        (change)=\"variable.switch=!variable.switch\"\n                                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                                        data-trigger=\"hover\"\n                                                        title=\"Clicca per inserire un URI manualmente\">\n                                                    <label class=\"form-check-label\" for=\"extCheck\"></label>\n                                                </div> -->\n                                                \n                                                <div class=\"input-group-append ml-2\" *ngIf=\"(sameAsForm.get('isCognate').value || sameAsForm.get('isEtymon').value) && (!inf.boolean && !sameAs.get('inferred').value)\">\n                                                    <div class=\"btn-group-toggle\" data-toggle=\"buttons\" placement=\"top\" ngbTooltip=\"Enable LiLa endpoint\" title=\"Enable LiLa endpoint\" >\n                                                        <label class=\"btn btn-secondary\" >\n                                                          <input (click)=\"triggerLilaSearch(i)\" type=\"checkbox\" autocomplete=\"off\" autocomplete=\"off\" formControlName=\"lila\" name=\"lila\" style=\"border-radius: .3rem;\" > \n                                                            <img src=\"../../../../../../../assets/images/graphql.png\" alt=\"Avatar\" class=\"image\" style=\"height: 20px;\" />\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div class=\"input-group-append ml-2\" *ngIf=\"inf.boolean\">\n                                                    <a [href]=\"sameAs.get('entity').value\" target=\"_blank\"  class=\"btn btn-primary\"\n                                                        type=\"button\"><i class=\"fas fa-external-link-alt\"></i></a>\n                                                </div>\n                                                <div class=\"input-group-append ml-2\">\n                                                    <button (click)=\"removeElement(i)\" class=\"btn btn-danger\"\n                                                        type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                </div>\n                                            </div>\n\n                                           \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, first } from 'rxjs/operators';\nimport { AnnotatorService } from 'src/app/services/annotator/annotator.service';\n\n@Component({\n  selector: 'app-form-panel',\n  templateUrl: './form-panel.component.html',\n  styleUrls: ['./form-panel.component.scss']\n})\nexport class FormPanelComponent implements OnInit, OnDestroy {\n  public formId: string;\n  public label : any;\n  public subscription: Subscription;\n  public formData : any;\n  public id : any;\n\n  @ViewChild('formPanelModal', {static: false}) formPanelModal: ModalComponent;\n  \n  constructor(private annotatorService : AnnotatorService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngOnDestroy() : void {\n    this.subscription.unsubscribe();\n  }\n\n\n  triggerFormPanel(data?){\n    setTimeout(() => {\n      this.formPanelModal.show();\n      \n    }, 100);\n    \n  }\n\n  onCloseModal(idForm){\n    this.annotatorService.closePanelForm(idForm);\n    console.log(this.annotatorService.getAllPanelForms())\n  }\n}\n","<app-modal #formPanelModal style=\"top: 10%;\" class=\"modal-demo\" [maximizable]=\"false\" [inViewport]=\"true\"  [backdrop]=\"false\" class=\"panelFormData\" (closeModal)=\"onCloseModal(id)\">\n    <ng-container class=\"app-modal-header\">{{label}}</ng-container>\n    <ng-container class=\"app-modal-body\">\n       <app-form-core-form [formData]=\"formData\"></app-form-core-form>\n    </ng-container>\n    <!-- <ng-container class=\"app-modal-footer\">\n        <button type=\"button\" class=\"button button3\"\n            (click)=\"formPanelModal.hide()\">Delete</button>\n        <button type=\"button\" class=\"button button1\"\n            (click)=\"formPanelModal.hide()\">Save</button>\n        <button type=\"button\" class=\"button button2\"\n            style=\"float: right;\" (click)=\"formPanelModal.hide()\">Close\n        </button>\n    </ng-container> -->\n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { ApplicationRef, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions, ITreeState } from '@circlon/angular-tree-component';\nimport { formTypeEnum, LexicalEntryRequest, searchModeEnum, typeEnum } from './interfaces/lexical-entry-interface'\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\n\nimport * as _ from 'underscore';\ndeclare var $: JQueryStatic;\n\n\nimport { debounceTime } from 'rxjs/operators';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { Subject } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n\n    dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    },\n    click: (tree, node, $event) => {\n\n      TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n    },\n    contextMenu: (tree, node, $event) => {\n\n      TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n    },\n  }\n};\n\n@Component({\n  selector: 'app-lexical-entry-tree',\n  templateUrl: './lexical-entry-tree.component.html',\n  styleUrls: ['./lexical-entry-tree.component.scss']\n})\n\nexport class LexicalEntryTreeComponent implements OnInit {\n  state!: ITreeState;\n  show = false;\n  modalShow = false;\n  flagAuthor = false;\n  searchIconSpinner = false;\n  viewPort: any;\n  titlePopover = \"Search examples\"\n  popoverWildcards = \"<span><b>Multiple character wildcard search:</b></span>&nbsp;<span><i>te*</i></span><br><span><b>Single character wildcard search:</b></span>&nbsp;<span><i>te?t</i></span><br> <b>Fuzzy search:</b></span>&nbsp;<span><i>test~</i></span><br><b>Weighted fuzzy search:</b></span>&nbsp;<span><i>test~0.8</i></span>\"\n  labelView = true;\n  idView = false;\n  offset = 0;\n  limit = 500;\n  interval;\n\n  @ViewChild(ContextMenuComponent) public basicMenu: ContextMenuComponent;\n  /* sub : Subscription; */\n\n  counter = 0;\n\n  @Input() triggerShowTree: any;\n  @ViewChild('lexicalEntry') lexicalEntryTree: any;\n\n  nodes;\n  languages;\n  types;\n  authors;\n  partOfSpeech;\n  selectedNodeId;\n  status = [{ \"label\": \"false\", \"count\": 0 }, { \"label\": \"true\", \"count\": 0 }];\n  parameters: LexicalEntryRequest = {\n    text: \"\",\n    searchMode: searchModeEnum.startsWith,\n    type: \"\",\n    pos: \"\",\n    formType: \"entry\",\n    author: \"\",\n    lang: \"\",\n    status: \"\",\n    offset: this.offset,\n    limit: this.limit\n  }\n\n\n  options: ITreeOptions = {\n    useVirtualScroll: true,\n    scrollOnActivate: false,\n    nodeHeight: 13,\n    actionMapping,\n    getChildren: this.getChildren.bind(this)\n  };\n\n\n  filterForm = new FormGroup({\n    text: new FormControl(''),\n    searchMode: new FormControl('startsWith'),\n    type: new FormControl(''),\n    pos: new FormControl(''),\n    formType: new FormControl('entry'),\n    author: new FormControl(''),\n    lang: new FormControl(''),\n    status: new FormControl('')\n  });\n\n  initialValues = this.filterForm.value;\n\n  copySubject: Subject<string> = new Subject();\n\n  constructor(private expander: ExpanderService, private renderer: Renderer2, private element: ElementRef, private lexicalService: LexicalEntriesService, private toastr: ToastrService) {\n\n    var refreshTooltip = setInterval((val) => {\n      //console.log('called'); \n      //@ts-ignore\n      $('.lexical-tooltip').tooltip('disable');\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip('enable');\n      //@ts-ignore\n      $('.note-tooltip').tooltip('disable');\n      //@ts-ignore\n      $('.note-tooltip').tooltip('enable');\n    }, 2000)\n  }\n\n  ngOnInit(): void {\n\n    this.viewPort = this.element.nativeElement.querySelector('tree-viewport');\n    this.renderer.addClass(this.viewPort, 'search-results');\n\n    this.onChanges();\n\n    this.lexicalService.deleteReq$.subscribe(\n      signal => {\n\n        ////console.log(\"richiesta eliminazione lexical entry\");\n        if (signal != null) {\n          this.lexEntryDeleteReq(signal);\n        }\n\n      }\n    )\n\n    this.lexicalService.addSubReq$.subscribe(\n      signal => {\n\n        if (signal != null) {\n          this.addSubElement(signal)\n        }\n      }\n    )\n\n    this.copySubject.pipe(debounceTime(500)).subscribe(v => {\n      let selBox = document.createElement('textarea');\n      selBox.style.position = 'fixed';\n      selBox.style.left = '0';\n      selBox.style.top = '0';\n      selBox.style.opacity = '0';\n      selBox.value = v;\n      document.body.appendChild(selBox);\n      selBox.focus();\n      selBox.select();\n      document.execCommand('copy');\n      document.body.removeChild(selBox);\n\n      this.toastr.info('URI copied', 'Info', {\n        timeOut: 5000,\n      });\n    })\n\n    this.lexicalService.refreshFilter$.subscribe(\n      signal => {\n\n        if (signal != null) {\n\n          this.lexicalService.getLexicalEntriesList(this.parameters).subscribe(\n            data => {\n              this.counter = data['totalHits'];\n            },\n            error => {\n              //console.log(error)\n            }\n          );\n\n\n          this.lexicalService.getLanguages().subscribe(\n            data => {\n\n              this.languages = data;\n            }\n          );\n\n          this.lexicalService.getTypes().subscribe(\n            data => {\n              this.types = data;\n            }\n          );\n\n          this.lexicalService.getAuthors().subscribe(\n            data => {\n              this.authors = data;\n            }\n          );\n\n          this.lexicalService.getPos().subscribe(\n            data => {\n              this.partOfSpeech = data;\n            }\n          )\n\n          this.lexicalService.getStatus().subscribe(\n            data => {\n              this.status = data;\n            }\n          )\n\n\n        }\n      }\n    )\n\n    /* //console.log(this.parameters) */\n    this.lexicalService.getLexicalEntriesList(this.parameters).subscribe(\n      data => {\n        this.nodes = data['list'];\n        this.counter = data['totalHits'];\n      },\n      error => {\n        //console.log(error)\n      }\n    );\n\n    this.lexicalService.getLanguages().subscribe(\n      data => {\n        this.languages = data;\n      }\n    );\n\n    this.lexicalService.getTypes().subscribe(\n      data => {\n        this.types = data;\n      }\n    );\n\n    this.lexicalService.getAuthors().subscribe(\n      data => {\n        this.authors = data;\n      }\n    );\n\n    this.lexicalService.getPos().subscribe(\n      data => {\n        this.partOfSpeech = data;\n      }\n    )\n\n    this.lexicalService.getStatus().subscribe(\n      data => {\n        this.status = data;\n      }\n    )\n  }\n\n  onChanges() {\n    this.filterForm.valueChanges.pipe(debounceTime(500)).subscribe(searchParams => {\n      this.offset = 0;\n      this.lexicalEntriesFilter(searchParams);\n    })\n  }\n\n  addSubElement(signal?) {\n\n    setTimeout(() => {\n      let instanceName;\n      let lex = signal.lex;\n      let data = signal.data;\n      console.log(lex)\n      console.log(data)\n      switch (lex.request) {\n        case 'form': instanceName = 'formInstanceName'; break;\n        case 'sense': instanceName = 'senseInstanceName'; break;\n        case 'etymology': instanceName = 'etymologyInstanceName'; break;\n        case 'subterm': instanceName = 'lexicalEntryInstanceName'; break;\n        case 'constituent': instanceName = 'componentInstanceName'; break;\n      }\n      this.lexicalEntryTree.treeModel.getNodeBy(x => {\n        if (lex.lexicalEntryInstanceName != undefined) {\n          if (x.data.lexicalEntryInstanceName === lex.lexicalEntryInstanceName) {\n            if (x.data.children == undefined && !x.isExpanded) {\n              x.expand();\n              var that = this;\n              this.interval = setInterval((val) => {\n                if (x.data.children != undefined) {\n                  this.lexicalEntryTree.treeModel.getNodeBy(y => {\n                    if (y.data[instanceName] != undefined) {\n                      /* console.log(y.data[instanceName]) */\n                      if (y.data['creator'] == x.data.creator) {\n                        y.data['flagAuthor'] = false;\n                      } else {\n                        y.data['flagAuthor'] = true;\n                      }\n                      if (y.data[instanceName] === data[instanceName]) {\n                        y.setActiveAndVisible();\n                        clearInterval(that.interval)\n                        return true;\n                      } else {\n                        return false;\n                      }\n                    } else {\n                      return false;\n                    }\n                  })\n                }\n              }, 3000)\n\n            } else if (x.data.children != undefined) {\n              let checkExistence = x.data.children.filter(element => {\n                return element.label === lex.request\n              });\n              if (checkExistence.length == 1) {\n                x.data.children.filter(element => {\n                  if (element.label === lex.request) {\n                    if (lex.request == 'sense') {\n                      data['label'] = 'no definition'\n                      data['definition'] = 'no definition'\n                    } else if (lex.request == 'etymology') {\n                      data['label'] = \"Etymology of: \" + lex.parentNodeLabel;\n                      console.log(data['label'])\n                    } else if (lex.request == 'subterm') {\n                      data.label = data.label;\n                      data.children = null;\n                      data.hasChildren = false;\n                    } else if (lex.request == 'constituent') {\n                      data.label = '';\n                      data.children = null;\n                      data.hasChildren = false;\n                    } else {\n                      data['label'] = data[instanceName];\n                    }\n                    /* console.log(data['creator'] == x.data.creator);\n                    console.log(data['creator'], x.data.creator) */\n\n                    if (data['creator'] == x.data.creator) {\n                      data['flagAuthor'] = false;\n                    } else {\n                      data['flagAuthor'] = true;\n                    }\n\n                    element.count++;\n                    element.children.push(data);\n                    this.lexicalEntryTree.treeModel.update();\n                    this.lexicalEntryTree.treeModel.getNodeBy(y => {\n                      if (y.data.etymology == undefined && y.data.label === data['label'] && lex.request != 'subterm') {\n                        y.setActiveAndVisible();\n                      } else if (y.data.etymology != undefined && y.data.etymologyInstanceName === data['etymologyInstanceName'] && lex.request != 'subterm') {\n                        y.setActiveAndVisible();\n                      }\n                    })\n                    return true;\n                  } else {\n                    return false;\n                  }\n                });\n              } else if (checkExistence.length == 0) {\n                let node = {\n                  hasChildren: true,\n                  label: lex.request,\n                  children: [],\n                  count: 0\n                }\n                x.data.children.push(node);\n                x.data.children.sort(function (a, b) {\n                  var textA = a.label.toUpperCase();\n                  var textB = b.label.toUpperCase();\n                  return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                })\n                this.lexicalEntryTree.treeModel.update();\n                x.data.children.filter(element => {\n                  if (element.label === lex.request) {\n                    console.log(data['creator'], x.data.reator)\n                    if (data['creator'] == x.data.creator) {\n                      data['flagAuthor'] = false;\n                    } else {\n                      data['flagAuthor'] = true;\n                    }\n                    \n                    if (lex.request == 'sense') {\n                      data['definition'] = 'no definition';\n                      data.label = 'no definintion'\n                    }else if (lex.request == 'subterm') {\n                      data.label = data.label;\n                      data.children = null;\n                      data.hasChildren = false;\n                    }else{\n                      data['label'] = data[instanceName];\n                    }\n\n                    if (lex.request == 'subterm') {\n                      data.children == null;\n                      data.hasChildren = false;\n                      data.label = data.label;\n                    }\n\n                    if (lex.request == 'constituent') {\n                      data.children == null;\n                      data.label = '';\n                    }\n\n                    element.count++;\n                    element.children.push(data);\n                    this.lexicalEntryTree.treeModel.update();\n                    this.lexicalEntryTree.treeModel.getNodeBy(y => {\n                      if (y.data.label === data['label']  && lex.request != 'subterm') { /* && lex.request != 'subterm' */\n                        y.setActiveAndVisible();\n                      }\n                    })\n                    return true;\n                  } else {\n                    return false;\n                  }\n                });\n              }\n            } else {\n              return false;\n            }\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      })\n    }, 300);\n  }\n\n  lexEntryDeleteReq(signal?) {\n\n\n    setTimeout(() => {\n\n      this.lexicalEntryTree.treeModel.getNodeBy(x => {\n        if (signal.lexicalEntryInstanceName != undefined && signal.formInstanceName == undefined) {\n          if (x.data.lexicalEntryInstanceName === signal.lexicalEntryInstanceName) {\n\n            x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1);\n\n            let countSubterm = x.parent.data.count;\n            if (countSubterm != 0) {\n              x.parent.data.count--;\n              countSubterm--;\n            }\n\n            //this.lexicalEntryTree.treeModel.update();\n            if (this.nodes.length == 0) {\n              this.lexicalEntriesFilter(this.parameters);\n            }\n\n\n\n            if (countSubterm == 0) {\n              x.parent.parent.data.children.splice(x.parent.parent.data.children.indexOf(x.parent.data), 1)\n            }\n            console.log(x.parent)\n\n            this.lexicalEntryTree.treeModel.update()\n\n            return true;\n          } else {\n            return false;\n          }\n        } else if (signal.formInstanceName != undefined) {\n          if (x.data.formInstanceName === signal.formInstanceName) {\n\n            x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1);\n            let countForm = x.parent.data.count;\n            if (countForm != 0) {\n              x.parent.data.count--;\n              countForm--;\n            }\n\n            if (countForm == 0) {\n              x.parent.parent.data.children.splice(x.parent.parent.data.children.indexOf(x.parent.data), 1)\n            }\n            console.log(x.parent)\n\n            this.lexicalEntryTree.treeModel.update()\n\n            return true;\n          } else {\n            return false;\n          }\n        } else if (signal.senseInstanceName != undefined) {\n          if (x.data.senseInstanceName === signal.senseInstanceName) {\n\n            x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1);\n            let countSense = x.parent.data.count;\n            if (countSense != 0) {\n              x.parent.data.count--;\n              countSense--;\n            }\n\n            if (countSense == 0) {\n              x.parent.parent.data.children.splice(x.parent.parent.data.children.indexOf(x.parent.data), 1)\n            }\n            console.log(x.parent)\n\n            this.lexicalEntryTree.treeModel.update()\n\n            return true;\n          } else {\n            return false;\n          }\n        } else if (signal.etymology != undefined) {\n          if (x.data.etymologyInstanceName === signal.etymology.etymologyInstanceName) {\n            x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1);\n            let countSense = x.parent.data.count;\n            if (countSense != 0) {\n              x.parent.data.count--;\n              countSense--;\n            }\n\n            if (countSense == 0) {\n              x.parent.parent.data.children.splice(x.parent.parent.data.children.indexOf(x.parent.data), 1)\n            }\n            console.log(x.parent)\n\n            this.lexicalEntryTree.treeModel.update()\n\n            return true;\n          } else {\n            return false;\n          }\n        } else if (signal.componentInstanceName != undefined) {\n          if (x.data.componentInstanceName === signal.componentInstanceName) {\n            x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1);\n            let countSense = x.parent.data.count;\n            if (countSense != 0) {\n              x.parent.data.count--;\n              countSense--;\n            }\n\n            if (countSense == 0) {\n              x.parent.parent.data.children.splice(x.parent.parent.data.children.indexOf(x.parent.data), 1)\n            }\n            console.log(x.parent)\n\n            this.lexicalEntryTree.treeModel.update()\n\n            return true;\n          } else {\n            return false;\n          }\n        } else if(signal.subtermInstanceName != undefined){\n          let parent = signal.parentNodeInstanceName;\n          if(x.data.lexicalEntryInstanceName == signal.parentNodeInstanceName ){\n            console.log(x)\n            let children = x.data.children;\n\n            if(children.length >= 1){\n              Array.from(children).forEach((y : any) => {\n                if(y.lexicalEntryInstanceName == signal.subtermInstanceName){\n                \n                  console.log(y, x)\n\n                  x.data.children.splice(x.data.children.indexOf(y), 1);\n\n                  let countSubterm = x.data.count;\n                  if (countSubterm != 0) {\n                    x.data.count--;\n                    countSubterm--;\n                  }\n\n                  if (this.nodes.length == 0) {\n                    this.lexicalEntriesFilter(this.parameters);\n                  }\n      \n      \n      \n                  if (countSubterm == 0) {\n                    x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1)\n                  }\n\n                  this.lexicalEntryTree.treeModel.update()\n                  return true\n                  \n                }else{\n                  return false\n                }\n              })\n            }\n          }\n        }else {\n          return false;\n        }\n        return false;\n      })\n\n    }, 300);\n  }\n\n  lexicalEntriesFilter(newPar) {\n\n    setTimeout(() => {\n      const viewPort_prova = this.element.nativeElement.querySelector('tree-viewport') as HTMLElement;\n      viewPort_prova.scrollTop = 0\n    }, 300);\n\n    this.searchIconSpinner = true;\n    let parameters = newPar;\n    parameters['offset'] = this.offset;\n    parameters['limit'] = this.limit;\n    console.log(parameters)\n    this.lexicalService.getLexicalEntriesList(newPar).subscribe(\n      data => {\n        console.log(data)\n        if (data['list'].length > 0) {\n          this.show = false;\n        } else {\n          this.show = true;\n        }\n        this.nodes = data['list'];\n        this.counter = data['totalHits'];\n        this.lexicalEntryTree.treeModel.update();\n        this.updateTreeView();\n        this.searchIconSpinner = false;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  getParameters() {\n    return this.initialValues;\n  }\n\n  ngAfterViewInit(): void {\n    //@ts-ignore\n    $('[data-toggle=\"popover\"]').popover({\n      html: true,\n      title: this.titlePopover,\n      content: this.popoverWildcards\n    });\n  }\n\n  resetFields() {\n    this.initialValues.text = '';\n    this.parameters.text = '';\n    this.offset = 0;\n    this.filterForm.reset(this.initialValues, { emitEvent: false });\n    setTimeout(() => {\n      //this.filterForm.get('text').setValue('', {eventEmit : false});\n      this.lexicalEntriesFilter(this.parameters);\n      this.lexicalEntryTree.treeModel.update();\n      //this.updateTreeView();\n      /* this.lexicalService.sendToCoreTab(null);\n      this.lexicalService.sendToRightTab(null); */\n    }, 500);\n\n  }\n\n  updateTreeView() {\n\n    setTimeout(() => {\n      this.lexicalEntryTree.sizeChanged();\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip();\n    }, 1000);\n  }\n\n  onEvent = ($event: any) => {\n\n    console.log($event)\n    setTimeout(() => {\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip();\n    }, 2000);\n\n    if ($event.eventName == 'activate' && $event.node.data.lexicalEntry != undefined\n      && $event.node.data.form == undefined\n      && $event.node.data.sense == undefined\n      && $event.node.data.etymology == undefined\n      && $event.node.data.lexicalEntryInstanceName != this.selectedNodeId) {\n      //this.lexicalService.sendToCoreTab($event.node.data);\n      let idLexicalEntry = $event.node.data.lexicalEntryInstanceName;\n      this.lexicalService.getLexEntryData(idLexicalEntry).subscribe(\n        data => {\n\n          console.log(data);\n          this.selectedNodeId = $event.node.data.lexicalEntryInstanceName;\n          this.lexicalService.sendToCoreTab(data);\n          this.lexicalService.sendToRightTab(data);\n          this.lexicalService.sendToEtymologyTab(null);\n          this.lexicalService.updateCoreCard({ lastUpdate: data['lastUpdate'], creationDate: data['creationDate'] });\n\n          //this.lexicalService.sendToAttestationPanel(null);\n          //this.lexicalService.triggerAttestationPanel(false);\n\n\n          /* if(this.expander.isEpigraphyTabExpanded() && !this.expander.isEditTabExpanded()){\n            this.expander.expandCollapseEdit(false);\n            this.expander.expandCollapseEpigraphy(false);\n          }else if(!this.expander.isEpigraphyTabExpanded() && !this.expander.isEditTabExpanded()){\n            this.expander.expandCollapseEdit(true);\n          } */\n\n          if (!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()) {\n\n              this.expander.expandCollapseEdit(true);\n              this.expander.openCollapseEdit(true);\n            }\n          } else if (!this.expander.isEditTabOpen() && this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && this.expander.isEpigraphyTabExpanded()) {\n              this.expander.expandCollapseEpigraphy(false);\n              this.expander.openCollapseEdit(true)\n            }\n          }\n\n\n          //@ts-ignore\n          $(\"#coreTabModal\").modal(\"show\");\n          $('.modal-backdrop').appendTo('.core-tab-body');\n          //@ts-ignore\n          $('#coreTabModal').modal({ backdrop: 'static', keyboard: false })\n          $('body').removeClass(\"modal-open\")\n          $('body').css(\"padding-right\", \"\");\n\n          if (data.note != undefined) {\n            if (data.note != \"\") {\n              this.lexicalService.triggerNotePanel(true);\n            } else {\n              this.lexicalService.triggerNotePanel(false);\n            }\n          }\n        },\n        error => {\n\n        }\n      )\n    } else if ($event.eventName == 'activate'\n      && $event.node.data.form != undefined\n      && $event.node.data.formInstanceName != this.selectedNodeId) {\n\n      let formId = $event.node.data.formInstanceName;\n\n      this.lexicalService.getFormData(formId, 'core').subscribe(\n        data => {\n          console.log(data)\n          this.selectedNodeId = $event.node.data.formInstanceName;\n          data['parentNodeLabel'] = $event.node.parent.parent.data.label;\n          data['parentNodeInstanceName'] = $event.node.parent.parent.data.lexicalEntryInstanceName;\n          this.lexicalService.sendToCoreTab(data)\n          this.lexicalService.sendToEtymologyTab(null);\n          this.lexicalService.sendToRightTab(data);\n          this.lexicalService.updateCoreCard({ lastUpdate: data['lastUpdate'], creationDate: data['creationDate'] })\n          //@ts-ignore\n          $(\"#coreTabModal\").modal(\"show\");\n          $('.modal-backdrop').appendTo('.core-tab-body');\n          //@ts-ignore\n          $('#coreTabModal').modal({ backdrop: 'static', keyboard: false })\n          $('body').removeClass(\"modal-open\")\n          $('body').css(\"padding-right\", \"\");\n\n          // this.lexicalService.sendToAttestationPanel(null);\n          // this.lexicalService.triggerAttestationPanel(false);\n\n          if (!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()) {\n\n              this.expander.expandCollapseEdit(true);\n              this.expander.openCollapseEdit(true);\n            }\n          } else if (!this.expander.isEditTabOpen() && this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && this.expander.isEpigraphyTabExpanded()) {\n              this.expander.expandCollapseEpigraphy(false);\n              this.expander.openCollapseEdit(true)\n            }\n          }\n\n          if (data.note != undefined) {\n            if (data.note != \"\") {\n              this.lexicalService.triggerNotePanel(true);\n            } else {\n              this.lexicalService.triggerNotePanel(false);\n            }\n          }\n        },\n        error => {\n          //console.log(error)\n        }\n      )\n\n    } else if ($event.eventName == 'activate'\n      && $event.node.data.sense != undefined\n      && $event.node.data.senseInstanceName != this.selectedNodeId) {\n\n      let senseId = $event.node.data.senseInstanceName;\n\n      this.lexicalService.getSenseData(senseId, 'core').subscribe(\n        data => {\n          this.selectedNodeId = $event.node.data.senseInstanceName;\n          data['parentNodeLabel'] = $event.node.parent.parent.data.label;\n          data['parentNodeInstanceName'] = $event.node.parent.parent.data.lexicalEntryInstanceName;\n          data['type'] = $event.node.parent.parent.data.type;\n          console.log(data)\n          this.lexicalService.sendToCoreTab(data)\n          this.lexicalService.sendToEtymologyTab(null);\n          this.lexicalService.sendToRightTab(data);\n          this.lexicalService.updateCoreCard({ lastUpdate: data['lastUpdate'], creationDate: data['creationDate'] })\n\n          // this.lexicalService.sendToAttestationPanel(null);\n          // this.lexicalService.triggerAttestationPanel(false);\n          //@ts-ignore\n          $(\"#coreTabModal\").modal(\"show\");\n          $('.modal-backdrop').appendTo('.core-tab-body');\n          //@ts-ignore\n          $('#coreTabModal').modal({ backdrop: 'static', keyboard: false })\n          $('body').removeClass(\"modal-open\")\n          $('body').css(\"padding-right\", \"\");\n\n          if (!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()) {\n\n              this.expander.expandCollapseEdit(true);\n              this.expander.openCollapseEdit(true);\n            }\n          } else if (!this.expander.isEditTabOpen() && this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && this.expander.isEpigraphyTabExpanded()) {\n              this.expander.expandCollapseEpigraphy(false);\n              this.expander.openCollapseEdit(true)\n            }\n          }\n\n          if (data.note != undefined) {\n            if (data.note != \"\") {\n              this.lexicalService.triggerNotePanel(true);\n            } else {\n              this.lexicalService.triggerNotePanel(false);\n            }\n          }\n        },\n        error => {\n          //console.log(error)\n        }\n      )\n    } else if ($event.eventName == 'activate'\n      && $event.node.data.etymology != undefined\n      && $event.node.data.etymologyInstanceName != this.selectedNodeId) {\n\n      let etymologyId = $event.node.data.etymologyInstanceName;\n\n      this.lexicalService.getEtymologyData(etymologyId).subscribe(\n        data => {\n          this.selectedNodeId = $event.node.data.etymologyInstanceName;\n          data['parentNodeLabel'] = $event.node.parent.parent.data.label;\n          data['parentNodeInstanceName'] = $event.node.parent.parent.data.lexicalEntryInstanceName;\n          console.log(data)\n          data['type'] = $event.node.parent.parent.data.type;\n          // this.lexicalService.sendToAttestationPanel(null);\n          // this.lexicalService.triggerAttestationPanel(false);\n\n          //this.lexicalService.sendToCoreTab(null);\n          this.lexicalService.sendToEtymologyTab(data);\n          this.lexicalService.sendToRightTab(data);\n          this.lexicalService.updateCoreCard({ lastUpdate: data['etymology']['lastUpdate'], creationDate: data['etymology']['creationDate'] })\n          //@ts-ignore\n          $(\"#etymologyTabModal\").modal(\"show\");\n          $('.modal-backdrop').appendTo('.etym-tab-body');\n          //@ts-ignore\n          $('#etymologyTabModal').modal({ backdrop: 'static', keyboard: false })\n          $('body').removeClass(\"modal-open\")\n          $('body').css(\"padding-right\", \"\");\n\n          if (!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()) {\n\n              this.expander.expandCollapseEdit(true);\n              this.expander.openCollapseEdit(true);\n            }\n          } else if (!this.expander.isEditTabOpen() && this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && this.expander.isEpigraphyTabExpanded()) {\n              this.expander.expandCollapseEpigraphy(false);\n              this.expander.openCollapseEdit(true)\n            }\n          }\n\n          if (data.note != undefined) {\n            if (data.note != \"\") {\n              this.lexicalService.triggerNotePanel(true);\n            } else {\n              this.lexicalService.triggerNotePanel(false);\n            }\n          }\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    } else if ($event.eventName == 'activate'\n      && $event.node.data.component != undefined\n      && $event.node.data.componentInstanceName != this.selectedNodeId) {\n\n      let compId = $event.node.data.componentInstanceName;\n      let parentInstanceLabel = $event.node.parent.parent.data.label;\n      let parentInstanceName = $event.node.parent.parent.data.lexicalEntryInstanceName;\n\n      this.lexicalService.getLexEntryData(parentInstanceName).subscribe(\n        data => {\n          this.selectedNodeId = $event.node.data.parentNodeInstanceName;\n          \n          console.log(data)\n          //this.lexicalService.sendToCoreTab(data);\n          //this.lexicalService.sendToEtymologyTab(data);\n          //this.lexicalService.sendToDecompTab(data);\n          this.lexicalService.sendToRightTab(data);\n          // this.lexicalService.sendToAttestationPanel(null);\n          // this.lexicalService.triggerAttestationPanel(false);\n          this.lexicalService.updateCoreCard({ lastUpdate: data['lastUpdate'], creationDate: data['creationDate'] })\n          //@ts-ignore\n          $(\"#etymologyTabModal\").modal(\"show\");\n          $('.modal-backdrop').appendTo('.etym-tab-body');\n          //@ts-ignore\n          $('#etymologyTabModal').modal({ backdrop: 'static', keyboard: false })\n          $('body').removeClass(\"modal-open\")\n          $('body').css(\"padding-right\", \"\");\n\n          if (!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()) {\n\n              this.expander.expandCollapseEdit(true);\n              this.expander.openCollapseEdit(true);\n            }\n          } else if (!this.expander.isEditTabOpen() && this.expander.isEpigraphyTabOpen()) {\n            if (!this.expander.isEditTabExpanded() && this.expander.isEpigraphyTabExpanded()) {\n              this.expander.expandCollapseEpigraphy(false);\n              this.expander.openCollapseEdit(true)\n            }\n          }\n\n          if (data.note != undefined) {\n            if (data.note != \"\") {\n              this.lexicalService.triggerNotePanel(true);\n            } else {\n              this.lexicalService.triggerNotePanel(false);\n            }\n          }\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }\n\n  };\n\n  onKey = ($event: any) => {\n    var that = this;\n    setTimeout(function () {\n      var results = document.body.querySelectorAll('tree-node-collection > div')[1].children.length;\n      if (results == 0) {\n        that.show = true;\n      } else {\n        that.show = false;\n      }\n    }, 5);\n  };\n\n  onScrollDown(treeModel: TreeModel) {\n\n    this.offset += 500;\n    this.modalShow = true;\n\n    //@ts-ignore\n    $(\"#lazyLoadingModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.tree-view');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let parameters = this.filterForm.value;\n    parameters['offset'] = this.offset;\n    parameters['limit'] = this.limit;\n\n    this.lexicalService.getLexicalEntriesList(parameters).pipe(debounceTime(200)).subscribe(\n      data => {\n        //@ts-ignore\n        $('#lazyLoadingModal').modal('hide');\n        $('.modal-backdrop').remove();\n        for (var i = 0; i < data['list'].length; i++) {\n          this.nodes.push(data['list'][i]);\n        };\n        //this.counter = this.nodes.length;\n        this.lexicalEntryTree.treeModel.update();\n        this.updateTreeView();\n        this.modalShow = false;\n\n        setTimeout(() => {\n          //@ts-ignore\n          $('#lazyLoadingModal').modal('hide');\n          $('.modal-backdrop').remove();\n        }, 300);\n      },\n      error => {\n\n      }\n    )\n  }\n\n  getChildren(node: any) {\n\n    let newNodes: any;\n    if (node.data.lexicalEntryInstanceName != undefined) {\n      let instance = node.data.lexicalEntryInstanceName;\n      this.lexicalService.getLexEntryElements(instance).subscribe(\n        data => {\n          console.log(data['elements'])\n          data[\"elements\"] = data[\"elements\"].filter(function (obj) {\n            return obj.count != 0;\n          })\n          newNodes = data[\"elements\"].map((c) => Object.assign({}, c));\n\n          newNodes.forEach(element => {\n            setTimeout(() => {\n              try {\n                const someNode = this.lexicalEntryTree.treeModel.getNodeById(element.id);\n\n                someNode.expand();\n                //console.log(someNode)\n                var that = this;\n                /* this.interval = setInterval((val)=>{                \n                               \n                  \n                }, 2000) */\n              } catch (e) {\n                console.log(e)\n              }\n\n            }, 1000);\n\n          });\n\n        },\n        error => {\n\n        }\n      );\n    } else if (node.data.label == \"form\") {\n      let parentInstance = node.parent.data.lexicalEntryInstanceName;\n      this.lexicalService.getLexEntryForms(parentInstance).subscribe(\n        data => {\n          newNodes = data.map((c) => Object.assign({}, c));\n          for (var i = 0; i < newNodes.length; i++) {\n            if (newNodes[i].creator == node.parent.data.creator) {\n              newNodes[i]['flagAuthor'] = false\n            } else {\n              newNodes[i]['flagAuthor'] = true\n            }\n          }\n        }\n      )\n    } else if (node.data.label == \"sense\") {\n      let parentInstance = node.parent.data.lexicalEntryInstanceName;\n      this.lexicalService.getSensesList(parentInstance).subscribe(\n        data => {\n          /* //console.log(data) */\n          newNodes = data.map((c) => Object.assign({}, c));\n          for (var i = 0; i < newNodes.length; i++) {\n            newNodes[i]['hasChildren'] = null;\n            if (newNodes[i].creator == node.parent.data.creator) {\n              newNodes[i]['flagAuthor'] = false\n            } else {\n              newNodes[i]['flagAuthor'] = true\n            }\n          }\n        }, error => {\n          //console.log(error)\n        }\n      )\n    } else if (node.data.label == \"etymology\") {\n      let parentInstance = node.parent.data.lexicalEntryInstanceName;\n      this.lexicalService.getEtymologies(parentInstance).subscribe(\n        data => {\n          console.log(data)\n          newNodes = data.map((c) => Object.assign({}, c));\n          for (var i = 0; i < newNodes.length; i++) {\n            newNodes[i]['hasChildren'] = null;\n            if (newNodes[i].creator == node.parent.data.creator) {\n              newNodes[i]['flagAuthor'] = false\n            } else {\n              newNodes[i]['flagAuthor'] = true\n            }\n          }\n        }, error => {\n          //console.log(error)\n        }\n      )\n\n    } else if (node.data.label == \"constituent\") {\n      let parentInstance = node.parent.data.lexicalEntryInstanceName;\n      this.lexicalService.getConstituents(parentInstance).subscribe(\n        data => {\n          console.log(data)\n          newNodes = data.map((c) => Object.assign({}, c));\n          for (var i = 0; i < newNodes.length; i++) {\n            newNodes[i]['hasChildren'] = null;\n            /* if (newNodes[i].creator == node.parent.data.creator) {\n              newNodes[i]['flagAuthor'] = false\n            } else {\n              newNodes[i]['flagAuthor'] = true\n            } */\n          }\n        }, error => {\n          //console.log(error)\n        }\n      )\n\n    } else if (node.data.label == \"subterm\") {\n      let parentInstance = node.parent.data.lexicalEntryInstanceName;\n      this.lexicalService.getSubTerms(parentInstance).subscribe(\n        data => {\n          console.log(data)\n          newNodes = data.map((c) => Object.assign({}, c));\n          for (var i = 0; i < newNodes.length; i++) {\n            newNodes[i]['hasChildren'] = null;\n            /* if (newNodes[i].creator == node.parent.data.creator) {\n              newNodes[i]['flagAuthor'] = false\n            } else {\n              newNodes[i]['flagAuthor'] = true\n            } */\n          }\n        }, error => {\n          //console.log(error)\n        }\n      )\n\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(newNodes), 1000);\n    });\n  }\n\n\n  /* To copy any Text */\n  copyText(val: string) {\n    console.log(val)\n\n    let value = '';\n    if (val['lexicalEntry'] != undefined && val['sense'] == undefined && val['etymology'] == undefined) {\n      value = val['lexicalEntry']\n    } else if (val['form'] != undefined) {\n      value = val['form']\n    } else if (val['sense'] != undefined) {\n      value = val['sense']\n    } else if (val['etymology'] != undefined) {\n      value = val['etymology']\n    }\n    this.copySubject.next(value);\n  }\n}","\n\n<form [formGroup]=\"filterForm\">\n    <div class=\"input-group col-md-12 mt-1 p-0\">\n        <input formControlName=\"text\" id=\"filterLexicalEntry\" name=\"text\" type=\"text\" class=\"form-control\"\n            placeholder=\"Search\" [value]=\"filterForm.get('text').value\"/>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text loading_icon_append\" id=\"basic-addon2\">\n                <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n            </span>\n        </div>\n        <div id=\"buttons-container\" class=\"input-group-append\">\n            <button class=\"btn  btn-sm btn-info btn-block filter-button\" type=\"button\" data-toggle=\"popover\"\n                data-placement=\"bottom\" data-trigger=\"hover\"><i class=\"fa fa-question\"></i></button>\n            <button class=\"btn btn-sm btn-secondary btn-block filter-button\" type=\"button\" value=\"Filter\" title=\"Filter\"\n                data-toggle=\"collapse\" data-target=\"#filterCollapse\" aria-expanded=\"false\"\n                aria-controls=\"filterCollapse\"><i class=\"fa fa-filter\"></i></button>\n            <button class=\"btn btn-sm btn-danger btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Reset\"\n                (click)=\"resetFields();\" style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n                    class=\"fa fa-times\"></i></button>\n            <button class=\"btn btn-block counter-button\" type=\"button\"><span\n                    class=\"font-weight-bold font-italic text-muted\">{{counter}}</span></button>\n        </div>\n    </div>\n\n\n    <div class=\"d-flex flex-wrap mt-3\">\n        <div class=\"col-md-6 col-sm-3\">\n            <div class=\"form-check\">\n                <input formControlName=\"searchMode\" class=\"form-check-input\" type=\"radio\" name=\"searchMode\"\n                    id=\"equalsRadio\" value=\"equals\">\n                <label class=\"form-check-label\" for=\"equalsRadio\">\n                    Equals\n                </label>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-sm-3\">\n            <div class=\"form-check\">\n                <input formControlName=\"searchMode\" class=\"form-check-input\" type=\"radio\" name=\"searchMode\"\n                    id=\"startRadio\" value=\"startsWith\">\n                <label class=\"form-check-label\" for=\"startRadio\">\n                    Starts\n                </label>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-sm-3\">\n            <div class=\"form-check\">\n                <input formControlName=\"searchMode\" class=\"form-check-input\" type=\"radio\" name=\"searchMode\"\n                    id=\"containsRadio\" value=\"contains\">\n                <label class=\"form-check-label\" for=\"containsRadio\">\n                    Contains\n                </label>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-sm-3\">\n            <div class=\"form-check\">\n                <input formControlName=\"searchMode\" class=\"form-check-input\" type=\"radio\" name=\"searchMode\"\n                    id=\"endRadio\" value=\"end\">\n                <label class=\"form-check-label\" for=\"endRadio\">\n                    Ends\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"collapse multi-collapse\" id=\"filterCollapse\">\n        <div class=\"d-flex flex-wrap mt-3\">\n            <div class=\"col-md-6 col-sm-12\">\n                <select formControlName=\"type\" class=\"form-control\" id=\"type\" name=\"type\">\n                    <option value=\"\">Type</option>\n                    <option *ngFor=\"let type of types\" [value]=\"type.label\">{{type.label}} - {{type.count}}</option>\n                </select>\n            </div>\n            <div class=\"col-md-6 col-sm-12\">\n                <div class=\"d-md-none mt-3\"></div>\n                <select formControlName=\"pos\" class=\"form-control\" id=\"pos\" name=\"pos\">\n                    <option value=\"\">Pos</option>\n                    <option *ngFor=\"let ps of partOfSpeech\" [value]=\"ps.label\">{{ps.label}} - {{ps.count}} </option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"d-flex flex-wrap mt-3\">\n            <div class=\"col-md-6 col-sm-12\">\n                <div class=\"d-md-none mt-3\"></div>\n                <select formControlName=\"formType\" class=\"form-control\" id=\"formType\" name=\"formType\">\n                    <option value=\"entry\">entry</option>\n                    <option value=\"flexed\">flexed</option>\n                </select>\n            </div>\n            <div class=\"col-md-6 col-sm-12\">\n                <div class=\"d-md-none mt-3\"></div>\n                <select formControlName=\"author\" class=\"form-control\" id=\"author\" name=\"author\">\n                    <option value=\"\">Author</option>\n                    <option *ngFor=\"let auth of authors\" [value]=\"auth.label\">{{auth.label}} - {{auth.count}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"d-flex flex-wrap mt-3\">\n            <div class=\"col-md-6 col-sm-12\">\n                <div class=\"d-md-none mt-3\"></div>\n                <select formControlName=\"lang\" class=\"form-control\" id=\"lang\" name=\"lang\">\n                    <option value=\"\">Language</option>\n                    <option *ngFor=\"let lang of languages\" [value]=\"lang.label\">{{lang.label}} - {{lang.count}}\n                    </option>\n                </select>\n            </div>\n            <div class=\"col-md-6 col-sm-12\">\n                <div class=\"d-md-none mt-3\"></div>\n                <select formControlName=\"status\" class=\"form-control\" id=\"status\" name=\"status\">\n                    <option value=\"\">Status</option>\n                    <option value=\"working\">working</option>\n                    <option value=\"completed\">completed</option>\n                    <option value=\"reviewed\">reviewed</option>\n                </select>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n<!-- INFINITE SCROLL AND TREE VIEW -->\n<div class=\"col-md-12 mt-3 rounded border border-secondary tree-view\" infiniteScroll [infiniteScrollDistance]=\"0.4\"\n    [infiniteScrollThrottle]=\"150\" [infiniteScrollContainer]=\"'.search-results'\" [fromRoot]=\"true\"\n    (scrolled)=\"onScrollDown(lexicalEntry.treeModel)\" style=\"height: calc(100vh - 21rem); overflow-x: auto;\">\n\n    <div id=\"lazyLoadingModal\" class=\"modal fade\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n\n            <!-- Modal content-->\n            <div class=\"modal-content\">\n                <div class=\"modal-body\">\n                    <div class=\"d-flex justify-content-center\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <p class=\"mx-3\" *ngIf=\"show\">Nessun risultato</p>\n    <tree-root #lexicalEntry [(state)]=\"state\" [nodes]=\"nodes\" [options]=\"options\" [focused]=\"true\"\n        (activate)=\"onEvent($event)\" (deactivate)=\"onEvent($event)\" class=\"lexicalEntryTree\">\n        \n        <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\n            <div class=\"node-wrapper\"  style=\"justify-content: space-between; padding: 0px 15px;\" > <!-- [style.padding-left]=\"node.getNodePadding()\" -->\n                <div>\n                    <tree-node-expander [node]=\"node\" *ngIf=\"node.data.hasChildren == true\"></tree-node-expander>\n                    <div class=\"node-content-wrapper\" [class.node-content-wrapper-active]=\"node.isActive\"\n                        [class.node-content-wrapper-focused]=\"node.isFocused\" (click)=\"node.mouseAction('click', $event)\"\n                        (dblclick)=\"node.mouseAction('dblClick', $event)\" [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"node.data\">\n    \n                        <span\n                            *ngIf=\"node.data.count == undefined && labelView && node.data.componentInstanceName == undefined && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined\">{{\n                            node.data.label }}</span>\n                        <span\n                            *ngIf=\"node.data.count == undefined && idView && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined && node.data.etymologyInstanceName == undefined\">{{\n                            node.data.lexicalEntryInstanceName }}</span>\n    \n                        <span\n                            *ngIf=\"node.data.count == undefined && labelView && node.data.definition == undefined && node.data.type=='canonicalForm' && node.data.sense == undefined\"><b>{{\n                                node.data.label }}</b></span>\n                        <span\n                            *ngIf=\"node.data.count == undefined && idView && node.data.definition == undefined && node.data.type=='canonicalForm' && node.data.sense == undefined\"><b>{{\n                                node.data.formInstanceName }}</b></span>\n                        <span\n                            *ngIf=\"node.data.count == undefined && idView && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined\">{{\n                            node.data.formInstanceName }}</span>\n                        <span *ngIf=\"node.data.count == undefined && idView && node.data.definition != undefined\">{{\n                            node.data.senseInstanceName }}</span>\n\n                        <span *ngIf=\"node.data.count == undefined && idView && node.data.etymologyInstanceName != undefined\">{{\n                            node.data.etymologyInstanceName }}</span>\n\n                        <span *ngIf=\"node.data.count == undefined && labelView && node.data.componentInstanceName != undefined && node.data.label == ''\">\n                           Anonimous component</span>\n\n                        <span *ngIf=\"node.data.count == undefined && labelView && node.data.componentInstanceName != undefined && node.data.label != ''\">\n                            {{node.data.label}}</span>\n                        \n                        <span *ngIf=\"node.data.count == undefined && idView && node.data.componentInstanceName != undefined\">\n                            {{node.data.componentInstanceName}}</span>\n    \n                        <span class=\"lexical-tooltip\"\n                            *ngIf=\"node.data.count == undefined && labelView && node.data.definition != undefined && node.data.label != undefined\"\n                            data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{node.data.label.length >\n                            10 ? (node.data.label | slice:0:10) +'...' : node.data.label}}</span>\n                        <span class=\"lexical-tooltip\"\n                            *ngIf=\"node.data.count == undefined && idView && node.data.definition != undefined && node.data.label != undefined\"\n                            data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{ node.data.instanceName\n                            }}</span>\n    \n                        <span *ngIf=\"node.data.count != undefined\"><i><span\n                                    style=\"color: #6e6e6e\">{{node.data.label}}</span></i>&nbsp;({{ node.data.count\n                            }})</span>\n                        <span *ngIf=\"node.data.writtenRep != ''\">{{ node.data.writtenRep }}</span>\n                        <sub *ngIf=\"labelView && node.data.sense == undefined\">{{node.data.pos}}</sub>\n                        <span *ngIf=\"node.data.language != null && labelView\" class=\"lang\">@{{node.data.language}}</span>\n                        <!-- <span  *ngIf=\"node.data.count == undefined\" >\n                            {{ node.data.name }}\n                        </span> -->\n                    </div>\n                    <!-- <span *ngIf=\"node.data.count == undefined && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined && node.data.etymologyInstanceName == undefined\">\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"copyText(node.data.lexicalEntry)\" style=\"padding: 0 0.25rem;\"><i style=\"font-size: 12px;\" class=\"fa fa-copy\"></i></button>\n                    </span> -->\n                    \n                </div>\n                \n                <div class=\"icons-container\">\n                    <div style=\"width: 30%;\">\n                        <i *ngIf=\"node.data.note != '' && node.data.note != null\"\n                            class=\"far fa-comment-dots note-tooltip note_{{node.data.id}}\" data-toggle=\"tooltip\"\n                            data-html=\"true\" [title]=\"node.data.note\"></i>\n                    </div>\n                    <div style=\"width: 30%;\">\n                        <i *ngIf=\"node.data.lexicalEntryInstanceName != undefined && !flagAuthor && node.data.status == 'working'\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.creator\"></i>\n\n                        <i *ngIf=\"node.data.lexicalEntryInstanceName != undefined && !flagAuthor && node.data.status == 'completed'\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.author\"></i>\n\n                        <i *ngIf=\"node.data.lexicalEntryInstanceName != undefined && !flagAuthor && node.data.status == 'reviewed'\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.revisor\"></i>\n\n                        <i *ngIf=\"node.data.formInstanceName != undefined && node.data.flagAuthor\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.creator\"></i>\n                        <i *ngIf=\"node.data.senseInstanceName != undefined && node.data.flagAuthor\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.creator\"></i>\n                            <i *ngIf=\"node.data.etymologyInstanceName != undefined && node.data.flagAuthor\"\n                            class=\"fas fa-user lexical-tooltip\" data-toggle=\"tooltip\" data-html=\"true\"\n                            [title]=\"node.data.creator\"></i>\n                    </div>\n                    <div style=\"width: 30%;\">\n                        <i *ngIf=\"node.data.status != undefined && node.data.status == 'working'\" class=\"fa fa-circle\"\n                            style=\"color:red;\"></i>\n                        <i *ngIf=\"node.data.status != undefined && node.data.status == 'completed'\" class=\"fa fa-circle\"\n                            style=\"color:yellow;\"></i>\n                        <i *ngIf=\"node.data.status != undefined && node.data.status == 'reviewed'\"\n                            class=\"fa fa-circle lexical-tooltip\" style=\"color: green;\" data-toggle=\"tooltip\"\n                            data-html=\"true\" [title]=\"node.data.revisor\"></i>\n                    </div>\n\n                </div>\n            </div>\n        </ng-template>\n        <context-menu>\n\n            <!-- FOLDER CONTEXT MENU -->\n            <ng-template contextMenuItem let-item (execute)=\"copyText($event.item)\">\n              Copy URI\n            </ng-template>\n        </context-menu>\n        <ng-template #loadingTemplate let-loadingNode>\n            <div *ngIf=\"loadingNode.hasChildren\">\n                <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </ng-template>\n    </tree-root>\n\n    \n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { data } from 'jquery';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { AnnotatorService } from 'src/app/services/annotator/annotator.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss']\n})\nexport class SearchFormComponent implements OnInit {\n  private search_subject: Subject<any> = new Subject();\n  private search_lex_entries_subject: Subject<any> = new Subject();\n  searchResults: any[];\n  lex_searchResuts: any[];\n  languages = [];\n  morphologyData = [];\n  lexEntryTypesData: any;\n  typesData: any;\n  addTagFormText: any;\n  creator : any;\n\n\n  constructor(private formBuilder: FormBuilder, private modalService: NgbModal, private toastr: ToastrService, private annotatorService: AnnotatorService, private lexicalService: LexicalEntriesService, private expander: ExpanderService, private renderer: Renderer2, private auth : AuthService) { }\n\n  @Input() bind;\n  @ViewChild('addFormModal') addFormModal: any;\n  @ViewChild('select_form') select_form: NgSelectComponent;\n  @ViewChild('search_lexicalEntry') search_lexicalEntry: NgSelectComponent;\n  loader = false;\n  modalStep = 0;\n\n  stepOneForm = new FormGroup({\n    existOrNot: new FormControl('', Validators.required),\n  })\n\n  stepTwoForm = new FormGroup({\n    lexicalEntry: new FormControl('', Validators.required)\n  })\n\n  stepThreeForm = new FormGroup({\n    label: new FormControl('', Validators.required),\n    type: new FormControl('', Validators.required),\n    language: new FormControl('', Validators.required),\n    pos: new FormControl('', Validators.required),\n  });\n\n  stepFourForm = new FormGroup({\n    writtenForm: new FormControl('', Validators.required),\n    type: new FormControl('', Validators.required),\n  });\n\n  statusForm = new FormGroup({\n    lexicalEntryCreation: new FormControl(''),\n    attachingLanguage: new FormControl(''),\n    attachingType: new FormControl(''),\n    attachingLabel: new FormControl(''),\n    attachingPos: new FormControl(''),\n    creatingForm: new FormControl(''),\n    attachingWrittenForm: new FormControl(''),\n    attachingFormType: new FormControl(''),\n    finish: new FormControl(''),\n    error: new FormControl(null)\n  })\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      //console.log(this.select_form);\n    }, 1000);\n\n    if(this.auth.getLoggedUser()['preferred_username'] != undefined){\n      this.creator = this.auth.getLoggedUser()['preferred_username'];\n    }\n\n    this.search_lex_entries_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchLexicalEntriesFilter(data)\n      }\n    )\n\n    this.search_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.lexicalService.getLexiconLanguages().subscribe(\n      data => {\n        this.languages = [];\n        for (var i = 0; i < data.length; i++) {\n          this.languages[i] = data[i]\n        }\n      }\n    );\n\n    this.lexicalService.getMorphologyData().subscribe(\n      data => {\n        /* this.morphologyData = data; */\n\n        let morphoData = data;\n\n        this.morphologyData = morphoData.filter(x => {\n          if (x.propertyId == 'partOfSpeech') {\n            return true;\n          } else {\n            return false;\n          }\n        })\n\n        this.morphologyData = this.morphologyData[0]['propertyValues'];\n      }\n    )\n\n    this.lexicalService.getLexEntryTypes().subscribe(\n      data => {\n        //console.log(data)\n        this.lexEntryTypesData = data;\n\n      }\n    )\n\n    this.lexicalService.getFormTypes().subscribe(\n      data => {\n        this.typesData = data;\n        //console.log(this.typesData)\n      },\n      error => {\n        //console.log(error)\n      }\n    )\n\n    this.annotatorService.triggerSearch$.subscribe(\n      request => {\n        console.log(request);\n        if (request != null) {\n          this.bindSelection(request);\n        }\n      }, error => {\n\n      }\n    ).unsubscribe();\n\n\n    this.stepOneForm = this.formBuilder.group({\n      existOrNot: ['', Validators.required]\n    })\n\n    this.stepTwoForm = this.formBuilder.group({\n      lexicalEntry: ['', Validators.required]\n    })\n\n    this.stepThreeForm = this.formBuilder.group({\n      label: ['', Validators.required],\n      type: ['', Validators.required],\n      language: ['', Validators.required],\n      pos: ['', Validators.required],\n    });\n\n    this.stepFourForm = this.formBuilder.group({\n      writtenForm: ['', Validators.required],\n      type: ['', Validators.required]\n    });\n\n    this.statusForm = this.formBuilder.group({\n      lexicalEntryCreation: ['pause'],\n      attachingLanguage: ['pause'],\n      attachingType: ['pause'],\n      attachingLabel: ['pause'],\n      attachingPos: ['pause'],\n      creatingForm: ['pause'],\n      attachingWrittenForm: ['pause'],\n      attachingFormType: ['pause'],\n      finish: ['pause'],\n      error: [null]\n    })\n  }\n\n\n  triggerSearch(evt) {\n    //console.log(evt)\n    if (evt.target != undefined && evt.key != 'Control') {\n\n      this.search_subject.next(evt.target.value)\n    }\n  }\n\n  triggerSearchLexicalEntries(evt) {\n    if (evt.target != undefined && evt.key != 'Control') {\n\n      this.search_lex_entries_subject.next(evt.target.value)\n    }\n  }\n\n  onSearchFilter(data) {\n    this.searchResults = [];\n    /* console.log(data) */\n    let parameters = {\n      text: data,\n      searchMode: \"startsWith\",\n      representationType: \"writtenRep\",\n      author: \"\",\n      offset: 0,\n      limit: 500\n    }\n    console.log(parameters)\n    if (data != undefined) { /* && data.length >= 3 */\n\n      this.lexicalService.getFormList(parameters).subscribe(\n        data => {\n          console.log(data)\n          this.searchResults = data['list'];\n          this.loader = false;\n        }, error => {\n          console.log(error)\n          this.loader = false;\n        }\n      )\n    }\n\n  }\n\n  onSearchLexicalEntriesFilter(data) {\n    this.searchResults = [];\n    /* console.log(data) */\n    let parameters = {\n      text: data,\n      searchMode: \"startsWith\",\n      type: \"\",\n      pos: \"\",\n      formType: \"entry\",\n      author: \"\",\n      lang: \"\",\n      status: \"\",\n      offset: 0,\n      limit: 500\n    }\n\n    console.log(parameters)\n    if (data != \"\") { /* && data.length >= 3 */\n\n      this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n        data => {\n          console.log(data)\n          this.lex_searchResuts = data['list'];\n          this.loader = false;\n        }, error => {\n          //console.log(error)\n        }\n      )\n    }\n\n  }\n\n  clearAll() {\n    this.select_form.handleClearClick();\n  }\n\n  clearAllLexicalEntries() {\n    this.search_lexicalEntry.handleClearClick();\n  }\n\n  bindSelection(req) {\n    this.loader = true;\n    setTimeout(() => {\n      this.select_form.filter(req);\n      this.onSearchFilter(req)\n    }, 100);\n\n  }\n\n  /* ngOnDestroy(){\n    this.lexicalService.\n  } */\n\n  handleForm(evt) {\n\n    if (evt instanceof NgSelectComponent) {\n      if (evt.selectedItems.length > 0) {\n        /* console.log(evt.selectedItems[0]) */\n        let label;\n        if (evt.selectedItems[0]['value']['formInstanceName'] != undefined) {\n          label = evt.selectedItems[0]['value']['formInstanceName'];\n        } else {\n          label = evt.selectedItems[0].label;\n        }\n        this.onChangeForm(evt.selectedItems[0]['value'])\n      }\n    } /* else {\n        let label = evt.target.value;\n        this.form_subject.next({ name: label})\n    } */\n  }\n\n\n  onChangeForm(data) {\n\n\n\n    let parameters = {}\n    let idPopover = this.bind.selectedPopover.tokenId;\n    let tokenData = this.bind.object[idPopover];\n    let element_id = this.bind.epiData.element_id;\n    let textSelection = this.bind.message;\n    let selectionSpan = this.bind.spanSelection;\n    let formValue = data.form;\n\n    if(this.creator == undefined){\n      this.creator = '';\n    }\n\n    console.log(selectionSpan)\n    console.log(textSelection)\n    if (textSelection != '' && textSelection != undefined) {\n      //console.log(111)\n      parameters[\"value\"] = formValue;\n      parameters[\"layer\"] = \"attestation\";\n      parameters[\"attributes\"] = {\n        author: this.creator,\n        creator: this.creator,\n        note: \"\",\n        confidence: 1,\n        timestamp: new Date().getTime().toString(),\n        bibliography: [],\n        validity: \"\",\n        externalRef: \"\",\n        node_id: tokenData.id,\n        label: data.label,\n        form_id: data.formInstanceName\n      };\n      parameters[\"spans\"] = [\n        {\n          start: selectionSpan.start.toString(),\n          end: selectionSpan.end.toString()\n        }\n      ];\n      parameters[\"id\"] = tokenData.node;\n    } else if (textSelection == '' && !Array.isArray(selectionSpan) && !this.bind.isEmptyFile) {\n      //console.log(222)\n      parameters[\"value\"] = formValue;\n      parameters[\"layer\"] = \"attestation\";\n      parameters[\"attributes\"] = {\n        author: this.creator,\n        creator: this.creator,\n        note: \"\",\n        confidence: 1,\n        timestamp: new Date().getTime().toString(),\n        bibliography: [],\n        validity: \"\",\n        externalRef: \"\",\n        node_id: tokenData.id,\n        label: data.label,\n        form_id: data.formInstanceName\n      };\n      parameters[\"spans\"] = [\n        {\n          start: tokenData.begin.toString(),\n          end: tokenData.end.toString()\n        }\n      ];\n      parameters[\"id\"] = tokenData.node;\n    } else if (Array.isArray(selectionSpan)) { //MULTIWORD\n      //console.log(333)\n      parameters[\"value\"] = formValue;\n      parameters[\"layer\"] = \"attestation\";\n      parameters[\"attributes\"] = {\n        author: this.creator,\n        creator: this.creator,\n        note: \"\",\n        confidence: 1,\n        timestamp: new Date().getTime().toString(),\n        bibliography: [],\n        validity: \"\",\n        externalRef: \"\",\n        node_id: tokenData.id,\n        label: data.label,\n        form_id: data.formInstanceName\n      };\n      parameters[\"spans\"] = selectionSpan\n      parameters[\"id\"] = tokenData.node;\n    } else if (this.bind.isEmptyFile) {\n      parameters[\"value\"] = formValue;\n      parameters[\"layer\"] = \"attestation\";\n      parameters[\"attributes\"] = {\n        author: this.creator,\n        creator: this.creator,\n        note: \"\",\n        confidence: 1,\n        timestamp: new Date().getTime().toString(),\n        bibliography: [],\n        validity: \"\",\n        externalRef: \"\",\n        node_id: undefined,\n        label: data.label,\n        form_id: data.formInstanceName\n      };\n      parameters[\"spans\"] = [\n        {\n          start: 0,\n          end: 0\n        }\n      ];\n      parameters[\"id\"] = element_id;\n    }\n    //console.log(idPopover, tokenData, data);\n\n    console.log(parameters)\n\n    let identifier;\n\n    if (!this.bind.isEmptyFile) {\n      identifier = tokenData.node;\n    } else {\n      identifier = element_id\n    }\n\n    this.annotatorService.addAnnotation(parameters, identifier).subscribe(\n      data => {\n        console.log(data);\n        this.bind.annotationArray.push(data.annotation);\n\n        if (!this.bind.isEmptyFile) {\n          this.bind.populateLocalAnnotation(tokenData);\n        } else {\n          this.bind.populateLocalAnnotation(data.annotation)\n        }\n\n\n        if (!this.bind.isEmptyFile) {\n          this.bind.object.forEach(element => {\n            if (data.annotation.attributes.node_id == element.id) {\n              let positionElement = element.position;\n              let elementHTML = document.getElementsByClassName('token-' + (positionElement - 1))[0]\n              this.renderer.addClass(elementHTML, 'annotation');\n            }\n          });\n        }\n\n\n        this.toastr.success('New attestation created', 'Info', {\n          timeOut: 5000\n        })\n\n      },\n      error => {\n        console.log(error);\n        this.toastr.error('Error on create new attestation', 'Error', {\n          timeOut: 5000\n        })\n      }\n    )\n\n\n  }\n\n  addNewForm = (form: string) => {\n    this.addTagFormText = form;\n\n\n    let index = this.bind.selectedPopover.tokenId;\n    let popover = this.bind.spanPopovers.toArray()[index];\n\n    if (popover != undefined) {\n      if (popover.isOpen()) {\n        popover.close();\n      }\n    }\n\n    this.modalService.open(this.addFormModal, {\n      size: 'lg',\n      windowClass: 'dark-modal',\n      beforeDismiss: () => {\n        if (this.stepOneForm.touched || this.stepTwoForm.touched || this.stepThreeForm.touched || this.stepFourForm.touched) {\n          if (!confirm('There are unsaved changes. Do you really want to quit without saving?')) {\n            return false;\n          } else {\n            this.stepOneForm.reset();\n            this.stepOneForm.markAsUntouched();\n            this.stepOneForm.markAsPristine();\n\n            this.stepTwoForm.reset();\n            this.stepTwoForm.markAsUntouched();\n            this.stepTwoForm.markAsPristine();\n\n            this.stepThreeForm.reset();\n            this.stepThreeForm.markAsUntouched();\n            this.stepThreeForm.markAsPristine();\n\n            this.stepFourForm.reset();\n            this.stepFourForm.markAsUntouched();\n            this.stepFourForm.markAsPristine();\n\n            this.statusForm.reset();\n            this.statusForm.markAsPristine();\n            this.statusForm.markAsUntouched();\n            return true;\n          }\n\n        } else {\n          this.stepOneForm.reset();\n          this.stepOneForm.markAsUntouched();\n          this.stepOneForm.markAsPristine();\n\n          this.stepTwoForm.reset();\n          this.stepTwoForm.markAsUntouched();\n          this.stepTwoForm.markAsPristine();\n\n          this.stepThreeForm.reset();\n          this.stepThreeForm.markAsUntouched();\n          this.stepThreeForm.markAsPristine();\n\n          this.stepFourForm.reset();\n          this.stepFourForm.markAsUntouched();\n          this.stepFourForm.markAsPristine();\n          return true;\n        }\n      }\n    });\n    this.modalStep = 1;\n\n  }\n\n  nextStep() {\n    if (this.modalStep == 1) {\n      if (this.stepOneForm.get('existOrNot').value == 'new') {\n        this.modalStep = 3;\n      } else {\n        this.modalStep = 2;\n      }\n\n      if (this.stepTwoForm.touched) {\n        this.stepTwoForm.reset();\n        this.stepTwoForm.markAsUntouched();\n        this.stepTwoForm.markAsPristine();\n        this.clearAll();\n      }\n\n      if (this.stepThreeForm.touched) {\n        this.stepThreeForm.reset();\n        this.stepThreeForm.markAsUntouched();\n        this.stepThreeForm.markAsPristine();\n      }\n\n      if (this.stepFourForm.touched) {\n        this.stepFourForm.reset();\n        this.stepFourForm.markAsUntouched();\n        this.stepFourForm.markAsPristine();\n      }\n\n    } else if (this.modalStep == 3) {\n      this.modalStep += 1;\n      if (this.stepTwoForm.touched) {\n        this.stepTwoForm.reset();\n        this.stepTwoForm.markAsUntouched();\n        this.stepTwoForm.markAsPristine();\n\n        this.clearAll();\n      }\n\n      if (this.stepFourForm.touched) {\n        this.stepFourForm.reset();\n        this.stepFourForm.markAsUntouched();\n        this.stepFourForm.markAsPristine();\n      }\n\n      this.stepFourForm.get('writtenForm').patchValue(this.addTagFormText, { emitEvent: false });\n\n    } else if (this.modalStep == 2) {\n      this.modalStep = 4;\n      if (this.stepThreeForm.touched) {\n        this.stepThreeForm.reset();\n        this.stepThreeForm.markAsUntouched();\n        this.stepThreeForm.markAsPristine();\n      }\n\n      if (this.stepFourForm.touched) {\n        this.stepFourForm.reset();\n        this.stepFourForm.markAsUntouched();\n        this.stepFourForm.markAsPristine();\n      }\n\n      this.stepFourForm.get('writtenForm').patchValue(this.addTagFormText, { emitEvent: false });\n    } else {\n      this.modalStep += 1;\n\n      if (this.modalStep == 6) {\n        this.wizardFactory();\n      }\n\n      if (this.modalStep > 6) {\n        this.modalStep = 6;\n      }\n    }\n\n  }\n\n  previousStep() {\n    if (this.modalStep == 2) {\n      this.modalStep -= 1;\n    } else if (this.modalStep == 3) {\n      this.modalStep = 1;\n    } else if (this.modalStep == 4) {\n\n      if (this.stepThreeForm.touched) {\n        this.modalStep = 3;\n      } else if (this.stepTwoForm.touched) {\n        this.modalStep = 2;\n      }\n    } else if (this.modalStep == 5) {\n      this.modalStep -= 1;\n    }\n  }\n\n  wizardFactory() {\n\n    //nuova lexical entry\n    if (this.stepThreeForm.touched) {\n\n      //lexical entry creazion\n      this.statusForm.get('lexicalEntryCreation').patchValue('pending', { emitEvent: false });\n      this.lexicalService.newLexicalEntry().subscribe(\n        data => {\n          console.log(data);\n\n          this.statusForm.get('lexicalEntryCreation').patchValue('ok', { emitEvent: false })\n\n          this.statusForm.get('attachingLanguage').patchValue('pending', { emitEvent: false })\n          //attaching language\n          let lexId = data.lexicalEntryInstanceName;\n          let lang = this.stepThreeForm.get('language').value;\n          let parameters = {\n            relation: 'language',\n            value: lang\n          }\n\n          this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n            data => {\n              console.log(data)\n            }, error => {\n              console.log(error);\n\n              if (error.status == 200) {\n                this.statusForm.get('attachingLanguage').patchValue('ok', { emitEvent: false });\n\n\n                //attaching type\n                this.statusForm.get('attachingType').patchValue('pending', { emitEvent: false });\n                let type = this.stepThreeForm.get('type').value;\n                let parameters = {\n                  relation: 'type',\n                  value: type\n                }\n\n                this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n                  data => {\n                    console.log(data)\n                  }, error => {\n                    console.log(error);\n                    if (error.status == 200) {\n\n                      this.statusForm.get('attachingType').patchValue('ok', { emitEvent: false });\n\n                      this.statusForm.get('attachingLabel').patchValue('pending', { emitEvent: false });\n                      //attaching label\n                      let label = this.stepThreeForm.get('label').value;\n                      let parameters = {\n                        relation: 'label',\n                        value: label\n                      };\n\n                      this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n                        data => {\n                          console.log(data)\n                        }, error => {\n                          console.log(error);\n\n                          if (error.status == 200) {\n                            this.statusForm.get('attachingLabel').patchValue('ok', { emitEvent: false });\n\n\n                            //attaching pos\n                            this.statusForm.get('attachingPos').patchValue('pending', { emitEvent: false });\n\n                            let pos = this.stepThreeForm.get('pos').value;\n                            let parameters = {\n                              type: 'morphology',\n                              relation: 'partOfSpeech',\n                              value: pos\n                            }\n\n                            this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n                              data => {\n                                console.log(data)\n                              }, error => {\n                                console.log(error);\n\n                                this.statusForm.get('attachingPos').patchValue('ok', { emitEvent: false });\n\n                                //creating form\n                                this.statusForm.get('creatingForm').patchValue('pending', { emitEvent: false });\n\n\n                                this.lexicalService.createNewForm(lexId).subscribe(\n                                  data=>{\n                                    console.log(data);\n\n                                    let formId = data.formInstanceName;\n\n                                    this.statusForm.get('creatingForm').patchValue('ok', { emitEvent: false });\n\n\n                                    //attaching writtenRep to form\n                                    this.statusForm.get('attachingWrittenForm').patchValue('pending', { emitEvent: false });\n                                    let writtenRep = this.stepFourForm.get('writtenForm').value;\n                                    let parameters = {\n                                      relation: 'writtenRep',\n                                      value: writtenRep\n                                    }\n\n                                    this.lexicalService.updateForm(formId, parameters).subscribe(\n                                      data=>{\n                                        console.log(data)\n                                        this.statusForm.get('attachingWrittenForm').patchValue('ok', { emitEvent: false });\n                                      },error=>{\n                                        console.log(error)\n                                        this.statusForm.get('attachingWrittenForm').patchValue('ok', { emitEvent: false });\n\n                                        //attach type to form\n                                        this.statusForm.get('attachingFormType').patchValue('pending', { emitEvent: false });\n                                        let typeForm = this.stepFourForm.get('type').value;\n\n                                        let parameters = {\n                                          relation: 'type',\n                                          value : typeForm\n                                        }\n\n                                        this.lexicalService.updateForm(formId, parameters).subscribe(\n                                          data=>{\n                                            console.log(data);\n                                            this.statusForm.get('attachingFormType').patchValue('ok', { emitEvent: false });\n                                            this.statusForm.get('finish').patchValue('ok', { emitEvent: false });\n                                          },error=>{\n                                            console.log(error);\n                                            this.statusForm.get('attachingFormType').patchValue('ok', { emitEvent: false });\n\n                                            this.statusForm.get('finish').patchValue('ok', { emitEvent: false });\n\n                                          }\n                                        )\n                                      }\n                                    )\n\n                                  },error=>{\n                                    console.log(error);\n\n                                  }\n                                )\n                              }\n                            )\n                          }\n                        }\n                      )\n\n                    }\n                  }\n                )\n\n              }\n            }\n          )\n\n        }, error => {\n          console.log(error)\n        }\n      )\n    } else if (this.stepTwoForm.touched) { //lexical entry esistente\n\n      let lexId = this.stepTwoForm.get('lexicalEntry').value;\n      //creating form\n      this.statusForm.get('creatingForm').patchValue('pending', { emitEvent: false });\n\n\n      this.lexicalService.createNewForm(lexId).subscribe(\n        data=>{\n          console.log(data);\n\n          let formId = data.formInstanceName;\n\n          this.statusForm.get('creatingForm').patchValue('ok', { emitEvent: false });\n\n\n          //attaching writtenRep to form\n          this.statusForm.get('attachingWrittenForm').patchValue('pending', { emitEvent: false });\n          let writtenRep = this.stepFourForm.get('writtenForm').value;\n          let parameters = {\n            relation: 'writtenRep',\n            value: writtenRep\n          }\n\n          this.lexicalService.updateForm(formId, parameters).subscribe(\n            data=>{\n              console.log(data)\n              this.statusForm.get('attachingWrittenForm').patchValue('ok', { emitEvent: false });\n            },error=>{\n              console.log(error)\n              this.statusForm.get('attachingWrittenForm').patchValue('ok', { emitEvent: false });\n\n              //attach type to form\n              this.statusForm.get('attachingFormType').patchValue('pending', { emitEvent: false });\n              let typeForm = this.stepFourForm.get('type').value;\n\n              let parameters = {\n                relation: 'type',\n                value : typeForm\n              }\n\n              this.lexicalService.updateForm(formId, parameters).subscribe(\n                data=>{\n                  console.log(data);\n                  this.statusForm.get('attachingFormType').patchValue('ok', { emitEvent: false });\n                  this.statusForm.get('finish').patchValue('ok', { emitEvent: false });\n                },error=>{\n                  console.log(error);\n                  this.statusForm.get('attachingFormType').patchValue('ok', { emitEvent: false });\n\n                  this.statusForm.get('finish').patchValue('ok', { emitEvent: false });\n\n                }\n              )\n            }\n          )\n\n        },error=>{\n          console.log(error);\n\n        }\n      )\n      \n    }\n  }\n\n}\n","<div class=\"input-group col-xl-12 searchSelect\">\n    <ng-select #select_form name=\"entity\" [addTag]=\"addNewForm\" [clearable]=\"false\" (focus)=\"true\" bindValue=\"label\"\n        bindLabel=\"label\" placeholder=\"Search form\" appendTo=\".token_modal\" (keyup)=\"triggerSearch($event)\"\n        [items]=\"searchResults\" (change)=\"handleForm(select_form)\" [loading]=\"loader\">\n        <!--  -->\n        <!-- && cog.get('type').value != 'external' -->\n        <!-- \"\n     -->\n        <!-- (focus)=\"deleteData()\" -->\n        <!-- -->\n        <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\">\n            <!--     <div>\n    <span>{{item.label}} </span><span style=\"color: blue;\">@{{item.language}}</span>\n</div> -->\n            <div class=\"card-body p-0\">\n                <h6 class=\"card-title m-0\" [ngOptionHighlight]=\"search\">{{item.label}}</h6>\n                <!-- <p class=\"card-subtitle mb-2 text-muted\">{{item.type}}</p> -->\n                <small *ngFor=\"let sub of item.morphology\">\n                    <span *ngIf=\"sub.trait == 'case' || sub.trait == 'gender' || sub.trait == 'number' || sub.trait == 'partOfSpeech'\">\n                        {{sub.trait}} : {{sub.value}} <br>\n                    </span>\n                </small>\n                <small class=\"card-text\">\n                    <!-- <img height=\"15\" width=\"15\" [src]=\"item.avatar\"/> -->\n                    <!-- LexicalEntry: {{item.lexicalEntryInstanceName}} -->\n\n                </small>\n                <!--  <div *ngIf=\"item.name === 'Pavilnys'\">\n        <a href=\"#\" class=\"card-link\">Card link</a>\n        <a href=\"#\" class=\"card-link\">Another link</a>\n    </div> -->\n            </div>\n\n        </ng-template>\n    </ng-select>\n\n    <div class=\"input-group-append ml-2\">\n        <button (click)=\"clearAll()\" class=\"btn btn-danger\" type=\"button\">Clear</button>\n    </div>\n</div>\n\n<ng-template #addFormModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Wizard</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <form [formGroup]=\"stepOneForm\" *ngIf=\"modalStep == 1\">\n        <div class=\"modal-body\">\n            <!-- {{modalStep}} -->\n            <div class=\"form-group\" >\n                <p>To create a new lexical form it is necessary to have a reference lexical entry. Select one of the two options:</p>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" formControlName=\"existOrNot\" name=\"existOrNot\" type=\"radio\" value=\"new\">\n                    <label class=\"form-check-label\" for=\"existOrNot\">Create new lexical entry</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" formControlName=\"existOrNot\" name=\"existOrNot\" type=\"radio\" value=\"exist\">\n                    <label class=\"form-check-label\" for=\"existOrNot\">Choose one existing lexical entry</label>\n                </div>\n            </div>\n            \n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\"\n                [disabled]=\"modalStep == 1\">Previous</button>\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"nextStep()\" [disabled]=\"stepOneForm.invalid\">Next</button>\n        </div>  \n       \n    </form>\n\n    <form [formGroup]=\"stepTwoForm\"  *ngIf=\"modalStep == 2\">\n        <div class=\"modal-body\">\n            <!-- {{modalStep}} -->\n            <p>Choose a lexical entry:</p>\n            <div class=\"input-group searchSelect\">\n                <ng-select #search_lexicalEntry formControlName=\"lexicalEntry\" name=\"lexicalEntry\" [clearable]=\"false\" (focus)=\"true\" bindValue=\"lexicalEntryInstanceName\"\n                bindLabel=\"label\" placeholder=\"Search form\" appendTo=\"body\" (keyup)=\"triggerSearchLexicalEntries($event)\"\n                [items]=\"lex_searchResuts\" [loading]=\"loader\"> </ng-select>\n                \n                <div class=\"input-group-append ml-2\">\n                    <button (click)=\"clearAll()\" class=\"btn btn-danger\" type=\"button\">Clear</button>\n                </div>\n            </div>\n            \n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\"\n                [disabled]=\"modalStep == 1\">Previous</button>\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"nextStep()\" [disabled]=\"stepTwoForm.invalid\">Next</button>\n        </div>  \n       \n    </form>\n\n    <form [formGroup]=\"stepThreeForm\"  *ngIf=\"modalStep == 3\">\n        <div class=\"modal-body\">\n            <!-- {{modalStep}} -->\n            <p>Enter basic info for lexical entry creation:</p>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"label\">Label</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"label\" name=\"label\" id=\"label\" required>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"label\">Type</label>\n                    <select class=\"custom-select\" formControlName=\"type\" name=\"type\" id=\"type\" required>\n                        <option selected value=\"\">Select type</option>\n                        <option *ngFor=\"let type of lexEntryTypesData\" [value]=\"type.valueId\">{{type.valueLabel}}</option>\n                    </select>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                    <label for=\"label\">Language</label>\n                    <select class=\"custom-select\" formControlName=\"language\" name=\"language\" id=\"language\" required>\n                        <option selected value=\"\">Select language</option>\n                        <option *ngFor=\"let lang of languages\" [value]=\"lang.label\">{{lang.label}}</option>\n                    </select>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"label\">Part of Speech</label>\n                    <select class=\"custom-select\" formControlName=\"pos\" name=\"pos\" id=\"pos\" required>\n                        <option selected value=\"\">Select pos</option>\n                        <option *ngFor=\"let pos of morphologyData\" [value]=\"pos.valueId\">{{pos.valueLabel}}</option>\n                    </select>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"form-row\">\n                \n            </div> -->\n            \n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\"\n                [disabled]=\"modalStep == 1\">Previous</button>\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"nextStep()\" [disabled]=\"stepThreeForm.invalid\">Next</button>\n        </div>  \n       \n    </form>\n\n    <form [formGroup]=\"stepFourForm\"  *ngIf=\"modalStep == 4\">\n        <div class=\"modal-body\">\n            <p>Enter basic info for form creation:</p>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"label\">Written Form</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"writtenForm\" name=\"writtenForm\" id=\"writtenForm\" required>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"label\">Type</label>\n                    <select class=\"custom-select\" formControlName=\"type\" name=\"type\" id=\"type\" required>\n                        <option selected value=\"\">Select type</option>\n                        <option *ngFor=\"let type of typesData\" [value]=\"type.valueId\">{{type.valueLabel}}</option>\n                    </select>\n                    <div class=\"invalid-feedback\">\n                        Please provide a valid state.\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\">Previous</button>\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"nextStep()\" [disabled]=\"stepFourForm.invalid\">Next</button>\n        </div>  \n    </form>\n\n    <div *ngIf=\"modalStep == 5\">\n        <div class=\"modal-body\">\n            <p>Summary:</p>\n\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <p>Lexical form to create</p>\n                </div>\n                <div class=\"col-8\">\n                    <p>{{stepFourForm.get('writtenForm').value}}  -  {{stepFourForm.get('type').value}}</p>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepTwoForm.touched\">\n                <div class=\"col-4\">\n                    <p>Lexical Entry to be attached</p>\n                </div>\n                <div class=\"col-8\">\n                    <p>{{stepTwoForm.get('lexicalEntry').value}}</p>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p>New lexical entry to be attached</p>\n                </div>\n                <div class=\"col-8\">\n                    <p>{{stepThreeForm.get('label').value}}</p>\n               </div>\n            </div>\n\n\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\">Previous</button>\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"nextStep()\">Proceed</button>\n        </div>\n    </div>\n\n\n    <form [formGroup]=\"statusForm\"  *ngIf=\"modalStep == 6\">\n        <div class=\"modal-body\">\n            <p>Summary:</p>\n            \n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('lexicalEntryCreation').value == 'pause'}\">Lexical entry creation</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('lexicalEntryCreation').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('lexicalEntryCreation').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('lexicalEntryCreation').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('lexicalEntryCreation').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingLanguage').value == 'pause'}\">Attaching language</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLanguage').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLanguage').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLanguage').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLanguage').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingType').value == 'pause'}\">Attaching type</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingType').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingType').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingType').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingType').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingLabel').value == 'pause'}\">Attaching label</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLabel').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLabel').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLabel').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingLabel').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"stepThreeForm.touched\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingPos').value == 'pause'}\">Attaching part of speech</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingPos').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingPos').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingPos').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingPos').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('creatingForm').value == 'pause'}\">Creating form</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('creatingForm').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('creatingForm').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('creatingForm').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('creatingForm').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingWrittenForm').value == 'pause'}\">Attaching written form property</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingWrittenForm').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingWrittenForm').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingWrittenForm').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingWrittenForm').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('attachingFormType').value == 'pause'}\">Attaching type property</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingFormType').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingFormType').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingFormType').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('attachingFormType').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <p [ngClass]=\"{'text-muted': statusForm.get('finish').value == 'pause'}\">Finish</p>\n                </div>\n                <div class=\"col-8\">\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('finish').value == 'pause'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-pause-circle fa-2x\" style=\"color: gray;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('finish').value == 'pending'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"spinner-border mr-auto ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('finish').value == 'ok'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-check-circle fa-2x\" style=\"color: green;\"></i></div>\n                    </div>\n                    <div class=\"d-flex align-items-center\" *ngIf=\"statusForm.get('finish').value == 'error'\">\n                        <!-- <strong>Loading...</strong> -->\n                        <div class=\"mr-auto ml-auto\" aria-hidden=\"true\"><i class=\"fas fa-times-circle fa-2x\" style=\"color: red;\"></i></div>\n                    </div>\n               </div>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <!-- <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"previousStep()\">Previous</button> -->\n            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('finish')\" [disabled]=\"statusForm.get('finish').value != 'ok'\">Close</button>\n        </div>\n    </form>\n    \n    \n</ng-template>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { IActionMapping, ITreeOptions, ITreeState, KEYS, TreeModel, TREE_ACTIONS } from '@circlon/angular-tree-component';\nimport { debounceTime } from 'rxjs/operators';\nimport { ConceptService } from 'src/app/services/concept/concept.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { v4 } from 'uuid';\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    /* dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }, */\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      \n      if(node.data.rename_mode){\n        $event.preventDefault();\n      }/* else{\n        TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      } */\n    },\n    expanderClick: (tree, node, $event) => {\n      if(node.data.rename_mode){\n        $event.preventDefault();\n      }else{\n        //console.log(node);\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }\n    /* contextMenu: (tree, node, $event) => {\n      //$event.preventDefault();\n      //alert(`context menu for ${node.data.name}`);\n      TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n    } */\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-concept-tree',\n  templateUrl: './concept-tree.component.html',\n  styleUrls: ['./concept-tree.component.scss']\n})\nexport class ConceptTreeComponent implements OnInit {\n\n  state!: ITreeState;\n  @ViewChild('treeConcept') treeConcept: any;\n  selectedNodeId;\n\n  options: ITreeOptions = {\n    actionMapping,\n    allowDrag: (node) => node.isLeaf,\n    allowDrop: (element, { parent, index }) => {\n      // return true / false based on element, to.parent, to.index. e.g.\n      //console.log(element, parent, index, parent.data.type == 'folder')\n      return parent.data.type == 'directory';\n    },\n    getNodeClone: (node) => ({\n      ...node.data,\n      id: v4(),\n      name: `copy of ${node.data.name}`\n    })\n  };\n  \n\n  searchIconSpinner = false;\n  initialValues\n  conceptFilterForm = new FormGroup({\n    search_text : new FormControl(null),\n    search_mode : new FormControl(null)\n  })\n\n  counter = 0;\n  nodes = [];\n  show = false;\n  offset: number;\n  modalShow: boolean;\n  limit: any;\n\n\n  constructor(private element: ElementRef,\n              private formBuilder: FormBuilder,\n              private lexicalService : LexicalEntriesService,\n              private conceptService : ConceptService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTree();\n    this.conceptFilterForm = this.formBuilder.group({\n      search_text : new FormControl(null),\n      search_mode : new FormControl('starts')\n    })\n    this.onChanges();\n    this.initialValues = this.conceptFilterForm.value\n  }\n\n\n  onChanges() {\n    this.conceptFilterForm.valueChanges.pipe(debounceTime(500)).subscribe(searchParams => {\n      console.log(searchParams)\n      this.searchFilter(searchParams)\n    })\n  }\n\n  onEvent = ($event: any) => {\n    console.log($event);\n\n    if ($event.eventName == 'activate' && $event.node.data.type != 'directory' && this.selectedNodeId != $event.node.data['element-id']) {\n      this.selectedNodeId = $event.node.data['element-id'];\n      /* //@ts-ignore\n      $(\"#epigraphyTabModal\").modal(\"show\");\n      $('.modal-backdrop').appendTo('.epigraphy-tab-body');\n      //@ts-ignore\n      $('#epigraphyTabModal').modal({backdrop: 'static', keyboard: false})  \n      $('body').removeClass(\"modal-open\")\n      $('body').css(\"padding-right\", \"\"); */\n\n    }\n  }\n\n  \n\n  onMoveNode($event) {\n    console.log($event);\n    let node_type = $event.node.type;\n    let target_type = $event.to.parent.type;\n    this.moveNode($event);\n    \n  }\n\n  moveNode(evt){\n    if(evt != undefined){\n      //console.log(evt);\n      let element_id = evt.node['element-id'];\n      let target_id = evt.to.parent['element-id'];\n      let parameters = {\n        \"requestUUID\": \"string\",\n        \"user-id\": 0,\n        \"element-id\": element_id,\n        \"target-id\": target_id\n      }\n            \n      \n      /* this.documentService.moveFolder(parameters).subscribe(\n        data=>{\n          this.toastr.info('Folder '+ evt.node['name'] +' moved', '', {\n            timeOut: 5000,\n          });\n          //console.log(data);\n        },error=>{\n          console.log(error)\n        }\n      ) */\n    }\n  }\n\n  loadTree(){\n    \n\n  }\n\n  onScrollDown(treeModel: TreeModel) {\n\n    this.offset += 500;\n    this.modalShow = true;\n\n    //@ts-ignore\n    $(\"#lazyLoadingModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.tree-view');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let parameters = this.conceptFilterForm.value;\n    parameters['offset'] = this.offset;\n    parameters['limit'] = this.limit;\n\n    this.lexicalService.getLexicalEntriesList(parameters).pipe(debounceTime(200)).subscribe(\n      data => {\n        //@ts-ignore\n        $('#lazyLoadingModal').modal('hide');\n        $('.modal-backdrop').remove();\n        for (var i = 0; i < data['list'].length; i++) {\n          this.nodes.push(data['list'][i]);\n        };\n        //this.counter = this.nodes.length;\n        this.treeConcept.treeModel.update();\n        this.updateTreeView();\n        this.modalShow = false;\n\n        setTimeout(() => {\n          //@ts-ignore\n          $('#lazyLoadingModal').modal('hide');\n          $('.modal-backdrop').remove();\n        }, 300);\n      },\n      error => {\n\n      }\n    )\n  }\n\n  updateTreeView() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.input-tooltip').tooltip({\n          trigger: 'hover'\n      });\n    }, 300);\n    \n    setTimeout(() => {\n      this.treeConcept.sizeChanged();\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip();\n    }, 1000);\n  }\n\n  resetFields(){\n    this.conceptFilterForm.reset(this.initialValues, {emitEvent : false});\n    setTimeout(() => {\n      this.loadTree();\n      this.treeConcept.treeModel.update();\n      this.updateTreeView();\n      \n    }, 500);  \n  }\n\n\n  searchFilter(newPar) {\n    \n    setTimeout(() => {\n      const viewPort_prova = this.element.nativeElement.querySelector('tree-viewport') as HTMLElement;\n      viewPort_prova.scrollTop = 0\n    }, 300);\n\n    let search_text = newPar.search_text != null ? newPar.search_text : '';\n    this.searchIconSpinner = true;\n    let parameters = {\n      \"requestUUID\" : \"string\",\n      \"contains\" : newPar.search_mode == 'contains' ? true : false,\n      \"metadata\" : {},\n      \"search-text\": search_text,\n      \"start-with\" : newPar.search_mode == 'start' ? true : false,\n      \"user-id\": 0,\n      \"exact-date\": newPar.date_mode == 'exact' ? true : false,\n      \"from-date\":  newPar.date_mode == 'from' ? true : false,\n      \"util-date\":  newPar.date_mode == 'until' ? true : false\n    };\n    \n    console.log(parameters)\n    this.searchIconSpinner = false;\n    \n    /* this.documentService.searchFiles(newPar).subscribe(\n      data => {\n        if(data['files'].length > 0){\n          this.show = false;\n        }else {\n          this.show = true;\n        }\n        this.nodes = data['files'];\n        this.counter = data['results'];\n        this.treeText.treeModel.update();\n        this.updateTreeView();\n        this.searchIconSpinner = false;\n        \n      },\n      error => {\n        console.log(error)\n        this.searchIconSpinner = false;\n\n        this.toastr.error('Error on search text', 'Error', {\n          timeOut : 5000\n        })\n      }\n    ) */\n  }\n\n}\n","<form [formGroup]=\"conceptFilterForm\">\n  <div class=\"input-group col-md-12 mt-2 px-1\">\n    <input formControlName=\"search_text\" id=\"filterConcept\" name=\"search_text\" type=\"text\" class=\"form-control\"\n      placeholder=\"Search\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text loading_icon_append border-left-0\" id=\"basic-addon2\">\n        <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n      </span>\n    </div>\n    <div id=\"buttons-container\" class=\"input-group-append\">\n      <!-- <button class=\"btn btn-info btn-block filter-button\" type=\"button\" data-toggle=\"popover\" data-placement=\"bottom\"\n        data-trigger=\"hover\"><i class=\"fa fa-question\"></i></button> -->\n      <button class=\"btn btn-sm btn-secondary btn-block filter-button\" type=\"button\" value=\"Filter\" title=\"Filter\"\n        data-toggle=\"collapse\" data-target=\"#conceptFilterCollapse\" aria-expanded=\"false\"\n        aria-controls=\"conceptFilterCollapse\"><i class=\"fa fa-filter\"></i></button>\n      <button class=\"btn btn-sm btn-danger btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Reset\"\n        (click)=\"resetFields();\" style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n          class=\"fa fa-times\"></i></button>\n      <button class=\"btn btn-sm btn-block counter-button\" type=\"button\"><span\n          class=\"font-weight-bold font-italic text-muted\">{{counter}}</span></button>\n    </div>\n  </div>\n\n  <div class=\"d-flex flex-wrap mt-3\">\n\n    <div class=\"col-md-6 col-sm-6\">\n      <div class=\"form-check\">\n        <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\" id=\"startsRadio\"\n          value=\"starts\">\n        <label class=\"form-check-label\" for=\"startsRadio\">\n          Starts\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-sm-6\">\n      <div class=\"form-check\">\n        <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\" id=\"containsRadio\"\n          value=\"contains\">\n        <label class=\"form-check-label\" for=\"containsRadio\">\n          Contains\n        </label>\n      </div>\n    </div>\n\n  </div>\n\n</form>\n\n<div class=\"d-flex flex-wrap mt-3 col-md-12\">\n  <div class=\"input-group justify-content-end\">\n    <div class=\"input-group-append\">\n      <button class=\"btn btn-light btn-block filter-button\" title=\"Add new child for selected node\"><i\n          class=\"fas fa-plus 2x\"></i></button>\n      <button class=\"btn btn-light btn-block reset-button\" type=\"button\" value=\"Reset\"\n        title=\"Add new sibling for selected node\"\n        style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n          class=\"fas fa-user-plus 2x\"></i></button>\n      <button class=\"btn btn-light btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Delete selected node\"\n        style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n          class=\"fas fa-times-circle 2x\"></i></button>\n\n    </div>\n  </div>\n</div>\n\n\n<div class=\"col-md-12 mt-3 rounded border border-secondary tree-view\" infiniteScroll [infiniteScrollDistance]=\"0.4\"\n  [infiniteScrollThrottle]=\"150\" [infiniteScrollContainer]=\"'.search-results'\" [fromRoot]=\"true\"\n  (scrolled)=\"onScrollDown(treeConcept.treeModel)\">\n  <p *ngIf=\"show\">Nessun risultato</p>\n\n  <tree-root #treeConcept [nodes]=\"nodes\" [(state)]=\"state\" [options]=\"options\" [focused]=\"true\"\n    (activate)=\"onEvent($event)\" (moveNode)=\"onMoveNode($event)\" [focused]=\"true\" (activate)=\"onEvent($event)\"\n    (deactivate)=\"onEvent($event)\" class=\"lexicalConceptTree\">\n\n    <div id=\"lazyLoadingModal\" class=\"modal fade\" role=\"dialog\">\n      <div class=\"modal-dialog\">\n\n        <!-- Modal content-->\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <p class=\"mx-3\" *ngIf=\"show\">Nessun risultato</p>\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\n      <div class=\"node-wrapper\" style=\"justify-content: space-between; padding: 0px 15px;\">\n        <!-- [style.padding-left]=\"node.getNodePadding()\" -->\n        <div>\n          <tree-node-expander [node]=\"node\" *ngIf=\"node.data.hasChildren == true\"></tree-node-expander>\n          <div class=\"node-content-wrapper\" [class.node-content-wrapper-active]=\"node.isActive\"\n            [class.node-content-wrapper-focused]=\"node.isFocused\" (click)=\"node.mouseAction('click', $event)\"\n            (dblclick)=\"node.mouseAction('dblClick', $event)\" [contextMenu]=\"basicMenu\"\n            [contextMenuSubject]=\"node.data\">\n\n            <span\n              *ngIf=\"node.data.count == undefined && labelView && node.data.componentInstanceName == undefined && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined\">{{\n              node.data.label }}</span>\n            <span\n              *ngIf=\"node.data.count == undefined && idView && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined && node.data.etymologyInstanceName == undefined\">{{\n              node.data.lexicalEntryInstanceName }}</span>\n\n            <span\n              *ngIf=\"node.data.count == undefined && labelView && node.data.definition == undefined && node.data.type=='canonicalForm' && node.data.sense == undefined\"><b>{{\n                node.data.label }}</b></span>\n          \n\n           \n            <span class=\"lexical-tooltip\"\n              *ngIf=\"node.data.count == undefined && labelView && node.data.definition != undefined && node.data.label != undefined\"\n              data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{node.data.label.length >\n              10 ? (node.data.label | slice:0:10) +'...' : node.data.label}}</span>\n            <span class=\"lexical-tooltip\"\n              *ngIf=\"node.data.count == undefined && idView && node.data.definition != undefined && node.data.label != undefined\"\n              data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{ node.data.instanceName\n              }}</span>\n\n            <span *ngIf=\"node.data.count != undefined\"><i><span\n                  style=\"color: #6e6e6e\">{{node.data.label}}</span></i>&nbsp;({{ node.data.count\n              }})</span>\n           <!--  <span *ngIf=\"node.data.writtenRep != ''\">{{ node.data.writtenRep }}</span>\n            <sub *ngIf=\"labelView && node.data.sense == undefined\">{{node.data.pos}}</sub>\n            <span *ngIf=\"node.data.language != null && labelView\" class=\"lang\">@{{node.data.language}}</span> -->\n          \n          </div>         \n        </div>\n\n      </div>\n    </ng-template>\n  </tree-root>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentSystemService {\n\n  private baseUrl_document = \"/cash/\"\n  //private baseUrl_document = \"https://lari2.ilc.cnr.it/cash/\"\n\n  private _epigraphyData: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _epigraphyTextData: BehaviorSubject<string> = new BehaviorSubject(null);\n  private _epigraphyLeidenData: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _epigraphyTranslationData: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _metadataData : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _triggerMetadataPanel : BehaviorSubject<boolean> = new BehaviorSubject(null);\n\n  epigraphyData$ = this._epigraphyData.asObservable();\n  epigraphyTextData$ = this._epigraphyTextData.asObservable();\n  epigraphyLeidenData$ = this._epigraphyLeidenData.asObservable();\n  epigraphyTranslationData$ = this._epigraphyTranslationData.asObservable();\n  metadataData$ = this._metadataData.asObservable();\n  triggerMetadataPanel$ = this._triggerMetadataPanel.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  sendToEpigraphyTab(object: object) {\n    this._epigraphyData.next(object)\n  } \n\n  sendTextToEpigraphyTab(string : string){\n    this._epigraphyTextData.next(string);\n  }\n\n  sendTranslationToEpigraphyTab(array : any){\n    this._epigraphyTranslationData.next(array);\n  }\n\n  sendLeidenToEpigraphyTab(string : any){\n    this._epigraphyLeidenData.next(string);\n  }\n\n  sendToMetadataPanel(object : object){\n    this._metadataData.next(object);\n  }\n\n  triggerMetadataPanel(bool: boolean){\n    this._triggerMetadataPanel.next(bool);\n  }\n\n  //GET /api/getDocumentSystem  ---> return document system\n  getDocumentSystem(): Observable<any> {\n    return this.http.get(this.baseUrl_document + \"api/getDocumentSystem?requestUUID=11\")\n  }\n\n  //POST ​/api​/crud​/addFolder --> add folder to document system\n  addFolder(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/addFolder\", parameters)\n  }\n\n  //POST ​/api​/crud​/removeFolder --> remove Folder folder from document system\n  removeFolder(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/removeFolder\", parameters)\n  }\n\n  //POST ​/api​/crud​/moveFolder --> move Folder to another folder\n  moveFolder(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/moveFolder\", parameters)\n  }\n\n  //POST ​/api​/crud​/renameFolder --> rename folder\n  renameFolder(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/renameFolder\", parameters)\n  }\n\n\n  //POST ​/api​/crud​/uploadFile --> upload text\n  uploadFile(parameters, element_id, request_uuid): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/uploadFile?requestUUID=\"+request_uuid+\"&element-id=\"+element_id+\"\", parameters)\n  }\n\n  //POST ​/api​/crud​/removeFile --> upload text\n  removeFile(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/removeFile\", parameters)\n  }\n\n  //POST ​/api​/crud​/renameFile --> upload text\n  renameFile(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/renameFile\", parameters)\n  }\n\n  //POST ​/api​/crud​/moveFileTo --> move file to another folder\n  moveFileTo(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/moveFileTo\", parameters)\n  }\n\n  //POST ​/api​/crud​/copyFileTo --> move file to another folder\n  copyFileTo(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/copyFileTo\", parameters)\n  }\n\n  //POST ​/api​/crud​/downloadFile --> move file to another folder\n  downloadFile(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/downloadFile\", parameters)\n  }\n\n  //POST ​/api​/crud​/updateMetadata --> move file to another folder\n  updateMetadata(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/updateMetadata\", parameters)\n  }\n  \n  //POST ​/api​/crud​/deleteMetadata --> move file to another folder\n  deleteMetadata(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/deleteMetadata\", parameters)\n  }\n\n  //POST ​/api​/crud​/searchFiles --> move file to another folder\n  searchFiles(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/searchFiles\", parameters)\n  }\n\n  //POST ​/api​/crud​/createFile --> create file\n  createFile(parameters): Observable<any> {\n    return this.http.post(this.baseUrl_document + \"api/crud/createFile\", parameters)\n  }\n\n\n  getContent(nodeId) : Observable<any> {\n    return this.http.get(this.baseUrl_document + \"api/v1/getcontent?requestUUID=11&nodeid=\"+nodeId);\n  }\n\n\n  testConvert(parameters) : Observable<any> {\n    return this.http.post('/leiden/', parameters);\n  }\n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from \"@angular/animations\";\n\n@Component({\n  selector: 'app-synsem-tab',\n  templateUrl: './synsem-tab.component.html',\n  styleUrls: ['./synsem-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 17rem)',\n        \n      })),\n      state('out', style({\n        height: 'calc(50vh - 12.5rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\nexport class SynsemTabComponent implements OnInit {\n\n  lock = 0;\n  object: any;\n  exp_trig = '';\n  lexicalEntryData : any;\n  isLexicalEntry = false;\n\n  @ViewChild('expander') expander_body: ElementRef;\n\n  constructor(private lexicalService: LexicalEntriesService, private expand: ExpanderService, private rend : Renderer2) { }\n\n  ngOnInit(): void {\n    this.lexicalService.coreData$.subscribe(\n      object => {\n        if(this.object != object){\n          this.lexicalEntryData = null;\n        }\n        this.object = object\n        \n        if(this.object != null){\n          if(this.object.lexicalEntry != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = true;\n            this.lexicalEntryData = object;\n          }else if(this.object.form != undefined){\n            this.isLexicalEntry = false;\n            this.lexicalEntryData = null;\n            this.object = null;\n          }else if(this.object.sense != undefined){\n            this.isLexicalEntry = false;\n            this.lexicalEntryData = null;\n            this.object = null;\n          }\n        }\n      }\n    );\n    \n    this.expand.expEdit$.subscribe(\n      trigger => {\n        if(trigger){\n          let isEditExpanded = this.expand.isEditTabExpanded();\n          let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n\n          if(!isEpigraphyExpanded){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 17rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 17rem)')\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'in';\n          }\n          \n        }else if(trigger==null){\n          return;\n        }else{\n          this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n          this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n          this.exp_trig = 'out';\n        }\n      }\n    );\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n  }\n\n  changeStatus() {\n    if (this.lock < 2) {\n      this.lock++;\n    } else if (this.lock > 1) {\n      this.lock--;\n    }\n    setTimeout(() => {\n      //@ts-ignore\n      $('.locked-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 10);\n  }\n\n}\n","\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\">\n    <div class=\"card my-2\">\n        <div class=\"card-header\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\">\n                        CREATED BY foo ON 11/12/2020 15:15\n                    </span>\n                </div>\n                <div>\n                    <button class=\"btn btn-link\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" (click)=\"changeStatus()\">\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==0\" style=\"color: red\"></i>\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==1\" style=\"color: yellow\"></i>\n                        <i class=\"fa fa-circle locked-tooltip\" *ngIf=\"lock==2\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" data-html=\"true\" title=\"Locked tooltip\" style=\"color:green;\"></i>\n                    </button>\n                </div>\n            </h5>\n        </div>\n        <div #expander [@slideInOut]=\"exp_trig\" class=\"card-body\">\n            <app-lexical-entry-synsem-form [lexData]=\"lexicalEntryData\" *ngIf=\"isLexicalEntry\"></app-lexical-entry-synsem-form>\n        </div>\n        <div class=\"card-footer text-muted\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <div>\n                    <span>LAST UPDATE ON 15/12/2020 14:30 BY foo</span>\n                </div>\n                <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <a class=\"dropdown-item\" href=\"#\">Add Form</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Sense</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Frame</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Lexical Concept</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { LexicalEntriesService } from '../../../../../services/lexical-entries/lexical-entries.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from \"@angular/animations\";\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-decomposition-tab',\n  templateUrl: './decomposition-tab.component.html',\n  styleUrls: ['./decomposition-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 17rem)',\n        \n      })),\n      state('out', style({\n        height: 'calc(50vh - 12.5rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\nexport class DecompositionTabComponent implements OnInit {\n\n  lock = 0;\n  object: any;\n  exp_trig = '';\n\n  creationDate;\n  lastUpdate;\n\n  isLexicalEntry = false;\n  searchIconSpinner = false;\n\n  decompData : any;\n\n  @ViewChild('expander') expander_body: ElementRef;\n  \n  constructor(private toastr: ToastrService, private lexicalService: LexicalEntriesService, private expand: ExpanderService, private rend: Renderer2) { }\n\n  ngOnInit(): void {\n    this.lexicalService.coreData$.subscribe(\n      object => {\n        this.object = null;\n        if(this.object != object){\n          this.decompData = null;\n        }\n        this.object = object\n        \n        if(this.object != null){\n          if(this.object.lexicalEntry != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = true;\n            this.decompData = object;\n\n            this.creationDate = object['creationDate'];\n            this.lastUpdate = object['lastUpdate']\n          }else if(this.object.form != undefined){\n            this.isLexicalEntry = false;\n            this.decompData = null;\n            this.object = null;\n          }else if(this.object.sense != undefined){\n            this.isLexicalEntry = false;\n            this.decompData = null;\n            this.object = null;\n          }\n        }\n      }\n    );\n\n    this.lexicalService.decompData$.subscribe(\n      object => {\n        this.object = null;\n        if(this.object != object){\n          this.decompData = null;\n        }\n        this.object = object\n        \n        if(this.object != null){\n          if(this.object.lexicalEntry != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = true;\n            this.decompData = object;\n\n            this.creationDate = object['creationDate'];\n            this.lastUpdate = object['lastUpdate']\n          }else if(this.object.form != undefined){\n            this.isLexicalEntry = false;\n            this.decompData = null;\n            this.object = null;\n          }else if(this.object.sense != undefined){\n            this.isLexicalEntry = false;\n            this.decompData = null;\n            this.object = null;\n          }\n        }\n      }\n    );\n\n    /* \n\n    TODO: inserire updater per decomposition e etymology\n    \n    this.lexicalService.updateLexCardReq$.subscribe(\n      data => {\n        console.log(data)\n        if(data != null){\n          this.lastUpdate = data['lastUpdate']\n          if(data['creationDate'] != undefined){\n            this.creationDate = data['creationDate']\n          }\n        }\n      }\n    ) */\n\n    this.expand.expEdit$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            let isEditExpanded = this.expand.isEditTabExpanded();\n            let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n  \n            if(!isEpigraphyExpanded){\n              this.exp_trig = 'in';\n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 17rem)')\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 17rem)')\n            }else{\n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n              this.exp_trig = 'in';\n            }\n            \n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n  }\n\n  /* changeStatus() {\n    if (this.lock < 2) {\n      this.lock++;\n    } else if (this.lock > 1) {\n      this.lock--;\n    }\n\n    if(this.lock==2){\n      setTimeout(() => {\n        //@ts-ignore\n        $('.locked-tooltip').tooltip({\n          trigger: 'hover'\n        });\n      }, 10);\n    }else if(this.lock < 2){\n      setTimeout(() => {\n        //@ts-ignore\n        $('.locked-tooltip').tooltip('disable');\n      }, 10);\n    }\n    \n  } */\n\n  addNewForm(){\n    this.searchIconSpinner = true;\n    /* console.log(this.object) */\n    this.object['request'] = 'form'\n    if(this.isLexicalEntry){\n      let lexicalId = this.object.lexicalEntryInstanceName;\n      this.lexicalService.createNewForm(lexicalId).subscribe(\n        data=>{\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n          console.log(data);\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n        },error=> {\n          console.log(error)\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          this.searchIconSpinner = false;\n        }\n      )\n    }/* else if(this.isForm){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      //console.log(this.object);\n      this.object['request'] = 'form';\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.lexicalService.createNewForm(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          //console.log(error)\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        }\n      )\n    }else if(this.isSense){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['request'] = 'form';\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      //console.log(this.object);\n      this.lexicalService.createNewForm(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          this.searchIconSpinner = false;\n        }\n      )\n    } */\n    \n  }\n\n  addNewSense(){\n    this.searchIconSpinner = true;\n    this.object['request'] = 'sense'\n    if(this.isLexicalEntry){\n      let lexicalId = this.object.lexicalEntryInstanceName;\n      this.lexicalService.createNewSense(lexicalId).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          \n        }\n      )\n    }/* else if(this.isSense){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.object['request'] = 'sense'\n      //console.log(this.object);\n      this.lexicalService.createNewSense(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        }\n      )\n    }else if(this.isForm){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.object['request'] = 'sense'\n      //console.log(this.object);\n      this.lexicalService.createNewSense(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n          //this.lexicalService.refreshLexEntryTree();\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          //this.lexicalService.refreshLexEntryTree();\n        }\n      )\n    } */\n\n  }\n\n  addNewEtymology(){\n    this.searchIconSpinner = true;\n    this.object['request'] = 'etymology'\n    let parentNodeInstanceName = '';\n    if(this.object.lexicalEntryInstanceName != undefined\n      && this.object.senseInstanceName == undefined){\n        console.log(1)\n        parentNodeInstanceName = this.object.lexicalEntryInstanceName;\n    }/* else if(this.object.formInstanceName != undefined){\n      parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      console.log(2)\n    }else if(this.object.senseInstanceName != undefined){\n      parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      console.log(3)\n    } */\n\n    console.log(parentNodeInstanceName)\n    this.lexicalService.createNewEtymology(parentNodeInstanceName).subscribe(\n      data=>{\n        console.log(data)\n        if(data['creator'] == this.object.creator){\n          data['flagAuthor'] = false;\n        }else{\n          data['flagAuthor'] = true;\n        }\n        this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n        this.searchIconSpinner = false;\n        this.toastr.success('Etymology added correctly', '', {\n          timeOut: 5000,\n        });\n      },error=> {\n        this.searchIconSpinner = false;\n      }\n    )\n\n  }\n\n}\n","\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\">\n    <div class=\"card my-2\">\n        <div class=\"card-header\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\" *ngIf=\"object != null\">\n                        CREATED BY {{object.creator}} ON {{creationDate | date :'dd/MM/yyyy hh:mm:ss'}}\n                    </span>\n                </div>\n                <div>\n                    <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                    <!-- <button class=\"btn btn-link\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button> -->\n                    <!-- <button class=\"btn btn-link\" (click)=\"changeStatus()\">\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==0\" style=\"color: red\"></i>\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==1\" style=\"color: yellow\"></i>\n                        <i class=\"fa fa-circle locked-tooltip\" *ngIf=\"lock==2\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" data-html=\"true\" title=\"Locked tooltip\" style=\"color:green;\"></i>\n                    </button> -->\n                </div>\n            </h5>\n        </div>\n        <div #expander [@slideInOut]=\"exp_trig\" class=\"card-body\">\n            \n            <app-lexical-entry-decomp-form [decData]=\"decompData\" *ngIf=\"isLexicalEntry\"></app-lexical-entry-decomp-form>\n            \n        </div>\n        <div class=\"card-footer text-muted\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <div *ngIf=\"object != null\">\n                    <span>LAST UPDATE ON {{lastUpdate | date :'dd/MM/yyyy hh:mm:ss'}} BY {{object.revisor}}</span>\n                </div>\n                <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <button class=\"dropdown-item\" title=\"add new form\" (click)=\"addNewForm()\">Add Form</button>\n                        <button class=\"dropdown-item\" title=\"add new sense\" (click)=\"addNewSense()\">Add Sense</button>\n                        <button class=\"dropdown-item\" title=\"add new etymology\" (click)=\"addNewEtymology()\">Add Etymology</button>\n                        <!-- <button class=\"dropdown-item\" title=\"add new bibliography item\" (click)=\"showBiblioModal()\" disabled>Add Bibliography</button> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"cover-container d-flex w-100 p-3 mx-auto flex-column text-center\">\n\n    <div class=\"starter-template\">\n        <h3>Institute for Computational Linguistics (ILC)</h3>\n        <p class=\"lead\">\"A. Zampolli CNR - Pisa, Italy\"<br> <a href=\"http://www.ilc.cnr.it\" target=\"_blank\">www.ilc.cnr.it</a></p>\n        <img class=\"logo\" src=\"../../../assets/images/LexOIcon.png\" width=\"100\"/>\n        <h5 class=\"title\">epilexo v1.0</h5>\n        \n    </div>\n    <footer class=\"mastfoot\">\n        <div class=\"inner\">\n          <p>Institute for Computational Linguistics \"A. Zampolli\", Pisa <br/> <a href=\"https://www.ilc.cnr.it.com/\">http://ilc.cnr.it</a></p>\n        </div>\n    </footer>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\nimport { KeycloakProfile, KeycloakTokenParsed } from 'keycloak-js';\nimport { from, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class AuthService {\n\n  private baseUrl = environment.keycloak.issuer;\n  private realmId = environment.keycloak.realm;\n  private clientId = environment.keycloak.clientId;\n  \n\n\n  constructor(private keycloakService: KeycloakService, private http: HttpClient) {}\n\n  public getLoggedUser(): KeycloakTokenParsed | undefined {\n    try {\n      const userDetails: KeycloakTokenParsed | undefined = this.keycloakService.getKeycloakInstance()\n        .idTokenParsed;\n      return userDetails;\n    } catch (e) {\n      console.error(\"Exception\", e);\n      return undefined;\n    }\n  }\n\n  public isLoggedIn() : Promise<boolean> {\n    return this.keycloakService.isLoggedIn();\n  }\n\n  public loadUserProfile() : Promise<KeycloakProfile> {\n    return this.keycloakService.loadUserProfile();\n  }\n\n  public login() : void {\n    this.keycloakService.login();\n  }\n\n  public logout() : void {\n  \n    this.keycloakService.logout();\n  }\n\n  public redirectToProfile(): void {\n    this.keycloakService.getKeycloakInstance().accountManagement();\n  }\n\n  public getUsername(): any {\n    if(this.getLoggedUser() != undefined){\n      return this.getLoggedUser()['preferred_username'];\n    }else{\n      window.location.reload();\n      return null;\n    }\n    \n  }\n\n  public getCurrentUserRole(): string[] {\n    return this.keycloakService.getKeycloakInstance().realmAccess.roles;\n  }\n\n  public searchUser(search?): any {\n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/users';\n    if(search != undefined){\n      string += '?search='+search;\n    }\n    return this.http.get(string);\n  }\n\n  public getUserByUsername(username?): any {\n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/users';\n    if(username != undefined){\n      string += '?username='+username;\n    }\n    return this.http.get(string);\n  }\n\n\n  public getUserRoles(userId: string, clientId: string): any {\n    //let string = this.baseUrl + 'admin/realms/' + this.realmId + '/users/' + id + '/role-mappings/realm';\n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/users/'+ userId +'/role-mappings/clients/' + clientId;\n    return this.http.get(string)\n  }\n\n  public getAllClientsRoles(id: string): any {\n    let string = this.baseUrl + 'admin/realms/' + this.realmId  + '/clients/' + id + '/roles/';\n    return this.http.get(string)\n  }\n\n\n  public getClientsInfo(): any {\n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/clients/';\n    return this.http.get(string)\n  }\n\n  public getUserInfo(id): any {\n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/users/' + id;\n    return this.http.get(string);\n  }\n\n  public getUsersByRole(id, role_name){\n    \n    let string = this.baseUrl + 'admin/realms/' + this.realmId + '/clients/' + id + '/roles/' + role_name +'/users';\n    return this.http.get(string);\n  }\n\n  public createUser(parameters) {\n    let string = this.baseUrl +'admin/realms/' + this.realmId + '/users/';\n    return this.http.post(string, parameters)\n  }\n\n  public deleteUser(idUser : string) {\n    let string = this.baseUrl +'admin/realms/' + this.realmId + '/users/' + idUser;\n    return this.http.delete(string)\n  }\n\n  public updateUser(idUser : string, body) {\n    let string = this.baseUrl +'admin/realms/' + this.realmId + '/users/' + idUser;\n    return this.http.put(string, body)\n  }\n\n  public assignRolesToUser(userId, clientId, parameters) {\n    let string = this.baseUrl +'admin/realms/' + this.realmId + '/users/' + userId + '/role-mappings/clients/' + clientId ;\n    return this.http.post(string, parameters)\n  }\n\n  public deleteRolesToUser(userId, clientId, parameters) {\n    let options = { headers: new HttpHeaders().set('Content-Type', 'application/json'), body: parameters };\n    let string = this.baseUrl +'admin/realms/' + this.realmId + '/users/' + userId + '/role-mappings/clients/' + clientId ;\n    return this.http.delete(string, options)\n  }\n}","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  keycloak: {\n    // Url of the Identity Provider\n    issuer: 'https://lari2.ilc.cnr.it/auth/',\n\n    // Realm\n    realm: 'princnr',\n\n    // The SPA's id. \n    // The SPA is registerd with this id at the auth-serverß\n    clientId: 'princlient',\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { IActionMapping, TREE_ACTIONS, KEYS, ITreeState, ITreeOptions, TreeModel } from '@circlon/angular-tree-component';\nimport { debounceTime } from 'rxjs/operators';\nimport { ConceptService } from 'src/app/services/concept/concept.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { v4 } from 'uuid';\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    /* dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }, */\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n\n      if (node.data.rename_mode) {\n        $event.preventDefault();\n      }/* else{\n        TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      } */\n    },\n    expanderClick: (tree, node, $event) => {\n      if (node.data.rename_mode) {\n        $event.preventDefault();\n      } else {\n        //console.log(node);\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }\n    /* contextMenu: (tree, node, $event) => {\n      //$event.preventDefault();\n      //alert(`context menu for ${node.data.name}`);\n      TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n    } */\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-skos-tree',\n  templateUrl: './skos-tree.component.html',\n  styleUrls: ['./skos-tree.component.scss']\n})\nexport class SkosTreeComponent implements OnInit {\n\n  state!: ITreeState;\n  @ViewChild('skosConcept') skosConcept: any;\n  selectedNodeId;\n\n  options: ITreeOptions = {\n    actionMapping,\n    allowDrag: (node) => node.isLeaf,\n    allowDrop: (element, { parent, index }) => {\n      // return true / false based on element, to.parent, to.index. e.g.\n      //console.log(element, parent, index, parent.data.type == 'folder')\n      return parent.data.type == 'directory';\n    },\n    getNodeClone: (node) => ({\n      ...node.data,\n      id: v4(),\n      name: `copy of ${node.data.name}`\n    })\n  };\n\n\n  searchIconSpinner = false;\n  initialValues\n  skosFilterForm = new FormGroup({\n    search_text: new FormControl(null),\n    search_mode: new FormControl(null)\n  })\n\n  counter = 0;\n  nodes = [];\n  show = false;\n  offset: number;\n  modalShow: boolean;\n  limit: any;\n\n  constructor(private element: ElementRef,\n    private formBuilder: FormBuilder,\n    private lexicalService: LexicalEntriesService,\n    private conceptService: ConceptService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTree();\n    this.skosFilterForm = this.formBuilder.group({\n      search_text : new FormControl(null),\n      search_mode : new FormControl('starts')\n    })\n    this.onChanges();\n    this.initialValues = this.skosFilterForm.value\n  }\n\n\n  onChanges() {\n    this.skosFilterForm.valueChanges.pipe(debounceTime(500)).subscribe(searchParams => {\n      console.log(searchParams)\n      this.searchFilter(searchParams)\n    })\n  }\n\n  onEvent = ($event: any) => {\n    console.log($event);\n\n    if ($event.eventName == 'activate' && $event.node.data.type != 'directory' && this.selectedNodeId != $event.node.data['element-id']) {\n      this.selectedNodeId = $event.node.data['element-id'];\n      /* //@ts-ignore\n      $(\"#epigraphyTabModal\").modal(\"show\");\n      $('.modal-backdrop').appendTo('.epigraphy-tab-body');\n      //@ts-ignore\n      $('#epigraphyTabModal').modal({backdrop: 'static', keyboard: false})  \n      $('body').removeClass(\"modal-open\")\n      $('body').css(\"padding-right\", \"\"); */\n\n    }\n  }\n\n  \n\n  onMoveNode($event) {\n    console.log($event);\n    let node_type = $event.node.type;\n    let target_type = $event.to.parent.type;\n    this.moveNode($event);\n    \n  }\n\n  moveNode(evt){\n    if(evt != undefined){\n      //console.log(evt);\n      let element_id = evt.node['element-id'];\n      let target_id = evt.to.parent['element-id'];\n      let parameters = {\n        \"requestUUID\": \"string\",\n        \"user-id\": 0,\n        \"element-id\": element_id,\n        \"target-id\": target_id\n      }\n            \n      \n      /* this.documentService.moveFolder(parameters).subscribe(\n        data=>{\n          this.toastr.info('Folder '+ evt.node['name'] +' moved', '', {\n            timeOut: 5000,\n          });\n          //console.log(data);\n        },error=>{\n          console.log(error)\n        }\n      ) */\n    }\n  }\n\n  loadTree(){\n    \n\n  }\n\n  onScrollDown(treeModel: TreeModel) {\n\n    this.offset += 500;\n    this.modalShow = true;\n\n    //@ts-ignore\n    $(\"#lazyLoadingModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.tree-view');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let parameters = this.skosFilterForm.value;\n    parameters['offset'] = this.offset;\n    parameters['limit'] = this.limit;\n\n    this.lexicalService.getLexicalEntriesList(parameters).pipe(debounceTime(200)).subscribe(\n      data => {\n        //@ts-ignore\n        $('#lazyLoadingModal').modal('hide');\n        $('.modal-backdrop').remove();\n        for (var i = 0; i < data['list'].length; i++) {\n          this.nodes.push(data['list'][i]);\n        };\n        //this.counter = this.nodes.length;\n        this.skosConcept.treeModel.update();\n        this.updateTreeView();\n        this.modalShow = false;\n\n        setTimeout(() => {\n          //@ts-ignore\n          $('#lazyLoadingModal').modal('hide');\n          $('.modal-backdrop').remove();\n        }, 300);\n      },\n      error => {\n\n      }\n    )\n  }\n\n  updateTreeView() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.input-tooltip').tooltip({\n          trigger: 'hover'\n      });\n    }, 300);\n    \n    setTimeout(() => {\n      this.skosConcept.sizeChanged();\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip();\n    }, 1000);\n  }\n\n  resetFields(){\n    this.skosFilterForm.reset(this.initialValues, {emitEvent : false});\n    setTimeout(() => {\n      this.loadTree();\n      this.skosConcept.treeModel.update();\n      this.updateTreeView();\n      \n    }, 500);  \n  }\n\n\n  searchFilter(newPar) {\n    \n    setTimeout(() => {\n      const viewPort_prova = this.element.nativeElement.querySelector('tree-viewport') as HTMLElement;\n      viewPort_prova.scrollTop = 0\n    }, 300);\n\n    let search_text = newPar.search_text != null ? newPar.search_text : '';\n    this.searchIconSpinner = true;\n    let parameters = {\n      \"requestUUID\" : \"string\",\n      \"contains\" : newPar.search_mode == 'contains' ? true : false,\n      \"metadata\" : {},\n      \"search-text\": search_text,\n      \"start-with\" : newPar.search_mode == 'start' ? true : false,\n      \"user-id\": 0,\n      \"exact-date\": newPar.date_mode == 'exact' ? true : false,\n      \"from-date\":  newPar.date_mode == 'from' ? true : false,\n      \"util-date\":  newPar.date_mode == 'until' ? true : false\n    };\n    \n    console.log(parameters)\n    this.searchIconSpinner = false;\n    \n    /* this.documentService.searchFiles(newPar).subscribe(\n      data => {\n        if(data['files'].length > 0){\n          this.show = false;\n        }else {\n          this.show = true;\n        }\n        this.nodes = data['files'];\n        this.counter = data['results'];\n        this.treeText.treeModel.update();\n        this.updateTreeView();\n        this.searchIconSpinner = false;\n        \n      },\n      error => {\n        console.log(error)\n        this.searchIconSpinner = false;\n\n        this.toastr.error('Error on search text', 'Error', {\n          timeOut : 5000\n        })\n      }\n    ) */\n  }\n\n}\n","<form [formGroup]=\"skosFilterForm\">\n    <div class=\"input-group col-md-12 mt-2 px-1\">\n      <input formControlName=\"search_text\" id=\"filterConcept\" name=\"search_text\" type=\"text\" class=\"form-control\"\n        placeholder=\"Search\" />\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text loading_icon_append border-left-0\" id=\"basic-addon2\">\n          <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </span>\n      </div>\n      <div id=\"buttons-container\" class=\"input-group-append\">\n        <!-- <button class=\"btn btn-info btn-block filter-button\" type=\"button\" data-toggle=\"popover\" data-placement=\"bottom\"\n          data-trigger=\"hover\"><i class=\"fa fa-question\"></i></button> -->\n        <button class=\"btn btn-sm btn-secondary btn-block filter-button\" type=\"button\" value=\"Filter\" title=\"Filter\"\n          data-toggle=\"collapse\" data-target=\"#conceptFilterCollapse\" aria-expanded=\"false\"\n          aria-controls=\"conceptFilterCollapse\"><i class=\"fa fa-filter\"></i></button>\n        <button class=\"btn btn-sm btn-danger btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Reset\"\n          (click)=\"resetFields();\" style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n            class=\"fa fa-times\"></i></button>\n        <button class=\"btn btn-sm btn-block counter-button\" type=\"button\"><span\n            class=\"font-weight-bold font-italic text-muted\">{{counter}}</span></button>\n      </div>\n    </div>\n  \n    <div class=\"d-flex flex-wrap mt-3\">\n  \n      <div class=\"col-md-6 col-sm-6\">\n        <div class=\"form-check\">\n          <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\" id=\"startsRadio\"\n            value=\"starts\">\n          <label class=\"form-check-label\" for=\"startsRadio\">\n            Starts\n          </label>\n        </div>\n      </div>\n      <div class=\"col-md-6 col-sm-6\">\n        <div class=\"form-check\">\n          <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\" id=\"containsRadio\"\n            value=\"contains\">\n          <label class=\"form-check-label\" for=\"containsRadio\">\n            Contains\n          </label>\n        </div>\n      </div>\n  \n    </div>\n  \n  </form>\n  \n  <div class=\"d-flex flex-wrap mt-3 col-md-12\">\n    <div class=\"input-group justify-content-end\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-light btn-block filter-button\" title=\"Add new child for selected node\"><i\n            class=\"fas fa-plus 2x\"></i></button>\n        <button class=\"btn btn-light btn-block reset-button\" type=\"button\" value=\"Reset\"\n          title=\"Add new sibling for selected node\"\n          style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n            class=\"fas fa-user-plus 2x\"></i></button>\n        <button class=\"btn btn-light btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Delete selected node\"\n          style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n            class=\"fas fa-times-circle 2x\"></i></button>\n  \n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"col-md-12 mt-3 rounded border border-secondary tree-view\" infiniteScroll [infiniteScrollDistance]=\"0.4\"\n    [infiniteScrollThrottle]=\"150\" [infiniteScrollContainer]=\"'.search-results'\" [fromRoot]=\"true\"\n    (scrolled)=\"onScrollDown(skosConcept.treeModel)\">\n    <p *ngIf=\"show\">Nessun risultato</p>\n  \n    <tree-root #skosConcept [nodes]=\"nodes\" [(state)]=\"state\" [options]=\"options\" [focused]=\"true\"\n      (activate)=\"onEvent($event)\" (moveNode)=\"onMoveNode($event)\" [focused]=\"true\" (activate)=\"onEvent($event)\"\n      (deactivate)=\"onEvent($event)\" class=\"lexicalConceptTree\">\n  \n      <div id=\"lazyLoadingModal\" class=\"modal fade\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n  \n          <!-- Modal content-->\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n        </div>\n      </div>\n      <p class=\"mx-3\" *ngIf=\"show\">Nessun risultato</p>\n      <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\n        <div class=\"node-wrapper\" style=\"justify-content: space-between; padding: 0px 15px;\">\n          <!-- [style.padding-left]=\"node.getNodePadding()\" -->\n          <div>\n            <tree-node-expander [node]=\"node\" *ngIf=\"node.data.hasChildren == true\"></tree-node-expander>\n            <div class=\"node-content-wrapper\" [class.node-content-wrapper-active]=\"node.isActive\"\n              [class.node-content-wrapper-focused]=\"node.isFocused\" (click)=\"node.mouseAction('click', $event)\"\n              (dblclick)=\"node.mouseAction('dblClick', $event)\" [contextMenu]=\"basicMenu\"\n              [contextMenuSubject]=\"node.data\">\n  \n              <span\n                *ngIf=\"node.data.count == undefined && labelView && node.data.componentInstanceName == undefined && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined\">{{\n                node.data.label }}</span>\n              <span\n                *ngIf=\"node.data.count == undefined && idView && node.data.definition == undefined && node.data.type!='canonicalForm' && node.data.sense == undefined && node.data.etymologyInstanceName == undefined\">{{\n                node.data.lexicalEntryInstanceName }}</span>\n  \n              <span\n                *ngIf=\"node.data.count == undefined && labelView && node.data.definition == undefined && node.data.type=='canonicalForm' && node.data.sense == undefined\"><b>{{\n                  node.data.label }}</b></span>\n            \n  \n             \n              <span class=\"lexical-tooltip\"\n                *ngIf=\"node.data.count == undefined && labelView && node.data.definition != undefined && node.data.label != undefined\"\n                data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{node.data.label.length >\n                10 ? (node.data.label | slice:0:10) +'...' : node.data.label}}</span>\n              <span class=\"lexical-tooltip\"\n                *ngIf=\"node.data.count == undefined && idView && node.data.definition != undefined && node.data.label != undefined\"\n                data-toggle=\"tooltip\" data-html=\"true\" [title]=\"node.data.definition\">{{ node.data.instanceName\n                }}</span>\n  \n              <span *ngIf=\"node.data.count != undefined\"><i><span\n                    style=\"color: #6e6e6e\">{{node.data.label}}</span></i>&nbsp;({{ node.data.count\n                }})</span>\n             <!--  <span *ngIf=\"node.data.writtenRep != ''\">{{ node.data.writtenRep }}</span>\n              <sub *ngIf=\"labelView && node.data.sense == undefined\">{{node.data.pos}}</sub>\n              <span *ngIf=\"node.data.language != null && labelView\" class=\"lang\">@{{node.data.language}}</span> -->\n            \n            </div>         \n          </div>\n  \n        </div>\n      </ng-template>\n    </tree-root>\n  </div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, AfterViewInit, ViewChild, OnChanges, SimpleChanges, ElementRef, Input } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { KeycloakService } from 'keycloak-angular';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { ConfirmedValidator } from './validator/password-match';\n\n@Component({\n  selector: 'app-profiles-table',\n  templateUrl: './profiles-table.component.html',\n  styleUrls: ['./profiles-table.component.scss']\n})\nexport class ProfilesTableComponent implements OnInit, OnChanges {\n\n  message = '';\n  users = [];\n  private idClient;\n  private selected_idUser;\n  private modalRef : NgbModalRef;\n  private temporaryId : string;\n  public isPopulated = false;\n  public creationRequest = false;\n  public itsMe = null;\n\n  private initialValue : any;\n  \n\n  selectedRoles = [];\n  filterSelectedRoles = [];\n  roles: any[] = [];\n  //rolesNames = ['ADMIN', 'USER', 'REVIEWER'];\n\n  @ViewChild('user_list') user_list:ElementRef; \n  @ViewChild('button_create') button_create:ElementRef; \n  @Input() isNotTheSameId : boolean;\n\n\n  userDetailForm = new FormGroup({\n    id: new FormControl(null),\n    username: new FormControl(null, Validators.required),\n    email: new FormControl(null, Validators.required),\n    password: new FormControl(null),\n    repeat_password: new FormControl(null),\n    roles: new FormArray([]),\n    enabled: new FormControl(null, Validators.required)\n  })\n\n  private search_subject: Subject<any> = new Subject();\n  roles_array: FormArray;\n\n  constructor(private httpClient: HttpClient, private auth: AuthService, private formBuilder: FormBuilder, private modalService: NgbModal, private keycloakService : KeycloakService) { }\n\n\n  ngOnInit(): void {\n\n    //this.keycloakService.isTokenExpired();\n    //this.keycloakService.updateToken(15);\n    this.userDetailForm = this.formBuilder.group({\n      id : new FormControl(null),\n      username : new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      email : new FormControl(null, [Validators.required, Validators.minLength(3), Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      repeat_password : new FormControl(null, [Validators.required]),\n      roles : [],\n      enabled : new FormControl(false, [Validators.required]),\n    }, {validator : ConfirmedValidator('password', 'repeat_password')});\n\n    this.auth.getClientsInfo().subscribe(\n      data => {\n        if (data != undefined && Array.isArray(data)) {\n          /* this.idClient = data[0].id; */\n          data.forEach(element => {\n            if(element.clientId == 'princlient'){\n              this.idClient = element.id;\n            }\n          })\n        }\n      },\n      error => { console.log(error) }\n    )\n\n    \n    var checkIdTimer = setInterval((val)=>{                 \n      try{\n          if(this.idClient !=undefined){\n\n            this.auth.getAllClientsRoles(this.idClient).subscribe(\n              data => {\n                let array = [];\n                data.forEach((element, i) => {\n                  if (element.name.toUpperCase() == element.name) {\n                    array.push({name: element.name, id: element.id});\n                  };\n                });\n                console.log(array)\n                array.forEach((c, i) => {\n                  this.roles.push({ id: i, name: c.name, role_id: c.id });\n                });\n        \n        \n                this.getUsersByRole(array);\n        \n                // this.selectedRoles = ['ADMIN', 'USER']\n              },\n              error => { console.log(error) }\n            )\n            \n            clearInterval(checkIdTimer)\n          }else{\n            clearInterval(checkIdTimer)\n          }\n          \n      }catch(e){\n          console.log(e)\n      }    \n    }, 500)\n\n    \n    \n    \n\n    /* this.rolesNames.forEach((c, i) => {\n      this.roles.push({ id: i, name: c });\n    }); */\n\n    this.auth.searchUser().subscribe(\n      data => {\n        //this.users = data;\n        if(data!= undefined){\n          Array.from(data).forEach((usr:any) => {\n            if(usr.username != undefined){\n              if(usr.username != 'prinadmin'){\n                this.users.push(usr);\n              }\n            }\n          })\n        }\n      }, error => {\n        console.log(error)\n      }\n    )\n\n\n    this.search_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.searchUsers(data);\n      }\n    )\n\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes)\n  }\n\n  public getUsersByRole(roles_array) {\n    \n    roles_array.forEach(element => {\n      \n      \n      this.auth.getUsersByRole(this.idClient, element.name).subscribe(\n        (data : any[])=>{\n          //console.log(element, data);\n\n          data.forEach(usr => {\n            this.users.filter(obj => {\n              if(obj.id == usr.id){\n                obj[element.name] = true;\n                obj['haveRoles'] = true;\n              }\n            })\n          })\n          \n        }, error => {\n          console.log(error)\n        }\n      )\n    });\n    \n  }\n\n  searchUsers(data?) {\n    // console.log(data)\n    this.auth.searchUser(data).subscribe(\n      data => {\n        //console.log(data);\n        this.users = data;\n\n        let array = [];\n        \n        this.roles.forEach(\n          element => { array.push(element.name)}\n        )\n        this.getUsersByRole(array)\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  triggerSearch(event?) {\n    if (event != undefined) {\n      let value = event.target.value;\n      this.search_subject.next(value);\n    }\n  }\n\n  userDetail(id) {\n    if(id != undefined){\n      this.selected_idUser = id;\n\n      this.button_create.nativeElement.classList.remove('active');\n\n      this.auth.getUserInfo(id).subscribe(\n        responseUserInfo=>{\n          //console.log(responseUserInfo);\n\n          this.auth.getUserRoles(this.selected_idUser, this.idClient).subscribe(\n            responseUserRoles => {\n              //console.log(responseUserRoles)\n\n              if(responseUserRoles != undefined && Array.isArray(responseUserRoles)){\n                let filter = responseUserRoles.filter(element=> element.name.toUpperCase() === element.name);\n\n                const extractRoleName = (obj) => {\n                  return obj.name;\n                }\n\n                let id = responseUserInfo.id;\n                let username = responseUserInfo.username;\n                let roles = filter.map(extractRoleName);\n                let enabled = responseUserInfo.enabled;\n                let email = responseUserInfo.email;\n                console.log(\"RUOLI\", roles);\n                this.populateForm(id, username, email, roles, enabled)\n              }\n            }, errorUserRoles => {\n              console.log(errorUserRoles)\n            }\n          )\n        }, error=>{\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  populateForm(id, username, email, roles, enabled){\n    \n\n    this.userDetailForm = this.formBuilder.group({\n      id : new FormControl(id),\n      username : new FormControl(username, [Validators.required, Validators.minLength(3)]),\n      email : new FormControl(email, [Validators.required, Validators.minLength(3), Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\n      password : new FormControl(null),\n      repeat_password : new FormControl(null),\n      roles : [],\n      enabled : new FormControl(enabled, [Validators.required]),\n    }, {validator : ConfirmedValidator('password', 'repeat_password')});\n\n    \n    \n\n\n    this.selectedRoles = roles;\n    this.creationRequest = false;\n    this.isPopulated = true;\n\n    setTimeout(() => {\n      this.initialValue = this.userDetailForm.value;\n    }, 500);\n\n\n    this.itsMe = this.auth.getLoggedUser().sub == this.selected_idUser;\n\n    \n  }\n\n  markAsTouched(){\n    this.userDetailForm.markAsTouched();\n  }\n\n  updateUser(){\n    if(this.userDetailForm.valid && !(JSON.stringify(this.initialValue) == JSON.stringify(this.userDetailForm.value))){\n      let parameters = {\n        enabled: this.userDetailForm.get('enabled').value,\n        email: this.userDetailForm.get('email').value,\n        username: this.userDetailForm.get('username').value,\n      }\n      console.log(parameters);\n\n      this.auth.updateUser(this.selected_idUser, parameters).subscribe(\n        data=>{\n          console.log(data);\n\n          if(JSON.stringify(this.initialValue.roles) != JSON.stringify(this.userDetailForm.get('roles').value)){\n\n            /* if(this.selectedRoles.length == 0){\n              let object = [];\n              let obj = {};\n              this.roles.forEach(roles=>{\n                obj = {\n                  id : roles.role_id,\n                  name: roles.name\n                }\n                object.push(obj);\n\n                console.log(object)\n                this.auth.deleteRolesToUser(this.selected_idUser, this.idClient, object).subscribe(\n                  data=>{\n                    console.log(data);\n                    this.users.forEach(element => {\n                      if(element.id == this.selected_idUser){\n                        element[obj['name']] = false;\n                        element['haveRoles'] = false;\n                      }\n                    });\n\n                    this.userDetail(this.selected_idUser);\n                  },\n                  error=>{console.log(error)}\n                );\n\n                object = [];\n              })\n\n\n              \n            }else{\n\n              \n\n            } */\n\n\n            let initialRoles = this.initialValue.roles;\n            let updatedRoles = this.userDetailForm.get('roles').value;\n\n            let difference = updatedRoles.filter(x => !initialRoles.includes(x));\n            let removeDiff = initialRoles.filter(x => !updatedRoles.includes(x));\n\n            console.log(difference, removeDiff);\n\n            if(difference.length != 0){\n              difference.forEach(element=>{\n\n                let object = [];\n                let obj = {};\n                this.roles.forEach(roles=>{\n                  if(element == roles.name){\n                    obj = {\n                      id : roles.role_id,\n                      name: roles.name\n                    }\n\n                    object.push(obj);\n                    console.log(object)\n                    this.auth.assignRolesToUser(this.selected_idUser, this.idClient, object).subscribe(\n                      data=>{\n                        console.log(data);\n                        this.users.forEach(element => {\n                          if(element.id == this.selected_idUser){\n                            element[obj['name']] = true;\n                            element['haveRoles'] = true;\n                          }\n                        });\n                        this.userDetail(this.selected_idUser);\n                      },\n                      error=>{console.log(error)}\n                    )\n\n                    object = [];\n                    \n                  }\n                })\n\n                \n\n                \n              });\n            }else if(removeDiff.length != 0){\n              removeDiff.forEach(element => {\n                let object = [];\n                let obj = {};\n                this.roles.forEach(roles=>{\n                  if(element == roles.name){\n                    obj = {\n                      id : roles.role_id,\n                      name: roles.name\n                    }\n                    object.push(obj);\n  \n                    console.log(object)\n                    this.auth.deleteRolesToUser(this.selected_idUser, this.idClient, object).subscribe(\n                      data=>{\n                        console.log(data);\n                        this.users.forEach(element => {\n                          if(element.id == this.selected_idUser){\n                            element[obj['name']] = false;\n                            element['haveRoles'] = false;\n                          }\n                        });\n\n                        this.userDetail(this.selected_idUser);\n                      },\n                      error=>{console.log(error)}\n                    );\n    \n                    object = [];\n                  }\n                  \n                  \n                })\n              });\n              \n            }\n          }\n        },\n        error=>{\n          console.log(error)\n        }\n      )\n    }else{\n      alert(\"No update. There are same info\")\n    }\n\n  }\n\n  \n  registerUser() {\n    console.log(this.userDetailForm)\n    if(this.userDetailForm.valid){\n      let parameters = {\n        /* id: this.temporaryId, */\n        enabled: this.userDetailForm.get('enabled').value,\n        email: this.userDetailForm.get('email').value,\n        username: this.userDetailForm.get('username').value,\n        credentials: [\n          {\n            type: \"password\",\n            value: this.userDetailForm.get('password').value,\n            temporary: false\n          }\n        ]\n      }\n\n      console.log(parameters);\n\n      this.auth.createUser(parameters).subscribe(\n        data=>{\n          console.log(data);\n\n          this.auth.getUserByUsername(this.userDetailForm.get('username').value).subscribe(\n            data=>{\n              console.log(data);\n              if(data != undefined){\n              \n                this.cleanActiveLinks();\n                data.forEach(newUser => {\n\n                  if(this.selectedRoles.length > 0){\n\n    \n                    this.selectedRoles.forEach(element=>{\n\n                      let object = [];\n                      let obj = {};\n                      this.roles.forEach(roles=>{\n                        if(element == roles.name){\n                          obj = {\n                            id : roles.role_id,\n                            name: roles.name\n                          }\n\n                          object.push(obj);\n                        }\n                      })\n\n                      \n\n                      console.log(object)\n                      this.auth.assignRolesToUser(newUser.id, this.idClient, object).subscribe(\n                        data=>{\n                          console.log(data);\n                          this.users.forEach(element => {\n                            if(element.id == newUser.id){\n                              element[obj['name']] = true;\n                              element['haveRoles'] = true;\n                            }\n                          });\n                        },\n                        error=>{console.log(error)}\n                      )\n                    });\n\n                    \n                  }\n                  \n                  \n\n                  this.users.push(newUser);\n\n                  this.userDetail(newUser.id);\n\n\n                  setTimeout(() => {\n                    this.activeNewUserLink(this.userDetailForm.get('username').value)\n                  }, 100);\n                  \n                });\n\n                \n              } \n            },\n            error=>{\n              console.log(error)\n            }\n          )\n        },\n        error=>{\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  resetForm(){\n    this.userDetailForm.reset();\n    this.userDetailForm.markAsUntouched();\n    this.userDetailForm.markAsPristine();\n  }\n\n  deleteUser(){\n    console.log(this.selected_idUser);\n\n    this.auth.deleteUser(this.selected_idUser).subscribe(\n      data=>{\n        console.log(data)\n        let filtered = this.users.filter(\n          element=> element.id != this.selected_idUser\n        )\n\n        this.users = filtered;\n    \n        this.cleanActiveLinks();\n        this.userDetailForm.reset();\n        this.isPopulated = false;\n        this.creationRequest = false;\n    \n        this.modalRef.close();\n      },\n      error=>{console.log(error)}\n    )\n\n    \n  }\n\n\n  /* addRoles(role){\n    this.rolesArray = this.userDetailForm.get('roles') as FormArray;\n    if(role == undefined){\n      this.rolesArray.push(this.createRoles());\n    }else{\n      this.rolesArray.push(this.createRoles(role));\n    }\n  } */\n\n\n  createNewUser(){\n\n    this.cleanActiveLinks();\n    this.selected_idUser = null;\n\n    const makeId = function makeid() {\n          var result           = '';\n          var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n          var charactersLength = characters.length;\n          for ( var i = 0; i < 9; i++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n          }\n\n          result += '-'\n\n          for ( var j = 0; j < 5; j++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n          }\n\n          result += '-'\n\n          for ( var l = 0; l < 5; l++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n          }\n\n          result += '-'\n\n          for ( var m = 0; m < 13; m++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n          }\n          \n          return result;\n    }\n\n    this.temporaryId = makeId();\n    \n\n    this.userDetailForm = this.formBuilder.group({\n      id : new FormControl(this.temporaryId),\n      username : new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      email : new FormControl(null, [Validators.required, Validators.minLength(3), Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      repeat_password : new FormControl(null, [Validators.required]),\n      roles : [],\n      enabled : new FormControl(false, [Validators.required]),\n    }, {validator : ConfirmedValidator('password', 'repeat_password')});\n    this.creationRequest = true;\n    this.isPopulated = true;\n    this.selectedRoles = [];\n\n    this.itsMe = false;\n  }\n\n  cleanActiveLinks(){\n    var links = this.user_list.nativeElement.querySelectorAll('a')\n    links.forEach(element => {\n      if(element.classList.contains('active')){\n        element.classList.remove('active');\n      }\n    });\n  }\n\n  activeNewUserLink(username){\n    var links = this.user_list.nativeElement.querySelectorAll('a')\n    links.forEach(element => {\n//      console.log(element.innerText, username)\n      if(element.innerText == username){\n        element.classList.add('active');\n      }\n      \n    });\n  }\n\n\n  findInvalidControls() {\n    const invalid = [];\n    const controls = this.userDetailForm.controls;\n    for (const name in controls) {\n        if (controls[name].invalid) {\n            invalid.push(name);\n        }\n    }\n\n    \n    return invalid;\n  }\n\n  open(content) {\n\n    this.modalRef = this.modalService.open(content)\n  }\n\n  /* addTagFn(name) {\n    return { name: name, tag: true };\n  } */\n}\n","<div class=\"row h-100\">\n\n  <!-- USER LIST -->\n  <div class=\"col-lg-3 pb-3\">\n    <div class=\"card h-100\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          Users\n        </div>\n        <button #button_create type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"createNewUser()\" data-toggle=\"list\"\n          href=\"#user-detail\" role=\"tab\" aria-controls=\"home\"><i class=\"fas fa-plus-square\"></i> Create</button>\n\n      </div>\n      <div class=\"card-body\">\n\n        <!-- SEARCH BAR -->\n        <div class=\"input-group\">\n          <span class=\"input-group-prepend\">\n            <div class=\"input-group-text bg-transparent border-right-0\"><i class=\"fa fa-search\"></i></div>\n            <!-- <button class=\"btn btn-secondary btn-block filter-button\" type=\"button\" value=\"Filter\" title=\"Filter\"\n              data-toggle=\"collapse\" data-target=\"#filterUserCollapse\" aria-expanded=\"false\"\n              aria-controls=\"filterUserCollapse\"><i class=\"fa fa-filter\"></i></button> -->\n          </span>\n          <input class=\"form-control py-2 border-left-0 border\" type=\"text\" id=\"example-search-input\"\n            (keyup)=\"triggerSearch($event)\">\n        </div>\n\n        <!-- <div class=\"collapse multi-collapse\" id=\"filterUserCollapse\">\n          <div class=\"form-group row mt-3 \">\n            <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Roles:</label>\n            <div class=\"input-group col-lg-9\">\n              <ng-select [multiple]=\"true\" [(ngModel)]=\"filterSelectedRoles\" [ngModelOptions]=\"{standalone: true}\">\n                <ng-option *ngFor=\"let role of roles\" [value]=\"role.name\">{{role.name}}</ng-option>\n              </ng-select>\n            </div>\n          </div>\n        </div> -->\n\n\n        <!-- USER-LIST -->\n        <div class=\"list-group mt-2 user-list\" id=\"list-tab\" role=\"tablist\" #user_list>\n          <a class=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\"\n            id=\"users-list\" data-toggle=\"list\" href=\"#user-detail\" role=\"tab\" aria-controls=\"home\"\n            *ngFor=\"let usr of users\" (click)=\"userDetail(usr.id)\">\n            {{usr.username}}\n            <span class=\"badge badge-primary badge-pill\" *ngIf=\"usr.haveRoles != undefined\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <i class=\"fas fa-crown m-2\" *ngIf=\"usr.ADMIN\"></i>\n                <i class=\"fas fa-user m-2\" *ngIf=\"usr.USER\"></i>\n              </div>\n            </span>\n          </a>\n        </div>\n\n      </div>\n      <div class=\"card-footer text-muted\">\n        2 days ago\n      </div>\n    </div>\n  </div>\n\n  <!-- USER DETAILS -->\n\n\n  <div class=\"col-lg-9 pb-3\" [hidden]=\"!isPopulated\">\n    <div class=\"card h-100\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <div class=\"d-flex align-items-center\">\n          User details\n        </div>\n\n      </div>\n      <div class=\"card-body\">\n\n        <div class=\"tab-content h-100\" id=\"nav-tabContent\">\n          <div class=\"tab-pane fade h-100\" id=\"user-detail\" role=\"tabpanel\" aria-labelledby=\"users-list\">\n\n            <form [formGroup]=\"userDetailForm\" class=\"h-100 d-flex flex-column\">\n              <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"!creationRequest\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">ID:</label>\n                <div class=\"input-group col-lg-9\">\n                  <input id=\"id\" formControlName=\"id\" name=\"id\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                    disabled>\n                  <!-- <div class=\"invalid-feedback\" style=\"display: block;\">\n                        Please, insert at least three characters.\n                    </div> -->\n                </div>\n              </div>\n\n              <!-- {{creationRequest}} -->\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Username:</label>\n                <div class=\"input-group col-lg-9\">\n                  <input id=\"username\" formControlName=\"username\" name=\"username\" type=\"text\" class=\"form-control\"\n                    placeholder=\"\" *ngIf=\"!creationRequest\" disabled>\n                  <input id=\"username\" formControlName=\"username\" name=\"username\" type=\"text\" class=\"form-control\"\n                    placeholder=\"\" *ngIf=\"creationRequest\">\n                  <div class=\"invalid-feedback\" style=\"display: block;\" *ngIf=\"userDetailForm.get('username').invalid\">\n                        Please insert at least 4 characters\n                    </div>\n                </div>\n              </div>\n\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Email:</label>\n                <div class=\"input-group col-lg-9\">\n                  <input id=\"email\" formControlName=\"email\" name=\"email\" type=\"text\" class=\"form-control\" \n                    placeholder=\"\">\n                  <div class=\"invalid-feedback\" style=\"display: block;\" *ngIf=\"userDetailForm.get('email').invalid\">\n                        Please, insert a valid email address.\n                    </div>\n                </div>\n              </div>\n\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Password:</label>\n                <div class=\"input-group col-lg-9\">\n                  <input id=\"password\" formControlName=\"password\" name=\"password\" type=\"password\" class=\"form-control\"\n                    placeholder=\"\">\n                  <div class=\"invalid-feedback\" style=\"display: block;\" *ngIf=\"userDetailForm.get('password').invalid\">\n                        Please, insert at least 8 characters.\n                    </div>\n                </div>\n              </div>\n\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Repeat password:</label>\n                <div class=\"input-group col-lg-9\">\n                  <input id=\"repeat_password\" formControlName=\"repeat_password\" name=\"repeat_password\" type=\"password\"\n                    class=\"form-control\" placeholder=\"\">\n                  <div class=\"invalid-feedback\" style=\"display: block;\"  *ngIf=\"userDetailForm.get('repeat_password').invalid\">\n                        Password not matching.\n                    </div>\n                </div>\n              </div>\n\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Roles:</label>\n                <div class=\"input-group col-lg-9\">\n                  <ng-select [multiple]=\"true\" formControlName=\"roles\" (change)=\"markAsTouched()\" [(ngModel)]=\"selectedRoles\" > <!-- [ngModelOptions]=\"{standalone: true}\" -->\n                    <ng-option *ngFor=\"let role of roles\" [value]=\"role.name\">{{role.name}}</ng-option>\n                    <!-- <ng-option [value]=\"'custom'\">Custom</ng-option> -->\n                  </ng-select>\n                </div>\n              </div>\n\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Enabled:</label>\n                <div class=\"custom-control custom-switch col-lg-9\" style=\"padding-left: 3.25rem !important;\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" formControlName=\"enabled\"\n                    name=\"enabled\">\n                  <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\n                </div>\n              </div>\n              <div class=\"form-group row ml-2 mt-auto mr-2\">\n                <div class=\"col-lg-3\">\n                  <button type=\"button\" class=\"btn btn-danger\" (click)=\"open(deleteModal)\" *ngIf=\"!creationRequest && !itsMe\">Delete User</button>\n                </div>\n                \n                <!-- <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Enabled:</label> -->\n                <!-- <div class=\"custom-control custom-switch col-lg-9\" style=\"padding-left: 3.25rem !important;\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" formControlName=\"enabled\"\n                    name=\"enabled\">\n                  <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\n                </div> -->\n              </div>\n\n              <div>\n                {{userDetailForm.value | json}}\n                <!-- {{initialValues.value}} -->\n                <!-- {{userDetailForm.valid | json}}\n                {{findInvalidControls() | json}} -->\n                \n              </div>\n            </form>\n\n          </div>\n        </div>\n\n      </div>\n      <div class=\"card-footer text-muted d-flex justify-content-end\">\n        <button class=\"btn btn-primary mr-2\" [disabled]=\"userDetailForm.invalid || userDetailForm.pristine\" (click)=\"registerUser()\" *ngIf=\"creationRequest\">\n          <i class=\"fas fa-save\"></i> \n          Register\n        </button>\n        <button class=\"btn btn-primary mr-2\" [disabled]=\"userDetailForm.invalid || userDetailForm.pristine\" (click)=\"updateUser()\" *ngIf=\"!creationRequest\">\n          <i class=\"fas fa-save\"></i> \n          Update\n        </button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetForm()\" [disabled]=\"!creationRequest || !userDetailForm.touched\"><i class=\"fas fa-times\"></i> Cancel</button>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n<ng-template #deleteModal let-modal>\n  <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Wizard</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n  </div>\n\n  <div class=\"modal-body\">\n      Are you sure to delete this user?\n  </div>\n      \n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-dark\" >No</button>\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"deleteUser()\">Yes</button>\n  </div>  \n  \n     \n  \n</ng-template>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnotatorService {\n  //private baseUrl = \"https://lari2.ilc.cnr.it/cash/api/v1/\"\n  private baseUrl = \"/cash/api/v1/\"\n\n\n  constructor(private http: HttpClient) { }\n  \n  private _triggerSearch: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _deleteAnnoRequest: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _getIdText: BehaviorSubject<any> = new BehaviorSubject(null);\n\n  private arrayPanelFormsData = {};\n\n\n  triggerSearch$ = this._triggerSearch.asObservable();\n  deleteAnnoReq$ = this._deleteAnnoRequest.asObservable();\n  getIdText$ = this._getIdText.asObservable();\n\n  triggerSearch(string : string) {\n    this._triggerSearch.next(string)\n  } \n\n  deleteAnnotationRequest(id : number, node_id : number){\n    this._deleteAnnoRequest.next({id, node_id})\n  }\n\n  getIdText(object: any){\n    this._getIdText.next(object);\n  }\n\n  getPanelForm(id_annotation) : object{\n    return this.arrayPanelFormsData[id_annotation];\n  }\n\n  getAllPanelForms() : object {\n    return this.arrayPanelFormsData;\n  }\n\n  closePanelForm(id_annotation) : void {\n    this.arrayPanelFormsData[id_annotation] = undefined;\n  }\n\n  newPanelForm(id_annotation) : void {\n    this.arrayPanelFormsData[id_annotation] = {};\n    this.arrayPanelFormsData[id_annotation].data = undefined;\n    this.arrayPanelFormsData[id_annotation].isOpen = undefined;\n\n  }\n\n  getTokens(id: number) : Observable<any> {\n    return this.http.get(this.baseUrl + 'token?requestUUID=test123&nodeid='+id);\n  }\n\n  getText(id: number) : Observable<any> {\n    return this.http.get(this.baseUrl + 'gettext?requestUUID=test123&nodeid='+id);\n  }\n\n  addAnnotation(parameters : object, id : number) : Observable<any>{\n    return this.http.post(this.baseUrl + 'annotation?requestUUID=test123&nodeid='+id, parameters);\n  }\n\n  getAnnotation(id : number) : Observable<any>{\n    return this.http.get(this.baseUrl + 'annotation?requestUUID=test123&nodeid='+id);\n  }\n\n  deleteAnnotation(id: number) : Observable<any> {\n    return this.http.delete(this.baseUrl + 'annotate?requestUUID=test123&annotationID='+id);\n  }\n\n  updateAnnotation(annotation : object) : Observable<any>{\n    return this.http.put(this.baseUrl + 'annotation?requestUUID=test123', annotation);\n  }\n\n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from \"@angular/animations\";\n\n@Component({\n  selector: 'app-vartrans-tab',\n  templateUrl: './vartrans-tab.component.html',\n  styleUrls: ['./vartrans-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 17rem)',\n        \n      })),\n      state('out', style({\n        height: 'calc(50vh - 12.5rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\nexport class VartransTabComponent implements OnInit {\n\n  lock = 0;\n  object: any;\n  exp_trig = '';\n\n  lexicalEntryData : any;\n  senseData : any;\n\n  isLexicalEntry = false;\n  isSense = false;\n\n  @ViewChild('expander') expander_body: ElementRef;\n\n  constructor(private lexicalService: LexicalEntriesService, private expand: ExpanderService, private rend : Renderer2) { }\n\n  ngOnInit(): void {\n    this.lexicalService.coreData$.subscribe(\n      object => {\n        if(this.object != object){\n          this.lexicalEntryData = null;\n          this.senseData = null;\n        }\n        this.object = object\n        \n        if(this.object != null){\n          if(this.object.lexicalEntry != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = true;\n            this.isSense = false;\n            this.lexicalEntryData = object;\n          }else if(this.object.sense != undefined){\n            this.isLexicalEntry = false;\n            this.isSense = true;\n            this.senseData = object;\n            this.lexicalEntryData = null;\n          }else if(this.object.form != undefined){\n            this.isLexicalEntry = false;\n            this.isSense = false;\n            this.lexicalEntryData = null;\n            this.object = null;\n          }\n        }\n      }\n    );\n    \n    this.expand.expEdit$.subscribe(\n      trigger => {\n        if(trigger){\n          let isEditExpanded = this.expand.isEditTabExpanded();\n          let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n\n          if(!isEpigraphyExpanded){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 17rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 17rem)')\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'in';\n          }\n          \n        }else if(trigger==null){\n          return;\n        }else{\n          this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n          this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n          this.exp_trig = 'out';\n        }\n      }\n    );\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n  }\n\n  changeStatus() {\n    if (this.lock < 2) {\n      this.lock++;\n    } else if (this.lock > 1) {\n      this.lock--;\n    }\n    setTimeout(() => {\n      //@ts-ignore\n      $('.locked-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 10);\n  }\n\n}\n","\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\">\n    <div class=\"card my-2\">\n        <div class=\"card-header\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\">\n                        CREATED BY foo ON 11/12/2020 15:15\n                    </span>\n                </div>\n                <div>\n                    <button class=\"btn btn-link\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" (click)=\"changeStatus()\">\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==0\" style=\"color: red\"></i>\n                        <i class=\"fa fa-circle\" *ngIf=\"lock==1\" style=\"color: yellow\"></i>\n                        <i class=\"fa fa-circle locked-tooltip\" *ngIf=\"lock==2\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" data-html=\"true\" title=\"Locked tooltip\" style=\"color:green;\"></i>\n                    </button>\n                </div>\n            </h5>\n        </div>\n        <div #expander [@slideInOut]=\"exp_trig\" class=\"card-body\">\n            <app-lexical-entry-vartrans-form [lexData]=\"lexicalEntryData\" *ngIf=\"isLexicalEntry\"></app-lexical-entry-vartrans-form>\n            <app-sense-vartrans-form [senseData]=\"senseData\" *ngIf=\"isSense\"></app-sense-vartrans-form>\n        </div>\n        <div class=\"card-footer text-muted\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <div>\n                    <span>LAST UPDATE ON 15/12/2020 14:30 BY foo</span>\n                </div>\n                <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <a class=\"dropdown-item\" href=\"#\">Add Form</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Sense</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Frame</a>\n                        <a class=\"dropdown-item\" href=\"#\">Add Lexical Concept</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { LexicalEntriesService } from '../../../../../services/lexical-entries/lexical-entries.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { ToastrService } from 'ngx-toastr';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from \"@angular/animations\";\nimport { debounceTime } from 'rxjs/operators';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { BibliographyService } from 'src/app/services/bibliography-service/bibliography.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-core-tab',\n  templateUrl: './core-tab.component.html',\n  styleUrls: ['./core-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 17rem)',\n        \n      })),\n      state('out', style({\n        height: 'calc(50vh - 10rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\nexport class CoreTabComponent implements OnInit {\n\n  lock = 0;\n  object: any;\n  exp_trig = '';\n\n  isLexicalEntry = false;\n  isForm = false;\n  isSense = false;\n  isLexicalConcept = false;\n  searchIconSpinner = false;\n  goBack = false;\n\n  bibliography = [];\n  selectedItem;\n\n  selectedLexicalElement;\n\n  lexicalEntryData : any;\n  formData : any;\n  senseData : any;\n  lexicalConceptData : any;\n\n  lastUpdateDate : any;\n  creationDate : any;\n  creator : any;\n  revisor : any;\n\n  start = 0;\n  sortField = 'title';\n  direction = 'asc';\n  memorySort = {field : '', direction : ''}\n  queryTitle = '';\n  queryMode = 'titleCreatorYear';\n\n  private searchSubject : Subject<any> = new Subject();\n\n  @ViewChild('expander') expander_body: ElementRef;\n  @ViewChild('addBibliography', {static: false}) modal: ModalComponent;\n  @ViewChild('table_body') tableBody: ElementRef;\n  @ViewChild('searchBiblio') searchBiblio: ElementRef;\n\n  constructor(private lexicalService: LexicalEntriesService, private biblioService : BibliographyService, private expand: ExpanderService, private rend: Renderer2, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.lexicalService.coreData$.subscribe(\n      object => {\n        if(this.object != object){\n          this.lexicalEntryData = null;\n          this.formData = null;\n          this.senseData = null;\n          \n          \n        }\n        this.object = object\n        /* console.log(this.object) */\n        if(this.object != null){\n          setTimeout(() => {\n            //@ts-ignore\n            $('#coreTabModal').modal('hide');\n            $('.modal-backdrop').remove();\n            var timer = setInterval((val)=>{                 \n              try{\n                  //@ts-ignore\n                  $('#coreTabModal').modal('hide');\n                  if(!$('#coreTabModal').is(':visible')){\n                    clearInterval(timer)\n                  }\n                  \n              }catch(e){\n                  console.log(e)\n              }    \n            }, 10)\n          }, 500);\n          this.creator = this.object.creator;\n          this.revisor = this.object.revisor;\n          \n          if(this.object.lexicalEntry != undefined && this.object.sense == undefined && this.object.form == undefined){\n            this.isLexicalEntry = true;\n            this.isForm = false;\n            this.isSense = false;\n            this.lexicalEntryData = object;\n            this.formData = null;\n            this.lexicalConceptData = null;\n            this.isLexicalConcept = false;\n          }else if(this.object.form != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = false;\n            this.isForm = true;\n            this.isSense = false;\n            this.formData = object;\n            this.lexicalEntryData = null;\n            this.lexicalConceptData = null;\n            this.isLexicalConcept = false;\n          }else if(this.object.sense != undefined){\n            this.isLexicalEntry = false;\n            this.isForm = false;\n            this.isSense = true;\n            this.senseData = object;\n            this.formData = null;\n            this.lexicalEntryData = null;\n            this.lexicalConceptData = null;\n            this.isLexicalConcept = false;\n          }else if(this.object.lexicalConcept != undefined && this.object.sense == undefined){\n            this.isLexicalEntry = false;\n            this.isForm = false;\n            this.isSense = false;\n            this.isLexicalConcept = true;\n            this.senseData = null;\n            this.formData = null;\n            this.lexicalEntryData = null;\n            this.lexicalConceptData = object;\n          }\n\n\n          switch(this.object.status){\n            case 'working' : {\n              this.lock = 0; \n              this.goBack = false;\n              setTimeout(() => {\n                //@ts-ignore\n                $('.locked-tooltip').tooltip('disable');\n              }, 10);\n              break;\n            }\n            case 'completed' : {\n              this.lock = 1; \n              this.goBack = false;\n              setTimeout(() => {\n                //@ts-ignore\n                $('.locked-tooltip').tooltip('disable');\n              }, 10);\n              break;\n            }\n            case 'reviewed' : {\n              this.lock = 2;\n              this.goBack = true;\n              setTimeout(() => {\n                //@ts-ignore\n                $('.locked-tooltip').tooltip('enable');\n                //@ts-ignore\n                $('.locked-tooltip').tooltip({\n                  trigger: 'hover'\n                });\n              }, 50);\n              break;\n            }\n          }\n\n        }\n      }\n    );\n\n    this.expand.expEdit$.subscribe(\n      trigger => {\n        /* console.log(\"trigger core-tab: \", trigger) */\n        setTimeout(() => {\n          if(trigger){\n            let isEditExpanded = this.expand.isEditTabExpanded();\n            let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n  \n            /* console.log(isEditExpanded);\n            console.log(isEpigraphyExpanded) */\n  \n            \n              if(!isEpigraphyExpanded){\n                this.exp_trig = 'in';\n                this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 17rem)')\n                this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 17rem)')\n              }else{\n                this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)');\n                this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n                this.exp_trig = 'in';\n              }\n            \n            \n            \n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    this.lexicalService.updateCoreCardReq$.subscribe(\n      data => {\n        console.log(data)\n        if(data != null){\n          this.lastUpdateDate = data['lastUpdate']\n          if(data['creationDate'] != undefined){\n            this.creationDate = data['creationDate']\n          }\n        }\n      }\n    )\n\n    this.lexicalService.spinnerAction$.subscribe(\n      data => {\n        if(data == 'on'){\n          this.searchIconSpinner = true;\n        }else{\n          this.searchIconSpinner = false;\n        }\n      },\n      error => {\n\n      }\n    )\n\n    this.searchSubject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.queryTitle  = data.query;\n        data.queryMode ? this.queryMode = 'everything' : this.queryMode = 'titleCreatorYear';\n        this.searchBibliography(this.queryTitle, this.queryMode);\n      }\n    )\n\n    //@ts-ignore\n    $(\"#biblioModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.ui-modal');\n    //@ts-ignore\n    $('#biblioModal').modal({backdrop: 'static', keyboard: false})  \n    \n    $('.modal-backdrop').css('height', 'inherit');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data=> {\n        this.memorySort = {field : this.sortField, direction : this.direction}\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        })\n        \n        \n        //@ts-ignore\n        $('#biblioModal').modal('hide');\n        $('.modal-backdrop').remove();\n      },error=>{\n        console.log(error)\n      }\n    )\n  }\n\n  changeStatus() {\n\n    //console.log(this.goBack)\n\n    if(!this.goBack){\n      this.lock++;\n      if (this.lock == 2){\n        this.goBack = true;\n      }\n    }else if(this.goBack){\n      this.lock--;\n      if (this.lock == 0){\n        this.goBack = false;\n      }\n    }\n\n    this.searchIconSpinner = true;\n    let lexicalId = this.object.lexicalEntryInstanceName;\n    //console.log(this.lock)\n    switch(this.lock){\n      case 0 : {\n          let parameters = {\n            relation : \"status\",\n            value : \"working\"\n          }\n          this.lexicalService.updateLexicalEntry(lexicalId, parameters).pipe(debounceTime(500)).subscribe(\n          data => {\n            this.searchIconSpinner = false;\n            data['request'] = 0;\n            this.lexicalService.updateCoreCard(data)\n            this.lexicalService.refreshAfterEdit(data);\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('disable');\n            }, 10);\n          },\n          error => {\n            this.searchIconSpinner = false;\n            const data = this.object;\n            data['request'] = 0;\n            this.lexicalService.refreshAfterEdit(data);\n            this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('disable');\n            }, 10);\n          }\n        )\n      }; break;\n      case 1 : {\n        let parameters = {\n          relation : \"status\",\n          value : \"completed\"\n        }\n        this.lexicalService.updateLexicalEntry(lexicalId, parameters).pipe(debounceTime(500)).subscribe(\n          data => {\n\n            this.searchIconSpinner = false;\n            data['request'] = 0;\n            this.lexicalService.updateCoreCard(data)\n            this.lexicalService.refreshAfterEdit(data);\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('disable');\n            }, 10);\n          },\n          error => {\n            this.searchIconSpinner = false;\n            const data = this.object;\n            data['request'] = 0;\n            this.lexicalService.refreshAfterEdit(data);\n            this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('disable');\n            }, 10);\n          }\n        )\n      }; break;\n      case 2 : {\n        let parameters = {\n          relation : \"status\",\n          value : \"reviewed\"\n        }\n        this.lexicalService.updateLexicalEntry(lexicalId, parameters).pipe(debounceTime(500)).subscribe(\n          data => {\n            this.searchIconSpinner = false;\n            data['request'] = 0;\n            this.lexicalService.updateCoreCard(data)\n            this.lexicalService.refreshAfterEdit(data);\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('enable');\n              //@ts-ignore\n              $('.locked-tooltip').tooltip({\n                trigger: 'hover'\n              });\n            }, 50);\n          },\n          error => {\n            \n            this.searchIconSpinner = false;\n            const data = this.object;\n            data['request'] = 0;\n            this.lexicalService.refreshAfterEdit(data);\n            this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n            setTimeout(() => {\n              //@ts-ignore\n              $('.locked-tooltip').tooltip('enable');\n              //@ts-ignore\n              $('.locked-tooltip').tooltip({\n                trigger: 'hover'\n              });\n            }, 50);\n          }\n        )\n      }; break;\n    }\n    \n  }\n\n  deleteLexicalEntry(){\n    this.searchIconSpinner = true;\n    let lexicalId = this.object.lexicalEntryInstanceName\n    this.lexicalService.deleteLexicalEntry(lexicalId).subscribe(\n      data=>{\n        //console.log(data)\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n        this.lexicalEntryData = null;\n        this.isLexicalEntry = false;\n        this.object = null;\n        this.lexicalService.refreshLangTable();\n        this.lexicalService.refreshFilter({request : true})\n        this.lexicalService.sendToCoreTab(null);\n        this.lexicalService.sendToRightTab(null);\n        this.biblioService.sendDataToBibliographyPanel(null);\n\n        this.expand.expandCollapseEdit(false);\n        this.expand.openCollapseEdit(false)\n        if(this.expand.isEpigraphyOpen){\n          this.expand.expandCollapseEpigraphy();\n        }\n        this.toastr.success(lexicalId + 'deleted correctly', '', {\n          timeOut: 5000,\n        });\n      },error=> {\n        //console.log(error)\n        this.searchIconSpinner = false;\n        //this.lexicalService.deleteRequest(this.object);\n        //this.lexicalService.refreshLangTable();\n        //this.lexicalService.refreshFilter({request : true})\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n  }\n\n  deleteForm(){\n    this.searchIconSpinner = true;\n    let lexicalId = this.object.formInstanceName;    \n    this.lexicalService.deleteForm(lexicalId).subscribe(\n      data=>{\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n        this.isForm = false;\n        this.object = null;\n        this.toastr.success(lexicalId + 'deleted correctly', '', {\n          timeOut: 5000,\n        });\n      },error=> {\n        console.log(error)\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n        if(error.status != 200){\n          this.toastr.error(error.message, 'Error', {timeOut: 5000})\n        }\n      }\n    )\n  }\n\n  deleteSense(){\n    this.searchIconSpinner = true;\n    let lexicalId = this.object.senseInstanceName;\n    \n    this.lexicalService.deleteSense(lexicalId).subscribe(\n      data=>{\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n        this.isSense = false;\n        this.object = null;\n        this.toastr.success(lexicalId + 'deleted correctly', '', {\n          timeOut: 5000,\n        });\n      },error=> {\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n      }\n    )\n  }\n\n  addNewForm(){\n    this.searchIconSpinner = true;\n    /* console.log(this.object) */\n    this.object['request'] = 'form'\n    if(this.isLexicalEntry){\n      let lexicalId = this.object.lexicalEntryInstanceName;\n      this.lexicalService.createNewForm(lexicalId).subscribe(\n        data=>{\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n          console.log(data);\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n        },error=> {\n          console.log(error)\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          this.searchIconSpinner = false;\n        }\n      )\n    }else if(this.isForm){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      //console.log(this.object);\n      this.object['request'] = 'form';\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.lexicalService.createNewForm(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          //console.log(error)\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        }\n      )\n    }else if(this.isSense){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['request'] = 'form';\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      //console.log(this.object);\n      this.lexicalService.createNewForm(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Form added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          this.searchIconSpinner = false;\n        }\n      )\n    }\n    \n  }\n\n  addNewSense(){\n    this.searchIconSpinner = true;\n    this.object['request'] = 'sense'\n    if(this.isLexicalEntry){\n      let lexicalId = this.object.lexicalEntryInstanceName;\n      this.lexicalService.createNewSense(lexicalId).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          \n        }\n      )\n    }else if(this.isSense){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.object['request'] = 'sense'\n      //console.log(this.object);\n      this.lexicalService.createNewSense(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        }\n      )\n    }else if(this.isForm){\n      let parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      this.object['request'] = 'sense'\n      //console.log(this.object);\n      this.lexicalService.createNewSense(parentNodeInstanceName).subscribe(\n        data=>{\n          if(data['creator'] == this.object.creator){\n            data['flagAuthor'] = false;\n          }else{\n            data['flagAuthor'] = true;\n          }\n          this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n          this.searchIconSpinner = false;\n          this.toastr.success('Sense added correctly', '', {\n            timeOut: 5000,\n          });\n          //this.lexicalService.refreshLexEntryTree();\n        },error=> {\n          this.searchIconSpinner = false;\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          //this.lexicalService.refreshLexEntryTree();\n        }\n      )\n    }\n\n  }\n\n  addNewEtymology(){\n    this.searchIconSpinner = true;\n    this.object['request'] = 'etymology'\n    let parentNodeInstanceName = '';\n    if(this.object.lexicalEntryInstanceName != undefined\n      && this.object.senseInstanceName == undefined){\n        console.log(1)\n        parentNodeInstanceName = this.object.lexicalEntryInstanceName;\n    }else if(this.object.formInstanceName != undefined){\n      parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      console.log(2)\n    }else if(this.object.senseInstanceName != undefined){\n      parentNodeInstanceName = this.object.parentNodeInstanceName;\n      this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n      console.log(3)\n    }\n\n    console.log(parentNodeInstanceName)\n    this.lexicalService.createNewEtymology(parentNodeInstanceName).subscribe(\n      data=>{\n        console.log(data)\n        if(data['creator'] == this.object.creator){\n          data['flagAuthor'] = false;\n        }else{\n          data['flagAuthor'] = true;\n        }\n        this.lexicalService.addSubElementRequest({'lex' : this.object, 'data' : data});\n        this.searchIconSpinner = false;\n        this.toastr.success('Etymology added correctly', '', {\n          timeOut: 5000,\n        });\n      },error=> {\n        this.searchIconSpinner = false;\n      }\n    )\n\n  }\n\n  showBiblioModal(){\n    this.modal.show();\n  }\n\n  addBibliographyItem(item?){\n    //@ts-ignore\n    $(\"#biblioModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.ui-modal');\n    //@ts-ignore\n    $('#biblioModal').modal({backdrop: 'static', keyboard: false})  \n    \n    $('.modal-backdrop').css('height', 'inherit');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let instance = '';\n    if(this.object.lexicalEntryInstanceName != undefined\n      && this.object.lexicalEntryInstanceName.senseInstanceName == undefined){\n        instance = this.object.lexicalEntryInstanceName;\n    }else if(this.object.formInstanceName != undefined){\n      instance = this.object.formInstanceName;\n    }else if(this.object.senseInstanceName != undefined){\n      instance = this.object.senseInstanceName;\n    }\n\n    if(item != undefined){\n\n      let id = item.data.key != undefined ? item.data.key : '';\n      let title = item.data.title.replace(\"\\\"\", '') != undefined ? item.data.title : '';\n      let author;\n      \n      item.data.creators.forEach(element => {\n        if(element.creatorType == 'author'){\n          author = element.lastName + ' ' + element.firstName;\n          return true;\n        }else{\n          return false;\n        }\n      });\n      author = author != undefined ? author : ''\n      let date = item.data.date != undefined ? item.data.date : '';\n      let url = item.data.url != undefined ? item.data.url : ''\n      let seeAlsoLink = '';\n\n      let parameters = {\n        id : id,\n        title: title,\n        author: author,\n        date: date,\n        url: url,\n        seeAlsoLink: seeAlsoLink\n      }\n      console.log(instance, parameters)\n      this.lexicalService.addBibliographyData(instance, parameters).subscribe(\n        data=>{\n          console.log(data);\n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModal').modal('hide');\n            $('.modal-backdrop').remove();\n            this.toastr.success('Item added, check bibliography panel', '', {\n              timeOut: 5000,\n            });\n            this.biblioService.triggerPanel(data)\n            setTimeout(() => {\n              this.modal.hide();\n            }, 10);\n          }, 300);\n          this.biblioService.sendDataToBibliographyPanel(data);\n        },error=>{\n          console.log(error)\n          if(typeof(error.error) == 'string' && error.error.length < 1000){\n            this.toastr.error(error.error, '', {\n              timeOut: 5000,\n            });\n          }else{\n            this.toastr.error(error.statusText, '', {\n              timeOut: 5000,\n            });\n          }\n          \n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModal').modal('hide');\n            $('.modal-backdrop').remove();\n\n            setTimeout(() => {\n              this.modal.hide();\n            }, 10);\n          }, 300);\n          \n        }\n      )\n    }\n    \n  }\n\n  checkIfCreatorExist(item?){\n    return item.some(element => element.creatorType === 'author')\n  }\n\n  triggerSearch(evt, query, queryMode) {\n    if(evt.key != 'Control' && evt.key != 'Shift' && evt.key != 'Alt'){\n      this.searchSubject.next({query, queryMode})\n    }\n  }\n\n  searchBibliography(query?:string, queryMode?:any){\n    this.start = 0;\n    this.selectedItem = null;\n    //@ts-ignore\n    $(\"#biblioModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModal').modal({backdrop: 'static', keyboard: false})  \n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    this.tableBody.nativeElement.scrollTop = 0;\n    if(this.queryTitle != ''){\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          //@ts-ignore\n          $('#biblioModal').modal('hide');\n          $('.modal-backdrop').remove();\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }else{\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          //@ts-ignore\n          $('#biblioModal').modal('hide');\n          $('.modal-backdrop').remove();\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  onScrollDown(){\n    //@ts-ignore\n    $(\"#biblioModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModal').modal({backdrop: 'static', keyboard: false})  \n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    this.start += 25;\n    \n    if(this.queryTitle != ''){\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data=>{\n          console.log(data)\n          //@ts-ignore\n          $('#biblioModal').modal('hide');\n          $('.modal-backdrop').remove();\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n        },error=>{\n          console.log(error)\n        }\n      )\n    }else{\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data=> {\n          \n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n                  \n          //@ts-ignore\n          $('#biblioModal').modal('hide');\n          $('.modal-backdrop').remove();\n        },error=>{\n          console.log(error)\n        }\n      );\n    }\n\n    \n  }\n\n  selectItem(evt, i){\n    /* console.log(evt, i); */\n    if(evt.shiftKey){\n\n    }\n    this.bibliography.forEach(element=> {\n      if(element.key == i.key){\n        element.selected = !element.selected;\n        element.selected ? this.selectedItem = element : this.selectedItem = null;\n        return true;\n      }else{\n        element.selected = false;\n        return false;\n      }\n    })\n    \n  }\n\n  sortBibliography(evt?, val?){\n    \n    \n    if(this.memorySort.field == val){\n      if(this.direction == 'asc'){\n        this.direction = 'desc'\n        this.memorySort.direction = 'desc';\n      }else{\n        this.direction = 'asc';\n        this.memorySort.direction = 'asc';\n      }\n    }else{\n      this.sortField = val;\n      this.direction = 'asc';\n      this.memorySort = {field : this.sortField, direction : this.direction};\n    }\n\n    //@ts-ignore\n    $(\"#biblioModal\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModal').modal({backdrop: 'static', keyboard: false})  \n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    this.start = 0;\n    this.tableBody.nativeElement.scrollTop = 0;\n\n    this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n      data=>{\n        console.log(data)\n        this.bibliography = [];\n        //@ts-ignore\n        $('#biblioModal').modal('hide');\n        $('.modal-backdrop').remove();\n        data.forEach(element => {\n          this.bibliography.push(element)\n        });\n      },error=>{\n        console.log(error)\n      }\n    )\n    \n  }\n\n  onCloseModal(){\n    this.selectedItem = null;\n    this.start = 0;\n    this.sortField = 'title';\n    this.direction = 'asc';\n    this.tableBody.nativeElement.scrollTop = 0;\n    this.memorySort = { field: this.sortField, direction: this.direction}\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data=> {\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        }) \n                \n       \n      },error=>{\n        console.log(error)\n      }\n    );\n  }\n}\n","\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\">\n    <div class=\"card my-2\">\n        <div class=\"card-header\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\" *ngIf=\"object != null\">\n                        <span *ngIf=\"isLexicalEntry\">\n                            Lexical Entry\n                        </span>\n                        <span *ngIf=\"isSense\">\n                            Sense\n                        </span>\n                        <span *ngIf=\"isForm\">\n                            Form\n                        </span>\n                        CREATED BY {{creator}} ON {{creationDate | date :'dd/MM/yyyy hh:mm:ss'}}\n                    </span>\n                </div>\n                <div>\n                    <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                    <button class=\"btn btn-link\" *ngIf=\"isLexicalEntry\" (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" *ngIf=\"isForm\" title=\"delete form\" (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" *ngIf=\"isSense\" title=\"delete sense\"\n                        (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" (click)=\"changeStatus()\" *ngIf=\"isLexicalEntry\">\n                        <i class=\"fa fa-circle\" [hidden]=\"lock!=0\" style=\"color: red\"></i>\n                        <i class=\"fa fa-circle\" [hidden]=\"lock!=1\" style=\"color: yellow\"></i>\n                        <i class=\"fa fa-circle locked-tooltip\" [hidden]=\"lock!=2\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" data-html=\"true\" title=\"Locked tooltip\" style=\"color:green;\"></i>\n                    </button>\n                </div>\n            </h5>\n        </div>\n        <div #expander [@slideInOut]=\"exp_trig\" class=\"card-body core-tab-body\">\n            \n            <div id=\"coreTabModal\" class=\"modal fade\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-body\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <app-lexical-entry-core-form [lexData]=\"lexicalEntryData\" *ngIf=\"isLexicalEntry\">\n            </app-lexical-entry-core-form>\n            <app-form-core-form [formData]=\"formData\" *ngIf=\"isForm\"></app-form-core-form>\n            <app-sense-core-form [senseData]=\"senseData\" *ngIf=\"isSense\"></app-sense-core-form>\n            <app-lexical-concept-form [lexicalConceptData]=\"lexicalConceptData\" *ngIf=\"isLexicalConcept\">\n            </app-lexical-concept-form>\n        </div>\n        <div class=\"card-footer text-muted\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <div *ngIf=\"object != null\">\n                    <span class=\"pl-2\">LAST UPDATE ON {{lastUpdateDate | date :'dd/MM/yyyy hh:mm:ss'}}</span>\n                </div>\n                <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <button class=\"dropdown-item\" title=\"add new form\" (click)=\"addNewForm()\">Add Form</button>\n                        <button class=\"dropdown-item\" title=\"add new sense\" (click)=\"addNewSense()\">Add Sense</button>\n                        <button class=\"dropdown-item\" title=\"add new etymology\" (click)=\"addNewEtymology()\">Add Etymology</button>\n                        <button class=\"dropdown-item\" title=\"add new bibliography item\" (click)=\"showBiblioModal()\">Add Bibliography</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-modal #removeElementModal class=\"remove_element_modal\">\n    <ng-container class=\"app-modal-header\"></ng-container>\n    <ng-container class=\"app-modal-body\">\n        <div class=\"card\">\n            <div class=\"card-body\" *ngIf=\"object != null\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"isLexicalEntry\">\n                    <label for=\"inputLabel\" class=\"col-lg-12 col-form-label\"\n                        style=\"font-size: 12px; text-align: center\">Are you sure to delete {{object.label}}?</label>\n                </div>\n                <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"isForm\">\n                    <label for=\"inputLabel\" class=\"col-lg-12 col-form-label\"\n                        style=\"font-size: 12px; text-align: center\">Are you sure to delete\n                        {{object.label[0]['propertyValue']}}?</label>\n                </div>\n                <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"isSense\">\n                    <label for=\"inputLabel\" class=\"col-lg-12 col-form-label\"\n                        style=\"font-size: 12px; text-align: center\">Are you sure to delete\n                        {{object.senseInstanceName}}?</label>\n                </div>\n                <div class=\"form-group row ml-2 mt-3 mr-2 justify-content-md-center\">\n                    <div class=\"input-group col-lg-5 justify-content-md-center\"\n                        style=\"align-items: center; text-align: center;\">\n                        <div class=\"input-group-append ml-2\" *ngIf=\"isLexicalEntry\">\n                            <button class=\"btn btn-success\" type=\"button\"\n                                (click)=\"deleteLexicalEntry(); removeElementModal.hide()\"><i\n                                    class=\"fas fa-check\"></i></button>\n                        </div>\n                        <div class=\"input-group-append ml-2\" *ngIf=\"isForm\">\n                            <button class=\"btn btn-success\" type=\"button\"\n                                (click)=\"deleteForm(); removeElementModal.hide()\"><i class=\"fas fa-check\"></i></button>\n                        </div>\n                        <div class=\"input-group-append ml-2\" *ngIf=\"isSense\">\n                            <button class=\"btn btn-success\" type=\"button\"\n                                (click)=\"deleteSense(); removeElementModal.hide()\"><i class=\"fas fa-check\"></i></button>\n                        </div>\n                        <div class=\"input-group-append ml-2\">\n                            <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeElementModal.hide()\"><i\n                                    class=\"fas fa-times\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</app-modal>\n\n<app-modal #addBibliography class=\"biblio_modal\" [backdrop]=\"false\" [inViewport]=\"true\" (closeModal)=\"onCloseModal()\">\n\n    <ng-container class=\"app-modal-header\">\n        <img src=\"../../../../../../assets/images/zotero_logo.png\">\n        <span class=\"ml-2 biblio-header-title\">Library: PRIN Italia Antica</span>\n    </ng-container>\n\n    <ng-container class=\"app-modal-body\">\n        <!-- SEARCH BAR -->\n        <div class=\"w-25 pt-1 pb-1\">\n            <div class=\"input-group mb-3\" *ngIf=\"{switch : false}; let variable\">\n                <div class=\"input-group-prepend\">\n                    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-search\"></i></button>\n                    <div class=\"dropdown-menu\">\n                        <a [class.disable_click_fire]=\"!variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = false; searchBibliography(searchBiblio.value, variable.switch);\">Normal</a>\n                        <a [class.disable_click_fire]=\"variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = true; searchBibliography(searchBiblio.value, variable.switch);\">Full\n                            Text</a>\n                    </div>\n                </div>\n                <input #searchBiblio (keyup)=\"triggerSearch($event, searchBiblio.value, variable.switch)\" type=\"text\"\n                    class=\"form-control\" aria-label=\"Text input with dropdown button\"\n                    [placeholder]=\"variable.switch ?'Title, creator, year + Full Text' : 'Title, creator, year'\"\n                    style=\"font-size: 12px;\">\n            </div>\n\n        </div>\n        <!-- {{'start: '+start + ' sortField: '+ sortField + ' direction: '+ direction + ' queryTitle: '+ queryTitle + ' queryMode: '+ queryMode}} -->\n\n        <!-- SKELETON CONTAINER -->\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-8 pl-0\">\n\n\n                    <!-- TABLE -->\n                    <div class=\"table-responsive table-body\">\n                        <div id=\"biblioModal\" class=\"modal fade\" role=\"dialog\">\n                            <div class=\"modal-dialog\">\n\n                                <!-- Modal content-->\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-body\">\n                                        <div class=\"d-flex justify-content-center\">\n                                            <div class=\"spinner-border\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                        <table class=\"table table-striped table-hover\" [hidden]=\"bibliography.length == 0\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width: 50%; cursor: pointer;\" (click)=\"sortBibliography($event, 'title')\">\n                                        <span>Title</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'title'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'title'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 30%; cursor: pointer;\" (click)=\"sortBibliography($event, 'creator')\">\n                                        <span>Creator</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'creator'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'creator'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 20%; cursor: pointer;\" (click)=\"sortBibliography($event, 'date')\">\n                                        <span>Date</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'date'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'date'\"></i>\n                                        </span>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody #table_body infiniteScroll [infiniteScrollDistance]=\"0.4\"\n                                [infiniteScrollThrottle]=\"150\" [scrollWindow]=\"false\" (scrolled)=\"onScrollDown()\">\n\n\n                                <tr *ngFor=\"let item of bibliography\" (click)=\"selectItem($event, item)\"\n                                    [ngClass]=\"item?.selected ? 'selected' : ''\" style=\"cursor: pointer;\">\n                                    <td style=\"width: 50%\">\n                                        <span *ngIf=\"item.data.itemType == 'book'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'bookSection'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book-open\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'journalArticle'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-newspaper\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'note'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-clipboard\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'attachment'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-paperclip\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'conferencePaper'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-chalkboard-teacher\"></i>\n                                        </span>\n                                        <span\n                                            *ngIf=\"item.data.title != undefined && item.data.title != ''\">{{item.data.title |titlecase}}</span>\n                                        <span *ngIf=\"item.data.title == undefined || item.data.title == ''\"\n                                            class=\"font-italic\">No title</span>\n                                    </td>\n                                    <td style=\"width: 30%\">\n                                        <span *ngIf=\"item.data.creators != undefined\">\n                                            <span *ngFor=\"let author of item.data.creators; let i = index\">\n                                                <span *ngIf=\"author.creatorType == 'author'\">\n                                                    {{author.lastName | titlecase}} {{author.firstName | titlecase}} \n                                                </span>\n                                            </span>\n                                            <span *ngIf=\"!checkIfCreatorExist(item.data.creators)\"\n                                                class=\"font-italic\">No data</span>\n                                        </span>\n                                        <span *ngIf=\"item.data.creators == undefined\" class=\"font-italic\">No data</span>\n                                    </td>\n                                    <td style=\"width: 20%\">\n                                        <span *ngIf=\"item.data.date != undefined && item.data.date != ''\">\n                                            {{item.data.date | titlecase}}\n                                        </span>\n                                        <span *ngIf=\"item.data.date == undefined || item.data.date == ''\"\n                                            class=\"font-italic\">\n                                            No info\n                                        </span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <p class=\"font-italic text-muted no-results\" *ngIf=\"bibliography.length == 0\">No results</p>\n                    </div>\n\n\n                </div>\n                <div class=\"col-md-4\" style=\"font-size: 14px;\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 item-description\"\n                            style=\"height: calc(100vh - 37rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"selectedItem\">\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.itemType != '' && selectedItem.data.itemType != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Item type\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.itemType | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.title != '' && selectedItem.data.title != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Title\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.title | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0 && checkIfCreatorExist(selectedItem.data.creators)\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Author\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let author of selectedItem.data.creators\">\n                                            <span *ngIf=\"author.creatorType == 'author'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{author.firstName | titlecase}} {{author.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Editor\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let editor of selectedItem.data.creators\">\n                                            <span *ngIf=\"editor.creatorType == 'editor'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{editor.firstName | titlecase}} {{editor.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publicationTitle != '' && selectedItem.data.publicationTitle != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publication\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publicationTitle | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publisher != '' && selectedItem.data.publisher != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publisher\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publisher | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.issue != '' && selectedItem.data.issue != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Issue\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.issue | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.pages != '' && selectedItem.data.pages != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Pages\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.pages | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.place != '' && selectedItem.data.place != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Place\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.place | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.date != '' && selectedItem.data.pages != date\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Date\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.date | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.journalAbbreviation != '' && selectedItem.data.journalAbbreviation != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Journal Abbr\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.journalAbbreviation | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.DOI != '' && selectedItem.data.DOI != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{'https://doi.org/'+selectedItem.data.DOI}}\"\n                                                target=\"_blank\">DOI <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.DOI | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.ISSN != '' && selectedItem.data.ISSN != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            ISSN\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.ISSN | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.url != '' && selectedItem.data.url != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{selectedItem.data.url}}\" target=\"_blank\">URL\n                                                <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.url}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.accessDate != '' && selectedItem.data.accessDate != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Accessed\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.accessDate}}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\" style=\"height: calc(40vh - 10rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote == '' || selectedItem.data.abstractNote == undefined)\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No info\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote != '' && selectedItem.data.abstractNote != undefined)\">\n                                <p class=\"text-muted font-weight-bold\">\n                                    Abstract\n                                </p>\n                                <p class=\"font-weight-normal\">\n                                    {{selectedItem.data.abstractNote}}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12 d-flex justify-content-end\">\n                    <button class=\"btn btn-secondary w-25\" [disabled]=\"!selectedItem\" (click)=\"addBibliographyItem(selectedItem)\">Save</button>\n                    <!-- <button class=\"btn btn-secondary\" (click)=\"addBibliography.hide()\">Close</button> -->\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container class=\"app-modal-footer\">\n    </ng-container>\n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-lexical-entry-vartrans-form',\n  templateUrl: './lexical-entry-vartrans-form.component.html',\n  styleUrls: ['./lexical-entry-vartrans-form.component.scss']\n})\nexport class LexicalEntryVartransFormComponent implements OnInit {\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n  @Input() lexData : any;\n\n  vartransForm = new FormGroup({\n    label: new FormControl(''),\n    translatableAs: new FormArray([this.createTranslatableAs()]),\n    lexicalRelationDirect: new FormArray([this.createLexicalRelationDirect()]),\n    lexicalRelationIndirect: new FormArray([this.createLexicalRelationIndirect()])\n  })\n\n  translatableAs: FormArray;\n  lexicalRelationDirect: FormArray;\n  lexicalRelationIndirect: FormArray;\n  lexicalRelationIndirectSub : FormArray;\n\n  constructor( private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    \n    this.vartransForm = this.formBuilder.group({\n      label: '',\n      translatableAs: this.formBuilder.array([this.createTranslatableAs()]),\n      lexicalRelationDirect: this.formBuilder.array([this.createLexicalRelationDirect()]),\n      lexicalRelationIndirect: this.formBuilder.array([])\n    })\n    this.onChanges();\n    this.loadPeople();\n    this.triggerTooltip();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(()=> {\n      if(this.object != changes.lexData.currentValue){\n        if(this.lexicalRelationIndirect != null){\n          this.lexicalRelationIndirect.clear();\n        }\n      }\n      this.loadPeople();\n      this.object = changes.lexData.currentValue;\n      if(this.object != null){\n        this.vartransForm.get('label').setValue(this.object.label, {emitEvent:false});\n        this.addLexicalRelationIndirect();\n      }\n      this.triggerTooltip();\n  }, 10)\n  }\n\n  triggerTooltip(){\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger : 'hover'\n      });\n    }, 500);\n  }\n\n  private loadPeople() {\n    /* this.peopleLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  onChanges(): void {\n    this.vartransForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      /* //console.log(searchParams) */\n    })\n  }\n\n  createTranslatableAs(): FormGroup {\n    return this.formBuilder.group({\n      entity: ''\n    })\n  }\n\n  addTranslatableAs() {\n    this.translatableAs = this.vartransForm.get('translatableAs') as FormArray;\n    this.translatableAs.push(this.createTranslatableAs());\n    this.triggerTooltip();\n  }\n\n  removeTranslatableAs(index) {\n    this.translatableAs = this.vartransForm.get('translatableAs') as FormArray;\n    this.translatableAs.removeAt(index);\n  }\n\n  addLexicalRelationDirect() {\n    this.lexicalRelationDirect = this.vartransForm.get('lexicalRelationDirect') as FormArray;\n    this.lexicalRelationDirect.push(this.createLexicalRelationDirect());\n    this.triggerTooltip();\n  }\n\n  removeLexicalRelationDirect(index) {\n    this.lexicalRelationDirect = this.vartransForm.get('lexicalRelationDirect') as FormArray;\n    this.lexicalRelationDirect.removeAt(index);\n  }\n\n  addLexicalRelationIndirect() {\n    this.lexicalRelationIndirect = this.vartransForm.get('lexicalRelationIndirect') as FormArray;\n    this.lexicalRelationIndirect.push(this.createLexicalRelationIndirect());\n    this.triggerTooltip();\n  }\n\n  removeLexicalRelationIndirect(index) {\n    this.lexicalRelationIndirect = this.vartransForm.get('lexicalRelationIndirect') as FormArray;\n    this.lexicalRelationIndirect.removeAt(index);\n  }\n\n  addLexicalRelationIndirectSub(index) {\n    const control = (<FormArray>this.vartransForm.controls['lexicalRelationIndirect']).at(index).get('sub_rel') as FormArray;\n    control.insert(index, this.createSubLexicalRelationIndirect())\n    this.triggerTooltip();\n  }\n\n  removeLexicalRelationIndirectSub(index, iy) {\n    const control = (<FormArray>this.vartransForm.controls['lexicalRelationIndirect']).at(index).get('sub_rel') as FormArray;\n    control.removeAt(iy);\n  }\n\n  createLexicalRelationDirect(): FormGroup {\n    return this.formBuilder.group({\n      relation: '',\n      entity: ''\n    })\n  }\n\n  createLexicalRelationIndirect(): FormGroup {\n    return this.formBuilder.group({\n      a_entity: '',\n      relation: '',\n      b_entity: '',\n      sub_rel: new FormArray([])\n    })\n  }\n\n  createSubLexicalRelationIndirect(): FormGroup {\n    return this.formBuilder.group({\n      sub_relation: 'eee',\n      sub_entity: ''\n    })\n  }\n}\n","\n\n<form [formGroup]=\"vartransForm\" *ngIf=\"object!=null\">\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-5\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n        </div>\n    </div>\n    \n    <!-- TRANSLATABLE AS -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>TRANSLATABLE AS</b></span>\n                <a class=\"pointer\" (click)=\"addTranslatableAs()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div class=\"form-group row ml-2 mt-3 mr-2\" formArrayName=\"translatableAs\" *ngFor=\"let trans of vartransForm.get('translatableAs')['controls']; let i = index\">\n                        <div class=\"input-group col-xl-9\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                            <ng-select formControlName=\"entity\" name=\"entity\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                            </ng-select>\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                            <div class=\"input-group-append ml-3 form-check\">\n                                <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\" (click)=\"modalRoot.show()\"></i></button>\n                                        <app-modal #modalRoot class=\"modal-demo\" [maximizable]=\"true\" [backdrop]=\"false\">\n                                            <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                            <ng-container class=\"app-modal-body\">\n                                                <h3>MODAL DIALOG</h3>\n                                                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                    Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s.</p>\n                                            </ng-container>\n                                            <ng-container class=\"app-modal-footer\">\n                                                <button type=\"button\" class=\"button button3\" (click)=\"modalRoot.hide()\">Delete</button>\n                                                <button type=\"button\" class=\"button button1\" (click)=\"modalRoot.hide()\">Save</button>\n                                                <button type=\"button\" class=\"button button2\" style=\"float: right;\"\n                                                    (click)=\"modalRoot.hide()\">Close\n                                                </button>\n                                            </ng-container>\n                                        </app-modal>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeTranslatableAs(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- LEXICAL RELATION DIRECT -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>LEXICAL RELATION</b><span class=\"badge badge-primary ml-2\">DIRECT</span></span>\n                <a (click)=\"addLexicalRelationDirect()\" class=\"pointer\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div class=\"form-group row ml-2 mt-3 mr-2\" formArrayName=\"lexicalRelationDirect\" *ngFor=\"let direct of vartransForm.get('lexicalRelationDirect')['controls']; let i = index\">\n                        <div class=\"col-xl-5\" [formGroupName]=\"i\">\n                            <select class=\"form-control\" formControlName=\"relation\" name=\"relation\">\n                                <option>Relations...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"input-group col-xl-7\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                            <ng-select formControlName=\"entity\" name=\"entity\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                            </ng-select>\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                            <div class=\"input-group-append ml-3 form-check\">\n                                <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\" (click)=\"modalRoot.show()\"></i></button>\n                                <app-modal #modalRoot class=\"modal-demo\" [maximizable]=\"true\" [backdrop]=\"false\">\n                                    <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                    <ng-container class=\"app-modal-body\">\n                                        <h3>MODAL DIALOG</h3>\n                                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                            Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s.</p>\n                                    </ng-container>\n                                    <ng-container class=\"app-modal-footer\">\n                                        <button type=\"button\" class=\"button button3\" (click)=\"modalRoot.hide()\">Delete</button>\n                                        <button type=\"button\" class=\"button button1\" (click)=\"modalRoot.hide()\">Save</button>\n                                        <button type=\"button\" class=\"button button2\" style=\"float: right;\"\n                                            (click)=\"modalRoot.hide()\">Close\n                                        </button>\n                                    </ng-container>\n                                </app-modal>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeLexicalRelationDirect(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- LEXICAL RELATION INDIRECT -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>LEXICAL RELATION</b><span class=\"badge badge-primary ml-2\">INDIRECT</span></span>\n                <a class=\"pointer\" (click)=\"addLexicalRelationIndirect()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div formArrayName=\"lexicalRelationIndirect\">\n                        <div *ngFor=\"let indirect of vartransForm['controls'].lexicalRelationIndirect['controls']; let i = index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <div class=\"col-xl-3\">\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"a_entity\" name=\"a_entity\">\n                                    </div>\n                                    <div class=\"col-xl-3\">\n                                        <select class=\"form-control\" formControlName=\"relation\" name=\"relation\">\n                                            <option>Relation</option>\n                                            <option>...</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"input-group col-xl-6\" *ngIf=\"{switch : false}; let variable\">\n                                        <ng-select formControlName=\"b_entity\" name=\"b_entity\" [items]=\"people\" class=\"resizeNgSelect\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                            [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                        </ng-select>\n                                        <input formControlName=\"b_entity\" name=\"b_entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                        <div class=\"input-group-append ml-3 form-check\">\n                                            <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button class=\"btn btn-primary\" type=\"button\"><i\n                                                    class=\"fa fa-external-link-alt\"></i></button>\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"removeLexicalRelationIndirect(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"addLexicalRelationIndirectSub(i)\" class=\"btn btn-outline-primary\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div formArrayName=\"sub_rel\">\n                                    <div *ngFor=\"let sub of indirect['controls'].sub_rel['controls']; let j = index\">\n                                        <div [formGroupName]=\"j\">\n                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                <div class=\"col-xl-3\" ></div>\n                                                <div class=\"col-xl-3\">\n                                                    <select class=\"form-control\" formControlName=\"sub_relation\" name=\"sub_relation\">\n                                                        <option>{{sub.value['sub_relation']}}</option>\n                                                        <option>...</option>\n                                                    </select>\n                                                </div>\n                                                <div class=\"input-group col-xl-6\" *ngIf=\"{switch : false}; let variable\">\n                                                    <ng-select formControlName=\"sub_entity\" name=\"sub_entity\" [items]=\"people\" class=\"resizeNgSelect\" bindLabel=\"name\" bindValue=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                                    </ng-select>\n                                                    <input formControlName=\"sub_entity\" name=\"sub_entity\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                                    <div class=\"input-group-append ml-3 form-check\">\n                                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                                class=\"fa fa-external-link-alt\"></i></button>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button (click)=\"removeLexicalRelationIndirectSub(i, j)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button  class=\"btn btn-outline-primary invisible\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>           \n                </div>\n            </div>\n        </div>\n    </div>\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-language-manager',\n  templateUrl: './language-manager.component.html',\n  styleUrls: ['./language-manager.component.scss']\n})\nexport class LanguageManagerComponent implements OnInit {\n\n  languageList = [];\n  editLangArray = [];\n  isValid = false;\n  loadingService = false;\n  removeMessage;\n\n  private subject: Subject<any> = new Subject();\n  /* public urlRegex = /(^|\\s)((https?:\\/\\/.+))/ */\n\n  editLangForm = new FormGroup({\n    description: new FormControl(''),\n    lexvo : new FormControl('', [Validators.required, Validators.minLength(3)]),\n    label: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(3)])\n  })\n  constructor(private lexicalService: LexicalEntriesService, private toastr: ToastrService) { }\n\n\n  ngOnInit(): void {\n\n    /* this.loadLangData(); */\n\n    /*  this.onChanges(); */\n    this.lexicalService.refreshLangTable$.subscribe(\n      data => {\n        /* //console.log(\"refresh\"); */\n        this.loadLangData();\n      }, error => {\n        //console.log(\"no refresh\")\n      }\n    )\n\n    this.subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onEditLanguage(data)\n      }\n    )\n  }\n\n\n  loadLangData() {\n    this.lexicalService.getLexiconLanguages().subscribe(\n      data => {\n        /* //console.log(data) */\n        this.languageList = data;\n      }, error => {\n        //console.log(error)\n      }\n    )\n  }\n\n  onSubmit(inputValue: string) {\n    //console.log(inputValue.match(/^[A-Za-z]{2,3}$/))\n    if (inputValue.match(/^[A-Za-z]{2,3}$/)) {\n      this.isValid = true;\n      this.loadingService = true;\n      \n      this.lexicalService.createNewLanguage(inputValue).subscribe(\n        data => {\n          console.log(data)\n          this.loadingService = false;\n          this.lexicalService.refreshFilter({request: true});\n          this.lexicalService.updateLangSelect({request: true});\n          this.lexicalService.refreshLangTable();\n          this.toastr.info('Language '+ data['label'] + ' created', '', {\n            timeOut: 5000,\n          });\n\n        }, error => {\n          console.log(error)\n          this.loadingService = false;\n          this.lexicalService.refreshLangTable();\n          this.lexicalService.refreshFilter({request: true});\n          this.lexicalService.updateLangSelect({request: true});\n        }\n      )\n    } else {\n      this.isValid = false;\n    }\n  }\n\n  triggerEdit(i, v) {\n    this.subject.next({ i, v })\n  }\n\n  onEditLanguage(data) {\n    \n    if(data['v'].trim() != ''){\n      if (data['i'] == \"description\") {\n        let langId = this.editLangArray['languageInstanceName'];\n        let parameters = {\n          relation: 'description',\n          value: data['v']\n        }\n  \n        this.lexicalService.updateLanguage(langId, parameters).subscribe(\n          data => {\n            console.log(data)\n            this.lexicalService.refreshLangTable();\n            this.lexicalService.refreshFilter({request : true})\n          }, error => {\n            console.log(error)\n            this.lexicalService.refreshLangTable();\n            this.lexicalService.refreshFilter({request : true})\n            if(error.statusText == 'OK'){\n              this.toastr.info('Description for '+langId+' updated', '', {\n                timeOut: 5000,\n              });\n            }else{\n              this.toastr.error(error.error, 'Error', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      } else if (data['i'] == \"lexvo\") {\n        //console.log(data)\n        let langId = this.editLangArray['languageInstanceName'];\n        let parameters = {\n          relation: 'lexvo',\n          value: data['v']\n        }\n  \n        this.lexicalService.updateLanguage(langId, parameters).subscribe(\n          data => {\n            console.log(data)\n            this.lexicalService.refreshLangTable();\n            this.lexicalService.refreshFilter({request : true})\n          }, error => {\n            console.log(error)\n            this.lexicalService.refreshLangTable();\n            this.lexicalService.refreshFilter({request : true})\n            if(error.statusText == 'OK'){\n              this.toastr.info('Description for '+langId+' updated', '', {\n                timeOut: 5000,\n              });\n            }else{\n              this.toastr.error(error.error, 'Error', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      }else if (data['i'] == \"label\") {\n        if(this.editLangForm.get('label').valid){\n          let langId = this.editLangArray['languageInstanceName'];\n          let parameters = {\n            relation: 'language',\n            value: data['v']\n          }\n    \n          this.lexicalService.updateLanguage(langId, parameters).subscribe(\n            data => {\n              console.log(data)\n              this.lexicalService.refreshLangTable();\n            }, error => {\n              console.log(error)\n              this.lexicalService.refreshLangTable();\n              if(error.statusText == 'OK'){\n                this.toastr.info('Description for '+langId+' updated', '', {\n                  timeOut: 5000,\n                });\n              }else{\n                this.toastr.error(error.error, 'Error', {\n                  timeOut: 5000,\n                });\n              }\n            }\n          )\n        }else{\n          this.toastr.error('Not valid string for label field', 'Error', {\n            timeOut: 5000,\n          });\n        }\n        \n      }\n    }else{\n      this.toastr.error(\"Don't insert empty value\", 'Error', {\n        timeOut: 5000,\n      });\n    }\n    \n  }\n\n  editLang(index) {\n    this.editLangArray = this.languageList[index]\n    this.editLangForm.get('description').setValue(this.editLangArray['description'], { eventEmit: false })\n    this.editLangForm.get('lexvo').setValue(this.editLangArray['lexvo'], { eventEmit: false })\n    this.editLangForm.get('label').setValue(this.editLangArray['label'], { eventEmit: false })\n    //console.log(this.editLangArray)\n  }\n\n  checkEditValid(index) {\n    return this.editLangForm.get(index).valid;\n  }\n\n  removeLang(index) {\n    this.removeMessage = this.languageList[index]['languageInstanceName']\n  }\n\n  deleteLangRequest(){\n    let langId = this.removeMessage;\n    this.lexicalService.deleteLanguage(langId).subscribe(\n      data=>{\n        console.log(data);\n        this.lexicalService.refreshLangTable();\n        this.lexicalService.refreshFilter({request : true})\n        this.toastr.info('Language ' +langId+' removed', '', {\n          timeOut: 5000,\n        });\n      },error=>{\n        console.log(error);\n        this.lexicalService.refreshLangTable();\n        this.lexicalService.refreshFilter({request : true})\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n  }\n\n\n}\n","\n\n<div class=\"card\">\n    <span class=\"text-id\"><b>LANGUAGE LIST</b></span>\n    <a class=\"pointer\" (click)=\"addLanguageModal.show()\"><span class=\"collapse-icon\"><i\n                class=\"fa fa-plus-square\"></i></span></a>\n    <div class=\"card-body\">\n        <div class=\"form-group row ml-3 mt-3 mr-3 mb-0\">\n            <table class=\"table table_language table-bordered  table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Label</th>\n                        <th scope=\"col\">Creator</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Entries</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let lang of languageList; let i = index\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{lang['label']}}</td>\n                        <td>{{lang['creator'] != \"\" ? lang['creator'] : '<'+'empty'+'>'}}</td>\n                        <td>{{lang['description'] != \"\" ? (lang['description'] | slice:0:50) +'...' : '<'+'empty'+'>'}}\n                        </td>\n                        <td>{{lang['entries']}}</td>\n                        <td>\n                            <span><button class=\"btn btn-primary mr-1\" (click)=\"editLang(i); editLangModal.show()\"><i\n                                        class=\"fas fa-edit\"></i></button></span>\n                            <span><button class=\"btn btn-danger ml-1\" (click)=\"removeLang(i); removeLangModal.show()\"><i\n                                        class=\"fas fa-trash-alt\"></i></button></span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n<app-modal #removeLangModal class=\"remove_languages_modal\">\n    <ng-container class=\"app-modal-header\"></ng-container>\n    <ng-container class=\"app-modal-body\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <label for=\"inputLabel\" class=\"col-lg-12 col-form-label\" style=\"font-size: 12px; text-align: center\">Are you sure to delete {{removeMessage}}?</label>\n                </div>\n                <div class=\"form-group row ml-2 mt-3 mr-2 justify-content-md-center\">\n                    <div class=\"input-group col-lg-5 justify-content-md-center\" style=\"align-items: center; text-align: center;\">\n                        <div class=\"input-group-append ml-2\">\n                            <button class=\"btn btn-success\" type=\"button\" (click)=\"deleteLangRequest(); removeLangModal.hide()\"><i\n                                    class=\"fas fa-check\"></i></button>\n                        </div>\n                        <div class=\"input-group-append ml-2\">\n                            <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeLangModal.hide()\"><i\n                                    class=\"fas fa-times\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</app-modal>\n\n\n<app-modal #editLangModal class=\"edit_languages_modal\" >\n    <ng-container class=\"app-modal-header\"></ng-container>\n    <ng-container class=\"app-modal-body\">\n        <div class=\"card\" *ngIf=\"editLangArray\">\n            <span class=\"text-id\"><b>LANGUAGE EDITOR</b></span>\n            <!-- <a class=\"pointer\" (click)=\"addLanguageModal.show()\"><span class=\"collapse-icon\"><i\n                        class=\"fa fa-plus-square\"></i></span></a> -->\n            <div class=\"card-body\">\n                <form [formGroup]=\"editLangForm\">\n                    <div *ngFor=\"let item of editLangArray | keyvalue\">\n                        <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"item.key == 'description' || item.key == 'label' || item.key == 'lexvo'\">\n                            <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\" style=\"font-size: 12px;\">{{item.key}}</label>\n                            <div class=\"input-group col-lg-9\" style=\"align-items: center;\">\n                                <input #inputLang type=\"text\" class=\"form-control\" placeholder=\"\" [value]=\"item.value\" [formControlName]=\"item.key\" [name]=\"item.key\" (keyup)=\"triggerEdit(item.key, inputLang.value)\">\n                                <div class=\"invalid-feedback\" *ngIf=\"!checkEditValid(item.key)\" style=\"display: block; font-size: 9px;\">\n                                    Invalid Field\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </ng-container>\n</app-modal>\n\n\n\n\n<app-modal #addLanguageModal class=\"add_languages_modal\">\n    <ng-container class=\"app-modal-header\"></ng-container>\n    <ng-container class=\"app-modal-body\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <label for=\"inputLabel\" class=\"col-lg-5 col-form-label\" style=\"font-size: 12px;\">Insert a language\n                        code (max 2-3 chars):</label>\n                    <div class=\"input-group col-lg-7\" style=\"align-items: center;\">\n                        <input #inputAddLanguage id=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\" #langValue>\n                        <div class=\"input-group-append ml-2\">\n                            <button class=\"btn btn-success\" type=\"button\" (click)=\"onSubmit(langValue.value); addLanguageModal.hide()\"\n                            [disabled]=\"inputAddLanguage.value.length < 2 || inputAddLanguage.value.length > 3\"><i\n                                    class=\"fas fa-check\"></i></button>\n                        </div>\n                        <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"loadingService\">\n                            <span class=\"sr-only\">Loading...</span>\n                        </div>\n                        <div class=\"invalid-feedback\" *ngIf=\"!isValid\" style=\"display: block; font-size: 9px;\">\n                            Please, insert at least three characters.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BibliographyService {\n\n  constructor(private http: HttpClient) { }\n\n\n  private baseUrl = \"https://api.zotero.org/groups/2552746/items\";\n  \n  private _addBiblioItem: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _triggerPanel: BehaviorSubject<object> = new BehaviorSubject(null);\n  addBiblioReq$ = this._addBiblioItem.asObservable();\n  triggerPanel$ = this._triggerPanel.asObservable();\n\n  sendDataToBibliographyPanel(object: any) {\n    this._addBiblioItem.next(object)\n  }\n\n  triggerPanel(object: object) {\n    this._triggerPanel.next(object)\n  } \n\n  bootstrapData(start? : number, sortField? : string, direction? : string) : Observable<any> {\n    return this.http.get(this.baseUrl + '?limit=25&start='+start+'&sort='+sortField+'&direction='+direction+'&v=3');\n  }\n\n  filterBibliography(start? : number, sortField? : string, direction? : string, query?, queryMode?) : Observable<any> {\n    return this.http.get(this.baseUrl + '?limit=25&q='+query+'&qmode='+queryMode+'&start='+start+'&sort='+sortField+'&direction='+direction+'&v=3');\n  }\n\n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-lexical-entry-synsem-form',\n  templateUrl: './lexical-entry-synsem-form.component.html',\n  styleUrls: ['./lexical-entry-synsem-form.component.scss']\n})\nexport class LexicalEntrySynsemFormComponent implements OnInit {\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n  @Input() lexData: any;\n\n  synsemForm = new FormGroup({\n    label: new FormControl(''),\n    frames: new FormArray([this.createFrame()])\n  })\n\n  frameArray: FormArray;\n\n  constructor(private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n\n    this.synsemForm = this.formBuilder.group({\n      label: '',\n      frames: this.formBuilder.array([])\n    })\n    this.onChanges();\n    this.loadPeople();\n    this.triggerTooltip();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if (this.object != changes.lexData.currentValue) {\n        if (this.frameArray != null) {\n          this.frameArray.clear();\n        }\n      }\n      this.loadPeople();\n      this.object = changes.lexData.currentValue;\n      if (this.object != null) {\n        this.synsemForm.get('label').setValue(this.object.label, { emitEvent: false });\n\n      }\n      this.triggerTooltip();\n    }, 10)\n  }\n\n  triggerTooltip() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 500);\n  }\n\n  private loadPeople() {\n    /* this.peopleLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  onChanges(): void {\n    this.synsemForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      //console.log(searchParams)\n    })\n  }\n\n  addFrame() {\n    this.frameArray = this.synsemForm.get('frames') as FormArray;\n    this.frameArray.push(this.createFrame());\n  }\n\n  addArg(index){\n    const control = (<FormArray>this.synsemForm.controls['frames']).at(index).get('args') as FormArray;\n    control.push(this.createArg());\n  }\n\n  addForm(ix, iy){\n    const control = ((<FormArray>this.synsemForm.controls['frames']).at(ix).get('args') as FormArray).at(iy).get('form') as FormArray;\n    control.push(this.createForm());\n  }\n\n  removeArg(ix, iy){\n    const control = (<FormArray>this.synsemForm.controls['frames']).at(ix).get('args') as FormArray;\n    control.removeAt(iy);\n  }\n\n  removeForm(ix, iy, iz){\n    const control = ((<FormArray>this.synsemForm.controls['frames']).at(ix).get('args') as FormArray).at(iy).get('form') as FormArray;\n    control.removeAt(iz);\n  }\n\n  removeFrame(index) {\n    this.frameArray = this.synsemForm.get('frames') as FormArray;\n    this.frameArray.removeAt(index);\n  }\n\n  createFrame(): FormGroup {\n    return this.formBuilder.group({\n      label: '',\n      type: '',\n      example: '',\n      args: new FormArray([])\n    })\n  }\n\n  createArg() : FormGroup {\n    return this.formBuilder.group({\n      label: '',\n      type: '',\n      marker: '',\n      optional: false,\n      form: new FormArray([])\n    })\n  }\n\n  createForm() : FormGroup {\n    return this.formBuilder.group({\n      form_label: ''\n    })\n  }\n\n\n}\n","\n\n<form [formGroup]=\"synsemForm\" *ngIf=\"object!=null\">\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-5\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n        </div>\n        <div class=\"input-group-append\">\n            <div class=\"input-group-append ml-2\">\n                <button (click)=\"addFrame()\" class=\"btn btn-outline-primary\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n            </div>\n        </div>\n    </div>\n    \n    <!-- FRAME -->\n    <div formArrayName=\"frames\">\n        <div *ngFor=\"let frame of synsemForm['controls'].frames['controls']; let i = index\">\n            <div [formGroupName]=\"i\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <div class=\"input-group col-xl-12\">\n                        <div class=\"card\">\n                            <span class=\"text-id\"><b>FRAME</b></span>\n                            <a class=\"pointer\" (click)=\"addArg(i)\"><span class=\"add-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n                            <a class=\"pointer\" (click)=\"removeFrame(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                            <div class=\"card-body\">\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Label:</label>\n                                    <div class=\"input-group col-lg-5\">\n                                        <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <label for=\"inputType\" class=\"col-lg-3 col-form-label\">Type:</label>\n                                    <div class=\"col-lg-5\">\n                                        <select formControlName=\"type\" name=\"type\" class=\"form-control\">\n                                            <option [value]=\"object.type\">{{object.type}}</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <label for=\"inputLanguage\" class=\"col-lg-3 col-form-label\">Example:</label>\n                                    <div class=\"col-lg-8\">\n                                        <input formControlName=\"example\" name=\"example\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                                    </div>\n                                </div>\n\n                                <!-- ARGS -->\n                                <div formArrayName=\"args\">\n                                    <div *ngFor=\"let a of frame['controls'].args['controls']; let j = index\">\n                                        <div [formGroupName]=\"j\">\n                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                <div class=\"input-group col-xl-12\">\n                                                    <div class=\"card\">\n                                                        <span class=\"text-id\"><span class=\"badge badge-primary ml-2\">ARG#{{j+1}}</span></span>\n                                                        <a class=\"pointer\" (click)=\"addForm(i, j)\"><span class=\"add-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n                                                        <a class=\"pointer\" (click)=\"removeArg(i, j)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                                                        <div class=\"card-body\">\n                                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                                <label class=\"col-lg-3 col-form-label\">Label:</label>\n                                                                <div class=\"input-group col-lg-5\">\n                                                                    <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                                <label for=\"inputType\" class=\"col-lg-3 col-form-label\">Type:</label>\n                                                                <div class=\"col-lg-5\">\n                                                                    <select formControlName=\"type\" name=\"type\" class=\"form-control\">\n                                                                        <option [value]=\"object.type\">{{object.type}}</option>\n                                                                    </select>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                                <label class=\"col-lg-3 col-form-label\">Marker:</label>\n                                                                <div class=\"col-lg-5\">\n                                                                    <input formControlName=\"marker\" name=\"marker\" type=\"text\" class=\"form-control\" placeholder=\"\">\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                                <label class=\"col-lg-3 col-form-label\">Optional:</label>        \n                                                                <div class=\"input-group col-lg-7 ml-3\">\n                                                                    <div class=\"input-group-append ml-2\" style=\"align-items: center;\">\n                                                                        <input formControlName=\"optional\" name=\"optional\" class=\"form-check-input\" type=\"checkbox\">\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"a['controls'].form['controls'].length > 0\" style=\"align-items:baseline;\">\n                                                                <label class=\"col-lg-3 col-form-label\">Form:</label>\n\n                                                                <!-- FORM -->\n                                                                <div formArrayName=\"form\" class=\"col-lg-9\" style=\"max-height: 15vh;overflow: auto;\">\n                                                                    <div *ngFor=\"let form of a['controls'].form['controls']; let k = index\">\n                                                                        <div [formGroupName]=\"k\">\n                                                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                                                    <ng-select formControlName=\"form_label\" name=\"form_label\" [items]=\"people\" class=\"resizeNgSelect\" bindLabel=\"name\" bindValue=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                                                                    </ng-select>\n                                                                                    <input formControlName=\"form_label\" name=\"form_label\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                                                                    <div class=\"input-group-append ml-3 form-check\">\n                                                                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                                                                    </div>\n                                                                                    <div class=\"input-group-append ml-2\">\n                                                                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                                                                class=\"fa fa-external-link-alt\"></i></button>\n                                                                                    </div>\n                                                                                    <div class=\"input-group-append ml-2\">\n                                                                                        <button (click)=\"removeForm(i, j, k)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                                                    </div>\n                                                                                    \n                                                                                </div>\n                                                                            </div>  \n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n</form>","import { FormGroup } from '@angular/forms';\n    \nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConceptService {\n\n\n  constructor(private http: HttpClient) { }\n\n  \n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"text-center\">\n    <form class=\"form-signin\">\n      <img class=\"mb-4\" src=\"../../../assets/images/LexOIcon.png\" alt=\"\" width=\"120\" >\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n      <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n      <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n      <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n      <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n      <div class=\"checkbox mb-3\">\n        <label>\n          <input type=\"checkbox\" value=\"remember-me\"> Remember me\n        </label>\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n      <p class=\"mt-5 mb-3 text-muted\">&copy; 2020</p>\n    </form>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'epilexo';\n}\n","\n\n<app-navbar></app-navbar>\n<router-outlet></router-outlet>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { LilaService } from 'src/app/services/lila/lila.service';\n\n@Component({\n  selector: 'app-etymology-form',\n  templateUrl: './etymology-form.component.html',\n  styleUrls: ['./etymology-form.component.scss']\n})\nexport class EtymologyFormComponent implements OnInit {\n\n  @Input() etymData: any;\n  @ViewChildren('etyLink') etyLinkList: QueryList<NgSelectComponent>;\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n\n  etyForm = new FormGroup({\n    label: new FormControl(''),\n    author: new FormControl(''),\n    confidence : new FormControl(null),\n    etylink: new FormArray([this.createEtyLink()]),\n    cognates: new FormArray([this.createCognate()]),\n    isEtymon: new FormControl(false),\n    isCognate: new FormControl(false)\n  })\n\n  etyLinkArray: FormArray;\n  cognatesArray: FormArray;\n\n  private subject_cognates: Subject<any> = new Subject();\n  private subject_cognates_input: Subject<any> = new Subject();\n  private subject_etylink: Subject<any> = new Subject();\n  private subject_etylink_input: Subject<any> = new Subject();\n  private etylink_note_subject : Subject<any> = new Subject();\n  private etylink_label_subject : Subject<any> = new Subject();\n  searchResults = [];\n  filterLoading = false;\n\n  memoryLinks = [];\n\n  constructor(private lexicalService: LexicalEntriesService, \n              private formBuilder: FormBuilder, \n              private toastr: ToastrService,\n              private lilaService : LilaService) { }\n\n  ngOnInit(): void {\n\n    this.etyForm = this.formBuilder.group({\n      label: '',\n      author: '',\n      confidence : false,\n      etylink: this.formBuilder.array([]),\n      cognates : this.formBuilder.array([]),\n      isEtymon: false,\n      isCognate: false\n    })\n    this.onChanges();\n    this.triggerTooltip();\n\n    this.subject_cognates.pipe(debounceTime(1000)).subscribe(\n      data => {\n        if(data != null){\n          this.onSearchFilter(data)\n\n        }\n      }\n    )\n\n    this.subject_etylink.pipe(debounceTime(1000)).subscribe(\n      data => {\n        if(data != null){\n          this.onSearchFilter(data)\n\n        }\n      }\n    )\n\n    this.subject_etylink_input.pipe(debounceTime(1000)).subscribe(\n      data => {\n        console.log(data)\n        if(data != null){\n          let value= data['value'];\n          let index = data['i'];\n          this.onChangeEtylink(value, index)\n        }\n        \n      }\n    )\n\n    this.subject_cognates_input.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.etylink_note_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeEtylinkNote(data)\n      }\n    )\n\n    this.etylink_label_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeEtylinkLabel(data)\n      }\n    )\n  }\n  \n\n  triggerTooltip() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    \n      if (this.object != changes.etymData.currentValue) {\n        if (this.etyLinkArray != undefined || this.cognatesArray != undefined) {\n          this.etyLinkArray.clear();\n          //this.cognatesArray.clear();\n          \n          this.memoryLinks = [];\n        }\n      }\n      this.object = changes.etymData.currentValue;\n      console.log(this.object)\n      if (this.object != null) {\n        this.etyForm.get('label').setValue(this.object.etymology.label, { emitEvent: false });\n        this.etyForm.get('author').setValue(this.object.etymology.hypothesisOf, { emitEvent: false });\n        if(this.object.etymology.confidence == 0){\n          this.etyForm.get('confidence').setValue(true, { emitEvent: false });\n        }else{\n          this.etyForm.get('confidence').setValue(false, { emitEvent: false });\n        }\n\n        let isCognate = this.object.type.find(element => element == 'Cognate');\n        if(isCognate){\n            this.etyForm.get('isCognate').setValue(true, {emitEvent: false})\n        }else{\n            this.etyForm.get('isCognate').setValue(false, {emitEvent: false})\n        }\n\n        let isEtymon = this.object.type.find(element => element == 'Etymon');\n        if(isEtymon){\n            this.etyForm.get('isEtymon').setValue(true, {emitEvent: false})\n        }else{\n            this.etyForm.get('isEtymon').setValue(false, {emitEvent: false})\n        }\n        \n        if(this.object.etyLinks != undefined){\n          if(this.object.etyLinks.length != 0){\n            this.object.etyLinks.forEach(element => {\n              let lex_entity = element.etySourceLabel == '' ? element.etySource : element.etySourceLabel;\n              let label = element.label == '' ? element.etySourceLabel : element.label;\n              let ety_type = element.etyLinkType;\n              let ety_source = element.etySource;\n              let ety_target = element.etyTarget;\n              let note = element.note;\n              let external_iri = element.externalIRI;\n              this.addEtyLink(lex_entity, label, ety_type, ety_source, ety_target, note, external_iri);\n              this.memoryLinks.push(element);\n              /* console.log(element) */\n            });\n          }\n        }\n      }\n      this.triggerTooltip();\n    \n  }\n\n\n  onChanges(): void {\n    /* this.etyForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      console.log(searchParams)\n    }) */\n    this.etyForm.get('confidence').valueChanges.pipe(debounceTime(100)).subscribe(newConfidence => {\n      let confidence_value = null;\n      console.log(newConfidence)\n      if(newConfidence == false){\n        confidence_value = 1\n        this.etyForm.get('confidence').setValue(false, { emitEvent: false });\n      }else{\n        confidence_value = 0\n        this.etyForm.get('confidence').setValue(true, { emitEvent: false });\n      }\n\n      this.lexicalService.spinnerAction('on');\n      let etyId = this.object.etymology.etymologyInstanceName;\n      let parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: confidence_value\n      }\n      console.log(parameters)\n      this.lexicalService.updateGenericRelation(etyId, parameters).subscribe(\n          data => {\n              console.log(data);\n              /* data['request'] = 0;\n              data['new_label'] = confidence_value\n              this.lexicalService.refreshAfterEdit(data); */\n              //this.lexicalService.updateLexCard(data)\n              this.lexicalService.spinnerAction('off');\n          },\n          error => {\n              console.log(error);\n              /*  const data = this.object.etymology;\n              data['request'] = 0;\n              data['new_label'] = confidence_value;\n              this.lexicalService.refreshAfterEdit(data); */\n              this.lexicalService.spinnerAction('off');\n              //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n              if(error.status == 200){\n                this.toastr.success('Label updated', '', {timeOut: 5000})\n\n              }else{\n                this.toastr.error(error.error, 'Error', {timeOut: 5000})\n\n              }\n          }\n      )\n\n    });\n\n\n    this.etyForm.get(\"label\").valueChanges.pipe(debounceTime(1000)).subscribe(\n      updatedLabel => {\n        if (updatedLabel.length > 2 && updatedLabel.trim() != '') {\n          this.lexicalService.spinnerAction('on');\n          let etyId = this.object.etymology.etymologyInstanceName;\n          let parameters = {\n              relation: 'label',\n              value: updatedLabel\n          }\n          this.lexicalService.updateEtymology(etyId, parameters).subscribe(\n            data => {\n                //console.log(data);\n                data['request'] = 0;\n                data['new_label'] = updatedLabel\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                //this.lexicalService.updateLexCard(data)\n                this.toastr.success('Label updated', '', {timeOut: 5000})\n            },\n            error => {\n                //console.log(error);\n                const data = this.object.etymology;\n                data['request'] = 0;\n                data['new_label'] = updatedLabel;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n                if(error.status == 200){\n                  this.toastr.success('Label updated', '', {timeOut: 5000})\n\n                }else{\n                  this.toastr.error(error.error, 'Error', {timeOut: 5000})\n\n                }\n            }\n          )\n        }\n      }\n    )\n\n    this.etyForm.get(\"author\").valueChanges.pipe(debounceTime(1000)).subscribe(\n      updateAuthor => {\n        \n        this.lexicalService.spinnerAction('on');\n        let etyId = this.object.etymology.etymologyInstanceName;\n        let parameters = {\n            relation: 'hypothesisOf',\n            value: updateAuthor\n        }\n        this.lexicalService.updateEtymology(etyId, parameters).subscribe(\n          data => {\n              //console.log(data);\n              /* data['request'] = 0;\n              data['new_label'] = updateAuthor\n              this.lexicalService.refreshAfterEdit(data); */\n              this.lexicalService.spinnerAction('off');\n              //this.lexicalService.updateLexCard(data)\n              this.toastr.success('Author updated', '', {timeOut: 5000})\n          },\n          error => {\n              //console.log(error);\n              /* const data = this.object;\n              data['request'] = 0;\n              data['new_label'] = updateAuthor;\n              this.lexicalService.refreshAfterEdit(data); */\n              this.lexicalService.spinnerAction('off');\n              //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n              if(error.status == 200){\n                this.toastr.success('Label updated', '', {timeOut: 5000})\n\n              }else{\n                this.toastr.error(error.error, 'Error', {timeOut: 5000})\n\n              }\n          }\n        )\n        \n      }\n    )\n  }\n\n  onChangeEtylinkNote(data){\n    console.log(data)\n    if(data != undefined){\n      \n      let newValue = data.evt.target.value;\n      let currentValue;\n      let index = data?.index;\n      \n      let oldValue = this.memoryLinks[index].note;\n\n      let instanceName = this.object.etyLinks[index].etymologicalLinkInstanceName;\n      \n\n      let parameters = {\n        relation: 'note',\n        value : newValue,\n        currentValue : oldValue\n      };\n\n      console.log(parameters)\n\n      this.lexicalService.updateEtylink(instanceName, parameters).subscribe(\n        data=> {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.updateLexCard(this.object)\n          this.memoryLinks[index].note = newValue\n          this.toastr.success('EtyLink note updated', '', {timeOut: 5000})\n        },error=> {\n          console.log(error);\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          this.memoryLinks[index].note = newValue\n          if(error.status == 200){\n            this.toastr.success('Label updated', '', {timeOut: 5000})\n\n          }else{\n            this.toastr.error(error.error, 'Error', {timeOut: 5000})\n\n          }\n        }\n      )\n    \n    }\n  }\n\n  onChangeEtylinkLabel(data){\n    console.log(data)\n    if(data != undefined){\n      \n      let newValue = data.evt.target.value;\n      let currentValue;\n      let index = data?.index;\n      \n      let oldValue = this.memoryLinks[index].note;\n\n      let instanceName = this.object.etyLinks[index].etymologicalLinkInstanceName;\n      \n\n      let parameters = {\n        relation: 'label',\n        value : newValue,\n        currentValue : oldValue\n      };\n\n      console.log(parameters)\n\n      this.lexicalService.updateEtylink(instanceName, parameters).subscribe(\n        data=> {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.updateLexCard(this.object)\n          this.memoryLinks[index].note = newValue\n          this.toastr.success('EtyLink label updated', '', {timeOut: 5000})\n\n        },error=> {\n          console.log(error);\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          this.memoryLinks[index].note = newValue\n          this.toastr.error(error.error, 'Error', {timeOut: 5000})\n        }\n      )\n    \n    }\n  }\n\n  onChangeEtylinkType(index, evt){\n    console.log(index, evt.target.value)\n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    let selectedValues, etymId;\n    selectedValues = evt.target.value;\n    \n    if (this.object.etymology.etymologyInstanceName != undefined) {\n      etymId = this.object.etyLinks[index].etymologicalLinkInstanceName;\n    }\n\n    if(selectedValues != null){\n      \n      //let oldValue = this.memoryLinks[index].etySource;\n      let parameters = {\n        relation: \"etyLinkType\",\n        value: selectedValues,\n      }\n      console.log(parameters)\n      this.lexicalService.updateEtylink(etymId, parameters).subscribe(\n        data => {\n          console.log(data)\n        }, error => {\n          console.log(error)\n          if(error.status == 200){\n            this.toastr.success('Etylink type updated', '', {timeOut: 5000})\n            //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          }else{\n            this.toastr.error(error.error, 'Error', {timeOut: 5000})\n          }\n        }\n        )\n      \n    }\n  }\n\n  onChangeEtylink(etyLink, index) {\n    console.log(etyLink.selectedItems)\n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    let selectedValues, etymId, etySourceLabel, instanceName;\n\n    if(!this.etyLinkArray.at(index).get('lila').value){\n      if(etyLink.selectedItems != undefined){\n        if (etyLink.selectedItems.length != 0) {\n          selectedValues = etyLink.selectedItems[0].value.lexicalEntryInstanceName;\n          etySourceLabel = etyLink.selectedItems[0].value.label;\n          instanceName = etyLink.selectedItems[0].value.lexicalEntry;\n        }\n      }else if(etyLink != \"\"){\n        selectedValues = etyLink;\n        etySourceLabel = '';\n        instanceName = etyLink;\n      }\n    }else{\n      selectedValues = etyLink.selectedItems[0].value.lexicalEntry;\n      etySourceLabel = etyLink.selectedItems[0].value.label;\n      instanceName = etyLink.selectedItems[0].value.lexicalEntry;\n    }\n    \n    \n    //console.log(index);\n    //console.log(this.object.etyLinks[index])\n    if (this.object.etymology.etymologyInstanceName != undefined) {\n      etymId = this.object.etyLinks[index].etymologicalLinkInstanceName;\n    }\n\n    let existOrNot = this.memoryLinks.some(element => element.etySource == instanceName);\n\n    if(typeof(etyLink) != 'string' && !existOrNot){\n      if(selectedValues != null && etyLink?.selectedItems[0]?.value.new_etymon == undefined){\n      \n        let oldValue = this.memoryLinks[index].etySource;\n        let parameters = {\n          type: \"etyLink\",\n          relation: \"etySource\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n  \n        console.log(parameters)\n        this.lexicalService.updateLinguisticRelation(etymId, parameters).subscribe(\n          data => {\n            console.log(data)\n          }, error => {\n            console.log(error)\n            if(error.status == 200){\n              this.memoryLinks[index]['etySourceLabel'] = etySourceLabel;\n              this.etyLinkArray.at(index).patchValue({ label: etySourceLabel});\n              this.etyLinkArray.at(index).patchValue({ etySource: instanceName});\n              //this.lexicalService.updateLexCard({ lastUpdate: error.error.text }) TODO: inserire updater per decomposition e etymology\n              this.toastr.success('Etylink source updated', '', {timeOut: 5000})\n            }else{\n              this.toastr.error(error.error, 'Error', {timeOut: 5000})\n            }\n          }\n        )\n        \n      }else if(etyLink.selectedItems[0].value.new_etymon){\n        \n        let label_new_lexical_entry = etyLink.selectedItems[0].value.name;\n        this.lexicalService.newLexicalEntry().subscribe(\n          data=> {\n            console.log(data);\n            let lexical_entry = data.lexicalEntry;\n            let lexical_entry_in = data.lexicalEntryInstanceName;\n            this.memoryLinks[index]['etySourceLabel'] = etySourceLabel;\n            this.etyLinkArray.at(index).patchValue({ lex_entity: label_new_lexical_entry});\n            this.etyLinkArray.at(index).patchValue({ etySource: lexical_entry});\n  \n            \n            let parameters = {\n              relation: 'label',\n              value: label_new_lexical_entry\n            }\n            console.log(parameters)\n            this.lexicalService.updateLexicalEntry(lexical_entry_in, parameters).subscribe(\n              data => {\n                  console.log(data);\n                  \n              },\n              error => {\n                  //console.log(error);\n                  this.lexicalService.spinnerAction('off');\n                  this.lexicalService.spinnerAction('off');\n  \n                  parameters = {\n                    relation: 'type',\n                    value: 'Etymon'\n                  }\n  \n                  this.lexicalService.updateLexicalEntry(lexical_entry_in, parameters).subscribe(\n                    data => {\n                        console.log(data);\n                        this.lexicalService.spinnerAction('off');\n                        this.lexicalService.refreshLangTable();\n                        this.lexicalService.refreshFilter({ request: true })\n                        \n                    },\n                    error => {\n                        console.log(error);\n                        let oldValue = this.memoryLinks[index].etySource;\n                        let parameters = {\n                          type: \"etyLink\",\n                          relation: \"etySource\",\n                          value: lexical_entry_in,\n                          currentValue: oldValue\n                        }\n                        this.lexicalService.refreshFilter({ request: true })\n                        console.log(parameters)\n                        console.log\n                        this.lexicalService.updateLinguisticRelation(etymId, parameters).subscribe(\n                          data => {\n                            console.log(data)\n                          }, error => {\n                            console.log(error)\n                            if(error.statusText == 'OK'){\n                              this.toastr.success('New etymon created', '', {timeOut: 5000})\n                              ////this.lexicalService.updateLexCard({ lastUpdate: error.error.text }) TODO: inserire updater per decomposition e etymology\n                            }\n                          }\n                        )\n                        this.lexicalService.spinnerAction('off');\n  \n                    }\n                )\n              }\n            )\n  \n  \n            \n          },error => {\n            console.log(error)\n          }\n        )\n        //      cambiare tipo lexical entry in etymon\n        //      cambiare label lexical entry\n      }\n    }else if(typeof(etyLink) == 'string' && !existOrNot){\n      let oldValue = this.memoryLinks[index].etySource;\n        let parameters = {\n          type: \"etyLink\",\n          relation: \"etySource\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n  \n        console.log(parameters)\n        this.lexicalService.updateLinguisticRelation(etymId, parameters).subscribe(\n          data => {\n            console.log(data)\n          }, error => {\n            console.log(error)\n            if(error.status == 200){\n              this.memoryLinks[index]['etySourceLabel'] = etySourceLabel;\n              this.etyLinkArray.at(index).patchValue({ label: etySourceLabel});\n              this.etyLinkArray.at(index).patchValue({ etySource: instanceName});\n              //this.lexicalService.updateLexCard({ lastUpdate: error.error.text }) TODO: inserire updater per decomposition e etymology\n              this.toastr.success('Etylink source updated', '', {timeOut: 5000})\n            }else{\n              this.toastr.error(error.error, 'Error', {timeOut: 5000})\n            }\n          }\n        )\n    }else if(existOrNot){\n      this.toastr.error('This etymon already exist, please choose an another etymon', 'Error', {\n        timeOut: 5000\n      })\n    }\n\n    \n  }\n\n  createNewEtymon(name){\n    return new Promise((resolve) => {\n      // Simulate backend call.\n      setTimeout(() => {\n          resolve({ id: 5, name: name, new_etymon: true });\n      }, 1000);\n    })\n  }\n\n  addCognate() {\n    this.cognatesArray = this.etyForm.get('cognates') as FormArray;\n    this.cognatesArray.push(this.createCognate());\n    \n  }\n\n  debounceEtylinkLabel(evt, index){\n    this.lexicalService.spinnerAction('on');\n    this.etylink_label_subject.next({ evt, index})\n  }\n\n  debounceEtylinkNote(evt, index) {\n    this.lexicalService.spinnerAction('on');\n    this.etylink_note_subject.next({ evt, index})\n  }\n\n  addEtyLink(le?, l?, elt?, es?, et?, n?, el?){\n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    this.etyLinkArray.push(this.createEtyLink(le, l, elt, es, et, n, el));\n  }\n\n  addNewEtyLink() { \n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    this.etyLinkArray.push(this.createEtyLink());\n    let index = this.etyLinkArray.length -1;\n\n    let etyId = this.object.etymology.etymologyInstanceName;\n    let lexId = this.object.parentNodeInstanceName;\n\n    console.log(etyId, lexId)\n\n    this.lexicalService.createNewEtylink(lexId, etyId).subscribe(\n      data=>{\n        console.log(data);\n        if(data!=null){\n          let etyTarget = data['etyTarget']\n          let etyType = data['etyLinkType']\n          this.etyLinkArray.at(index).patchValue({ etyTarget: etyTarget});\n          this.etyLinkArray.at(index).patchValue({ etyLinkType: etyType});\n          this.object.etyLinks[index] = data;\n          this.memoryLinks[index] = data;\n          this.toastr.success('New etylink added', '', {timeOut: 5000})\n        }\n      },error=>{\n        console.log(error)\n        this.toastr.error(error.error, 'Error', {timeOut: 5000})\n      }\n    )\n  }\n\n  removeEtyLink(index){\n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    let etyLinkId = this.memoryLinks[index]['etymologicalLinkInstanceName']\n    this.lexicalService.deleteEtylink(etyLinkId).subscribe(\n      data =>{\n        console.log(data)\n        ////this.lexicalService.updateLexCard(this.object)\n        this.toastr.success('Etylink removed', '', {timeOut: 5000})\n\n      },\n      error =>{\n        console.log(error)\n        this.toastr.error(error.error, 'Error', {timeOut: 5000})\n        ////this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n      }\n    )\n    this.etyLinkArray.removeAt(index);\n    this.memoryLinks.splice(index, 1)\n  }\n\n  removeCognate(index){\n    this.etyLinkArray = this.etyForm.get('cognates') as FormArray;\n    this.etyLinkArray.removeAt(index);\n    \n  }\n\n  createRelation(){\n    return this.formBuilder.group({\n      trait: '',\n      value: ''\n    })\n  }\n\n  createEtyLink(le?, l?, elt?, es?, et?, n?, el?) {\n    if(le!= undefined){\n      return this.formBuilder.group({\n        lex_entity: new FormControl(le),\n        label: new FormControl(l),\n        etyLinkType: new FormControl(elt),\n        etySource : new FormControl(es),\n        etyTarget : new FormControl(et),\n        note: new FormControl(n),\n        external_iri : new FormControl(el),\n        lila: false\n      })\n    }else{\n      return this.formBuilder.group({\n        lex_entity: new FormControl(null),\n        label: new FormControl(null),\n        etyLinkType: new FormControl(null),\n        etySource : new FormControl(null),\n        etyTarget : new FormControl(null),\n        note : new FormControl(null),\n        external_iri : new FormControl(null),\n        lila: false\n      })\n    }\n    \n  }\n\n\n  createCognate() {\n    return this.formBuilder.group({\n      cognate : new FormControl(null),\n      label : new FormControl(null)\n    })\n  }\n\n  triggerCognates(evt) {\n    if (evt.target != undefined) {\n      this.subject_cognates.next(evt.target.value)\n    }\n  }\n\n  triggerCognatesInput(evt, i) {\n    if (evt.target != undefined) {\n      let value = evt.target.value;\n      this.subject_cognates_input.next({ value, i })\n    }\n  }\n\n  triggerEtylink(evt, index) {\n    if (evt.target != undefined) {\n      this.subject_etylink.next({value : evt.target.value, index : index})\n    }\n  }\n\n  triggerEtylinkInput(evt, i) {\n    if (evt.target != undefined) {\n      let value = evt.target.value;\n      this.subject_etylink_input.next({ value, i })\n    }\n  }\n\n  deleteData() {\n    this.searchResults = [];\n  }\n\n  onSearchFilter(data) {\n    console.log(data)\n    this.filterLoading = true;\n    this.searchResults = [];\n\n    let value = data.value;\n    let index = data.index;\n\n    this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n    let isLilaActived = this.etyLinkArray.at(index).get('lila').value;\n\n    if(!isLilaActived){\n      let parameters = {\n        text: value,\n        searchMode: \"startsWith\",\n        type: \"etymon\",\n        pos: \"\",\n        formType: \"entry\",\n        author: \"\",\n        lang: \"\",\n        status: \"\",\n        offset: 0,\n        limit: 500\n      }\n      console.log(parameters)\n      \n      this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n        data => {\n          console.log(data)\n          this.searchResults = data['list']\n          this.filterLoading = false;\n        }, error => {\n          console.log(error)\n          this.filterLoading = false;\n        }\n      )\n      \n    }else{\n      this.lilaService.queryEtymon(value).subscribe(\n        data=>{\n            console.log(data)\n            if(data.list.length > 0){\n              const map = data.list.map(element => (\n                {\n                  label: element[2]?.value, \n                  language : element[1]?.value,\n                  lexicalEntry : element[0]?.value\n                })\n              )\n\n              \n              \n\n              this.searchResults = map;\n              console.log(this.searchResults)\n            }\n        },\n        error=>{\n            console.log(error)\n        }\n    )\n    }\n\n    \n    \n\n  }\n\n  triggerLilaSearch(index){\n\n    \n\n    setTimeout(() => {\n      this.etyLinkArray = this.etyForm.get('etylink') as FormArray;\n      let value = this.etyLinkArray.at(index).get('lila').value;\n      if(value){\n        const element = Array.from(this.etyLinkList)[index];\n\n        /* if(element!=undefined){\n          \n          //this.onSearchFilter({value: this.object.label, index: index})\n        } */\n\n        /* setTimeout(() => {\n          element.filter(this.object.parentNodeLabel)\n        }, 100); */\n      }\n      \n      \n\n    }, 250);\n  }\n\n}\n","\n\n<form [formGroup]=\"etyForm\" *ngIf=\"object != null\"> <!-- *ngIf=\"object!=null\" -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-7\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n            <div class=\"input-group-append\">\n                <div class=\"input-group-append ml-2\">\n                    <div class=\"dropdown\">\n                        <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"addNewEtyLink()\">\n                            <i class=\"fa fa-plus\"></i>\n                        </button>\n                        <!-- <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                          <a class=\"dropdown-item\" (click)=\"addCognate()\" style=\"cursor: pointer;\">Add Cognates</a>\n                          <a class=\"dropdown-item\"  style=\"cursor: pointer;\">Add EtyLink</a>\n                        </div> -->\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Author: </label>\n        <div class=\"input-group col-xl-7\">\n            <input formControlName=\"author\" name=\"author\" type=\"text\" class=\"form-control\" placeholder=\"\">\n        </div>\n    </div>\n\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Uncertain:</label>\n        <div class=\"input-group col-xl-7\">\n            <input formControlName=\"confidence\" name=\"confidence\" type=\"checkbox\" > <!-- [checked]=\"etyForm.get('confidence').value == 0\" -->\n        </div>\n    </div>\n\n    <!-- ETY LINK -->\n    <div formArrayName=\"etylink\">\n        <div *ngFor=\"let etyLink of etyForm['controls'].etylink['controls']; let i = index\">\n            <div [formGroupName]=\"i\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <div class=\"input-group col-xl-12\">\n                        <div class=\"card\">\n                            <span class=\"text-id\"><b>ETY LINK {{i+1}}</b></span>\n                            <!-- <a class=\"pointer\" (click)=\"addRelation(i)\"><span class=\"add-icon\"><i class=\"fa fa-plus-square\"></i></span></a> -->\n                            <a class=\"pointer\" (click)=\"removeEtyLink(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                            <div class=\"card-body\" *ngIf=\"{external : etyLink.get('external_iri').value }; let variable\">\n\n                                <!-- ETYMON / LEXENT -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\" style=\"align-items: center;\">\n                                        <label class=\"col-xl-3 col-form-label\">Etymon:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                <div class=\"input-group\" >\n                                                    <ng-select *ngIf=\"!etyLink.get('lila').value && !variable.external\" #etyLink [addTag]=\"createNewEtymon\" (change)=\"onChangeEtylink(etyLink, i)\" formControlName=\"lex_entity\" name=\"lex_entity\" [items]=\"searchResults\" class=\"resizeNgSelect\" bindLabel=\"label\" bindValue=\"label\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                         (keyup)=\"triggerEtylink($event, i)\" bindValue=\"label\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                        bindLabel=\"label\" placeholder=\"Search entity\" appendTo=\"body\" (focus)=\"deleteData()\">\n                                                    </ng-select>\n                                                    <ng-select *ngIf=\"etyLink.get('lila').value && !variable.external\" #etyLink  [addTag]=\"false\" (change)=\"onChangeEtylink(etyLink, i)\" formControlName=\"lex_entity\" name=\"lex_entity\" [items]=\"searchResults\" class=\"resizeNgSelect\" bindLabel=\"label\" bindValue=\"label\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                         (keyup)=\"triggerEtylink($event, i)\" bindValue=\"label\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                        bindLabel=\"label\" placeholder=\"Search entity\" appendTo=\"body\" (focus)=\"deleteData()\">\n                                                    </ng-select>\n                                                    <input (keyup)=\"triggerEtylinkInput($event, i)\" formControlName=\"lex_entity\" name=\"lex_entity\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.external\">\n                                                   \n                                                    <div class=\"input-group-append ml-2\" *ngIf=\"!variable.external \">\n                                                        <div class=\"btn-group-toggle\" data-toggle=\"buttons\" placement=\"top\" ngbTooltip=\"Enable LiLa endpoint\" title=\"Enable LiLa endpoint\" >\n                                                            <label class=\"btn btn-secondary\" >\n                                                              <input (click)=\"triggerLilaSearch(i)\" type=\"checkbox\" autocomplete=\"off\" autocomplete=\"off\" formControlName=\"lila\" name=\"lila\" style=\"border-radius: .3rem;\" > \n                                                                <img src=\"../../../../../../../assets/images/graphql.png\" alt=\"Avatar\" class=\"image\" style=\"height: 20px;\">\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\" *ngIf=\"etyLink.get('external_iri').value && etyLink.get('etySource').value != ''\">\n                                                        <a [href]=\"etyLink.get('etySource').value\" target=\"_blank\" class=\"btn btn-primary\" type=\"button\"><i\n                                                                class=\"fa fa-external-link-alt\"></i></a>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-3 form-check\">\n                                                        <input class=\"form-check-input vartrans-tooltip\" formControlName=\"external_iri\" name=\"external_iri\" type=\"checkbox\" (change)=\"variable.external=!variable.external;\" container=\"body\" placement=\"top\" ngbTooltip=\"Insert URL manually\" title=\"Clicca per inserire un URI manualmente\">\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <!-- LABEL / WRITTEN FORM -->\n                                <div class=\"col-xl-12\" *ngIf=\"variable.external\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label\">Label:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    \n                                                    <input (keyup)=\"debounceEtylinkLabel($event, i)\" formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\">\n                                                    <div class=\"input-group-append ml-3 form-check invisible\">\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n\n                                <!-- ETYLINK TYPE -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label\">EtyLink Type:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    <select id=\"typeSelect\" formControlName=\"etyLinkType\" name=\"etyLinkType\" class=\"form-control\" (change)=\"onChangeEtylinkType(i, $event)\">\n                                                        <option [selected]=\"etyLink.get('etyLinkType').value == 'inheritance'\" value=\"inheritance\">\n                                                            inheritance\n                                                        </option>\n                                                        <option [selected]=\"etyLink.get('etyLinkType').value == 'borrowing'\" value=\"borrowing\">\n                                                            borrowing\n                                                        </option>\n                                                    </select>\n                                                    <!-- <input formControlName=\"etyLinkType\" name=\"etyLinkType\" type=\"text\" class=\"form-control\"> -->\n                                                    <div class=\"input-group-append ml-3 form-check invisible\">\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n\n                                <!-- ETY SOURCE -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label text-muted\">EtySource:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    \n                                                    <input formControlName=\"etySource\" name=\"etySource\" type=\"text\" class=\"form-control\" readonly>\n                                                    <div class=\"input-group-append ml-3 form-check invisible\">\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n\n                                <!-- ETY TARGET -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label text-muted\">EtyTarget:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    \n                                                    <input formControlName=\"etyTarget\" name=\"etyTarget\" type=\"text\" class=\"form-control\" readonly>\n                                                    <div class=\"input-group-append ml-3 form-check invisible\">\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>   \n\n                                <!-- NOTE -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label\">Note:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    \n                                                    <textarea (keyup)=\"debounceEtylinkNote($event, i)\" formControlName=\"note\" name=\"note\" type=\"text\" class=\"form-control\" style=\"resize: none;\"></textarea>\n                                                    <div class=\"input-group-append ml-3 form-check invisible\" >\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>                               \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- COGNATES -->\n    <div formArrayName=\"cognates\">\n        <div *ngFor=\"let sub of etyForm['controls'].cognates['controls']; let i = index\">\n            <div [formGroupName]=\"i\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <div class=\"input-group col-xl-12\">\n                        <div class=\"card\">\n                            <span class=\"text-id\"><b>COGNATE {{i+1}}</b></span>\n                            <!-- <a class=\"pointer\" (click)=\"addSubtermElement(i)\"><span class=\"add-icon\"><i class=\"fa fa-plus-square\"></i></span></a> -->\n                            <a class=\"pointer\" (click)=\"removeCognate(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                            <div class=\"card-body\">\n\n                                <!-- COGNATE -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\" style=\"align-items: center;\">\n                                        <label class=\"col-xl-3 col-form-label\">Cognate:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    <ng-select formControlName=\"cognate\" name=\"cognate\" [items]=\"searchResults\" class=\"resizeNgSelect\" bindLabel=\"label\" bindValue=\"label\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                         *ngIf=\"!variable.switch\" (keyup)=\"triggerCognates($event)\" bindValue=\"label\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                        bindLabel=\"label\" placeholder=\"Search entity\" appendTo=\"body\" (focus)=\"deleteData()\">\n                                                    </ng-select>\n                                                    <input (keyup)=\"triggerCognatesInput($event, i)\" formControlName=\"cognate\" name=\"cognate\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                                    <div class=\"input-group-append ml-3 form-check\">\n                                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                                    </div>\n                                                    <!-- <div class=\"input-group-append ml-2\">\n                                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                                class=\"fa fa-external-link-alt\"></i></button>\n                                                    </div> -->\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n\n                                <!-- LABEL / WRITTEN FORM -->\n                                <div class=\"col-xl-12\">\n                                    <div class=\"d-xl-flex\">\n                                        <label class=\"col-xl-3 col-form-label\">Label / Written Form:</label>\n                                        <div class=\"col-xl-9\">\n                                            <div class=\"form-group row ml-2 mr-2\">\n                                                <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                                    \n                                                    <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\">\n                                                    <div class=\"input-group-append ml-3 form-check invisible\">\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>                                                  \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BibliographyService } from 'src/app/services/bibliography-service/bibliography.service';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-lexicon-page',\n  templateUrl: './lexicon-page.component.html',\n  styleUrls: ['./lexicon-page.component.scss']\n})\nexport class LexiconPageComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  metadata_subscr : Subscription;\n  object: any;\n  @ViewChild('accordion') accordion: ElementRef; \n\n  constructor(private documentService : DocumentSystemService, private lexicalService: LexicalEntriesService, private biblioService : BibliographyService) { }\n\n  notes = '';\n  link = [];\n  bibliography = [];\n  attestation : any;\n  metadata : any;\n  ngOnInit(): void {\n\n    this.lexicalService.triggerNotePanel$.subscribe(\n      boolean => {\n        setTimeout(() => {\n          if(boolean != null){\n            if(boolean){\n              let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#noteCollapse\"]');\n              let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"noteHeading\"]');\n              let item_collapse = this.accordion.nativeElement.querySelectorAll('[id^=\"collapse-\"]');\n              a_link.forEach(element => {\n                if(element.classList.contains(\"collapsed\")){\n                  element.classList.remove('collapsed')\n                }else{\n                  //element.classList.add('collapsed')\n                }\n              })\n  \n              collapse_container.forEach(element => {\n                if(element.classList.contains(\"show\")){\n                  //element.classList.remove('collapsed')\n                }else{\n                  element.classList.add('show')\n                }\n              })\n  \n              item_collapse.forEach(element => {\n                if(element == item_collapse[item_collapse.length-1]){\n                  element.classList.add('show')\n                }else{\n                  element.classList.remove('show')\n                }\n              });\n            }else{\n              setTimeout(() => {\n                let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#noteCollapse\"]');\n                a_link.forEach(element => {\n                  element.classList.add('collapsed')\n                  \n                })\n  \n                let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"noteHeading\"]');\n                collapse_container.forEach(element => {\n                  console.log(element)\n                  if(element.classList.contains(\"show\")){\n                    element.classList.remove('show')\n                  }\n                })\n              }, 100);\n              \n            }\n          }\n        }, 100);\n        \n      }\n    )\n\n    this.lexicalService.triggerAttestationPanel$.subscribe(\n      boolean => {\n        setTimeout(() => {\n          if(boolean != undefined){\n            //console.log(boolean)\n            if(boolean){\n              let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#attestationCollapse\"]');\n              let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"attestationHeading\"]');\n              let item_collapse = this.accordion.nativeElement.querySelectorAll('[id^=\"collapse-\"');\n              a_link.forEach(element => {\n                if(element.classList.contains(\"collapsed\")){\n                  element.classList.remove('collapsed')\n                }else{\n                  //element.classList.add('collapsed')\n                }\n              })\n  \n              collapse_container.forEach(element => {\n                if(element.classList.contains(\"show\")){\n                  //element.classList.remove('collapsed')\n                }else{\n                  element.classList.add('show')\n                }\n              })\n  \n              /* item_collapse.forEach(element => {\n                if(element == item_collapse[item_collapse.length-1]){\n                  element.classList.add('show')\n                }else{\n                  element.classList.remove('show')\n                }\n              }); */\n            }else{\n              setTimeout(() => {\n                let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#attestationCollapse\"]');\n                a_link.forEach(element => {\n                  element.classList.add('collapsed')\n                  \n                })\n  \n                let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"attestationHeading\"]');\n                collapse_container.forEach(element => {\n                  //console.log(element)\n                  if(element.classList.contains(\"show\")){\n                    element.classList.remove('show')\n                  }\n                })\n              }, 100);\n              \n            }\n          }\n        }, 100);\n        \n      }\n    )\n\n    this.biblioService.triggerPanel$.subscribe(\n      object => {\n        if(object != undefined){\n          let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#bibliographyCollapse\"]');\n          let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"bibliographyHeading\"]');\n          let item_collapse = this.accordion.nativeElement.querySelectorAll('[id^=\"collapse-\"');\n          a_link.forEach(element => {\n            if(element.classList.contains(\"collapsed\")){\n              element.classList.remove('collapsed')\n            }else{\n              //element.classList.add('collapsed')\n            }\n          })\n\n          collapse_container.forEach(element => {\n            if(element.classList.contains(\"show\")){\n              //element.classList.remove('collapsed')\n            }else{\n              element.classList.add('show')\n            }\n          })\n\n          item_collapse.forEach(element => {\n            if(element == item_collapse[item_collapse.length-1]){\n              element.classList.add('show')\n            }else{\n              element.classList.remove('show')\n            }\n          });\n        }\n        \n      }\n    )\n\n    this.lexicalService.attestationPanelData$.subscribe(\n      data => {\n       // console.log(data)\n        if(data != null){\n          if(Array.isArray(data)){\n            this.attestation = data;\n          }else{\n            this.attestation = [data];\n          }\n        }else{\n          this.attestation = null;\n        }\n      }\n    );\n\n    this.documentService.metadataData$.subscribe(\n      data => {\n        console.log(data);\n        if(data != null){\n          this.metadata = data;\n        }else{\n          this.metadata = null;\n        }\n      }\n    )\n\n    this.metadata_subscr = this.documentService.triggerMetadataPanel$.subscribe(\n      boolean => {\n        setTimeout(() => {\n          console.log(boolean)\n          if(boolean != null){\n            if(boolean){\n              let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#metadataCollapse\"]');\n              let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"metadataHeading\"]');\n              let item_collapse = this.accordion.nativeElement.querySelectorAll('[id^=\"collapse-\"');\n              a_link.forEach(element => {\n                if(element.classList.contains(\"collapsed\")){\n                  element.classList.remove('collapsed')\n                }else{\n                  //element.classList.add('collapsed')\n                }\n              })\n  \n              collapse_container.forEach(element => {\n                if(element.classList.contains(\"show\")){\n                  //element.classList.remove('collapsed')\n                }else{\n                  element.classList.add('show')\n                }\n              })\n  \n              item_collapse.forEach(element => {\n                if(element == item_collapse[item_collapse.length-1]){\n                  element.classList.add('show')\n                }else{\n                  element.classList.remove('show')\n                }\n              });\n            }else{\n              setTimeout(() => {\n                let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#metadataCollapse\"]');\n                a_link.forEach(element => {\n                  element.classList.add('collapsed')\n                  \n                })\n  \n                let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"metadataHeading\"]');\n                collapse_container.forEach(element => {\n//                  console.log(element)\n                  if(element.classList.contains(\"show\")){\n                    element.classList.remove('show')\n                  }\n                })\n              }, 100);\n              \n            }\n          }\n        }, 100);\n        \n      }\n    )\n\n    this.lexicalService.rightPanelData$.subscribe(\n      object => {\n        this.object = object;\n        /* console.log(this.object) */\n        if(this.object !=null){\n          if(this.object.etymology != undefined){\n            this.notes = this.object['etymology'];\n            this.link = this.object['etymology'];\n            this.bibliography = this.object['etymology'];\n          }else{\n            this.notes = this.object;\n            this.link = this.object;\n            this.bibliography = this.object;\n          }\n        }else{\n          this.notes = null;\n          this.link = null;\n          this.bibliography = null;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.metadata_subscr.unsubscribe();\n  }\n}\n","\n\n<div class=\"container-fluid\">\n\t<div class=\"row\" >\n\t\t<div class=\"col-md-9\">\n\t\t\t<app-lexicon-panel></app-lexicon-panel>\n\t\t</div>\n\t\t<div class=\"col-md-3 \">\n\t\t\t<div class=\"container-fluid p-1\">\n\t\t\t\t<div id=\"accordion\" #accordion>\n\t\t\t\t\t<app-note-panel [noteData]=\"notes\"></app-note-panel>\n\t\t\t\t\t<app-link-panel [linkData]=\"link\"></app-link-panel>\n\t\t\t\t\t<app-bibliography-panel [biblioData]=\"bibliography\" id=\"bibliographyPanel\"></app-bibliography-panel>\n\t\t\t\t\t<app-attestation-panel [attestationData]=\"attestation\"></app-attestation-panel>\n\t\t\t\t\t<app-metadata-panel [metadataData]=\"metadata\"></app-metadata-panel>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport interface LexicalEntryRequest {\n  text: string,\n  searchMode: searchModeEnum,\n  type: typeEnum | string,\n  pos: string,\n  formType: formTypeEnum | string,\n  author: string,\n  lang: string,\n  status: string,\n  offset: number,\n  limit: number\n}\n\nexport enum searchModeEnum {\n  equals = \"equals\",\n  startsWith = \"startsWith\",\n  contains = \"contains\",\n  endsWith = \"endsWith\"\n}\n\nexport enum typeEnum {\n  word = \"word\",\n  multi = \"multi-word expression\",\n  affix = \"affix\"\n}\n\nexport enum formTypeEnum {\n  flexed = \"flexed\",\n  entry = \"entry\"\n}","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ElementRef, HostListener, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from '@circlon/angular-tree-component';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\nimport { ToastrService } from 'ngx-toastr';\nimport { debounceTime } from 'rxjs/operators';\nimport { AnnotatorService } from 'src/app/services/annotator/annotator.service';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { v4 } from 'uuid';\n\n\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    /* dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }, */\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      \n      if(node.data.rename_mode){\n        $event.preventDefault();\n      }/* else{\n        TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n      } */\n    },\n    expanderClick: (tree, node, $event) => {\n      if(node.data.rename_mode){\n        $event.preventDefault();\n      }else{\n        //console.log(node);\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    }\n    /* contextMenu: (tree, node, $event) => {\n      //$event.preventDefault();\n      //alert(`context menu for ${node.data.name}`);\n      TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event);\n    } */\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n\n\n@Component({\n  selector: 'app-text-tree',\n  templateUrl: './text-tree.component.html',\n  styleUrls: ['./text-tree.component.scss'],\n  providers: [DatePipe],\n})\n\nexport class TextTreeComponent implements OnInit {\n  @ViewChild('metadata_tags') metadata_tags_element: any;\n  @ViewChild('treeText') treeText: any;\n  @ViewChild(ContextMenuComponent) public basicMenu: ContextMenuComponent;\n  \n  @HostListener('document:click', ['$event'])\n  clickout(event : MouseEvent) {\n    if(this.renameNode_input != undefined){\n      if(this.renameNode_input.nativeElement.contains(event.target)) {\n        console.log(\"clicked inside\");\n        event.stopPropagation();\n      } else {\n        console.log(\"clicked outside\");\n        \n        var that = this;\n\n        setTimeout(() => {\n          //@ts-ignore\n          $('.input-tooltip').tooltip('hide');\n          setTimeout(() => {\n            that.treeText.treeModel.getNodeBy(\n              item => {\n                item.data.rename_mode = false;\n              }\n            )\n          }, 100);\n        }, 300);\n      }\n    }\n  }\n  \n  show = false;\n  nodes = [];\n\n  renameNodeSelected : any;\n  validName = null;\n  searchIconSpinner = false;\n  searchIconSpinner_input = false;\n  selectedFileToCopy : any;\n  selectedFileToCopyArray : any;\n  selectedNodeId;\n  selectedEpidocId;\n\n  memoryMetadata = [];\n  metadataForm = new FormGroup({\n    element_id : new FormControl(null),\n    metadata_array: new FormArray([], [Validators.required]),\n  })\n  \n  \n  metadata_array: FormArray;\n  metadata_search : FormArray;\n\n  \n  options: ITreeOptions = {\n    actionMapping,\n    allowDrag: (node) => node.isLeaf,\n    allowDrop: (element, { parent, index }) => {\n      // return true / false based on element, to.parent, to.index. e.g.\n      //console.log(element, parent, index, parent.data.type == 'folder')\n      return parent.data.type == 'directory';\n    },\n    getNodeClone: (node) => ({\n      ...node.data,\n      id: v4(),\n      name: `copy of ${node.data.name}`\n    })\n  };\n\n  \n/*   @ViewChild('renameFolderInput') renameFolder_input:ElementRef; \n  @ViewChild('renameFileInput') renameFile_input:ElementRef;  */\n  @ViewChild('uploadFile') uploadFile_input:ElementRef; \n  @ViewChild('renameNodeInput') renameNode_input:ElementRef; \n  /* @ViewChild('renameFolderModel', {static: false}) renameFolderModal: ModalComponent; */\n  @ViewChild('editMetadata', {static: false}) editMetadataModal: ModalComponent;\n  \n  date = this.datePipe.transform(new Date(), 'yyyy-MM-ddThh:mm');\n  counter = 0;\n\n  textFilterForm = new FormGroup({\n    search_text : new FormControl(null),\n    search_mode : new FormControl(null),\n    import_date : new FormControl(this.date),\n    date_mode : new FormControl(''),\n    /* metadata_array : new FormArray([this.createMetadataItemSearch()]) */\n  })\n\n  initialValues;\n\n  \n  \n  constructor(private lexicalService: LexicalEntriesService, private annotatorService : AnnotatorService, private expander : ExpanderService, private element: ElementRef, private documentService: DocumentSystemService, private renderer: Renderer2, private formBuilder: FormBuilder, private datePipe:DatePipe, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.loadTree();\n    \n    this.textFilterForm = this.formBuilder.group({\n      search_text : new FormControl(null),\n      search_mode : new FormControl('start'),\n      import_date : new FormControl(this.date),\n      date_mode : new FormControl('until'),\n      metadata_array : new FormArray([])\n    })\n\n    this.onChanges();\n    \n    this.metadataForm = this.formBuilder.group({\n      element_id : new FormControl(null),\n      name : new FormControl(null),\n      metadata_array: new FormArray([], [Validators.required]),\n    });\n\n    this.initialValues = this.textFilterForm.value\n  }\n\n  onChanges() {\n    this.textFilterForm.valueChanges.pipe(debounceTime(500)).subscribe(searchParams => {\n      console.log(searchParams)\n      this.searchFilter(searchParams)\n    })\n  }\n  \n  onEvent = ($event: any) => {\n    console.log($event);\n\n    if ($event.eventName == 'activate' && $event.node.data.type != 'directory' && this.selectedNodeId != $event.node.data['element-id']) {\n      this.selectedNodeId = $event.node.data['element-id'];\n      this.selectedEpidocId = $event.node.data.metadata['itAnt_ID'];\n      //@ts-ignore\n      $(\"#epigraphyTabModal\").modal(\"show\");\n      $('.modal-backdrop').appendTo('.epigraphy-tab-body');\n      //@ts-ignore\n      $('#epigraphyTabModal').modal({backdrop: 'static', keyboard: false})  \n      $('body').removeClass(\"modal-open\")\n      $('body').css(\"padding-right\", \"\");\n\n\n      this.annotatorService.getIdText(this.selectedEpidocId);\n\n      this.documentService.getContent(this.selectedNodeId).subscribe(\n        data=>{\n\n          //console.log(\"XML\", data)\n          let text = data.text;\n          let object = {\n            xmlString : text\n          }\n\n          let xmlDom = new DOMParser().parseFromString(text, \"text/xml\");\n\n          this.annotatorService.getTokens(this.selectedNodeId).subscribe(\n            data => {\n    \n              console.log(data)\n              let element_id = this.selectedNodeId;\n              let tokens = data.tokens;\n\n\n              this.documentService.sendToEpigraphyTab({\n                tokens : tokens,\n                element_id : element_id,\n                epidoc_id : this.selectedEpidocId,\n                xmlDoc : xmlDom\n              })\n\n    \n              if(!this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()){\n                if(!this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()){\n                  \n                  this.expander.expandCollapseEpigraphy(true);\n                  this.expander.openCollapseEpigraphy(true);\n                }\n              }else if(this.expander.isEditTabOpen() && !this.expander.isEpigraphyTabOpen()){\n                if(this.expander.isEditTabExpanded() && !this.expander.isEpigraphyTabExpanded()){\n                  this.expander.openCollapseEpigraphy(true);\n                  this.expander.expandCollapseEdit(false);\n                }\n              }\n    \n              let metadata = $event.node.data.metadata;\n              metadata['path'] = $event.node.data.path;\n              metadata['element-id'] = $event.node.data['element-id'];\n              if(metadata != undefined && Object.keys(metadata).length > 5){\n                this.documentService.sendToMetadataPanel(metadata);\n                this.documentService.triggerMetadataPanel(true)\n              }else{\n                this.documentService.sendToMetadataPanel(null);\n                this.documentService.triggerMetadataPanel(false)\n              }\n            },\n            error => {\n              console.log(error)\n            }\n          );\n\n          this.documentService.sendLeidenToEpigraphyTab(null);\n          this.documentService.testConvert(object).subscribe(\n            data=>{\n              //console.log(\"TEST\", data);\n              \n              if(data != undefined){\n                try {\n                  let raw = data.xml;\n                  let HTML =  new DOMParser().parseFromString(raw, \"text/html\");\n                  console.log(HTML)\n\n                  let domNodes = new DOMParser().parseFromString(raw, \"text/html\").querySelectorAll('#edition .textpart');\n                  let childNodes = [];\n                  if(Array.from(domNodes).length > 1){\n                    Array.from(domNodes).forEach(childNode=> {\n                      Array.from(childNode.childNodes).forEach(subChild => {\n                        Array.from(subChild.childNodes).forEach(x => {\n                          childNodes.push(x)\n                        })\n                      })\n                    })\n                  }else{\n                    childNodes = Array.from(new DOMParser().parseFromString(raw, \"text/html\").querySelectorAll('#edition .textpart')[0].childNodes[0].childNodes);\n                  }\n                  \n                  \n                  \n                  let leidenLines = []; \n\n                  for(var i = 0; i < childNodes.length; i++){\n                    let node = childNodes[i];\n\n                    if(node.nodeName == 'A' || node.nodeName == 'BR'){\n                      \n                      let string = '';\n                      //console.log(\"LINE BREAK: \" + i)\n                      for(var j = i; j < childNodes.length; j++){\n\n                        let textNode = childNodes[j];\n                        \n                        if(textNode.nodeName == '#text' && textNode.nodeValue.trim() != ''){\n\n                          string += textNode.nodeValue;\n\n                          if(j == childNodes.length-1){\n                            leidenLines.push(string);\n                            break;\n                          }\n\n                          //console.log(textNode.nodeValue)\n                        }else if((textNode.nodeName == 'BR' || textNode?.id?.toLowerCase().includes('face'))&& i != j){\n                          leidenLines.push(string)\n                          \n                          i = j-1;\n                          break;\n                        }\n\n                        if(j == childNodes.length-1 && string != ''){\n                          leidenLines.push(string);\n                          break;\n                        }\n                      }\n                    }\n                  }\n\n                  this.documentService.sendLeidenToEpigraphyTab(leidenLines);\n\n\n                  let translations = new DOMParser().parseFromString(raw, \"text/html\").querySelectorAll('#translation');\n                  let translationArray = [];            \n                  translations.forEach(element=>{\n                    let childNodes = element.childNodes;\n                    let string = '';\n                    childNodes.forEach((child : any) =>{\n                      if(child.nodeName == 'P'){\n                        \n                        string += child.innerHTML;\n                      }\n                    })\n                    translationArray.push(string)\n                  })\n                  \n                  this.documentService.sendTranslationToEpigraphyTab(translationArray);\n\n                } catch (error) {\n                  console.log(error)\n                  \n                }\n              } \n            },error =>{\n              console.log(\"ERROR TEST\", error)\n              this.documentService.sendLeidenToEpigraphyTab(null);\n              this.documentService.sendTranslationToEpigraphyTab(null);\n            }\n          )\n\n        },error=>{\n          console.log(error)\n        }\n      )\n\n      \n      \n      \n      \n\n      /* this.annotatorService.getText(this.selectedNodeId).subscribe(\n        data=>{\n          console.log(data);\n          if(data != undefined){\n            this.documentService.sendTextToEpigraphyTab(data.text);\n          }\n        },\n        error=>{\n          if(error.status == 200){\n            if(error.error.text != \"\"){\n              this.documentService.sendTextToEpigraphyTab(error.error.text);\n            }  \n          }\n          console.log(error)\n        }\n      ) */\n\n      \n    \n    }\n  }\n\n  \n\n  onMoveNode($event) {\n    console.log($event);\n    let node_type = $event.node.type;\n    let target_type = $event.to.parent.type;\n    if(node_type === 'directory' && target_type === 'directory'){\n      this.moveFolder($event)\n    }else if(node_type === 'file' && target_type === 'directory'){\n      this.moveFile($event)\n    }\n    \n  }\n\n  loadTree(){\n    this.documentService.getDocumentSystem().subscribe(\n      data => {\n        console.log(data);\n\n        if(data['documentSystem'].length != 0){\n          //console.log(\"CIAO\")\n          this.nodes = data['documentSystem'];\n          setTimeout(() => {\n            this.treeText.treeModel.getNodeBy(\n              item => {\n                item.data.rename_mode = false;\n              }\n            )\n          }, 100);\n        }\n        \n        \n        this.counter = data['results'];\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  \n\n  isFolder = (item : any) : boolean =>{\n    if(item.type != undefined){\n      return item.type == 'directory' && (this.treeText.treeModel.activeNodes.length == 1 || this.treeText.treeModel.activeNodes.length == 0);\n    }else{\n      return false\n    }\n  }\n\n  isFile = (item : any) : boolean =>{\n    if(item.type != undefined){\n      return item.type == 'file' && (this.treeText.treeModel.activeNodes.length == 1 || this.treeText.treeModel.activeNodes.length == 0);\n    }else{\n      return false\n    }\n  }\n\n  enableMetadata = (item : any) : boolean => {\n    return (item.type == 'file' || item.type == 'folder') && (this.treeText.treeModel.activeNodes.length == 1 || this.treeText.treeModel.activeNodes.length == 0);\n  }\n\n  multipleSelection = (item : any): boolean =>{\n    //console.log(this.treeText.treeModel.activeNodes)\n    return this.treeText.treeModel.activeNodes.length > 1;\n  }\n\n  noRoot(item : any){\n    return item.name != 'root';\n  }\n\n  isFolderMultiple = (item : any) : boolean => {\n    if(this.selectedFileToCopyArray != undefined){\n      return item.type == 'directory' && this.selectedFileToCopyArray.length > 1;\n    }else{\n      return false;\n    }\n  }\n\n  pasteElementsReq = (item : any) : boolean => {\n    if(this.selectedFileToCopyArray != undefined){\n      return this.selectedFileToCopyArray.length > 1;\n    }else{\n      return false;\n    }\n    \n  }\n\n  pasteElements(item){\n    console.log(item)\n    let target_element_id = item['element-id']\n    if(this.selectedFileToCopyArray != undefined){\n      this.selectedFileToCopyArray.forEach((element : any) => {\n        if(element.data.type == 'file'){\n\n          let parameters = {\n            \"requestUUID\": \"string\",\n            \"user-id\": 0,\n            \"element-id\": element?.data['element-id'],\n            \"target-id\": target_element_id\n          }\n\n          this.documentService.copyFileTo(parameters).subscribe(\n            data=>{\n              console.log(data);\n              //this.nodes = data['documentSystem'];\n              this.toastr.info('File '+ element?.data?.name +' copied', '', {\n                timeOut: 5000,\n              });\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === target_element_id){\n                  console.log('entrato')\n                  x.expand();\n      \n                  let node = {\n                    children : element?.data.children,\n                    \"element-id\" : element?.data['element-id']+123213,\n                    id : element?.data?.id+1232312,\n                    metadata : element?.data?.metadata,\n                    name : element?.data?.name,\n                    path : element?.data?.path,\n                    rename_mode : false,\n                    type : element?.data?.type\n                  }\n                  \n                  x.data.children.push(node)\n                    setTimeout(() => {\n                      this.counter = this.nodes.length;\n                      this.updateTreeView();\n                      this.treeText.treeModel.update();\n                      //this.treeText.treeModel.getNodeById(node.id).setActiveAndVisible();\n                    }, 100);\n                  }\n                })              \n      \n                this.treeText.treeModel.update()\n              \n                this.selectedFileToCopyArray = null;\n            },error=>{\n              //console.log(error)\n              this.selectedFileToCopyArray = null;\n            }\n          )\n        }else{\n          this.toastr.error('You can\\'t copy folder, please select only files or move entire folder', 'Error', {\n            timeOut: 5000\n          })\n        }\n      });\n    }\n  }\n\n  copyElements(){\n    this.selectedFileToCopy = null;\n    this.selectedFileToCopyArray = this.treeText.treeModel.activeNodes;\n  }\n  \n  removeElements(){\n    let selected_elements = Array.from(this.treeText.treeModel.activeNodes);\n    selected_elements.forEach(\n      (elements : any) => {\n        try {\n          let data_node = elements.data;\n          let parameters = {\n            \"requestUUID\" : \"string\",\n            \"user-id\" : 0,\n            \"element-id\" : data_node['element-id'],\n          }\n\n          if(data_node.type == 'file'){\n            this.documentService.removeFile(parameters).subscribe(\n              data=>{\n                console.log(data);\n                this.toastr.info('File '+ data_node.name +' deleted', '', {\n                  timeOut: 5000,\n                });\n                \n                //this.nodes = data['documentSystem'];\n                this.lexicalService.sendToAttestationPanel(null);\n                this.documentService.sendToEpigraphyTab(null)\n                this.expander.expandCollapseEpigraphy(false);\n                this.expander.openCollapseEpigraphy(false);\n\n                if(this.expander.isEditOpen){\n                  this.expander.expandCollapseEdit(true);\n                }\n      \n                this.documentService.sendToMetadataPanel(null)\n                \n                /* expandedNodes.forEach( (node: TreeNode) => {\n                \n                  setTimeout(() => {\n                    this.treeText.treeModel.getNodeBy(x => {\n                      if(x.data['element-id'] === node.data['element-id']){\n                        x.expand()\n                      }\n                    })              \n                  }, 300);\n                }) */\n      \n                this.treeText.treeModel.getNodeBy(x => {\n                  if(x.data['element-id'] === data_node['element-id']){\n                    x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1)\n                  }\n                })\n      \n                this.treeText.treeModel.update()\n      \n                setTimeout(() => {\n                  console.log(this.nodes)\n                  this.counter = this.nodes.length;\n                }, 100);\n                \n                \n              },error=>{\n                console.log(error)\n                if(typeof(error.error) == 'string'){\n                  this.toastr.info(error.error, '', {\n                    timeOut: 5000,\n                  });\n                }\n                \n              }\n            )\n          }else if(data_node.type == 'directory'){\n            this.documentService.removeFolder(parameters).subscribe(\n              data=>{\n                console.log(data);\n                \n                this.toastr.info('Folder ' + data_node.name + ' removed correctly', 'Info', {\n                  timeOut: 5000\n                })\n      \n                this.treeText.treeModel.getNodeBy(x => {\n                  if(x.data['element-id'] === data_node['element-id']){\n                    x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1)\n                  }\n                })\n      \n                this.treeText.treeModel.update()\n      \n                setTimeout(() => {\n                  console.log(this.nodes)\n                  this.counter = this.nodes.length;\n                }, 100);\n                \n                \n              },error=>{\n                console.log(error)\n                this.toastr.error('Something went wront ', 'Error', {\n                  timeOut: 5000\n                })\n                if(typeof(error.error) == 'string'){\n                  this.toastr.info(error.error, '', {\n                    timeOut: 5000,\n                  });\n                }\n              }\n            )\n          }\n\n          \n        } catch (error) {\n          \n        }\n        \n\n      }\n    )\n  }\n\n  createNewFile(evt){\n    if(evt != undefined){\n      console.log(evt)\n      let element_id = evt['element-id'];\n      let parameters = {\n        requestUUID : \"string\",\n        \"user-id\" : 0,\n        \"element-id\" : element_id,\n        filename : \"new_file\"+Math.floor(Math.random() * (99999 - 10) + 10)\n      }\n\n      this.documentService.createFile(parameters).subscribe(\n        data =>{\n          console.log(data)\n          this.treeText.treeModel.getNodeBy(x => {\n            if(x.data['element-id'] === element_id){\n              x.expand()\n              \n              this.toastr.info('New file added', '', {\n                timeOut: 5000,\n              });\n              console.log(x)\n              x.data.children.push(data.node)\n              setTimeout(() => {\n                this.counter = this.nodes.length;\n                this.updateTreeView();\n                this.treeText.treeModel.update();\n                this.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n              }, 100);\n              \n            }\n          })\n        },error=> {\n          console.log(error)\n        }\n      )\n    }\n  }\n  \n\n  addFolder(evt){\n    if(evt != undefined){\n      let element_id = evt['element-id'];\n      let parameters = {\n        \"requestUUID\" : \"string\",\n        \"user-id\" : 0,\n        \"element-id\" : element_id\n      }\n      \n      const expandedNodes = this.treeText.treeModel.expandedNodes;\n      \n      this.documentService.addFolder(parameters).subscribe(\n        data=>{\n          console.log(data)\n          this.toastr.info('New folder added', '', {\n            timeOut: 5000,\n          });\n          this.treeText.treeModel.getNodeBy(x => {\n            if(x.data['element-id'] === element_id){\n              x.expand()\n\n              let element_id_new_node = data.node['element-id'];\n              let id_new_node = Math.floor(Math.random() * (9728157429307 - 1728157429307) + 1728157429307);\n              let new_node = {\n                \"children\" : [],\n                \"element-id\" : element_id_new_node,\n                \"id\" : id_new_node,\n                \"metadata\" : {},\n                \"path\" : \"\",\n                \"name\" : data.node.name,\n                \"type\" : \"directory\",\n                \"rename_mode\" : false\n              }\n              console.log(x)\n              x.data.children.push(new_node);\n              \n              setTimeout(() => {\n                this.updateTreeView();\n                this.treeText.treeModel.update();\n                this.treeText.treeModel.getNodeById(id_new_node).setActiveAndVisible();\n              }, 100);\n              \n            }\n          }) \n          \n        },error=>{\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  addFile(evt){\n    console.log(evt)\n    let element_id = this.uploadFile_input.nativeElement['element-id'];\n    this.selectedFileToCopy = null;\n    let file_name, parameters;\n\n    if(evt.target.files != undefined){\n      if(evt.target.files.length == 1){\n        file_name = evt.target.files[0].name;\n        parameters = {\n          \"requestUUID\" : \"string\",\n          \"user-id\" : 0,\n          \"element-id\" : element_id,\n          \"file-name\" : file_name\n        }\n        const formData = new FormData();\n        formData.append('file', evt.target.files[0])\n        this.documentService.uploadFile(formData, element_id, 11).subscribe(\n          data=>{\n            console.log(data)\n           \n            this.treeText.treeModel.getNodeBy(x => {\n              if(x.data['element-id'] === element_id){\n                x.expand()\n                \n                this.toastr.info('New file added', '', {\n                  timeOut: 5000,\n                });\n                console.log(x)\n                x.data.children.push(data.node)\n                setTimeout(() => {\n                  this.counter = this.nodes.length;\n                  this.updateTreeView();\n                  this.treeText.treeModel.update();\n                  this.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n                }, 100);\n                \n              }\n            })    \n            \n            \n            \n          },error=>{\n            console.log(error)\n          }\n        )\n      }else{\n        let files_array = evt.target.files;\n        Array.from(files_array).forEach((element : any) => {\n\n          file_name = element.name;\n          parameters = {\n            \"requestUUID\": \"string\",\n            \"user-id\": 0,\n            \"element-id\": element_id,\n            \"file-name\": file_name\n          }\n\n          const formData = new FormData();\n          formData.append('file', element);\n\n          this.documentService.uploadFile(formData, element_id, 11).subscribe(\n            data => {\n              console.log(data)\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === element_id){\n                  x.expand()\n                  \n                  this.toastr.info('New file added', '', {\n                    timeOut: 5000,\n                  });\n                  console.log(x)\n                  x.data.children.push(data.node)\n                  setTimeout(() => {\n                    this.counter = this.nodes.length;\n                    this.updateTreeView();\n                    this.treeText.treeModel.update();\n                    this.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n                  }, 100);\n                  \n                }\n              })\n\n\n\n            }, error => {\n              console.log(error);\n              this.toastr.error('Error when adding new file', '', {\n                timeOut: 5000,\n              });\n            }\n          )\n        });\n      }\n    }\n        \n    console.log(parameters)\n    const expandedNodes = this.treeText.treeModel.expandedNodes;\n    \n  }\n\n  triggerUploader(evt){\n    let element_id = evt['element-id']\n    this.renderer.setProperty(this.uploadFile_input.nativeElement, 'element-id', element_id)\n    this.uploadFile_input.nativeElement.click();\n    \n  }\n\n  copyFile(evt){\n    console.log(evt);\n    this.selectedFileToCopy = evt;\n    this.selectedFileToCopyArray = null;\n  }\n\n  pasteFile(evt){\n    console.log(evt)\n    let element_id_target = evt['element-id'];\n    let element_id_source = this.selectedFileToCopy['element-id'];\n    let parameters = {\n      \"requestUUID\": \"string\",\n      \"user-id\": 0,\n      \"element-id\": element_id_source,\n      \"target-id\": element_id_target\n    }\n            \n    this.documentService.copyFileTo(parameters).subscribe(\n      data=>{\n        console.log(data);\n        //this.nodes = data['documentSystem'];\n        this.toastr.info('File '+ evt['name'] +' copied', '', {\n          timeOut: 5000,\n        });\n        this.treeText.treeModel.getNodeBy(x => {\n          if(x.data['element-id'] === element_id_target){\n            console.log('entrato')\n            x.expand();\n\n            let node = {\n              children : this.selectedFileToCopy.children,\n              \"element-id\" : this.selectedFileToCopy['element-id'],\n              id : this.selectedFileToCopy.id+1232312,\n              metadata : this.selectedFileToCopy.metadata,\n              name : this.selectedFileToCopy.name,\n              path : '',\n              rename_mode : false,\n              type : this.selectedFileToCopy.type\n            }\n            \n            x.data.children.push(node)\n              setTimeout(() => {\n                this.counter = this.nodes.length;\n                this.updateTreeView();\n                this.treeText.treeModel.update();\n                this.treeText.treeModel.getNodeById(node.id).setActiveAndVisible();\n              }, 100);\n            }\n          })              \n\n          this.treeText.treeModel.update()\n        \n          this.selectedFileToCopy = null;\n      },error=>{\n        //console.log(error)\n        this.selectedFileToCopy = null;\n      }\n    )\n    \n\n  }\n\n  downloadFile(evt){\n    console.log(evt)\n    let element_id = evt['element-id'];\n    let parameters = {\n      \"requestUUID\": \"string\",\n      \"user-id\": 0,\n      \"element-id\": element_id,\n    }\n            \n    this.documentService.downloadFile(parameters).subscribe(\n      data=>{\n        console.log(data);\n        this.toastr.info('File '+ evt['name'] +' downloaded', '', {\n          timeOut: 5000,\n        });\n        \n      },error=>{\n        //console.log(error)\n      }\n    )\n  }\n  \n  removeFile(evt){\n    this.selectedFileToCopy = null;\n    if(evt != undefined){\n      let element_id = evt['element-id'];\n      let parameters = {\n        \"requestUUID\" : \"string\",\n        \"user-id\" : 0,\n        \"element-id\" : element_id,\n      }\n\n\n      const expandedNodes = this.treeText.treeModel.expandedNodes;\n\n      this.documentService.removeFile(parameters).subscribe(\n        data=>{\n          console.log(data);\n          this.toastr.info('File '+ evt['name'] +' deleted', '', {\n            timeOut: 5000,\n          });\n          \n          //this.nodes = data['documentSystem'];\n          this.lexicalService.sendToAttestationPanel(null);\n          this.documentService.sendToEpigraphyTab(null)\n          this.expander.expandCollapseEpigraphy(false);\n          this.expander.openCollapseEpigraphy(false);\n\n          this.documentService.sendToMetadataPanel(null)\n\n          if(this.expander.isEditOpen){\n            this.expander.expandCollapseEdit();\n          }\n          \n          /* expandedNodes.forEach( (node: TreeNode) => {\n          \n            setTimeout(() => {\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === node.data['element-id']){\n                  x.expand()\n                }\n              })              \n            }, 300);\n          }) */\n\n          this.treeText.treeModel.getNodeBy(x => {\n            if(x.data['element-id'] === element_id){\n              x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1)\n            }\n          })\n\n          this.treeText.treeModel.update()\n\n          setTimeout(() => {\n            console.log(this.nodes)\n            this.counter = this.nodes.length;\n          }, 100);\n          \n          \n        },error=>{\n          console.log(error)\n          if(typeof(error.error) == 'string'){\n            this.toastr.info(error.error, '', {\n              timeOut: 5000,\n            });\n          }\n          \n        }\n      )\n    }\n  }\n  \n\n\n  removeFolder(evt){\n    if(evt != undefined){\n      let element_id = evt['element-id'];\n      let parameters = {\n        \"requestUUID\" : \"string\",\n        \"user-id\" : 0,\n        \"element-id\" : element_id\n      }\n      this.toastr.info('Folder '+ evt['name'] +' deleted', '', {\n        timeOut: 5000,\n      });\n      const expandedNodes = this.treeText.treeModel.expandedNodes;\n\n      this.documentService.removeFolder(parameters).subscribe(\n        data=>{\n          console.log(data);\n          \n          //this.nodes = data['documentSystem'];\n          /* expandedNodes.forEach( (node: TreeNode) => {\n          \n            setTimeout(() => {\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === node.data['element-id']){\n                  x.expand()\n                }\n              })              \n            }, 300);\n          }) */\n\n          this.treeText.treeModel.getNodeBy(x => {\n            if(x.data['element-id'] === element_id){\n              x.parent.data.children.splice(x.parent.data.children.indexOf(x.data), 1)\n            }\n          })\n\n          this.treeText.treeModel.update()\n\n          setTimeout(() => {\n            console.log(this.nodes)\n            this.counter = this.nodes.length;\n          }, 100);\n          \n          \n        },error=>{\n          console.log(error)\n          if(typeof(error.error) == 'string'){\n            this.toastr.info(error.error, '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    }\n  }\n\n  moveFolder(evt){\n    if(evt != undefined){\n      //console.log(evt);\n      let element_id = evt.node['element-id'];\n      let target_id = evt.to.parent['element-id'];\n      let parameters = {\n        \"requestUUID\": \"string\",\n        \"user-id\": 0,\n        \"element-id\": element_id,\n        \"target-id\": target_id\n      }\n            \n      \n      this.documentService.moveFolder(parameters).subscribe(\n        data=>{\n          this.toastr.info('Folder '+ evt.node['name'] +' moved', '', {\n            timeOut: 5000,\n          });\n          /* //console.log(data); */\n        },error=>{\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  moveFile(evt){\n    if(evt != undefined){\n      console.log(evt);\n      let element_id = evt.node['element-id'];\n      let target_id = evt.to.parent['element-id'];\n      let parameters = {\n        \"requestUUID\": \"string\",\n        \"user-id\": 0,\n        \"element-id\": element_id,\n        \"target-id\": target_id\n      }\n            \n      \n      this.documentService.moveFileTo(parameters).subscribe(\n        data=>{\n          console.log(data);\n          this.toastr.info('File '+ evt.node['name'] +' moved', '', {\n            timeOut: 5000,\n          });\n          \n        },error=>{\n          //console.log(error)\n        }\n      )\n    }\n  }\n\n  renameNode(evt){\n    setTimeout(() => {\n      this.renameNode_input.nativeElement.focus();\n      //@ts-ignore\n      $('.input-tooltip').tooltip({\n          trigger: 'hover'\n      });\n    }, 300);\n    console.log(evt)\n    \n    this.treeText.treeModel.getNodeBy(\n      node => {\n        if(node.data['element-id'] == evt['element-id']){\n          node.data.rename_mode = true;\n          \n        }else{\n          node.data.rename_mode = false;\n        }\n      }\n    )\n  }\n\n  onRenamingNode(evt, node, new_value){\n    console.log(evt, node);\n    setTimeout(() => {\n      //@ts-ignore\n      $('.input-tooltip').tooltip({\n          trigger: 'hover'\n      });\n    }, 300);\n    switch(evt.key){\n      case 'Enter' : this.updateNodeName(node, new_value); break;\n      case 'Escape': this.exitRenamingMode(); break;\n      default: console.log(evt)\n    }\n    \n  }\n\n  updateNodeName(node, new_value){\n    this.searchIconSpinner_input = true;\n    let node_type = node.data.type;\n\n    if(new_value.match(/^[A-Za-z-_0-9. ]{3,}$/)){\n      let element_id = node.data['element-id'];\n      let parameters = {\n        \"requestUUID\": \"string\",\n        \"user-id\": 0,\n        \"element-id\": element_id,\n        \"rename-string\": new_value\n      }\n\n      if(node_type == 'directory'){\n        \n        this.documentService.renameFolder(parameters).subscribe(\n          data=> {\n            //console.log(data);\n            this.toastr.info('Folder '+ node.data.name +' renamed', '', {\n              timeOut: 5000,\n            });\n            setTimeout(() => {\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === element_id){\n                  x.data.name = new_value;\n                }\n              })              \n            }, 300);\n            this.searchIconSpinner_input = false;\n            this.renameNode_input.nativeElement.value = '';\n            var that = this;\n\n            setTimeout(() => {\n              //@ts-ignore\n              $('.input-tooltip').tooltip('hide');\n              setTimeout(() => {\n                that.treeText.treeModel.getNodeBy(\n                  item => {\n                    item.data.rename_mode = false;\n                  }\n                )\n              }, 100);\n            }, 100);\n          },error=>{\n            console.log(error)\n            var that = this;\n\n            setTimeout(() => {\n              //@ts-ignore\n              $('.input-tooltip').tooltip('hide');\n              setTimeout(() => {\n                that.treeText.treeModel.getNodeBy(\n                  item => {\n                    item.data.rename_mode = false;\n                  }\n                )\n              }, 100);\n            }, 100);\n          }\n        )\n\n      }else if(node_type == 'file'){\n        this.documentService.renameFile(parameters).subscribe(\n          data=> {\n            this.toastr.info('File renamed', '', {\n              timeOut: 5000,\n            });\n            //console.log(data);\n            setTimeout(() => {\n              this.treeText.treeModel.getNodeBy(x => {\n                if(x.data['element-id'] === element_id){\n                  x.data.name = new_value;\n                }\n              })              \n            }, 300);\n            this.searchIconSpinner_input = false;\n            this.renameNode_input.nativeElement.value = '';\n            var that = this;\n\n            setTimeout(() => {\n              //@ts-ignore\n              $('.input-tooltip').tooltip('hide');\n              setTimeout(() => {\n                that.treeText.treeModel.getNodeBy(\n                  item => {\n                    item.data.rename_mode = false;\n                  }\n                )\n              }, 100);\n            }, 100);\n          },error=>{\n            console.log(error)\n            var that = this;\n\n            setTimeout(() => {\n              //@ts-ignore\n              $('.input-tooltip').tooltip('hide');\n              setTimeout(() => {\n                that.treeText.treeModel.getNodeBy(\n                  item => {\n                    item.data.rename_mode = false;\n                  }\n                )\n              }, 100);\n            }, 100);\n          }\n        )\n      }\n    }\n    \n  }\n\n  exitRenamingMode(){\n    var that = this;\n\n    setTimeout(() => {\n      //@ts-ignore\n      $('.input-tooltip').tooltip('hide');\n      setTimeout(() => {\n        \n        that.searchIconSpinner_input = false;\n        that.treeText.treeModel.getNodeBy(\n          item => {\n            item.data.rename_mode = false;\n          }\n        )\n      }, 100);\n    }, 300);\n  }\n\n  saveMetadata(){\n    console.log(this.metadata_array.value)\n    let element_id = this.metadataForm.get('element_id').value;\n    let name = this.metadataForm.get('name').value;\n    let parameters = {\n      \"requestUUID\": \"string\",\n      \"metadata\": {},\n      \"user-id\": 0,\n      \"element-id\": element_id\n    };\n    \n    this.metadata_array.value.forEach(element => {\n      parameters.metadata[element.key] = element.value\n    });\n\n    const expandedNodes = this.treeText.treeModel.expandedNodes;\n\n    this.documentService.updateMetadata(parameters).subscribe(\n      data=> {\n        this.toastr.info('Metadata updated for ' + name + ' node' , '', {\n          timeOut: 5000,\n        });\n        //console.log(data);\n        this.nodes = data['documentSystem'];\n        expandedNodes.forEach( (node: TreeNode) => {\n          \n          setTimeout(() => {\n            this.treeText.treeModel.getNodeBy(x => {\n              if(x.data['element-id'] === node.data['element-id']){\n                x.setActiveAndVisible()\n              }\n            })              \n          }, 300);\n        })\n      },error =>{\n        console.log(error)\n      }\n    )\n  }\n\n  removeMetadataItem(index){\n    this.metadata_array = this.metadataForm.get('metadata_array') as FormArray;\n    let name = this.metadata_array.at(index).get('key').value;\n    this.toastr.info('Metadata deleted for ' + name + ' node' , '', {\n      timeOut: 5000,\n    });\n    this.memoryMetadata.splice(index, 1)\n    this.metadata_array.removeAt(index);\n    this.metadataForm.markAsTouched();\n    \n  }\n\n  addMetadata(k?, v?){\n    this.metadata_array = this.metadataForm.get('metadata_array') as FormArray;\n\n    if (k == undefined) {\n      this.metadata_array.push(this.createMetadataItem());\n    } else {\n      this.metadata_array.push(this.createMetadataItem(k, v));\n    }\n  }\n\n  onCloseRemoveMetadata(){\n    this.selectedFileToCopy = null;\n  }\n\n  deleteMetadata(){\n    let element_id = this.selectedFileToCopy['element-id'];\n    let name = this.selectedFileToCopy['name'];\n    let parameters = {\n      \"requestUUID\": \"string\",\n      \"user-id\": 0,\n      \"element-id\": element_id\n    }\n    \n    const expandedNodes = this.treeText.treeModel.expandedNodes;\n\n    this.documentService.deleteMetadata(parameters).subscribe(\n      data=> {\n        //console.log(data);\n        this.toastr.info('Metadata deleted for ' + name + ' node' , '', {\n          timeOut: 5000,\n        });\n        this.nodes = data['documentSystem'];\n        expandedNodes.forEach( (node: TreeNode) => {\n          \n          setTimeout(() => {\n            this.treeText.treeModel.getNodeBy(x => {\n              if(x.data['element-id'] === node.data['element-id']){\n                x.setActiveAndVisible()\n              }\n            })              \n          }, 300);\n        })\n      },error =>{\n        console.log(error)\n      }\n    )\n  }\n\n  onCloseModal(){\n    this.metadataForm.markAsUntouched();\n    this.metadata_array.clear();\n    this.memoryMetadata = [];\n  }\n\n  populateMetadata(item : any){\n    let element_id = item['element-id'];\n    let name = item['name'];\n    this.metadataForm.get('name').setValue(name, {emitEvent : false})\n    this.metadataForm.get('element_id').setValue(element_id, {emitEvent : false});\n    this.editMetadataModal.show();\n\n    this.metadata_array = this.metadataForm.get('metadata_array') as FormArray;\n    this.metadata_array.clear();\n    this.memoryMetadata = [];\n\n    if(Object.keys(item.metadata).length != 0){\n      for (const [key, value] of Object.entries(item.metadata)) {\n        console.log(`${key}: ${value}`);\n        this.addMetadata(key, value)\n      }\n    }else{\n      null;\n    }\n    \n  }\n\n  createMetadataItem(k?, v?){\n    if(k != undefined){\n      return this.formBuilder.group({\n        key: new FormControl(k, [Validators.required, Validators.minLength(0)]),\n        value: new FormControl(v, [Validators.required, Validators.minLength(0)])\n      })\n    }else{\n      return this.formBuilder.group({\n        key: new FormControl('', [Validators.required, Validators.minLength(0), this.uniqueIdValidator.bind(this)]),\n        value: new FormControl('', [Validators.required, Validators.minLength(0)])\n      })\n    }\n  }\n\n  uniqueIdValidator(control: FormControl) {\n    /* console.log(control)\n    console.log(this.metadata_array) */\n    if(control.value != ''){\n      if (this.metadata_array.value.find(item => item.key === control.value)) {\n        return { duplicate: true };\n      } else {\n        return null;\n      }\n    }else{\n      return null\n    }\n    \n  }\n\n  updateTreeView() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.input-tooltip').tooltip({\n          trigger: 'hover'\n      });\n    }, 300);\n    \n    setTimeout(() => {\n      this.treeText.sizeChanged();\n      //@ts-ignore\n      $('.lexical-tooltip').tooltip();\n    }, 1000);\n  }\n\n  resetFields(){\n    \n    this.textFilterForm.reset(this.initialValues, {emitEvent : false});\n    setTimeout(() => {\n      this.loadTree();\n      this.treeText.treeModel.update();\n      this.updateTreeView();\n      \n    }, 500);  \n    \n  }\n\n  searchFilter(newPar) {\n    \n    setTimeout(() => {\n      const viewPort_prova = this.element.nativeElement.querySelector('tree-viewport') as HTMLElement;\n      viewPort_prova.scrollTop = 0\n    }, 300);\n\n    let search_text = newPar.search_text != null ? newPar.search_text : '';\n    let date_pipe = this.datePipe.transform(newPar.import_date, 'yyyy-MM-ddThh:mm:ss.zzzZ')\n    this.searchIconSpinner = true;\n    let parameters = {\n      \"requestUUID\" : \"string\",\n      \"contains\" : newPar.search_mode == 'contains' ? true : false,\n      \"metadata\" : {},\n      \"search-text\": search_text,\n      \"start-with\" : newPar.search_mode == 'start' ? true : false,\n      \"user-id\": 0,\n      \"import-date\": date_pipe,\n      \"exact-date\": newPar.date_mode == 'exact' ? true : false,\n      \"from-date\":  newPar.date_mode == 'from' ? true : false,\n      \"util-date\":  newPar.date_mode == 'until' ? true : false\n    };\n    \n    console.log(parameters)\n    \n    this.documentService.searchFiles(newPar).subscribe(\n      data => {\n        if(data['files'].length > 0){\n          this.show = false;\n        }else {\n          this.show = true;\n        }\n        this.nodes = data['files'];\n        this.counter = data['results'];\n        this.treeText.treeModel.update();\n        this.updateTreeView();\n        this.searchIconSpinner = false;\n        \n      },\n      error => {\n        console.log(error)\n        this.searchIconSpinner = false;\n\n        this.toastr.error('Error on search text', 'Error', {\n          timeOut : 5000\n        })\n      }\n    )\n  }\n\n  addTagFn(name) {\n    return { name: name, tag: true };\n  }\n\n  triggerMetadata(){\n    console.log(this.metadata_tags_element.selectedItems)\n  }\n\n}\n\n","\n\n<form [formGroup]=\"textFilterForm\">\n  <div class=\"input-group col-md-12 mt-2 p-0\">\n    <input formControlName=\"search_text\" id=\"filterLexicalEntry\" name=\"search_text\" type=\"text\" class=\"form-control\" placeholder=\"Search\" />\n    <div class=\"input-group-append\">\n        <span class=\"input-group-text loading_icon_append\" id=\"basic-addon2\">\n            <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n        </span>\n    </div>\n    <div id=\"buttons-container\" class=\"input-group-append\">\n        <button class=\"btn btn-sm btn-secondary btn-block filter-button\" type=\"button\" value=\"Filter\" title=\"Filter\"\n            data-toggle=\"collapse\" data-target=\"#metadataFilterCollapse\" aria-expanded=\"false\"\n            aria-controls=\"metadataFilterCollapse\"><i class=\"fa fa-filter\"></i></button>\n        <button class=\"btn btn-sm btn-danger btn-block reset-button\" type=\"button\" value=\"Reset\" title=\"Reset\"\n            (click)=\"resetFields();\" style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\"><i\n                class=\"fa fa-times\"></i></button>\n        <button class=\"btn btn-sm btn-block counter-button\" type=\"button\"><span\n                class=\"font-weight-bold font-italic text-muted\">{{counter}}</span></button>\n    </div>\n  </div>\n\n  <div class=\"d-flex flex-wrap mt-3\">\n      <div class=\"col-md-6 col-sm-3\">\n          <div class=\"form-check\">\n              <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\"\n                  id=\"startRadio\" value=\"start\">\n              <label class=\"form-check-label\" for=\"startRadio\">\n                  Starts\n              </label>\n          </div>\n      </div>\n      <div class=\"col-md-6 col-sm-3\">\n          <div class=\"form-check\">\n              <input formControlName=\"search_mode\" class=\"form-check-input\" type=\"radio\" name=\"search_mode\"\n                  id=\"containsRadio\" value=\"contains\">\n              <label class=\"form-check-label\" for=\"containsRadio\">\n                  Contains\n              </label>\n          </div>\n      </div>\n  </div>\n\n  <div class=\"collapse multi-collapse\" id=\"metadataFilterCollapse\">\n  \n      <div class=\"d-flex flex-wrap mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group row\">\n            <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Date mode:</label>\n            <div class=\"col-sm-8\">\n              <select formControlName=\"date_mode\" class=\"form-control\" name=\"date_mode\">\n                <option value=\"exact\">Exact</option>\n                <option value=\"from\">From</option>\n                <option value=\"until\">Until</option>\n            </select>\n            </div>\n          </div>\n        </div> \n      </div>\n      \n      <div class=\"d-flex flex-wrap\">\n        <div class=\"col-md-12\">\n          <input formControlName=\"import_date\" type=\"datetime-local\" class=\"form-control\"\n                name=\"import_date\" value=\"date\"\n                min=\"2018-06-07T00:00\" [max]=\"date\">\n        </div>\n      </div>\n\n      <div class=\"d-flex flex-wrap mt-3\">\n        <div class=\"col-md-12\">\n          <ng-select #metadata_tags \n            [items]=\"[]\"\n            [addTag]=\"true\"\n            [multiple]=\"true\"\n            [selectOnTab]=\"true\"\n            placeholder=\"Insert metadata tags\"\n            (change)=\"triggerMetadata()\"\n            [isOpen]=\"false\">\n          </ng-select>\n          \n        </div>\n      </div>\n  </div>\n</form>\n\n\n<div class=\"col-md-12 mt-3 rounded border border-secondary tree-view\">\n  <p *ngIf=\"show\">Nessun risultato</p>\n  <tree-root #treeText [nodes]=\"nodes\" [options]=\"options\" [focused]=\"true\" (activate)=\"onEvent($event)\"\n    (moveNode)=\"onMoveNode($event)\">\n    <ng-template #treeNodeTemplate let-node let-index=\"index\">\n      \n      <div *ngIf=\"node.data.rename_mode\" class=\"input-group\">\n        <input autofocus #renameNodeInput class=\"form-control\" type=\"text\" [value]=\"node.data.name\" (keyup)=\"onRenamingNode($event, node, renameNodeInput.value)\" style=\"height: 22px; border-right: transparent;\" />\n        <div class=\"input-group-append input-tooltip\"  data-toggle=\"tooltip\"\n        data-placement=\"top\" data-html=\"true\" title=\"Click enter to rename; Click ESC to exit\">\n          <span class=\"input-group-text\"><i class=\"fas fa-question\"></i></span>\n        </div>\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text loading_icon_append\">\n              <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner_input\">\n                  <span class=\"sr-only\">Loading...</span>\n              </div>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"!node.data.rename_mode\">\n        <i class=\"far fa-folder\" *ngIf=\"node.data.type == 'directory' && !node.isExpanded\"></i>\n        <i class=\"far fa-folder-open\" *ngIf=\"node.data.type == 'directory' && node.isExpanded\"></i>\n        <i class=\"far fa-file-alt\" *ngIf=\"node.data.type == 'file'\"></i>\n        <span [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"node.data\">\n          {{ node.data.name }}\n        </span>\n      </div>\n      \n    </ng-template>\n  </tree-root>\n  <context-menu>\n\n    <!-- FOLDER CONTEXT MENU -->\n    <ng-template contextMenuItem let-item [visible]=\"isFolder \" (execute)=\"triggerUploader($event.item)\">\n      Add File\n    </ng-template>\n    <ng-template contextMenuItem divider=\"true\" [visible]=\"isFolder\"></ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolder \" (execute)=\"createNewFile($event.item)\">\n      Create new empty File\n    </ng-template>\n    <ng-template contextMenuItem divider=\"true\" [visible]=\"isFolder\"></ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolder \" (execute)=\"addFolder($event.item)\">\n      Add Folder\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolder \" [enabled]=\"noRoot\" (execute)=\"removeFolder($event.item)\">\n      Delete Folder\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolder \" [enabled]=\"noRoot\"\n      (execute)=\"renameNode($event.item)\">\n      <span >Rename Folder</span> <!-- (click)=\"renameFolderModel.show();\" -->\n    </ng-template>\n\n    <ng-template contextMenuItem let-item [visible]=\"multipleSelection\" (execute)=\"copyElements()\">\n      Copy Elements\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolderMultiple\" (execute)=\"pasteElements($event.item)\">\n      Paste Elements\n    </ng-template>\n    <ng-template contextMenuItem divider=\"true\" [visible]=\"multipleSelection\"></ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"multipleSelection\" (execute)=\"removeElements()\">\n      Delete Elements\n    </ng-template>\n    \n\n<!--     <ng-template contextMenuItem divider=\"multipleSelection\" [visible]=\"multipleSelection\"></ng-template>\n -->\n    <!-- FILE CONTEXT MENU -->\n    <ng-template contextMenuItem let-item [visible]=\"isFile\" (execute)=\"copyFile($event.item)\">\n      Copy File\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFolder && selectedFileToCopy != null\"\n      (execute)=\"pasteFile($event.item)\">\n      Paste File\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFile\" (execute)=\"renameNode($event.item)\">\n      <span >Rename File</span> <!-- (click)=\"renameFileModel.show();\" -->\n    </ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFile\" (execute)=\"removeFile($event.item)\">\n      Delete File\n    </ng-template>\n    <ng-template contextMenuItem divider=\"isFile\" [visible]=\"isFile\"></ng-template>\n    <ng-template contextMenuItem let-item [visible]=\"isFile\" (execute)=\"downloadFile($event.item)\">\n      Download File\n    </ng-template>\n\n    <!-- <ng-template contextMenuItem [visible]=\"enableMetadata\" divider=\"true\"></ng-template> -->\n    <!-- METADATA -->\n    <!-- <ng-template contextMenuItem let-item [visible]=\"enableMetadata\"  (execute)=\"populateMetadata($event.item)\">\n      <span (click)=\"editMetadata.show();\">Edit Metadata</span>\n    </ng-template> -->\n    <!-- <ng-template contextMenuItem let-item  [visible]=\"enableMetadata\" (execute)=\"copyFile($event.item)\">\n      <span (click)=\"removeMetadataModal.show();\"> Delete Metadata</span>\n    </ng-template> -->\n  </context-menu>\n</div>\n\n<input #uploadFile type=\"file\" accept=\".xml\" hidden (change)=\"addFile($event)\" multiple>\n\n<!-- <app-modal #renameFolderModel class=\"add_languages_modal\">\n  <ng-container class=\"app-modal-header\"></ng-container>\n  <ng-container class=\"app-modal-body\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"form-group row ml-2 mt-3 mr-2\">\n          <label for=\"inputLabel\" class=\"col-lg-5 col-form-label\" style=\"font-size: 12px;\">Rename Folder:</label>\n          <div class=\"input-group col-lg-7\" style=\"align-items: center;\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"\" #renameFolderInput>\n            <div class=\"input-group-append ml-2\">\n              <button class=\"btn btn-success\" type=\"button\" (click)=\"renameFolder(renameFolderInput.value);\"><i\n                  class=\"fas fa-check\"></i></button>\n            </div>\n            \n            <div class=\"invalid-feedback\" [hidden]=\"validName\" style=\"display: block; font-size: 9px;\">\n              Please, insert at least three characters.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</app-modal>\n\n<app-modal #renameFileModel class=\"add_languages_modal\">\n  <ng-container class=\"app-modal-header\"></ng-container>\n  <ng-container class=\"app-modal-body\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"form-group row ml-2 mt-3 mr-2\">\n          <label for=\"inputLabel\" class=\"col-lg-5 col-form-label\" style=\"font-size: 12px;\">Rename File:</label>\n          <div class=\"input-group col-lg-7\" style=\"align-items: center;\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"\" #renameFileInput>\n            <div class=\"input-group-append ml-2\">\n              <button class=\"btn btn-success\" type=\"button\" (click)=\"renameFile(renameFileInput.value);\"><i\n                  class=\"fas fa-check\"></i></button>\n            </div>\n          \n            <div class=\"invalid-feedback\" [hidden]=\"validName\" style=\"display: block; font-size: 9px;\">\n              Please, insert at least three characters.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</app-modal> -->\n\n<app-modal #editMetadata class=\"add_languages_modal\" [inViewport]=\"true\" (closeModal)=\"onCloseModal()\">\n  <ng-container class=\"app-modal-header\"></ng-container>\n  <ng-container class=\"app-modal-body\">\n    <form [formGroup]=\"metadataForm\">\n      <div class=\"form-group row ml-2 mt-3 mr-2 justify-content-between\">\n        <button class=\"btn btn-primary\" (click)=\"addMetadata()\">Add Metadata <i class=\"fas fa-plus\"></i></button>\n        <button class=\"btn btn-success\" (click)=\"saveMetadata()\"\n          [disabled]=\"!metadataForm.touched || !metadataForm.valid\">Save Metadata <i class=\"fas fa-plus\"></i></button>\n      </div>\n\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div formArrayName=\"metadata_array\">\n            <div *ngFor=\"let metadata_item of metadataForm.get('metadata_array')['controls']; let i = index\">\n              <div [formGroupName]=\"i\">\n                \n\n\n                <div class=\"d-flex my-2\">\n                  <div class=\"col-md-5\">\n                    <input formControlName=\"key\" name=\"key\" type=\"text\" class=\"form-control\"\n                      placeholder=\"Insert metadata key\">\n                    <div class=\"invalid-feedback\" [hidden]=\"!metadata_item.get('key').invalid\" style=\"display: block; font-size: 9px;\">\n                      \n                      <span *ngIf=\"!metadata_item.get('key').hasError('duplicate')\">\n                        Invalid field\n                      </span>\n                      <span *ngIf=\"metadata_item.get('key').hasError('duplicate')\">\n                        Duplicate field\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"input-group col-md-7\">\n                    <input formControlName=\"value\" name=\"value\" type=\"text\" class=\"form-control\"\n                      placeholder=\"Insert metadata value\">\n                   \n                    <div class=\"input-group-append ml-2\">\n                      <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeMetadataItem(i)\" style=\"border-radius: 0.25rem;\">\n                        <i class=\"fa fa-trash\"></i>\n                      </button>\n                    </div>\n                    <div class=\"invalid-feedback\" [hidden]=\"!metadata_item.get('value').invalid\" style=\"display: block; font-size: 9px;\">\n                      Invalid field\n                  </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group row ml-2 mt-3 mr-2\"\n              *ngIf=\"metadataForm.get('metadata_array')['controls'].length == 0\">\n              <label for=\"inputLabel\" class=\"col-lg-5 col-form-label font-italic\" style=\"font-size: 12px;\">No\n                metadata</label>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    </form>\n\n  </ng-container>\n</app-modal>\n\n<app-modal #removeMetadataModal class=\"remove_languages_modal\" [inViewport]=\"true\" (closeModal)=\"onCloseRemoveMetadata()\">\n  <ng-container class=\"app-modal-header\"></ng-container>\n  <ng-container class=\"app-modal-body\">\n      <div class=\"card\">\n          <div class=\"card-body\">\n              <div class=\"form-group row ml-2 mt-3 mr-2\">\n                  <label for=\"inputLabel\" class=\"col-lg-12 col-form-label\" style=\"font-size: 12px; text-align: center\">Are you sure to delete the metadata of {{selectedFileToCopy?.name}}?</label>\n              </div>\n              <div class=\"form-group row ml-2 mt-3 mr-2 justify-content-md-center\">\n                  <div class=\"input-group col-lg-5 justify-content-md-center\" style=\"align-items: center; text-align: center;\">\n                      <div class=\"input-group-append ml-2\">\n                          <button class=\"btn btn-success\" type=\"button\" (click)=\"deleteMetadata(); removeMetadataModal.hide()\"><i\n                                  class=\"fas fa-check\"></i></button>\n                      </div>\n                      <div class=\"input-group-append ml-2\">\n                          <button class=\"btn btn-danger\" type=\"button\" (click)=\"removeMetadataModal.hide()\"><i\n                                  class=\"fas fa-times\"></i></button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </ng-container>\n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-lexical-entry-decomp-form',\n  templateUrl: './lexical-entry-decomp-form.component.html',\n  styleUrls: ['./lexical-entry-decomp-form.component.scss']\n})\nexport class LexicalEntryDecompFormComponent implements OnInit {\n\n  @Input() decData: any;\n  private subterm_subject: Subject<any> = new Subject();\n  private ext_subterm_subject: Subject<any> = new Subject();\n  private corresponds_subject: Subject<any> = new Subject();\n  private update_component_subject: Subject<any> = new Subject();\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  searchResults = [];\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n  subtermDisabled = false;\n  memorySubterm = [];\n  memoryComponent = [];\n  memoryValues = [];\n\n  decompForm = new FormGroup({\n    label: new FormControl(''),\n    component: new FormArray([this.createComponent()]),\n    subterm: new FormArray([this.createSubtermComponent()])\n  })\n\n  componentArray: FormArray;\n  subtermArray: FormArray;\n\n  staticMorpho = [];\n  morphologyData = [];\n  valueTraits = [];\n\n  disableAddTraits = [];\n\n  constructor( private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.decompForm = this.formBuilder.group({\n      label: '',\n      component: this.formBuilder.array([]),\n      subterm: this.formBuilder.array([]),\n    })\n    this.triggerTooltip();\n    this.loadMorphologyData();\n\n    this.lexicalService.changeDecompLabel$.subscribe(\n      data => {\n        if (data != null) {\n          this.decompForm.get('label').setValue(data, { emitEvent: false });\n        }\n      }\n    )\n\n    this.subterm_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.ext_subterm_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n          this.onChangeSubterm(data)\n      }\n    )\n\n    this.corresponds_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.update_component_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChanges(data)\n      }\n    )\n  }\n\n  triggerTooltip() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 500);\n  }\n\n  loadMorphologyData() {\n    this.lexicalService.getMorphologyData().subscribe(\n      data => {\n        console.log(data)\n        this.morphologyData = data;\n\n      }\n    )\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if (this.object != changes.decData.currentValue) {\n        if (this.componentArray != null || this.subtermArray != null) {\n          if (this.componentArray != undefined) {\n            this.componentArray.clear();\n\n          }\n\n          if (this.subtermArray != undefined) {\n            this.subtermArray.clear();\n          }\n\n          this.subtermDisabled = false;\n          this.memorySubterm = [];\n          this.memoryComponent = [];\n          /* this.morphologyData = []; */\n          /* this.staticMorpho = []; */\n          this.valueTraits = [];\n          this.memoryValues = [];\n        }\n      }\n      /* this.loadPeople(); */\n      this.object = changes.decData.currentValue;\n      if (this.object != null) {\n        this.decompForm.get('label').setValue(this.object.label, { emitEvent: false });\n\n        if (this.object.lexicalEntryInstanceName != undefined && this.object.sense == undefined) {\n          this.lexicalService.getSubTerms(this.object.lexicalEntryInstanceName).subscribe(\n            data => {\n              console.log(data)\n\n              if (data != undefined) {\n\n                Array.from(data).forEach((element: any) => {\n                  this.addSubterm(element.lexicalEntryInstanceName, element.label, element.language);\n                  this.memorySubterm.push(element);\n                })\n              }\n            }, error => {\n              console.log(error)\n            }\n          )\n        }\n\n        if (this.object.lexicalEntryInstanceName != undefined && this.object.sense == undefined) {\n          this.lexicalService.getConstituents(this.object.lexicalEntryInstanceName).subscribe(\n            data => {\n              console.log(data)\n\n              if (data != undefined) {\n                Array.from(data).forEach((element: any) => {\n\n                  this.lexicalService.getCorrespondsTo(element.componentInstanceName).subscribe(\n                    correspondsTo_data => {\n                      console.log(correspondsTo_data);\n\n                      let corr;\n                      if(correspondsTo_data != undefined){\n                        corr = correspondsTo_data.lexicalEntryInstanceName;\n                      }\n                      element.corresponds_to = corr;\n                      this.addComponent(element, Array.from(data).indexOf(element));\n                    }, error => {\n                      console.log(error)\n                    }\n                  )\n\n                  \n\n                });\n              }\n            }, error => {\n              console.log(error)\n            }\n          )\n        }\n\n\n\n      }\n      this.triggerTooltip();\n    }, 10)\n  }\n\n  /* private loadPeople() {\n    this.peopleLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    });\n  } */\n\n  onChanges(data) {\n    let fieldType = '';\n    console.log(data)\n    if (data != undefined) {\n\n      let newValue = data.v.target.value;\n      let currentValue;\n      let index = data?.i;\n\n\n      let oldValue = '';\n      fieldType = data['f']\n      if (fieldType == 'note') {\n        oldValue = this.memoryComponent[index]['note'];\n      } else if (fieldType == 'label') {\n        oldValue = this.memoryComponent[index]['label'];\n      } else if (fieldType == 'confidence') {\n        oldValue = this.memoryComponent[index]['confidence'];\n      }\n\n      //this.biblioArray = this.bibliographyForm.get('bibliography') as FormArray;\n\n\n\n      let instanceName = this.memoryComponent[index].componentInstanceName;\n\n\n      let parameters;\n\n      if (oldValue == '' || oldValue == null) {\n        parameters = {\n          type: \"decomp\",\n          relation: fieldType,\n          value: newValue\n        }\n      } else {\n        parameters = {\n          type: \"decomp\",\n          relation: fieldType,\n          value: newValue,\n          currentValue: oldValue\n        }\n      }\n\n      if (fieldType == 'confidence' && oldValue == \"-1\") {\n        parameters = {\n          type: \"confidence\",\n          relation: fieldType,\n          value: newValue\n        }\n      } else if (fieldType == 'confidence' && oldValue != \"-1\") {\n        parameters = {\n          type: \"confidence\",\n          relation: fieldType,\n          value: newValue,\n          currentValue: oldValue\n        }\n      }\n\n\n\n      //console.log(this.componentArray.at(index))\n      console.log(parameters)\n\n      this.lexicalService.updateGenericRelation(instanceName, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.updateLexCard(this.object);\n          this.toastr.success('Component updated', '', {\n            timeOut: 5000,\n          });\n\n          if (fieldType == 'note') {\n            this.memoryComponent[index]['note'] = newValue;\n          } else if (fieldType == 'label') {\n            this.memoryComponent[index]['label'] = newValue;\n          } else if (fieldType == 'confidence') {\n            this.memoryComponent[index]['confidence'] = newValue;\n          }\n        }, error => {\n          console.log(error);\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n            this.toastr.success('Component item updated', '', {\n              timeOut: 5000,\n            });\n            if (fieldType == 'note') {\n              this.memoryComponent[index]['note'] = newValue;\n              (<FormArray>this.decompForm.controls['component']).at(index).get('note').setValue(newValue, { emitEvent: false });\n            } else if (fieldType == 'label') {\n              this.memoryComponent[index]['label'] = newValue;\n              (<FormArray>this.decompForm.controls['component']).at(index).get('label').setValue(newValue, { emitEvent: false });\n            } else if (fieldType == 'confidence') {\n              this.memoryComponent[index]['confidence'] = newValue;\n              (<FormArray>this.decompForm.controls['component']).at(index).get('confidence').setValue(newValue, { emitEvent: false });\n            }\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n\n        }\n      )\n\n\n      if (fieldType == 'note') {\n        this.memoryComponent[index]['note'] = newValue;\n      } else if (fieldType == 'label') {\n        this.memoryComponent[index].label = newValue;\n      }\n\n\n\n    }\n  }\n\n  applyUncertain(i) {\n    this.lexicalService.spinnerAction('on');\n    const oldValue = (<FormArray>this.decompForm.controls['component']).at(i).get('confidence').value;\n    let compId = (<FormArray>this.decompForm.controls['component']).at(i).get('id').value;\n    let parameters = {\n      relation: 'confidence',\n      value: oldValue,\n    }\n    console.log(parameters)\n    this.lexicalService.deleteLinguisticRelation(compId, parameters).subscribe(\n      data => {\n        console.log(data);\n        /* data['request'] = 0;\n        data['new_label'] = confidence_value\n        this.lexicalService.refreshAfterEdit(data); */\n        //this.lexicalService.updateLexCard(data)\n        this.lexicalService.spinnerAction('off');\n        (<FormArray>this.decompForm.controls['component']).at(i).get('confidence').setValue(-1, { emitEvent: false });\n        this.object.confidence = -1;\n        this.memoryComponent[i]['confidence'] = -1;\n      },\n      error => {\n        console.log(error);\n        /*  const data = this.object.etymology;\n        data['request'] = 0;\n        data['new_label'] = confidence_value;\n        this.lexicalService.refreshAfterEdit(data); */\n        this.lexicalService.spinnerAction('off');\n        //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n        if (error.status == 200) {\n          this.toastr.success('Confidence updated', '', { timeOut: 5000 })\n          this.decompForm.get('confidence').setValue(-1, { emitEvent: false });\n          this.object.confidence = -1;\n          this.memoryComponent[i]['confidence'] = -1;\n        } else {\n          this.toastr.error(error.error, 'Error', { timeOut: 5000 })\n\n        }\n      }\n    )\n  }\n\n  onChangeValue(i, j) {\n    this.lexicalService.spinnerAction('on');\n    const control = (<FormArray>this.decompForm.controls['component']).at(i).get('relation') as FormArray;\n\n    const trait = control.at(j).get('trait').value;\n    const value = control.at(j).get('value').value;\n\n    if (trait != '' && value != '') {\n      let parameters;\n      if (this.memoryValues[i][j] == \"\") {\n        parameters = {\n          type: \"morphology\",\n          relation: trait,\n          value: value\n        }\n      }\n\n      let compId = this.memoryComponent[i].componentInstanceName;\n\n      if (this.memoryComponent[i].morphology[j] != trait && this.memoryComponent[i].morphology[j] != '') {\n        let delete_old_param = {\n          type: 'morphology',\n          relation: this.memoryComponent[i].morphology[j],\n          value: this.memoryValues[i][j][0]\n        }\n\n        parameters = {\n          type: \"morphology\",\n          relation: trait,\n          value: value,\n        }\n        this.lexicalService.deleteLinguisticRelation(compId, delete_old_param).subscribe(\n          data => {\n            console.log(data);\n\n            this.lexicalService.updateLinguisticRelation(compId, parameters).subscribe(\n              data => {\n                //console.log(data)\n                data['request'] = 0;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                this.lexicalService.refreshFilter({ request: true })\n                //this.lexicalService.updateLexCard(data)\n\n                this.memoryComponent[i].morphology[j] = trait\n                control.at(j).patchValue({ trait: trait, value: value })\n                this.disableAddTraits[i] = false;\n                setTimeout(() => {\n\n                  let traitDescription = '';\n                  this.morphologyData.filter(x => {\n                    if (x.propertyId == trait  ) {\n                      x.propertyValues.filter(y => {\n                        if (y.valueId == value) {\n                          traitDescription = y.valueDescription;\n                          return true;\n                        } else {\n                          return false;\n                        }\n                      })\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n\n                  //@ts-ignore\n                  $('.trait-tooltip').tooltip({\n                    trigger: 'hover'\n                  });\n\n\n                }, 1000);\n              },\n              error => {\n                //console.log(error)\n                this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n                this.lexicalService.spinnerAction('off');\n                this.lexicalService.refreshFilter({ request: true })\n                //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n\n                this.memoryComponent[i].morphology[j] = trait\n                control.at(j).patchValue({ trait: trait, value: value })\n                this.disableAddTraits[i] = false;\n                setTimeout(() => {\n\n                  let traitDescription = '';\n                  this.morphologyData.filter(x => {\n                    if (x.propertyId == trait  ) {\n                      x.propertyValues.filter(y => {\n                        if (y.valueId == value) {\n                          traitDescription = y.valueDescription;\n                          return true;\n                        } else {\n                          return false;\n                        }\n                      })\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n\n\n\n                  //@ts-ignore\n                  $('.trait-tooltip').tooltip({\n                    trigger: 'hover'\n                  });\n                  if (typeof (error.error) != 'object') {\n                    this.toastr.error(error.error, 'Error', {\n                      timeOut: 5000,\n                    });\n                  } else {\n                    this.toastr.success('Morphotraits changed correctly for ' + compId, '', {\n                      timeOut: 5000,\n                    });\n                  }\n\n                }, 1000);\n              }\n            )\n          }, error => {\n            console.log(error);\n          }\n        )\n      } else if (this.memoryComponent[i].morphology[j] == trait && this.memoryComponent[i].morphology[j] != '') {\n        parameters = {\n          type: \"morphology\",\n          relation: trait,\n          value: value,\n          currentValue: this.memoryValues[i][j][0]\n        }\n\n        this.lexicalService.updateLinguisticRelation(compId, parameters).pipe(debounceTime(1000)).subscribe(\n          data => {\n            //console.log(data)\n            data['request'] = 0;\n            this.lexicalService.refreshAfterEdit(data);\n            this.lexicalService.spinnerAction('off');\n            this.lexicalService.refreshFilter({ request: true })\n            //this.lexicalService.updateLexCard(data)\n\n            this.memoryComponent[i].morphology[j] = trait\n            control.at(j).patchValue({ trait: trait, value: value })\n            this.disableAddTraits[i] = false;\n            setTimeout(() => {\n\n              let traitDescription = '';\n              this.morphologyData.filter(x => {\n                if (x.propertyId == trait  ) {\n                  x.propertyValues.filter(y => {\n                    if (y.valueId == value) {\n                      traitDescription = y.valueDescription;\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n                  return true;\n                } else {\n                  return false;\n                }\n              })\n\n              //@ts-ignore\n              $('.trait-tooltip').tooltip({\n                trigger: 'hover'\n              });\n\n\n            }, 1000);\n          },\n          error => {\n            //console.log(error)\n            this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n            this.lexicalService.spinnerAction('off');\n            this.lexicalService.refreshFilter({ request: true })\n            //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n\n            this.memoryComponent[i].morphology[j] = trait\n            control.at(j).patchValue({ trait: trait, value: value })\n            this.disableAddTraits[i] = false;\n            setTimeout(() => {\n\n              let traitDescription = '';\n              this.morphologyData.filter(x => {\n                if (x.propertyId == trait  ) {\n                  x.propertyValues.filter(y => {\n                    if (y.valueId == value) {\n                      traitDescription = y.valueDescription;\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n                  return true;\n                } else {\n                  return false;\n                }\n              })\n\n\n\n              //@ts-ignore\n              $('.trait-tooltip').tooltip({\n                trigger: 'hover'\n              });\n              if (typeof (error.error) != 'object') {\n                this.toastr.error(error.error, 'Error', {\n                  timeOut: 5000,\n                });\n              } else {\n                this.toastr.success('Morphotraits changed correctly for ' + compId, '', {\n                  timeOut: 5000,\n                });\n              }\n\n            }, 1000);\n          }\n        )\n\n      } else if (this.memoryComponent[i].morphology[j] == '') {\n        console.log(parameters)\n        this.lexicalService.updateLinguisticRelation(compId, parameters).pipe(debounceTime(1000)).subscribe(\n          data => {\n            //console.log(data)\n            data['request'] = 0;\n            this.lexicalService.refreshAfterEdit(data);\n            this.lexicalService.spinnerAction('off');\n            this.lexicalService.refreshFilter({ request: true })\n            //this.lexicalService.updateLexCard(data)\n\n            this.memoryComponent[i].morphology[j] = trait\n            control.at(j).patchValue({ trait: trait, value: value })\n            this.disableAddTraits[i] = false;\n            setTimeout(() => {\n\n              let traitDescription = '';\n              this.morphologyData.filter(x => {\n                if (x.propertyId == trait  ) {\n                  x.propertyValues.filter(y => {\n                    if (y.valueId == value) {\n                      traitDescription = y.valueDescription;\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n                  return true;\n                } else {\n                  return false;\n                }\n              })\n\n              //@ts-ignore\n              $('.trait-tooltip').tooltip({\n                trigger: 'hover'\n              });\n\n\n            }, 1000);\n          },\n          error => {\n            //console.log(error)\n            this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n            this.lexicalService.spinnerAction('off');\n            this.lexicalService.refreshFilter({ request: true })\n            //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n\n            this.memoryComponent[i].morphology[j] = trait\n            control.at(j).patchValue({ trait: trait, value: value })\n            this.disableAddTraits[i] = false;\n            setTimeout(() => {\n\n              let traitDescription = '';\n              this.morphologyData.filter(x => {\n                if (x.propertyId == trait  ) {\n                  x.propertyValues.filter(y => {\n                    if (y.valueId == value) {\n                      traitDescription = y.valueDescription;\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  })\n                  return true;\n                } else {\n                  return false;\n                }\n              })\n\n\n\n              //@ts-ignore\n              $('.trait-tooltip').tooltip({\n                trigger: 'hover'\n              });\n              if (typeof (error.error) != 'object') {\n                this.toastr.error(error.error, 'Error', {\n                  timeOut: 5000,\n                });\n              } else {\n                this.toastr.success('Morphotraits changed correctly for ' + compId, '', {\n                  timeOut: 5000,\n                });\n              }\n\n            }, 1000);\n          }\n        )\n      }\n\n\n    } else {\n      this.lexicalService.spinnerAction('off');\n      this.disableAddTraits[i] = false;\n    }\n  }\n\n  onChangeTrait(evt, i, j) {\n\n    if (evt.target != undefined) {\n      setTimeout(() => {\n        const control = (<FormArray>this.decompForm.controls['component']).at(i).get('relation') as FormArray;\n        //const trait = control.at(j).get('trait').value;\n        //const value = control.at(j).get('value').value;\n        //this.componentArray = this.decompForm.get('component') as FormArray;\n        control.at(j).patchValue({ trait: evt.target.value, value: \"\" });\n        if (evt.target.value != '') {\n          let arrayValues = this.morphologyData.filter(x => {\n            return x['propertyId'] == evt.target.value;\n          })['0']['propertyValues'];\n          this.valueTraits[i][j] = arrayValues;\n          //this.memoryComponent[i].morphology[j] = evt.target.value;\n          //this.memoryValues[i][j] = \"\";\n        } else {\n          this.memoryValues.splice(i, 1);\n          let arrayValues = [];\n          this.valueTraits[i][j] = arrayValues\n          this.memoryComponent[i]['morphology'][j].splice(j, 1)\n        }\n      }, 500);\n    } else {\n\n      var that = this;\n      var timer = setInterval((val) => {\n\n        try {\n          var arrayValues = this.morphologyData.filter(x => {\n            return x['propertyId'] == evt;\n          })['0']['propertyValues'];\n          this.valueTraits[i][j] = arrayValues;\n          this.memoryComponent[i].morphology[j].push(evt);\n          clearInterval(timer)\n        } catch (e) {\n          console.log(e)\n        }\n\n\n      }, 500)\n\n    }\n  }\n\n  addSubterm(e?, label?, lang?) {\n    this.subtermArray = this.decompForm.get('subterm') as FormArray;\n\n    if (e != undefined) {\n      this.subtermArray.push(this.createSubtermComponent(e, label, lang));\n      this.subtermDisabled = false;\n    } else {\n      this.subtermArray.push(this.createSubtermComponent());\n      this.subtermDisabled = true;\n    }\n\n\n  }\n\n  addComponent(element?, index?) {\n\n    if (this.object.lexicalEntryInstanceName != undefined && element == undefined) {\n      let instance = this.object.lexicalEntryInstanceName;\n      this.object['request'] = 'constituent'\n      this.lexicalService.createComponent(instance).subscribe(\n        data => {\n          console.log(data)\n\n          let compId = data.componentInstanceName;\n          let componentURI = data.component;\n          let creator = data.creator;\n          let label = '';\n          let creationDate = data.creationDate;\n          let lastUpdate = data.lastUpdate;\n          let morphology = data.morphology;\n          let note = '';\n          let position = data.position;\n\n          let confidence = data.confidence;\n\n          this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data });\n\n          this.componentArray = this.decompForm.get('component') as FormArray;\n          this.componentArray.push(this.createComponent(compId, componentURI, confidence, creator, label, creationDate, lastUpdate, [], note, position));\n\n          data['morphology'] = [];\n          this.memoryComponent.push(data)\n\n          this.toastr.success('Component created correctly', 'Success', {\n            timeOut: 5000\n          })\n        }, error => {\n          console.log(error);\n\n          this.toastr.error('Something went wrong', 'Error', {\n            timeOut: 5000\n          })\n        }\n      )\n    } else if (element != undefined) {\n      let compId = element.componentInstanceName;\n      let componentURI = element.component;\n      let creator = element.creator;\n      let label = element.label;\n      let creationDate = element.creationDate;\n      let lastUpdate = element.lastUpdate;\n      let note = element.note;\n      let position = element.position;\n      let corr_to = element.corresponds_to;\n      let confidence = element.confidence;\n\n      this.componentArray = this.decompForm.get('component') as FormArray;\n      this.componentArray.push(this.createComponent(compId, componentURI, confidence, creator, label, creationDate, lastUpdate, [], note, position, corr_to));\n\n      let morphology = element.morphology;\n      element.morphology = [];\n\n      this.memoryComponent.push(element)\n\n      if (morphology.length > 0) {\n        this.addRelation(index, morphology);\n      }\n\n\n    }\n  }\n\n  removeComponent(index) {\n    this.componentArray = this.decompForm.get('component') as FormArray;\n    const control = this.componentArray.at(index);\n\n    if (control != null) {\n      let idComp = control.get('id').value;\n\n      this.lexicalService.deleteComponent(idComp).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.deleteRequest({ componentInstanceName: idComp });\n          this.toastr.info('Component ' + idComp + ' deleted', 'Info', {\n            timeOut: 5000\n          })\n        }, error => {\n          console.log(error);\n          this.lexicalService.deleteRequest({ componentInstanceName: idComp });\n          this.toastr.error('Something went wrong', 'Error', {\n            timeOut: 5000\n          })\n        }\n      )\n    }\n\n\n\n    this.memoryComponent.splice(index, 1)\n    this.componentArray.removeAt(index);\n  }\n\n  addRelation(index, morphologyArray?) {\n\n    if (morphologyArray == undefined) {\n      this.memoryComponent[index].morphology.push('');\n\n      if (this.valueTraits[index] == undefined) {\n        this.valueTraits[index] = [];\n        this.valueTraits[index].push([])\n      } else {\n        this.valueTraits[index].push([])\n      }\n\n      if (this.memoryValues[index] == undefined) {\n        this.memoryValues[index] = [];\n        this.memoryValues[index].push([]);\n      } else {\n        this.memoryValues[index].push([]);\n      }\n\n      if (this.disableAddTraits[index] == undefined) {\n        this.disableAddTraits[index] = true;\n      } else {\n        this.disableAddTraits[index] = true;\n      }\n\n\n      const control = (<FormArray>this.decompForm.controls['component']).at(index).get('relation') as FormArray;\n      control.push(this.createRelation());\n    } else {\n\n      morphologyArray.forEach(element => {\n        this.memoryComponent[index].morphology.push(element.trait);\n\n        if (this.valueTraits[index] == undefined) {\n          this.valueTraits[index] = [];\n          var timer1 = setInterval((val) => {\n\n            try {\n              var arrayValues = this.morphologyData.filter(x => {\n                return x['propertyId'] == element.trait;\n              })['0']['propertyValues'];\n              this.valueTraits[index].push(arrayValues);\n              clearInterval(timer1)\n            } catch (e) {\n              console.log(e)\n            }\n\n\n          }, 500)\n\n\n\n\n        } else {\n          var timer2 = setInterval((val) => {\n\n            try {\n              var arrayValues = this.morphologyData.filter(x => {\n                return x['propertyId'] == element.trait;\n              })['0']['propertyValues'];\n              this.valueTraits[index].push(arrayValues);\n              clearInterval(timer2)\n            } catch (e) {\n              console.log(e)\n            }\n\n\n          }, 500)\n\n        }\n\n        if (this.memoryValues[index] == undefined) {\n          this.memoryValues[index] = [];\n          this.memoryValues[index].push([element.value]);\n        } else {\n          this.memoryValues[index].push([element.value]);\n        }\n\n        if (this.disableAddTraits[index] == undefined) {\n          this.disableAddTraits[index] = false;\n        } else {\n          this.disableAddTraits[index] = false;\n        }\n\n\n        const control = (<FormArray>this.decompForm.controls['component']).at(index).get('relation') as FormArray;\n        control.push(this.createRelation(element.trait, element.value));\n      });\n\n    }\n\n\n\n\n  }\n\n  removeRelation(ix, iy) {\n    const control = (<FormArray>this.decompForm.controls['component']).at(ix).get('relation') as FormArray;\n    const trait = control.at(iy).get('trait').value;\n    const value = control.at(iy).get('value').value;\n    if (trait != '' && value != '') {\n\n      let compId = this.memoryComponent[ix].componentInstanceName;;\n\n      let parameters = {\n        type: 'morphology',\n        relation: trait,\n        value: value\n      }\n\n      //console.log(parameters)\n\n      this.lexicalService.deleteLinguisticRelation(compId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          //this.lexicalService.updateLexCard(this.object)\n          this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n          this.lexicalService.spinnerAction('off');\n          this.lexicalService.refreshFilter({ request: true })\n        }, error => {\n          //console.log(error)\n          this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n          this.lexicalService.spinnerAction('off');\n          this.lexicalService.refreshFilter({ request: true })\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          if (typeof (error.error) != 'object') {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Element removed correctly for ' + compId, '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    } else {\n      this.disableAddTraits[ix] = false;\n    }\n\n\n    this.memoryComponent[ix].morphology.splice(iy, 1);\n    this.valueTraits[ix].splice(iy, 1);\n    this.memoryValues[ix].splice(iy, 1);\n    control.removeAt(iy);\n\n\n  }\n\n\n\n  triggerSubterm(evt) {\n    console.log(evt)\n    if (evt.target != undefined) {\n\n      this.subterm_subject.next(evt.target.value)\n    }\n  }\n\n  triggerCorrespondsTo(evt) {\n    console.log(evt)\n    if (evt.target != undefined) {\n\n      this.corresponds_subject.next(evt.target.value)\n    }\n  }\n\n  removeSubterm(index) {\n\n\n    if (this.object.lexicalEntryInstanceName != undefined) {\n      this.subtermArray = this.decompForm.get('subterm') as FormArray;\n\n      let entity = this.subtermArray.at(index).get('entity').value;\n      let lexId = this.object.lexicalEntryInstanceName;\n\n      let parameters = {\n        relation: \"subterm\",\n        value: entity\n      }\n\n      this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.toastr.info('Subterm removed correctly', 'Info', {\n            timeOut: 5000\n          })\n          this.lexicalService.deleteRequest({ subtermInstanceName: entity, parentNode : this.object.lexicaleEntryInstanceName });\n        }, error => {\n          console.log(error)\n          this.toastr.info('Subterm removed correctly', 'Info', {\n            timeOut: 5000\n          })\n          this.lexicalService.deleteRequest({ subtermInstanceName: entity, parentNode : this.object.lexicaleEntryInstanceName });\n        }\n      )\n\n\n    }\n\n    this.subtermArray.removeAt(index);\n    this.memorySubterm.splice(index, 1);\n    this.subtermDisabled = false;\n  }\n\n  createRelation(t?, v?) {\n    if (t == undefined) {\n      return this.formBuilder.group({\n        trait: '',\n        value: ''\n      })\n    } else {\n      return this.formBuilder.group({\n        trait: t,\n        value: v\n      })\n    }\n\n  }\n\n  /* removeSubtermComponent(ix, iy) {\n    const control = (<FormArray>this.decompForm.controls['component']).at(ix).get('sub_term') as FormArray;\n    control.removeAt(iy);\n  } */\n\n  removeCorrespondsToComponent(ix, iy) {\n    const control = (<FormArray>this.decompForm.controls['component']).at(ix).get('corresponds_to') as FormArray;\n    control.removeAt(iy);\n  }\n\n  createComponent(compId?, componentURI?, confidence?, creator?, label?, creationDate?, lastUpdate?, morphology?, note?, position?, corr_to?) {\n    if (compId == undefined) {\n      return this.formBuilder.group({\n        id: new FormControl(''),\n        uri: new FormControl(''),\n        confidence: new FormControl(null),\n        creator: new FormControl(''),\n        label: new FormControl(''),\n        creationDate: new FormControl(''),\n        lastUpdate: new FormControl(''),\n        relation: new FormArray([]),\n        note: new FormControl(''),\n        corresponds_to: new FormControl(''),\n        position: new FormControl('')\n      })\n    } else {\n      return this.formBuilder.group({\n        id: new FormControl(compId),\n        uri: new FormControl(componentURI),\n        confidence: new FormControl(confidence),\n        creator: new FormControl(creator),\n        label: new FormControl(label),\n        creationDate: new FormControl(creationDate),\n        lastUpdate: new FormControl(lastUpdate),\n        relation: new FormArray([]),\n        note: new FormControl(note),\n        corresponds_to: new FormControl(corr_to),\n        position: new FormControl(position)\n      })\n    }\n\n  }\n\n  createSubtermComponent(e?, l?, lang?) {\n    if (e != undefined) {\n      return this.formBuilder.group({\n        entity: e,\n        label: l,\n        language: lang\n      })\n    } else {\n      return this.formBuilder.group({\n        entity: '',\n        label: '',\n        language: ''\n      })\n    }\n\n  }\n\n  /* createSubterm(e?) {\n    if(e != undefined){\n\n    }else{\n\n    }\n    return this.formBuilder.group({\n      subterm_array: new FormArray([this.createSubtermComponent()])\n    })\n  } */\n  \n\n  handleSubterm(evt, i) {\n\n    if (evt instanceof NgSelectComponent) {\n      if (evt.selectedItems.length > 0) {\n        console.log(evt.selectedItems[0])\n        let label = evt.selectedItems[0]['value']['lexicalEntryInstanceName'];\n        this.onChangeSubterm({ name: label, i: i, object: evt.selectedItems[0]['value'] })\n      }\n    } else {\n        let label = evt.target.value;\n        this.ext_subterm_subject.next({ name: label, i: i })\n    }\n  }\n\n  handleCorrespondsTo(evt, i) {\n\n    if (evt instanceof NgSelectComponent) {\n      if (evt.selectedItems.length > 0) {\n        console.log(evt.selectedItems[0])\n        let label = evt.selectedItems[0]['value']['lexicalEntryInstanceName'];\n        this.onChangeCorrespondsTo({ name: label, i: i })\n      }\n    } /* else {\n        let label = evt.target.value;\n        this.Subterm_subject.next({ name: label, i: i })\n    } */\n  }\n\n  debounceKeyup(evt, index, field) {\n    this.update_component_subject.next({ v: evt, i: index, f: field })\n  }\n\n  onChangeSubterm(data) {\n    var index = data['i'];\n    this.subtermArray = this.decompForm.get(\"subterm\") as FormArray;\n    if (this.memorySubterm[index] == undefined) {\n      const newValue = data['name']\n      const parameters = {\n        type: \"decomp\",\n        relation: \"subterm\",\n        value: newValue\n      }\n      console.log(parameters)\n\n      this.object['request'] = 'subterm'\n      let lexId = this.object.lexicalEntryInstanceName;\n      this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          /* data['request'] = 0;\n          this.lexicalService.refreshAfterEdit(data); */\n          //this.lexicalService.updateLexCard(data) TODO: inserire updater per decomp qua\n          this.memorySubterm[index] = data;\n\n          this.subtermArray.at(index).patchValue({ entity: data.object.label, label: data['label'], language: data['language'] })\n          this.subtermDisabled = false;\n\n          this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data });\n        }, error => {\n          console.log(error)\n\n          \n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n\n            this.toastr.success('Subterm changed correctly for ' + lexId, '', {\n              timeOut: 5000,\n            });\n\n            this.subtermDisabled = false;\n            this.memorySubterm[index] = data.object;\n            data['request'] = 'subterm';\n            this.subtermArray.at(index).patchValue({ entity: newValue, label: data.object.label, language: data.object.language })\n            this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data['object'] });\n            //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n\n          }\n        }\n      )\n\n\n\n    } else {\n      const oldValue = this.memorySubterm[index]['lexicalEntryInstanceName']\n      const newValue = data['name']\n      const parameters = {\n        type: \"decomp\",\n        relation: \"subterm\",\n        value: newValue,\n        currentValue: oldValue\n      }\n\n      let lexId = this.object.lexicalEntryInstanceName;\n      console.log(parameters)\n      this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          ////this.lexicalService.updateLexCard(data)\n          data['request'] = 0;\n          this.lexicalService.refreshAfterEdit(data);\n        }, error => {\n          console.log(error)\n          const data = this.object;\n          data['request'] = 0;\n\n\n          //this.lexicalService.refreshAfterEdit(data);\n          ////this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n            this.toastr.success('Label changed correctly for ' + lexId, '', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n      this.memorySubterm[index] = data;\n    }\n\n\n  }\n\n\n  onChangeCorrespondsTo(data) {\n    var index = data['i'];\n    this.subtermArray = this.decompForm.get(\"subterm\") as FormArray;\n    if (this.memoryComponent[index].corresponds_to == undefined) {\n      const newValue = data['name']\n      const parameters = {\n        type: \"decomp\",\n        relation: \"correspondsTo\",\n        value: newValue\n      }\n      console.log(parameters)\n      let compId = this.memoryComponent[index].componentInstanceName;\n      this.lexicalService.updateLinguisticRelation(compId, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          /* data['request'] = 0;\n          this.lexicalService.refreshAfterEdit(data); */\n          //this.lexicalService.updateLexCard(data)\n        }, error => {\n          console.log(error)\n\n          /* this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n          }); */\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n            this.toastr.success('CorrespondsTo changed correctly for ' + compId, '', {\n              timeOut: 5000,\n            });\n\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n\n          }\n        }\n      )\n      this.memoryComponent[index].corresponds_to = data;\n\n\n    } else {\n      const oldValue = this.memoryComponent[index].corresponds_to\n      const newValue = data['name']\n      const parameters = {\n        type: \"decomp\",\n        relation: \"correspondsTo\",\n        value: newValue,\n        currentValue: oldValue\n      }\n\n      let compId = this.memoryComponent[index].componentInstanceName;\n      console.log(parameters)\n      this.lexicalService.updateLinguisticRelation(compId, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.updateLexCard(data)\n          data['request'] = 0;\n          this.lexicalService.refreshAfterEdit(data);\n        }, error => {\n          console.log(error)\n          /* const data = this.object;\n          data['request'] = 0; */\n\n          //this.lexicalService.refreshAfterEdit(data);\n          //this.lexicalService.updateLexCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n            this.toastr.success('Label changed correctly for ' + compId, '', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n      this.memoryComponent[index].corresponds_to = data;\n    }\n\n\n  }\n\n  onSearchFilter(data) {\n    this.searchResults = [];\n\n    if (this.object.lexicalEntryInstanceName != undefined) {\n      let parameters = {\n        text: data,\n        searchMode: \"startsWith\",\n        type: \"\",\n        pos: \"\",\n        formType: \"entry\",\n        author: \"\",\n        lang: \"\",\n        status: \"\",\n        offset: 0,\n        limit: 500\n      }\n\n      /* && data.length >= 3 */\n      this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n        data => {\n          console.log(data)\n\n\n          this.searchResults = data['list'];\n\n        }, error => {\n          console.log(error)\n        }\n      )\n\n    } else {\n    }\n\n  }\n\n  deleteData() {\n    this.searchResults = [];\n  }\n\n}\n","\n\n<form [formGroup]=\"decompForm\" *ngIf=\"object!=null\">\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-5\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled>\n            <div class=\"input-group-append\">\n                <div class=\"input-group-append ml-2\">\n                    <div class=\"dropdown\">\n                        <button class=\"btn btn-outline-primary\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-plus\"></i>\n                        </button>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                          <!-- <a class=\"dropdown-item\" (click)=\"addSubterm()\" [class.disabled]=\"subtermDisabled\" style=\"cursor: pointer;\">Sub Term</a> -->\n                          <a class=\"dropdown-item\" (click)=\"addComponent()\" style=\"cursor: pointer;\">Component</a>\n                        </div>\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- COMPONENT -->\n    <div formArrayName=\"component\">\n        <div *ngFor=\"let comp of decompForm['controls'].component['controls']; let i = index\">\n            <div [formGroupName]=\"i\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <div class=\"input-group col-xl-12\">\n                        <div class=\"card\">\n                            <span class=\"text-id\"><b>COMPONENT</b></span>\n                            <!-- <a class=\"pointer\" (click)=\"addRelation(i)\"><span class=\"add-icon\"><i class=\"fa fa-plus-square\"></i></span></a> -->\n                            <a class=\"pointer\" (click)=\"removeComponent(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                            <div class=\"card-body\">\n\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Label:</label>\n                                    <div class=\"input-group col-lg-8\">\n                                        <input id=\"label\" (keyup)=\"debounceKeyup($event, i, 'label')\" formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                                            required>\n                                        <!-- <div class=\"invalid-feedback\" *ngIf=\"emptyLabelFlag\" style=\"display: block;\">\n                                            Please, insert at least three characters.\n                                        </div> -->\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group row ml-2 mr-2\">\n                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Note:</label>\n                                    <div class=\"input-group col-lg-8\">\n                                        <!-- <input id=\"note\"  formControlName=\"note\" name=\"note\" type=\"text\" class=\"form-control\" placeholder=\"\"> -->\n                                        <textarea (keyup)=\"debounceKeyup($event, i, 'note')\" formControlName=\"note\" name=\"note\" class=\"form-control\" style=\"resize: none;\"></textarea>\n                                    </div>\n                                </div>  \n\n                                <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"{confidence : comp.get('confidence').value >= 0}; let variable\">\n                                    <div class=\"col-lg-3\">\n                                        <label for=\"uncertainBox\">Uncertain</label>\n                                    </div>\n                                    <div class=\"col-lg-3 input-group\">\n                                        <input (change)=\"debounceKeyup($event, i, 'confidence')\" (keyup)=\"debounceKeyup($event, i, 'confidence')\" *ngIf=\"variable.confidence\" id=\"attributes\"  step=\"0.1\" formControlName=\"confidence\" name=\"confidence\" type=\"number\" min=\"0\" max=\"1\" class=\"form-control\" placeholder=\"No info\" [value]=\"comp.get('confidence').value\">\n                                        <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"!variable.confidence\" (click)=\"variable.confidence = !variable.confidence\"><i class=\"fas fa-plus\"></i></button>\n                                        <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"variable.confidence\" (click)=\"variable.confidence = !variable.confidence; applyUncertain(i)\"><i class=\"fas fa-minus\"></i></button>\n                                    </div>\n                                </div>\n\n                                <!-- CORRESPONDS TO -->\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Corresponds To:</label>\n                                    <div class=\"input-group col-lg-9\">\n                                        <ng-select #select_corresponds_to formControlName=\"corresponds_to\" name=\"corresponds_to\" [dropdownPosition]=\"'top'\"\n                                        (keyup)=\"triggerCorrespondsTo($event)\" (change)=\"handleCorrespondsTo(select_corresponds_to, i)\"\n                                        [items]=\"searchResults\" bindValue=\"label\" (focus)=\"deleteData()\" bindLabel=\"label\"\n                                        placeholder=\"Search lexical entry\" appendTo=\"body\">\n                                            <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\">\n                                                <div>\n                                                    <span>{{item.label}} </span><span style=\"color: blue;\">@{{item.language}}</span>\n                                                </div>\n\n                                            </ng-template>\n                                        </ng-select>\n                                        <!-- <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\"> -->\n                                        <!-- <div class=\"input-group-append ml-3 form-check\">\n                                            <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                        </div> -->\n                                        <div class=\"input-group-append ml-2\">\n                                            <button class=\"btn btn-primary\" type=\"button\"><i\n                                                    class=\"fa fa-external-link-alt\"></i></button>\n                                        </div>\n                                        <!-- <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"removeCorrespondsToComponent(i, j)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                        </div> -->\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"addRelation(i)\" [ngClass]=\"{no_pointer: disableAddTraits[i]}\" class=\"btn btn-outline-primary\" type=\"button\">\n                                                <i class=\"fa fa-plus\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                              \n            \n                                <ng-container formArrayName=\"relation\"\n                                    *ngFor=\"let sub of comp['controls'].relation['controls']; let j = index\">\n                                    <div class=\"d-flex my-2\" *ngIf=\"j +1 > staticMorpho.length\">\n                                        <div class=\"col-md-4\" [formGroupName]=\"j\">\n                                            <select class=\"form-control selectTrait\" formControlName=\"trait\" name=\"trait\"\n                                                style=\"font-size: 12px;\" (change)=\"onChangeTrait($event, i, j)\">\n                                                <option value=\"\">Select a trait...</option>\n                                                <option *ngFor=\"let mt of morphologyData\"\n                                                    [selected]=\"sub.value['trait'] === mt.propertyId\"\n                                                    [disabled]=\"memoryComponent[i].morphology.indexOf(mt.propertyId) > -1 \">{{mt.propertyId}}</option>\n                                            </select>\n                                            <div class=\"invalid-feedback\" *ngIf=\"sub.get('trait').invalid\"\n                                                style=\"display: block;\">\n                                                Please, don't leave this field blank\n                                            </div>\n                                        </div>\n                                        <!-- {{valueTraits | json}} -->\n                                        <div class=\"input-group col-md-8\" [formGroupName]=\"j\">\n                                            <!-- {{valueTraits | json}} {{i}} {{j}} -->\n                                            <select class=\"form-control selectTrait\" formControlName=\"value\" name=\"value\"\n                                                style=\"font-size:12px;\" (change)=\"onChangeValue(i, j)\">\n                                                <option value=\"\">Select a value...</option>\n                                                <option *ngFor=\"let item of valueTraits[i][j];\" [attr.data-index]=\"j\"\n                                                    [selected]=\"sub.value['value'] === item.valueId\">{{item.valueId}}</option>\n                                            </select>\n                                            <div (click)=\"removeRelation(i, j)\" class=\"input-group-append ml-2\"> <button\n                                                    class=\"btn btn-danger\" type=\"button\"\n                                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                                        class=\"fa fa-trash-alt\"></i></button>\n                                            </div>\n                                            <div class=\"invalid-feedback\" *ngIf=\"sub.get('value').invalid\"\n                                                style=\"display: block;\">\n                                                Please, don't leave this field blank\n                                            </div>\n                                        </div>\n                                    </div>\n            \n                                </ng-container>\n                                \n                                <!-- <div formArrayName=\"relation\" class=\"col-xl-12\">\n                                    <div *ngFor=\"let sub of comp['controls'].relation['controls']; let j = index\">\n                                        <div [formGroupName]=\"j\" class=\"d-xl-flex\" style=\"align-items: center;\">\n                                            <div class=\"form-group row ml-2 mt-2 mr-2 w-100\">\n                                                <div class=\"col-xl-6\">\n                                                    <select class=\"form-control\" formControlName=\"trait\" name=\"trait\">\n                                                        <option>Trait...</option>\n                                                        <option>...</option>\n                                                    </select>\n                                                </div>\n                                                <div class=\"input-group col-xl-6\" *ngIf=\"{switch : false}; let variable\">\n                                                    <select class=\"form-control\" formControlName=\"value\" name=\"value\" style=\"border-top-right-radius: .25rem; border-bottom-right-radius: .25rem;\">\n                                                        <option>Relations...</option>\n                                                        <option>...</option>\n                                                    </select>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button (click)=\"removeRelation(i, j)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                    </div>\n                                                </div>\n                                            </div>                                                 \n                                        </div>\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- SUB-TERM -->\n    \n        \n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>SUBTERM</b></span>\n                <a class=\"pointer\" (click)=\"addSubterm()\"><span class=\"add-icon\" [class.disabled]=\"subtermDisabled\"><i class=\"fa fa-plus-square\"></i></span></a>\n                <!-- <a class=\"pointer\" (click)=\"removeSubterm(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a> -->\n                <div class=\"card-body\">\n\n                    \n            \n                    <!-- SUB-TERM -->\n                    <div formArrayName=\"subterm\" class=\"col-xl-12\">\n                        <div *ngFor=\"let sub of decompForm['controls'].subterm['controls']; let i = index\">\n                            <div [formGroupName]=\"i\" class=\"d-xl-flex\" style=\"align-items: center;\">\n                                <div class=\"form-group row ml-2 mt-2 mr-2 w-100\">\n                                    <div class=\"input-group\" *ngIf=\"{switch : false}; let variable\">\n                                        <ng-select #select_subterm formControlName=\"label\" *ngIf=\"!variable.switch\" name=\"label\" [dropdownPosition]=\"'top'\"\n                                                (keyup)=\"triggerSubterm($event)\" (change)=\"handleSubterm(select_subterm, i)\"\n                                                [items]=\"searchResults\" bindValue=\"label\" (focus)=\"deleteData()\" bindLabel=\"label\"\n                                                placeholder=\"Search lexical entries\" appendTo=\"body\">\n                                                <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\">\n                                                    <div>\n                                                        <span>{{item.label}} </span><span style=\"color: blue;\">@{{item.language}}</span>\n                                                    </div>\n\n                                                </ng-template>\n                                            </ng-select>\n                                        <input (keyup)=\"handleSubterm($event, i)\" formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                        <div class=\"input-group-append ml-3 form-check\">\n                                            <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                        </div>\n                                        <!-- <div class=\"input-group-append ml-2\">\n                                            <button class=\"btn btn-primary\" type=\"button\"><i\n                                                    class=\"fa fa-external-link-alt\"></i></button>\n                                        </div> -->\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"removeSubterm(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                        </div>\n                                       <!--  <div class=\"input-group-append ml-2\">\n                                            <button  class=\"btn btn-outline-primary invisible\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n                                        </div> -->\n                                    </div>\n                                </div>                                                  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n           \n    \n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dictionary-tab',\n  templateUrl: './dictionary-tab.component.html',\n  styleUrls: ['./dictionary-tab.component.scss']\n})\nexport class DictionaryTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"card container-fluid\">\n\t<div class=\"card-body row\">\n\t\t<div class=\"col-md-12 text-right\">\n            <a href=\"#\"><i class=\"fa fa-unlock fa-2x\"></i></a>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12 dictionary-body\">\n            <ul>\n                <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\n                <li>Aliquam tincidunt mauris eu risus.</li>\n                <li>Vestibulum auctor dapibus neque.</li>\n                <li>Nunc dignissim risus id metus.</li>\n                <li>Cras ornare tristique elit.</li>\n                <li>Vivamus vestibulum ntulla nec ante.</li>\n                <li>Praesent placerat risus quis eros.</li>\n                <li>Fusce pellentesque suscipit nibh.</li>\n                <li>Integer vitae libero ac risus egestas placerat.</li>\n                <li>Vestibulum commodo felis quis tortor.</li>\n                <li>Ut aliquam sollicitudin leo.</li>\n                <li>Cras iaculis ultricies nulla.</li>\n                <li>Donec quis dui at dolor tempor interdum.</li>\n            </ul>\n\t\t</div>\n\t</div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { AngularEditorModule } from '@kolkov/angular-editor'\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ToastrModule } from 'ngx-toastr';\nimport { initializer } from '../app/services/initializer/app-init';\nimport { KeycloakService, KeycloakAngularModule } from 'keycloak-angular';\n\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LexiconPageComponent } from './views/lexicon-page/lexicon-page.component';\nimport { LoginPageComponent } from './views/login-page/login-page.component';\nimport { PageNotFoundComponent } from './views/page-not-found/page-not-found.component';\nimport { HomePageComponent } from './views/home-page/home-page.component';\nimport { ProfilePageComponent } from './views/profile-page/profile-page.component';\nimport { LexiconPanelComponent } from './components/lexicon-panel/lexicon-panel.component';\nimport { NotePanelComponent } from './components/note-panel/note-panel.component';\nimport { LinkPanelComponent } from './components/link-panel/link-panel.component';\nimport { SearchPageComponent } from './views/search-page/search-page.component';\nimport { DataSearchFormComponent } from './components/data-search-form/data-search-form.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DocumentSystemTreeComponent } from './components/lexicon-panel/document-system-tree/document-system-tree.component';\nimport { TextTreeComponent } from './components/lexicon-panel/document-system-tree/text-tree/text-tree.component';\nimport { TextDetailComponent } from './components/lexicon-panel/text-detail/text-detail.component';\nimport { EpigraphyDetailComponent } from './components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-detail.component';\nimport { EditDetailComponent } from './components/lexicon-panel/text-detail/edit-detail/edit-detail.component';\nimport { EpigraphyTabComponent } from './components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-tab.component';\nimport { DictionaryTabComponent } from './components/lexicon-panel/text-detail/edit-detail/dictionary-tab/dictionary-tab.component';\nimport { LexicalEntryTreeComponent } from './components/lexicon-panel/document-system-tree/lexical-entry-tree/lexical-entry-tree.component';\nimport { CoreTabComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/core-tab.component';\nimport { VartransTabComponent } from './components/lexicon-panel/text-detail/edit-detail/vartrans-tab/vartrans-tab.component';\nimport { SynsemTabComponent } from './components/lexicon-panel/text-detail/edit-detail/synsem-tab/synsem-tab.component';\nimport { DecompositionTabComponent } from './components/lexicon-panel/text-detail/edit-detail/decomposition-tab/decomposition-tab.component';\nimport { ProfilesTableComponent } from './components/profiles-table/profiles-table.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BibliographyPanelComponent } from './components/bibliography-panel/bibliography-panel.component';\nimport { AttestationPanelComponent } from './components/attestation-panel/attestation-panel.component';\nimport { LexicalEntryCoreFormComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/lexical-entry-core-form.component';\nimport { ModalModule } from 'ng-modal-lib';\nimport { SeeAlsoComponent } from './components/link-panel/see-also/see-also.component';\nimport { SameAsComponent } from './components/link-panel/same-as/same-as.component';\nimport { LexicalEntryVartransFormComponent } from './components/lexicon-panel/text-detail/edit-detail/vartrans-tab/lexical-entry-vartrans-form/lexical-entry-vartrans-form.component';\nimport { LexicalEntrySynsemFormComponent } from './components/lexicon-panel/text-detail/edit-detail/synsem-tab/lexical-entry-synsem-form/lexical-entry-synsem-form.component';\nimport { FormCoreFormComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/form-core-form/form-core-form.component';\nimport { LexicalEntryDecompFormComponent } from './components/lexicon-panel/text-detail/edit-detail/decomposition-tab/lexical-entry-decomp-form/lexical-entry-decomp-form.component';\nimport { SenseCoreFormComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/sense-core-form/sense-core-form.component';\nimport { SenseVartransFormComponent } from './components/lexicon-panel/text-detail/edit-detail/vartrans-tab/sense-vartrans-form/sense-vartrans-form.component';\nimport { LexicalConceptFormComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-concept-form/lexical-concept-form.component';\nimport { LanguageManagerComponent } from './components/lexicon-panel/document-system-tree/language-manager/language-manager.component';\nimport { EtymologyTabComponent } from './components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-tab.component';\nimport { EtymologyFormComponent } from './components/lexicon-panel/text-detail/edit-detail/etymology-tab/etymology-form/etymology-form.component';\nimport { MetadataPanelComponent } from './components/metadata-panel/metadata-panel.component';\nimport { EpigraphyFormComponent } from './components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/epigraphy-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SearchFormComponent } from './components/lexicon-panel/text-detail/epigraphy-detail/epigraphy-tab/epigraphy-form/search-form/search-form.component';\nimport { AuthService } from './services/auth/auth.service';;\nimport { UnauthorizedPageComponent } from './views/unauthorized-page/unauthorized-page/unauthorized-page.component'\n;\nimport { ConceptTreeComponent } from './components/lexicon-panel/document-system-tree/concept-tree/concept-tree.component'\n;\nimport { FormPanelComponent } from './components/attestation-panel/form-panel/form-panel.component'\nimport { CognatePanelComponent } from './components/lexicon-panel/text-detail/edit-detail/core-tab/lexical-entry-core-form/cognate-panel/cognate-panel.component';;\nimport { SkosTreeComponent } from './components/lexicon-panel/document-system-tree/skos-tree/skos-tree.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LexiconPageComponent,\n    LoginPageComponent,\n    PageNotFoundComponent,\n    HomePageComponent,\n    ProfilePageComponent,\n    LexiconPanelComponent,\n    NotePanelComponent,\n    LinkPanelComponent,\n    SearchPageComponent,\n    DataSearchFormComponent,\n    DocumentSystemTreeComponent,\n    TextTreeComponent,\n    TextDetailComponent,\n    EpigraphyDetailComponent,\n    EditDetailComponent,\n    EpigraphyTabComponent,\n    DictionaryTabComponent,\n    LexicalEntryTreeComponent,\n    CoreTabComponent,\n    VartransTabComponent,\n    SynsemTabComponent,\n    DecompositionTabComponent,\n    ProfilesTableComponent,\n    BibliographyPanelComponent,\n    AttestationPanelComponent,\n    LexicalEntryCoreFormComponent,\n    SeeAlsoComponent,\n    SameAsComponent,\n    LexicalEntryVartransFormComponent,\n    LexicalEntrySynsemFormComponent,\n    FormCoreFormComponent,\n    LexicalEntryDecompFormComponent,\n    SenseCoreFormComponent,\n    SenseVartransFormComponent,\n    LexicalConceptFormComponent,\n    LanguageManagerComponent,\n    EtymologyTabComponent,\n    EtymologyFormComponent,\n    MetadataPanelComponent,\n    EpigraphyFormComponent,\n    SearchFormComponent,\n    UnauthorizedPageComponent ,\n    ConceptTreeComponent ,\n    FormPanelComponent,\n    CognatePanelComponent,\n    SkosTreeComponent\n  ],\n  imports: [\n    ContextMenuModule.forRoot({useBootstrap4: true}),\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    TreeModule,\n    InfiniteScrollModule,\n    HttpClientModule,\n    AngularEditorModule,\n    NgSelectModule,\n    ModalModule,\n    NgbModule,\n    FormsModule,\n    KeycloakAngularModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    { \n      provide: APP_INITIALIZER, \n      useFactory: initializer, \n      deps: [ KeycloakService ], \n      multi: true\n    },\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\n\n@Component({\n  selector: 'app-metadata-panel',\n  templateUrl: './metadata-panel.component.html',\n  styleUrls: ['./metadata-panel.component.scss']\n})\nexport class MetadataPanelComponent implements OnInit, OnChanges {\n\n  object : any;\n  @Input() metadataData: any;\n\n  constructor(private documentService : DocumentSystemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) { \n    console.log(changes)\n    if(changes.metadataData.currentValue != null){\n      this.object = changes.metadataData.currentValue;\n\n      if(changes.metadataData.currentValue != this.object){\n        this.object = null;\n      }\n\n      this.object = changes.metadataData.currentValue;\n    }else{\n      this.object = null;\n      this.documentService.triggerMetadataPanel(false);\n    }\n    \n  }\n\n  isArray(val): boolean { return Array.isArray(val); }\n\n  isNumber(val): boolean { return typeof val == 'number'; }\n\n  isObject(val): boolean { return typeof val === 'object' && !Array.isArray(val); }\n\n  isLink(val) : boolean { \n    const re = /((http|https):\\/\\/)(([\\w.-]*)\\.([\\w]*))/;\n    return val.match(re); \n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\" id=\"metadataHeading\">\n        <h5 class=\"mb-0\">\n            <a class=\"btn btn-link w-100 d-flex align-self-center collapsed\" data-toggle=\"collapse\"\n                data-target=\"#metadataCollapse\" aria-expanded=\"true\" aria-controls=\"metadataCollapse\">\n                Metadata Panel<i class=\"fa ml-auto\"></i>\n            </a>\n        </h5>\n    </div>\n    <!-- {{object | json}} -->\n    <div id=\"metadataCollapse\" class=\"collapse\" aria-labelledby=\"metadataHeading\">\n        <div class=\"card-body\">\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" *ngIf=\"object != null\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" id=\"edition-tab\" data-toggle=\"tab\" href=\"#edition\" role=\"tab\"\n                        aria-controls=\"edition\" aria-selected=\"true\">Edition</a>\n                </li>\n                <li>\n                    <a class=\"nav-link\" id=\"epigraphy-tab\" data-toggle=\"tab\" href=\"#epigraphy_metadata\" role=\"tab\"\n                        aria-controls=\"epigraphy_metadata\" aria-selected=\"false\">Epigraphy</a>\n                </li>\n                <li>\n                    <a class=\"nav-link\" id=\"other-tab\" data-toggle=\"tab\" href=\"#other_metadata\" role=\"tab\"\n                        aria-controls=\"other_metadata\" aria-selected=\"false\">Text</a>\n                </li>\n            </ul>\n            <div class=\"tab-content\" id=\"myTabContent\" *ngIf=\"object != null\">\n                <div class=\"tab-pane fade show active\" id=\"edition\" role=\"tabpanel\" aria-labelledby=\"file-tab\">\n                    <div class=\"card epi_body\">\n                        <span class=\"text-id\">EDITION</span>\n                       \n                        <div class=\"card-body\">\n                            \n                            <div class=\"container\">\n                                <div class=\"row\" *ngIf=\"object.title != undefined || object?.title != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Title:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.title}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object['element-id'] != undefined || object['element-id'] != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Id:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object['element-id']}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object.editor != undefined || object?.editor != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Editor:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.editor}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object.authority != undefined || object?.authority != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Authority:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.authority}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object.license != undefined || object?.license != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>License:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <div class=\"col-12 p-0\" *ngFor=\"let subprop of object.license | keyvalue\">\n                                            <a [href]=\"subprop?.value\"  target=\"_blank\" *ngIf=\"isLink(subprop?.value)\">{{subprop?.value}}</a>\n                                            <span *ngIf=\"!isLink(subprop?.value)\">{{subprop?.value}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                           \n                        </div>\n                    </div>\n                    \n                </div>\n\n                <div class=\"tab-pane fade\" id=\"epigraphy_metadata\" role=\"tabpanel\" aria-labelledby=\"epigraphy-tab\">\n                    <div class=\"card epi_body\">\n                        <span class=\"text-id\">EPIGRAPHY</span>\n                      \n                        <div class=\"card-body\">\n                           \n\n                            <div class=\"container\">\n                                <div class=\"row\" *ngIf=\"object?.itAnt_ID != undefined && object?.itAnt_ID != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>ItAnt ID:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.itAnt_ID}}</span>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row\" *ngIf=\"object?.inscriptionTitle != undefined && object?.inscriptionTitle != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Inscription Title:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.inscriptionTitle}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.inscriptionType != undefined && object?.inscriptionType != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Inscription Type:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.inscriptionType}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.summary != undefined && object?.summary != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Summary:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.summary}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.trismegistos?.trismegistosID_url!= undefined\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Trismegistos ID:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a target=\"_blank\" [href]=\"'//'+object?.trismegistos?.trismegistosID_url\">\n                                            {{object?.trismegistos?.trismegistosID}}\n                                        </a>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.traditionalIDs != undefined && object?.traditionalIDs != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Traditional IDs:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <p class=\"m-0\" *ngFor=\"let other_id of object.traditionalIDs\">\n                                            <a target=\"_blank\" [href]=\"other_id.traditionalID_URL\">\n                                                {{other_id.traditionalID}}\n                                            </a>\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.originalPlace != undefined && object?.originalPlace != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Original Place:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.originalPlace?.ancientNameUrl != ''\" target=\"_blank\"\n                                            [href]=\"object?.originalPlace?.ancientNameUrl\">\n                                            {{object?.originalPlace?.ancientName}}\n                                        </a> \n                                        <span *ngIf=\"object?.originalPlace?.ancientNameUrl == ''\">\n                                            {{object?.originalPlace?.ancientName}}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.support?.objectType_conceptUrl != undefined && object?.support?.objectType_conceptUrl != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Original Type:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.support?.objectType_conceptUrl != ''\" target=\"_blank\"\n                                            [href]=\"object?.support?.objectType_conceptUrl\">\n                                                    {{object?.support?.objectType}}\n                                        </a> \n                                        <span *ngIf=\"object?.support?.objectType_conceptUrl == ''\">{{object?.support?.objectType}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.condition != undefined && object?.condition != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Condition:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.condition}}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"object?.conservationInstitution != undefined && object?.conservationInstitution != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Conservation Institution:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.conservationInstitution?.URL != ''\" target=\"_blank\"\n                                        [href]=\"object?.conservationInstitution?.URL\">\n                                        {{object?.conservationInstitution?.name}}</a> \n                                        <span *ngIf=\"object?.conservationInstitution?.URL == ''\">\n                                            {{object?.conservationInstitution?.name}}\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.dateOfOrigin != undefined && object?.dateOfOrigin != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Date of Origin:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.dateOfOrigin}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.dateOfOriginNotBefore != undefined && object?.dateOfOriginNotBefore != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Date of Origin not Before:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.dateOfOriginNotBefore}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.dateOfOriginNotAfter != undefined && object?.dateOfOriginNotAfter != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Date of Origin not After:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.dateOfOriginNotAfter}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.datingCertainty != undefined && object?.datingCertainty != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Dating Certainty:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.datingCertainty}}</span>\n                                    </div>\n                                </div>\n\n                                \n                                <div class=\"row\" *ngIf=\"object?.decoration != undefined && object?.decoration != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Decoration:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.decoration}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.detailedFindSpot != undefined && object?.detailedFindSpot != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Detailed Find Spot:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.detailedFindSpot}}</span>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row\" *ngIf=\"object?.discoveryYear != undefined\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Discovery Year:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span *ngFor=\"let sub of object?.discoveryYear| keyvalue\">\n                                            <p *ngIf=\"sub?.value != ''\">\n                                                <span class=\"text-italic\">{{sub?.key}}:</span>\n                                                <span *ngIf=\"!isLink(sub?.value)\">{{sub?.value}}</span>\n                                                <a [href]=\"sub?.value\" target=\"_blank\" *ngIf=\"isLink(sub?.value)\">{{sub?.value}}</a>\n                                            </p>\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.layoutNotes != undefined && object?.layoutNotes != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Layout Notes:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.layoutNotes}}</span>\n                                    </div>\n                                </div>\n\n\n                                <div class=\"row\" *ngIf=\"object?.modernFindSpotName != undefined && \n                                                        object?.modernFindSpotName != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Modern Findspot Name:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.modernFindSpotName?.URL != ''\" target=\"_blank\"\n                                        [href]=\"object?.modernFindSpotNameUri\">\n                                        {{object?.modernFindSpotName}}</a> \n                                        <span *ngIf=\"object?.modernFindSpotName == ''\">\n                                            {{object?.modernFindSpotName?.name}}\n                                        </span>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row\" *ngIf=\"object?.opistography != undefined && object?.opistography != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Opistography:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.opistography}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.paleographicNotes != undefined && object?.paleographicNotes != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Paleographic Notes:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.paleographicNotes}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.settlement != undefined && object?.settlement != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Settlement:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.settlement?.placeOfConservationExternalReference != ''\"\n                                        target=\"_blank\"\n                                        [href]=\"object?.settlement?.placeOfConservationExternalReference\">\n                                        {{object?.settlement?.placeOfConservation}}</a> \n                                        <span *ngIf=\"object?.settlement?.placeOfConservationExternalReference == ''\">\n                                            {{object?.settlement?.placeOfConservation}}\n                                        </span>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row\" *ngIf=\"object?.support?.material_conceptUrl != undefined && object?.support?.material_conceptUrl != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Material:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <a *ngIf=\"object?.support?.material_conceptUrl != ''\"\n                                        target=\"_blank\"\n                                        [href]=\"object?.support?.material_conceptUrl\">\n                                        {{object?.support?.material}}</a> \n                                        <span *ngIf=\"object?.support?.material_conceptUrl == ''\">\n                                            {{object?.support?.material}}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"tab-pane fade\" id=\"other_metadata\" role=\"tabpanel\" aria-labelledby=\"other-tab\">\n                    <div class=\"card epi_body\">\n                        <span class=\"text-id\">TEXT</span>\n                        <!-- <a href=\"#a\"><span class=\"edit-icon\"><i class=\"fa fa-edit\"></i></span></a>\n                        <a href=\"#b\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a> -->\n                        <div class=\"card-body\">\n                            <!-- <div class=\"d-flex\">\n                                <span class=\"badge badge-primary\">Form</span>\n                            </div> -->\n                            <div class=\"container\">\n                                <div class=\"row\" *ngIf=\"object?.autopsy != undefined && object?.autopsy != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Autopsy:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.autopsy}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.autopsyAuthor != undefined && object?.autopsyAuthor != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Autopsy Author:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.autopsyAuthor}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.language != undefined\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Language:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span *ngFor=\"let sub of object?.language\">\n                                            <p *ngIf=\"sub?.source != ''\">\n                                                <a [href]=\"sub?.source\" target=\"_blank\" *ngIf=\"isLink(sub?.source)\">{{sub?.ident}}</a>\n                                            </p>\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.bodytextpart?.ductus != undefined && object?.bodytextpart?.ductus != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Ductus:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.bodytextpart?.ductus}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.wordDivisionType != undefined && object?.wordDivisionType != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Word Division Type:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.wordDivisionType}}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" *ngIf=\"object?.writingSystem != undefined && object?.writingSystem != ''\">\n                                    <div class=\"col-xl-4 col-lg-12 p-1\">\n                                        <b>Writing System:</b>\n                                    </div>\n                                    <div class=\"col-xl-8 col-lg-12 p-1\">\n                                        <span>{{object.writingSystem}}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-edit-detail',\n  templateUrl: './edit-detail.component.html',\n  styleUrls: ['./edit-detail.component.scss']\n})\nexport class EditDetailComponent implements OnInit {\n\n  object : any;\n  showTrigger = false;\n  hideEtymology = true;\n  hideDecomp = true;\n  hideDictionary = true;\n  @ViewChild('navtabs') navtabs: ElementRef; \n  @ViewChild('navcontent') navcontent: ElementRef; \n\n  constructor(private lexicalService: LexicalEntriesService, private exp : ExpanderService) { }\n\n  ngOnInit(): void {\n    \n    this.object = null;\n    this.exp.openEdit$.subscribe(\n      boolean => {\n        if(boolean){\n          setTimeout(() => {\n            var text_detail = document.querySelectorAll('#text-dettaglio');\n            text_detail.forEach(element => {\n              if(!element.classList.contains('show')){\n                element.classList.add('show')\n              }\n            })\n            let a_link = document.querySelectorAll('a[data-target=\"#text-dettaglio\"]');\n            a_link.forEach(element => {\n              if(element.classList.contains(\"collapsed\")){\n                element.classList.remove('collapsed')\n              }else{\n                //element.classList.add('collapsed')\n              }\n            })\n           }, 100);\n        }\n      }\n    )\n\n    this.lexicalService.coreData$.subscribe(\n      object => {\n        if(object != null){\n          if(object['lexicalEntryInstanceName'] != undefined ||\n             object['formInstanceName'] != undefined ||\n             object['senseInstanceName'] != undefined ||\n             object['etymologyInstanceName'] != undefined){\n               setTimeout(() => {\n                var navTabLinks = this.navtabs.nativeElement.querySelectorAll('a')\n                this.object = object;\n                navTabLinks.forEach(element => {\n                  /* //console.log(element) */\n                  if(element.text == 'Core'){\n                    element.classList.add('active');\n                    this.hideDecomp = true;\n                    this.hideEtymology = true;\n                  }else{\n                    element.classList.remove('active')\n                    //console.log(element.id)\n                  }\n                });\n    \n                \n    \n                var navContent = this.navcontent.nativeElement.querySelectorAll('.tab-pane');\n                \n                navContent.forEach(element => {\n                  \n                  if(element.id == 'core'){\n                    element.classList.add('active')\n                    element.classList.add('show')\n                    /* console.log(\"picchio\");\n                    console.log(element) */\n                  }else{\n                    \n                    element.classList.remove('active')\n                    element.classList.remove('show')\n                    /* console.log(\"picchio21\")\n                    console.log(element) */\n                  }\n                });\n               }, 100);\n            \n\n          }else {\n            this.object = null;\n          }\n        }\n      }\n    );\n    \n    this.lexicalService.decompData$.subscribe(\n      object => {\n        if(object != null){\n          setTimeout(() => {\n            var navTabLinks = this.navtabs.nativeElement.querySelectorAll('a')\n            this.object = object;\n            navTabLinks.forEach(element => {\n              /* //console.log(element) */\n              if(element.text == 'Decomposition'){\n                element.classList.add('active')\n                this.hideDecomp = false;\n                this.hideEtymology = true;\n              }else{\n                element.classList.remove('active')\n                //console.log(element.id)\n              }\n            });\n\n            \n\n            var navContent = this.navcontent.nativeElement.querySelectorAll('.tab-pane');\n            \n            navContent.forEach(element => {\n              \n              if(element.id == 'decomposition'){\n                element.classList.add('active')\n                element.classList.add('show')\n                /* console.log(\"picchio\");\n                console.log(element) */\n              }else{\n                \n                element.classList.remove('active')\n                element.classList.remove('show')\n                /* console.log(\"picchio21\")\n                console.log(element) */\n              }\n            });\n           }, 100);\n        }else{\n          this.object = null;\n        }\n      }\n    )\n    \n\n    this.lexicalService.etymologyData$.subscribe(\n      object => {\n        if(object != null){\n          if(object['etymology']['etymologyInstanceName'] != undefined){\n            this.object = object;\n            var navTabLinks = this.navtabs.nativeElement.querySelectorAll('a')\n            \n            navTabLinks.forEach(element => {\n              //console.log(element.text)\n              if(element.text == 'Etymology'){\n                /* console.log(\"aggiungo active a:\") */\n                element.classList.add('active');\n                this.hideEtymology = false;\n                this.hideDecomp = true;\n              }else{\n                element.classList.remove('active')\n                /* console.log(\"tolgo active a:\") */\n              }\n            });\n            var navContent = this.navcontent.nativeElement.querySelectorAll('.tab-pane');\n            \n            navContent.forEach(element => {\n              //console.log(element.id)\n              if(element.id == 'etymology'){\n                element.classList.add('active')\n                element.classList.add('show')\n              }else{\n                element.classList.remove('active')\n                element.classList.remove('show')\n                //console.log(element.id)\n              }\n            });\n            \n          }else {\n            this.object = null;\n          }\n        }\n      }\n    );\n  }\n\n  triggerExpansionEdit(){\n \n    setTimeout(() => {\n\n      if(this.exp.isEditTabOpen() && !this.exp.isEpigraphyTabOpen()){\n        if(this.exp.isEditTabExpanded() && !this.exp.isEpigraphyTabExpanded()){\n          this.exp.openCollapseEdit();\n          this.exp.expandCollapseEdit();\n        }\n      }else if(!this.exp.isEditTabOpen() && !this.exp.isEpigraphyTabOpen()){\n        if(!this.exp.isEditTabExpanded() && !this.exp.isEpigraphyTabExpanded()){\n          this.exp.openCollapseEdit();\n          this.exp.expandCollapseEdit();\n        }\n      }else if(this.exp.isEditTabOpen() && this.exp.isEpigraphyTabOpen()){\n        this.exp.openCollapseEdit();\n        this.exp.expandCollapseEpigraphy(true);\n      }else if(!this.exp.isEditTabOpen() && this.exp.isEpigraphyTabOpen()){\n        if(!this.exp.isEditTabExpanded() && this.exp.isEpigraphyTabExpanded()){\n          this.exp.expandCollapseEpigraphy(false);\n          this.exp.openCollapseEdit(true)\n        }\n        \n      }\n      \n    }, 200);\n  }\n\n}\n","\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <ul class=\"nav nav-tabs\" id=\"editDictTab\" role=\"tablist\" #navtabs [ngClass]=\"{'disabled': object === null}\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" id=\"core-tab\" data-toggle=\"tab\" href=\"#core\" role=\"tab\" aria-controls=\"core\" aria-selected=\"true\">Core</a>\n            </li>\n            <!-- <li class=\"nav-item\">\n                <a class=\"nav-link\" id=\"vartrans-tab\" data-toggle=\"tab\" href=\"#vartrans\" role=\"tab\" aria-controls=\"vartrans\" aria-selected=\"true\">Vartrans</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" id=\"synsem-tab\" data-toggle=\"tab\" href=\"#synsem\" role=\"tab\" aria-controls=\"synsem\" aria-selected=\"true\">Synsem</a>\n            </li> -->\n            <li class=\"nav-item\" [hidden]=\"hideDecomp\">\n                <a class=\"nav-link\" id=\"decomposition-tab\" data-toggle=\"tab\" href=\"#decomposition\" role=\"tab\" aria-controls=\"decomposition\" aria-selected=\"true\">Decomposition</a>\n            </li>\n            <li class=\"nav-item\" [hidden]=\"hideEtymology\">\n                <a class=\"nav-link\" id=\"etymology-tab\" data-toggle=\"tab\" href=\"#etymology\" role=\"tab\" aria-controls=\"etymology\" aria-selected=\"true\">Etymology</a>\n            </li>\n            <li class=\"nav-item\" [hidden]=\"hideDictionary\">\n                <a class=\"nav-link\" id=\"dictionary-tab\" data-toggle=\"tab\" href=\"#dictionary\" role=\"tab\" aria-controls=\"dictionary\" aria-selected=\"false\">Dictionary</a>\n            </li>\n            <h5 class=\"ml-auto mb-0\">\n                <a class=\"btn btn-link w-100 d-flex align-self-center\" (click)=\"triggerExpansionEdit();\" data-toggle=\"collapse\" data-target=\"#text-dettaglio\" aria-expanded=\"false\" aria-controls=\"text-dettaglio\">\n                    <i class=\"fa ml-auto\"></i>\n                </a>\n            </h5>\n        </ul>\n        \n    </div>\n    <div id=\"text-dettaglio\" class=\"collapse show\" aria-labelledby=\"headingOne\" ><!--  data-parent=\"#epigraphy-accordion\" -->\n        <div class=\"card-body\">\n            <div class=\"tab-content\" id=\"tab-content\" #navcontent>\n                <div class=\"tab-pane fade\" id=\"core\" role=\"tabpanel\" aria-labelledby=\"core-tab\">\n                    <app-core-tab></app-core-tab>\n                </div>\n                <!-- <div class=\"tab-pane fade\" id=\"vartrans\" role=\"tabpanel\" aria-labelledby=\"vartrans-tab\">\n                    <app-vartrans-tab></app-vartrans-tab>\n                </div>\n                <div class=\"tab-pane fade\" id=\"synsem\" role=\"tabpanel\" aria-labelledby=\"synsem-tab\">\n                    <app-synsem-tab></app-synsem-tab>\n                </div> -->\n                <div class=\"tab-pane fade\" id=\"decomposition\" role=\"tabpanel\" aria-labelledby=\"decomposition-tab\">\n                    <app-decomposition-tab></app-decomposition-tab>\n                </div>\n                <div class=\"tab-pane fade\" id=\"etymology\" role=\"tabpanel\" aria-labelledby=\"etymology-tab\">\n                    <app-etymology-tab></app-etymology-tab>\n                </div>\n                <div class=\"tab-pane fade\" id=\"dictionary\" role=\"tabpanel\" aria-labelledby=\"dictionary-tab\">\n                    <app-dictionary-tab></app-dictionary-tab>\n                </div>\n            </div>\n        </div>\n    </div>\n   \n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpanderService {\n  \n  isEpigraphyExpanded = false;\n  isEditExpanded = false;\n\n  isEditOpen = false;\n  isEpigraphyOpen = false;\n\n  private _openEdit : BehaviorSubject<boolean> = new BehaviorSubject(null);\n  private _openEpigraphy : BehaviorSubject<boolean> = new BehaviorSubject(null);\n  private _expandEpigraphy: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  private _expandEdit: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  expEpigraphy$ = this._expandEpigraphy.asObservable();\n  expEdit$ = this._expandEdit.asObservable();\n  openEdit$ = this._openEdit.asObservable();\n  openEpigraphy$ = this._openEpigraphy.asObservable();\n\n  constructor() { }\n\n  expandCollapseEpigraphy(trigger?){\n    if(trigger != undefined){\n      this.isEpigraphyExpanded = trigger;\n      this._expandEpigraphy.next(this.isEpigraphyExpanded)\n    }else{\n      this.isEpigraphyExpanded = !this.isEpigraphyExpanded;\n      this._expandEpigraphy.next(this.isEpigraphyExpanded)\n    }\n  }\n  \n  expandCollapseEdit(trigger?){\n    if(trigger != undefined){\n      this.isEditExpanded = trigger;\n      this._expandEdit.next(this.isEditExpanded)\n    }else{\n      this.isEditExpanded = !this.isEditExpanded;\n      this._expandEdit.next(this.isEditExpanded)\n    }\n  }\n\n  openCollapseEdit(trigger?){\n    if(trigger != undefined){\n      this.isEditOpen = trigger;\n      this._openEdit.next(trigger);\n    }else{\n      this.isEditOpen = !this.isEditOpen\n      this._openEdit.next(this.isEditOpen);\n    }\n  }\n\n  openCollapseEpigraphy(trigger?){\n    if(trigger != undefined){\n      this.isEpigraphyOpen = trigger;\n      this._openEpigraphy.next(trigger)\n    }else{\n      this.isEpigraphyOpen = !this.isEpigraphyOpen\n      this._openEpigraphy.next(this.isEpigraphyOpen)\n    }\n  }\n\n  isEditTabExpanded(){\n    return this.isEditExpanded;\n  }\n\n  isEpigraphyTabExpanded(){\n    return this.isEpigraphyExpanded;\n  }\n\n  isEditTabOpen(){\n    return this.isEditOpen;\n  }\n\n  isEpigraphyTabOpen(){\n    return this.isEpigraphyOpen;\n  }\n\n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { AfterViewInit, ApplicationRef, Component, ComponentFactoryResolver, ComponentRef, ContentChild, ElementRef, HostListener, Injector, Input, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NgbPopover, NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { AnnotatorService } from 'src/app/services/annotator/annotator.service';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { SearchFormComponent } from './search-form/search-form.component';\ndeclare var $: JQueryStatic;\n\n@Component({\n  selector: 'app-epigraphy-form',\n  templateUrl: './epigraphy-form.component.html',\n  styleUrls: ['./epigraphy-form.component.scss']\n})\nexport class EpigraphyFormComponent implements OnInit, OnDestroy {\n\n  @Input() epiData: any;\n  object: any;\n  tokenArray: FormArray;\n  textEpigraphy = '';\n  leidenLines : any;\n\n  private bind_subject: Subject<any> = new Subject();\n  searchResults = [];\n  memoryForms = [];\n\n  selectedPopover = {\n    htmlNodeName: '',\n    tokenId: ''\n  };\n\n  spanSelection;\n\n  data: object;\n  sel_t: object;\n  message: string;\n  isOpen = false;\n  bind = this;\n  @ViewChildren('span_modal') spanPopovers: QueryList<any>;\n  @ViewChild('search_form') searchForm : SearchFormComponent;\n\n  //@ViewChild('span_modal') spanPopover: ElementRef;\n\n\n  \n  epigraphyForm = new FormGroup({\n    tokens: new FormArray([this.createToken()]),\n  })\n\n\n  multiWordMode = false;\n  annotationArray = [];\n  token_annotationArray = [];\n  epidoc_annotation_array = [];\n  leiden_array = [];\n  translation_array = [];\n\n  fileId;\n\n  isEmptyFile = false;\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event): void {\n    setTimeout(() => {\n      let evtPath = Array.from(event.path);\n      let isMultiwordRequest = false;\n      evtPath.some((element: HTMLElement) => {\n        //console.log(element)\n        if (element.classList != undefined) {\n          if (element.classList.contains('ok-button')) {\n            isMultiwordRequest = true;\n            return true;\n          } else {\n            isMultiwordRequest\n            return false;\n          }\n        } else {\n          return false;\n        }\n      })\n\n      \n      let event_el;\n\n      if (isMultiwordRequest) {\n        let multiWordArray = Array.from(document.getElementsByClassName('multiword'));\n        multiWordArray.forEach(element => {\n          let children = Array.from(element.children);\n          children.forEach(subchild => {\n            if (subchild.classList.contains('multiword-button')) {\n              event_el = element.children\n              subchild.remove();\n            }\n          })\n        });\n        document.querySelectorAll('.multiword').forEach(element => {\n          this.renderer.removeClass(element, 'multiword');\n          this.renderer.addClass(element, 'multiword-span-' + 1);\n          \n          let prev = element.previousElementSibling;\n          let next = element.nextElementSibling;\n\n          if (prev != undefined) {\n            if (prev.classList != undefined) {\n              let classNames = prev.className;\n              let matchTest = /(^|\\s)(multiword-span-\\d)(\\s|$)/.test(classNames)\n              if (matchTest) {\n                this.renderer.addClass(element, 'border-left-0')\n              }\n            }\n          } else if (next != undefined) {\n            if (next.classList != undefined) {\n              let classNames = next.className;\n              let matchTest = /(^|\\s)(multiword-span-\\d)(\\s|$)/.test(classNames)\n              if (matchTest) {\n                this.renderer.addClass(element, 'border-right-0')\n              }\n            }\n          }\n        })\n\n        let position_popover;\n      \n        Array.from(event_el).forEach(\n          (element : HTMLElement)=>{\n            position_popover = element.getAttribute('position');\n            return;\n          }\n        )\n        \n        this.message = '';\n        \n        this.spanPopovers.toArray()[position_popover-1].open();\n        \n        let popover_id = this.spanPopovers.toArray()[position_popover-1]._ngbPopoverWindowId;\n        this.selectedPopover.tokenId = (position_popover -1).toString();\n        this.annotatorService.triggerSearch(null);\n        this.selectedPopover.htmlNodeName = popover_id;\n        let multiwordSpan = Array.from(document.querySelectorAll(\"[class*=multiword-span-]\"));\n        let spansArray = [];\n        multiwordSpan.forEach(element => {\n          let children = Array.from(element.children);\n          children.forEach(\n            span=>{\n              let position = parseInt(span.getAttribute('position'));\n              let object = {\n                start : this.object[position-1].begin,\n                end : this.object[position-1].end\n              }\n              \n              spansArray.push(object)\n            }\n          )\n        })\n\n        console.log(spansArray);\n        this.spanSelection = spansArray;\n        \n        \n      } else {\n        if (!this.multiWordMode) {\n\n          //console.log(document.querySelectorAll('.token'))\n          document.querySelectorAll('.multiword').forEach(element => {\n            this.renderer.removeClass(element, 'multiword')\n            this.renderer.removeClass(element, 'border-right-0');\n          });\n        }\n      }\n    }, 10);\n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  onGlobalClick(event): void {\n\n    setTimeout(() => {\n\n      //PREVENIRE CHE I POPOVER SI CHIUDANO SE CLICCATI FUORI DAL COMPONENTE\n      let index = this.selectedPopover.tokenId\n\n      //SE IL CLICK AVVIENE FUORI QUESTO COMPONENTE, L'EVENTUALE POPOVER DEVE RESTARE APERTO, \n      //SE SI CLICCA QUESTO COMPONENTE IL POPOVER VA CHIUSO E RIATTIVATO L'AUTOCLOSE\n      if (index != '') {\n        //console.log(this.config)\n        let popover = this.spanPopovers.toArray()[index];\n       /*  if (popover.isOpen()) {\n          //console.log(popover.isOpen())\n          //console.log(popover)\n          //popover.autoClose = false;\n        } */\n      }\n\n\n\n    }, 17);\n\n    setTimeout(() => {\n      /* console.log(event.path) */\n      let evtPath = Array.from(event.path)\n      //console.log(this.selectedPopover.htmlNodeName)\n      let htmlNode = document.getElementById(this.selectedPopover.htmlNodeName)\n      console.log\n      let tokenId = this.selectedPopover.tokenId;\n      if (evtPath.includes(htmlNode)) {\n\n      } else {\n        if(this.object != null){\n          this.object.forEach(element => {\n            //console.log(element.position != tokenId)\n            if (element.position != tokenId) {\n  \n              element.editing = false;\n  \n              this.selectedPopover.htmlNodeName = '';\n              this.selectedPopover.tokenId = ''\n            }\n          });\n        }\n        \n\n        let parentMarkElement = document.getElementsByClassName('token-' + tokenId)[0];\n        //console.log(document.getElementsByClassName('token-'+tokenId))\n        if (parentMarkElement != null) {\n          let i = 0;\n          Array.from(parentMarkElement.childNodes).forEach(\n            element => {\n//              console.log(element)\n              let textMarkElement = element.textContent;\n              let prev, next;\n              if (element['classList'] != undefined) {\n\n                if (element['classList'].contains('mark') || element['classList'].contains('mark_test')) {\n\n                  prev = Array.from(parentMarkElement.childNodes)[i - 1];\n                  next = Array.from(parentMarkElement.childNodes)[i];\n\n                  if (next == element) {\n                    next = Array.from(parentMarkElement.childNodes)[i + 1];\n                  }\n\n                  if (prev != undefined) {\n                    if (prev.nodeName == '#text') {\n                      textMarkElement = prev.textContent += textMarkElement;\n                      prev.remove();\n                    }\n                  }\n\n                  if (next != undefined) {\n                    if (next.nodeName == '#text') {\n                      textMarkElement += next.textContent;\n                      next.remove()\n                    }\n                  }\n\n                  const text = this.renderer.createText(textMarkElement)\n\n                  this.renderer.insertBefore(parentMarkElement, text, element)\n                  //this.renderer.removeChild(parentMarkElement, element);\n\n                  element.remove();\n\n\n                }\n              }\n\n              i++;\n            }\n          );\n\n        }\n\n      }\n    }, 17);\n\n  }\n\n\n\n  @HostListener('window:keydown', ['$event'])\n  enableMultiword(event: KeyboardEvent) {\n    /* console.log(event) */\n    if (event.altKey && event.ctrlKey) {\n      this.multiWordMode = true;\n      if(this.object != undefined){\n        this.object.forEach(element => {\n          element.editing = false;\n          this.selectedPopover.htmlNodeName = '';\n          this.selectedPopover.tokenId = ''\n        });\n      }\n      \n    } else if (event.code == 'Escape') {\n\n      let htmlNode = document.getElementById(this.selectedPopover.htmlNodeName)\n      let tokenId = this.selectedPopover.tokenId;\n\n      if(this.object != undefined){\n        this.object.forEach(element => {\n          if (element.id != tokenId) {\n  \n            element.editing = false;\n  \n            this.selectedPopover.htmlNodeName = '';\n            this.selectedPopover.tokenId = ''\n          }\n        });\n  \n        let parentMarkElement = document.getElementsByClassName('token-' + tokenId)[0];\n        if (parentMarkElement != null) {\n          let i = 0;\n          Array.from(parentMarkElement.children).forEach(\n            element => {\n              console.log(element)\n              if (element.classList.contains('mark')) {\n  \n                let textMarkElement = element.textContent;\n                const text = this.renderer.createText(textMarkElement)\n                //parentMarkElement.textContent = parentMarkElement.textContent.trim();\n                //let innerText = parentMarkElement.textContent;\n                this.renderer.insertBefore(parentMarkElement, text, element)\n                this.renderer.removeChild(parentMarkElement, element);\n                //parentMarkElement.insertBefore(text, parentMarkElement.childNodes[i+1]);\n                //let children = parentMarkElement.children;\n                //parentMarkElement.textContent = innerText\n                i++;\n                return;\n              }\n              i++;\n            }\n          );\n  \n        }\n      }\n      \n\n\n\n    }\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  disableMultiword(event: KeyboardEvent) {\n    if (!event.altKey && !event.ctrlKey) {\n      this.multiWordMode = false;\n    }\n  }\n\n  constructor(private router : Router, private annotatorService: AnnotatorService, private expander: ExpanderService, private renderer: Renderer2, private documentService: DocumentSystemService, private formBuilder: FormBuilder, private toastr: ToastrService, private lexicalService: LexicalEntriesService, private config: NgbPopoverConfig) { \n    /* this.router.events.pipe(filter(e => e instanceof NavigationEnd)).subscribe((val) => {\n      setTimeout(() => {\n        this.lexicalService.sendToCoreTab(null);\n        this.documentService.sendToEpigraphyTab(null)\n        this.documentService.sendTextToEpigraphyTab(null);\n        this.expander.openCollapseEdit(false);\n        this.expander.openCollapseEpigraphy(false);\n        this.expander.expandCollapseEpigraphy(false);\n        this.expander.expandCollapseEdit(false)\n      }, 1000);\n      \n    }) */\n  }\n\n\n  ngOnInit(): void {\n\n    /* this.config.autoClose = false */\n\n\n    this.epigraphyForm = this.formBuilder.group({\n      tokens: this.formBuilder.array([this.createToken()])\n    })\n\n    this.documentService.epigraphyTextData$.subscribe(\n      data=>{\n        if(data != null){\n          this.textEpigraphy = data;\n        }else{\n          this.textEpigraphy = '';\n        }\n      },error=>{\n        console.log(error)\n      }\n    )\n\n    this.documentService.epigraphyLeidenData$.subscribe(\n      data=>{\n        console.log(data)\n        if(data != null){\n          this.leidenLines = data;\n\n\n        }else{\n          this.leidenLines = [];\n        }\n      },error=>{\n        console.log(error)\n      }\n    )\n\n    this.documentService.epigraphyTranslationData$.subscribe(\n      data=>{\n        console.log(data)\n        if(data != null){\n          this.translation_array = data;\n\n\n        }else{\n          this.translation_array = [];\n        }\n      },error=>{\n        console.log(error)\n      }\n    )\n\n\n\n    this.bind_subject.pipe(debounceTime(100)).subscribe(\n      data => {\n        /* console.log(data) */\n        this.bindSelection(data.popover, data.evt, data.i);\n      }\n    )\n\n    this.annotatorService.deleteAnnoReq$.subscribe(\n      data=> {\n\n        let localArray = [];\n        if(data != null){\n          \n\n          this.annotationArray = this.annotationArray.filter(\n            element => {\n              return element.id != data.id\n            }\n          )\n          //console.log(this.annotationArray)\n          \n          if(this.object != undefined){\n            this.object.forEach(element => {\n              if(element.id == data.node_id){\n                /* let position = element.position;\n  \n                let elementHTML = document.getElementsByClassName('token-'+(position-1))[0]\n                this.renderer.removeClass(elementHTML, 'annotation'); */\n  \n                let start = element.begin;\n                let end = element.end;\n  \n                this.annotationArray.forEach(element => {\n                  if(element.spans[0].start >= start  && element.spans[0].end <= end){\n                    localArray.push(element);\n                  }\n                })\n  \n                console.log(localArray, localArray.length);\n  \n                if(localArray.length == 0){\n                  let position = element.position;\n                  let elementHTML = document.getElementsByClassName('token-'+(position-1))[0]\n                  this.renderer.removeClass(elementHTML, 'annotation');\n                }\n              }\n            });\n          }\n          \n        }\n      }\n    )\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if(changes.epiData.currentValue != null){\n        if (this.object != changes.epiData.currentValue) {\n          this.tokenArray = this.epigraphyForm.get('tokens') as FormArray;\n          this.tokenArray.clear();\n          this.spanSelection = null;\n          this.annotationArray = [];\n          this.epidoc_annotation_array = [];\n\n          /* \n  \n          this.denotesArray = this.coreForm.get('denotes') as FormArray;\n          this.denotesArray.clear();\n  \n          this.cognatesArray = this.coreForm.get('cognate') as FormArray;\n          this.cognatesArray.clear();\n  \n          this.evokesArray = this.coreForm.get('evokes') as FormArray;\n          this.evokesArray.clear();\n  \n          this.memoryPos = '';\n  \n          this.staticMorpho = [] */\n        }\n        \n        \n        this.object = changes.epiData.currentValue['tokens'];\n        let element_id = changes.epiData.currentValue['element_id']\n        this.fileId = changes.epiData.currentValue['epidoc_id']\n        let xmlDoc = changes.epiData.currentValue['xmlDoc']\n        console.log(this.object)\n        if (this.object != null) {\n\n          if(this.object.length == 0){\n            this.isEmptyFile = true;\n            console.log(\"FILE VUOTO\")\n          }else{\n            this.isEmptyFile = false;\n            console.log(\"FILE NON VUOTO\")\n          }\n  \n          //console.log(this.object)\n          \n          this.annotatorService.getAnnotation(element_id).subscribe(\n            data=>{\n              console.log(data);\n              if(data.annotations != undefined){\n                data.annotations.forEach(element => {\n                  //console.log(element)\n                  if(element.layer == 'attestation'){\n                    if(element.attributes.bibliography == undefined){\n                      element.attributes['bibliography'] = [];\n                    }\n                    \n                    if(!Array.isArray(element.attributes.bibliography)){\n                      let tmp_arr = [];\n                      tmp_arr.push(element.attributes['bibliography']);\n                      element.attributes['bibliography'] = tmp_arr;\n                    }\n                    \n                    \n                    if(Array.isArray(element.attributes['bibliography'])){\n                      Array.from(element.attributes['bibliography']).forEach(element => { \n                        \n                        if(element['note'] == undefined){\n                          element['note'] = \"\";\n                        } \n                        \n                        if(element['textualRef']== undefined){\n                          element['textualRef'] = \"\";\n                        } \n                      });\n                    }\n                    this.annotationArray.push(element);\n                  }else if(element.layer == 'epidoc'){\n                    this.epidoc_annotation_array.push(element);\n                  }\n                });\n                //this.annotationArray = data.annotations;\n                if(this.annotationArray.length > 0){\n                  \n            \n\n                  var that2 = this;\n                  var timer_object = setInterval((val)=>{\n                    try {\n                      if(this.object != null){\n                        this.object.forEach(element => {\n                          let startElement = element.begin;\n                          let endElement = element.end;\n                          this.annotationArray.forEach(annotation => {\n                            if(annotation.spans.length == 1){\n                              let startAnnotation = annotation.spans[0].start;\n                              let endAnnotation = annotation.spans[0].end;\n      \n                              if(startAnnotation >= startElement  && endAnnotation <= endElement){\n                                let positionElement = element.position;\n                                let elementHTML = document.getElementsByClassName('token-'+(positionElement-1))[0]\n                                var that = this;\n\n                                let xmlNode = xmlDoc.querySelectorAll('[*|id=\\''+element.xmlid+'\\']')[0].outerHTML;\n                                let object = {\n                                  xmlString : xmlNode\n                                }\n                                this.documentService.testConvert(object).subscribe(\n                                  data=> {\n                                    console.log(data);\n                                    let raw = data.xml;\n                                    let leidenToken = new DOMParser().parseFromString(raw, \"text/html\").body.innerHTML.replace('\\n', '');\n                                    annotation.attributes['leiden'] = leidenToken;\n                                  }, error=> {\n                                    console.log(error)\n                                  }\n                                )\n                                var timer = setInterval((val)=>{                \n                                    \n                                    try{\n                                        if(elementHTML != undefined){\n                                          that.renderer.addClass(elementHTML, 'annotation');\n                                          clearInterval(timer)\n                                        }\n                                    }catch(e){\n                                        console.log(e)\n                                    }\n                                        \n                                          \n                                }, 250)\n                                \n                                \n                                \n                              }\n                            }\n                          });\n                          \n                        });\n                        setTimeout(() => {\n                          this.lexicalService.triggerAttestationPanel(true);\n                          this.lexicalService.sendToAttestationPanel(this.annotationArray);\n                        }, 1000);\n                        clearInterval(timer_object)\n                      }\n                      \n                    } catch (error) {\n                      console.log(error)\n                    }\n                  }, 250)\n\n                 \n\n                }else{\n                  this.annotationArray = [];\n                  this.lexicalService.triggerAttestationPanel(false);\n                  this.lexicalService.sendToAttestationPanel(null);\n\n                }\n\n                /* setTimeout(() => {\n                  \n                  console.log(this.epidoc_annotation_array); \n                  \n                  let epidoc_aggregator = []\n                  if(this.epidoc_annotation_array.length > 0){\n                    this.object.forEach(element => {\n                      \n                      let object = {};\n                      object['element'] = element.text;\n                      object['element-span'] = {\n                        start : element.begin,\n                        end : element.end\n                      };\n                      let epidoc_array = [];\n                      let start = element.begin;\n                      let end = element.end;\n                      this.epidoc_annotation_array.forEach(\n                        epidoc => {\n                          \n                          epidoc.spans.forEach(span => {\n                            if(span.start >= start && span.end <= end){\n                              epidoc_array.push(epidoc)\n                            }\n                          });\n                        }\n                      )\n\n                      object['epidoc'] = epidoc_array;\n                      epidoc_aggregator.push(object)\n                    });\n                  }\n\n                  console.log(epidoc_aggregator);\n\n                  let leiden_string = \"\";\n\n                  epidoc_aggregator.forEach(\n                    token =>{\n                      let start = token['element-span'].start;\n                      let end = token['element-span'].end;\n                      let text = token.element;\n\n                      let edit_dict = [];\n\n                      token.epidoc.forEach(epidoc => {\n\n                        let obj = {};\n                        \n                        let relative_start, relative_end;\n                        relative_start = epidoc.spans[0].start-start;\n                        relative_end = relative_start + (epidoc.spans[0].end - epidoc.spans[0].start);\n\n                        if(relative_end == 0){\n                          relative_end = text.length;\n                        }\n\n                        if(epidoc.value == 'tei:lb' && epidoc.attributes.break == undefined){\n                          obj['start'] = relative_start;\n                          obj['end'] = relative_end;\n                          obj['transformed'] = '\\n';\n\n                          edit_dict.push(obj);\n\n                        }else if(epidoc.value == 'tei:ex'){\n                          //console.log(token, epidoc, relative_start, relative_end)\n                          let substring = text.substring(relative_start, relative_end)\n\n                          obj['start'] = relative_start;\n                          obj['end'] = relative_end;\n                          obj['transformed'] = '('+substring+')';\n\n                          edit_dict.push(obj);\n\n                          \n                        }else if(epidoc.value == 'tei:supplied'){\n                          //console.log(token, epidoc, relative_start, relative_end)\n                          let substring = text.substring(relative_start, relative_end)\n                          \n                          obj['start'] = relative_start;\n                          obj['end'] = relative_end;\n                          obj['transformed'] = '['+substring+']'\n\n                          edit_dict.push(obj);\n                        }else if(epidoc.value == 'tei:unclear'){\n                          //console.log(token, epidoc, relative_start, relative_end)\n                          let substring = text.substring(relative_start, relative_end);\n                          let tmp_string = \"\";\n                          Array.from(substring).forEach((element : string) => {\n                            //console.log(element.codePointAt(0).toString(16))\n                            element = element+'\\u0323'\n                            leiden_string += element;\n                            tmp_string += element;\n                          });\n                          \n                          obj['start'] = relative_start;\n                          obj['end'] = relative_end;\n                          obj['transformed'] = tmp_string\n\n                          edit_dict.push(obj);\n                        }else if(epidoc.value == 'tei:pc' && text == '.'){\n                          obj['start'] = relative_start;\n                          obj['end'] = relative_end;\n                          obj['transformed'] = '·'\n\n                          edit_dict.push(obj)\n                        }\n                      });\n\n\n\n                      console.log(edit_dict, text);\n                      if(edit_dict.length > 0){\n                        let tmp_string = '';\n                        let current_offset = 0;\n                        edit_dict.forEach(element =>{\n                          if(element.transformed == '\\n'){\n                            if(element.start == current_offset){\n                              tmp_string += '\\n';\n                              if(edit_dict.indexOf(element)== edit_dict.length-1 && current_offset < text.length){\n                                tmp_string += text.substring(current_offset, text.length);\n                              }\n                            }else if(element.end == text.length){\n                              if(edit_dict.indexOf(element)== edit_dict.length-1 && current_offset < text.length){\n                                tmp_string += text.substring(current_offset, text.length);\n                              }\n                              tmp_string += '\\n';\n                            }\n                            \n                            //console.log(edit_dict.indexOf(element), edit_dict.length)\n                          }else{\n                            if(element.start == current_offset){\n                              tmp_string += element.transformed;;\n                              current_offset = element.end;\n                              //console.log(edit_dict.indexOf(element), edit_dict.length-1)\n\n                              if(edit_dict.indexOf(element)== edit_dict.length-1 && current_offset < text.length){\n                                tmp_string += text.substring(current_offset, text.length);\n                              }\n                            }else if(current_offset != element.start){\n                              tmp_string += text.substring(current_offset, element.start) + element.transformed;\n                              current_offset = element.end;\n\n                              //console.log(edit_dict.indexOf(element)== edit_dict.length-1, element.transformed, current_offset, text.length)\n                              \n                              if(edit_dict.indexOf(element)== edit_dict.length-1 && current_offset < text.length){\n                                tmp_string += text.substring(current_offset, text.length);\n                              }\n                            }\n                          }\n                        });\n                        console.log(tmp_string);\n                        leiden_string += tmp_string;\n                      }else{\n                        leiden_string += text;\n                      }\n                      \n\n                    }\n                  )\n\n                  console.log(leiden_string)\n                  \n\n                }, 100); */\n                \n              }else{\n                this.annotationArray = [];\n                this.epidoc_annotation_array = [];\n                this.lexicalService.triggerAttestationPanel(null);\n                this.lexicalService.sendToAttestationPanel(null);\n              }\n              \n            },error=>{\n              console.log(error)\n            }\n          )\n        }\n      }else{\n        this.object = null;\n      }\n      \n\n\n    }, 10)\n\n  }\n\n  ngOnDestroy(){\n    \n  }\n\n\n\n  createToken(token?) {\n    if (token != undefined) {\n      return this.formBuilder.group({\n        entity: new FormControl(token)\n      })\n    } else {\n      return this.formBuilder.group({\n        entity: new FormControl('')\n      })\n    }\n  }\n\n  enterCell(evt, i) {\n    //console.log(\"enter cell \" + i);\n    //console.log(evt);\n    if(evt.target.innerText != '.' && evt.target.innerText != ':' && evt.target.innerText != ''){\n      let parentNode = evt.target.parentElement\n      if (parentNode != undefined) {\n        let classNames = parentNode.className;\n        let matchTest = /(^|\\s)(multiword-span-\\d)(\\s|$)/.test(classNames)\n        if (matchTest) {\n          \n        } else {\n          this.object[i]['selected'] = true;\n          \n          if (window.getSelection) {\n            if (window.getSelection().empty) {  // Chrome\n              window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {  // Firefox\n              window.getSelection().removeAllRanges();\n            }\n          }\n        }\n      }\n    }\n    \n\n\n\n  }\n\n  leavingCell(evt, i) {\n    //console.log(\"leaving cell \" + i);\n    this.object[i]['selected'] = false;\n\n  }\n\n  deleteSelection(popover, evt, i) {\n    setTimeout(() => {\n\n    }, 10);\n    let popoverHtml = popover._elementRef.nativeElement;\n    //console.log(popoverHtml.querySelectorAll('.annotation'))\n    if (popoverHtml.querySelectorAll('.annotation').length > 0) {\n\n    } else {\n      popoverHtml.textContent = popoverHtml.textContent.trim();\n    }\n    /* if(popoverHtml.querySelectorAll('.mark').length > 0){\n      let innerText = popoverHtml.innerText;\n      const childElements = popoverHtml.children;\n      for (let child of childElements) {\n        console.log(child)\n        this.renderer.removeChild(popoverHtml, child);\n      }\n      console.log(innerText)\n      popoverHtml.innerText = innerText\n    }else if(popoverHtml.querySelectorAll('.mark').length == 0){\n      \n    } */\n\n  }\n\n  triggerBind(popover, evt, i) {\n    if (!this.multiWordMode) {\n      if(evt.target.innerText != '.' && evt.target.innerText != ':' && evt.target.innerText != ''){\n        this.bind_subject.next({ popover, evt, i })\n      }\n      \n    } else {\n      //console.log(\"multiword mode\", i)\n      console.log(popover);\n      this.multiWordCreator(popover, evt, i);\n    }\n  }\n\n\n  multiWordCreator(popover, evt, i) {\n    let span = popover._elementRef.nativeElement.parentNode.parentNode.childNodes[i];\n    let prevSibling, nextSibling;\n    prevSibling = popover._elementRef.nativeElement.parentNode.previousSibling;\n    nextSibling = popover._elementRef.nativeElement.parentNode.nextSibling;\n\n\n\n    if (span.classList.contains('multiword')) {\n      this.renderer.removeClass(span, 'multiword')\n      if (prevSibling != null) {\n        if (prevSibling.classList.contains('multiword')) {\n          this.renderer.removeClass(prevSibling, 'border-right-0')\n        }\n      }\n      if (nextSibling != null) {\n        if (nextSibling.classList != undefined) {\n          if (nextSibling.classList.contains('multiword')) {\n            this.renderer.removeClass(span, 'border-right-0')\n          }\n        }\n\n      }\n      let multiWordArray = Array.from(document.getElementsByClassName('multiword'));\n      multiWordArray.forEach(element => {\n        let children = Array.from(element.children);\n        children.forEach(subchild => {\n          if (subchild.classList.contains('multiword-button')) {\n            subchild.remove();\n          }\n        })\n      });\n\n      if (multiWordArray.length > 1) {\n        console.log(multiWordArray[multiWordArray.length - 1])\n        this.createDynamicButtons(multiWordArray[multiWordArray.length - 1]);\n      }\n\n\n    } else {\n      this.renderer.addClass(span, 'multiword');\n      if (prevSibling != null) {\n        if (prevSibling.classList.contains('multiword')) {\n          this.renderer.addClass(prevSibling, 'border-right-0');\n        }\n      }\n      if (nextSibling != null) {\n        if (nextSibling.classList != undefined) {\n          if (nextSibling.classList.contains('multiword')) {\n            this.renderer.addClass(span, 'border-right-0')\n          }\n        }\n      }\n      let multiWordArray = Array.from(document.getElementsByClassName('multiword'));\n      multiWordArray.forEach(element => {\n        let children = Array.from(element.children);\n        children.forEach(subchild => {\n          if (subchild.classList.contains('multiword-button')) {\n            subchild.remove();\n          }\n        })\n      });\n\n      if (multiWordArray.length > 1) {\n        this.createDynamicButtons(span);\n      } else if (multiWordArray.length == 1) {\n        multiWordArray.forEach(element => {\n          let children = Array.from(element.children);\n          children.forEach(subchild => {\n            if (subchild.classList.contains('multiword-button')) {\n              subchild.remove();\n            }\n          })\n        });\n      }\n    }\n\n  }\n\n  createDynamicButtons(span) {\n    let div = this.renderer.createElement('div');\n    this.renderer.addClass(div, 'multiword-button');\n    let okButton = this.renderer.createElement('button');\n    let leaveButton = this.renderer.createElement('button');\n\n    let okIcon = this.renderer.createElement('i');\n    this.renderer.addClass(okIcon, 'fas');\n    this.renderer.addClass(okIcon, 'fa-check');\n\n    let leaveIcon = this.renderer.createElement('i');\n    this.renderer.addClass(leaveIcon, 'fas');\n    this.renderer.addClass(leaveIcon, 'fa-times');\n\n    this.renderer.appendChild(okButton, okIcon);\n    this.renderer.appendChild(leaveButton, leaveIcon);\n    this.renderer.setStyle(okButton, 'position', 'absolute');\n    this.renderer.setStyle(okButton, 'top', '-1.5rem');\n    this.renderer.setStyle(okIcon, 'font-size', '10px');\n    this.renderer.setStyle(okIcon, 'width', '10px');\n\n    this.renderer.addClass(okButton, 'ok-button');\n    this.renderer.addClass(leaveButton, 'no-button')\n\n    this.renderer.setStyle(leaveButton, 'position', 'absolute');\n    this.renderer.setStyle(leaveButton, 'top', '-1.5rem');\n    this.renderer.setStyle(leaveIcon, 'font-size', '10px');\n    this.renderer.setStyle(leaveIcon, 'width', '10px');\n    this.renderer.setStyle(leaveButton, 'left', '1.5rem');\n\n    this.renderer.appendChild(div, okButton)\n    this.renderer.appendChild(div, leaveButton)\n    this.renderer.appendChild(span, div);\n  }\n\n  populateLocalAnnotation(tokenData){\n    this.token_annotationArray = [];\n    //console.log(anno)\n    this.annotationArray.forEach(\n      annotation => {\n        //console.log(annotation)\n        let start_token, end_token;\n        if(!this.isEmptyFile){\n          start_token = tokenData.begin;\n          end_token = tokenData.end;\n        }else{\n          start_token = tokenData.spans[0].start;\n          end_token = tokenData.spans[0].end;\n        }\n\n        annotation.spans.forEach(element => {\n          if( element.start >= start_token  &&  element.end <= end_token){\n            this.token_annotationArray.push(annotation);\n          }\n        });\n\n        \n      }\n    )\n    if(this.token_annotationArray.length > 0){\n      this.lexicalService.triggerAttestationPanel(true);\n      this.lexicalService.sendToAttestationPanel(this.token_annotationArray)\n    }\n  }\n\n  bindSelection(popover, evt, i) {\n\n    console.log(this.object[i])\n    this.token_annotationArray = [];\n    this.annotationArray.forEach(\n      annotation => {\n\n        let start_token = this.object[i].begin;\n        let end_token = this.object[i].end;\n\n        //console.log(annotation.spans)\n\n        if(annotation.spans.length == 1){\n          annotation.spans.forEach(element => {\n            if(element.start >= start_token && element.end <= end_token){\n              this.token_annotationArray.push(annotation);\n            }\n          });\n        }else{\n\n        }\n      }\n    )\n\n    if(this.token_annotationArray.length > 0){\n      this.lexicalService.triggerAttestationPanel(true)\n      this.lexicalService.sendToAttestationPanel(this.token_annotationArray);\n    }else{\n      this.lexicalService.triggerAttestationPanel(false)\n      this.lexicalService.sendToAttestationPanel(null);\n    }\n\n    //console.log(evt)\n    setTimeout(() => {\n      \n      this.message = '';\n      this.object[i]['editing'] = true;\n      this.message = window.getSelection().toString();\n      if (this.selectedPopover.htmlNodeName == '') {\n        this.selectedPopover.htmlNodeName = popover._ngbPopoverWindowId;\n        this.selectedPopover.tokenId = i;\n      }\n      else if (popover._ngbPopoverWindowId != this.selectedPopover) {\n        this.selectedPopover.htmlNodeName = popover._ngbPopoverWindowId\n        this.selectedPopover.tokenId = i\n        this.object.forEach(element => {\n          if (element.id != i + 1) {\n            //console.log(element)\n            element.editing = false;\n          } else {\n            //console.log(element)\n            element.editing = true;\n          }\n        });\n      }\n\n      if (popover.isOpen()) {\n\n      } else if (!popover.isOpen()) {\n        popover.open()\n      }\n\n      let popoverHtml = popover._elementRef.nativeElement;\n      let innerText = popoverHtml.innerText;\n      let selection = document.getSelection();\n      let anchorNode = selection.anchorNode;\n      let focusNode = selection.focusNode;\n      let isThereMark, areThereAnnotations;\n      //isThereMark = popoverHtml.querySelectorAll('.mark').length > 0;\n      //areThereAnnotations = popoverHtml.querySelectorAll('.annotation').length > 0;\n\n      if (anchorNode != null && focusNode != null) {\n        let anchorNodeParent = selection.anchorNode.parentNode;\n        let focusNodeParent = selection.focusNode.parentNode;\n\n        if (anchorNodeParent == focusNodeParent && this.message != '' ) { /* && !areThereAnnotations */\n          //SE SELEZIONO UNA PARTE DEL TOKEN\n        \n          if (selection.anchorNode.textContent.trim().length == innerText.length && this.message != innerText) { //!isThereMark && \n            \n            let anchorOffset = selection.anchorOffset;\n            let focusOffset = selection.focusOffset;\n\n\n            if (anchorOffset > focusOffset) {\n              let tmp = anchorOffset;\n              anchorOffset = focusOffset;\n              focusOffset = tmp;\n            }\n\n            //console.log(innerText.substring(anchorOffset, focusOffset))\n            console.log(anchorOffset)\n            console.log(focusOffset);\n\n            popoverHtml.innerText = \"\";\n\n            const span = this.renderer.createElement('span');\n            const l_text = this.renderer.createText(innerText.substring(0, anchorOffset))\n            const text = this.renderer.createText(this.message);\n            const r_text = this.renderer.createText(innerText.substring(focusOffset, innerText.length))\n\n\n            /* console.log(\"l_text:\", l_text)\n            console.log(\"text:\", text)\n            console.log(\"r_text:\", r_text) */\n\n\n            this.renderer.appendChild(span, text)\n            this.renderer.appendChild(popoverHtml, span);\n            this.renderer.addClass(span, 'mark'),\n            this.renderer.setAttribute(span, 'startoffset', anchorOffset.toString());\n            this.renderer.setAttribute(span, 'endoffset', focusOffset.toString())\n\n            if (l_text.textContent != \"\") {\n              this.renderer.insertBefore(popoverHtml, l_text, span);\n            }\n\n            if (r_text.textContent != \"\") {\n              this.renderer.appendChild(popoverHtml, r_text);\n            }\n            //console.log(popoverHtml.childNodes)\n            this.spanSelection = {}\n            this.spanSelection['start'] = this.object[i].begin + anchorOffset;\n            this.spanSelection['end'] = this.object[i].begin + focusOffset;\n            this.annotatorService.triggerSearch(this.message);\n          }else if(selection.anchorNode.textContent.trim().length == innerText.length && this.message == innerText){\n            this.message = '';\n            this.annotatorService.triggerSearch(innerText);\n          }\n        } \n        //SE SELEZIONO L'INTERO TOKEN\n        \n        else if(this.message == ''){\n          this.annotatorService.triggerSearch(innerText);\n          this.spanSelection = {}\n          this.spanSelection['start'] = 0;\n          this.spanSelection['end'] = 0;\n        }\n        /* else if (this.message != '' ) { //&& areThereAnnotations\n          let anchorOffset = selection.anchorOffset;\n          let focusOffset = selection.focusOffset;\n          let range = selection.getRangeAt(0)\n\n          var sel = getSelection(),\n            position = sel.anchorNode.compareDocumentPosition(sel.focusNode),\n            backward = false;\n          // position == 0 if nodes are the same\n          if (!position && sel.anchorOffset > sel.focusOffset || position === Node.DOCUMENT_POSITION_PRECEDING) {\n            backward = true;\n          }\n\n          console.log(backward)\n\n          let startContainer = range.startContainer;\n          let endContainer = range.endContainer;\n          let textStartContainer = range.startContainer.textContent;\n          let textEndContainer = range.endContainer.textContent;\n          let annotations = popoverHtml.querySelectorAll('.annotation')\n\n          //console.log(range.startContainer == range.endContainer)\n          if (range.startContainer == range.endContainer) {\n            if (anchorOffset > focusOffset) {\n              let tmp = anchorOffset;\n              anchorOffset = focusOffset;\n              focusOffset = tmp;\n            }\n            this.message = textStartContainer.substring(range.startOffset, range.endOffset);\n            const span = this.renderer.createElement('span');\n\n            const l_text = this.renderer.createText(textStartContainer.substring(0, range.startOffset))\n            const text = this.renderer.createText(this.message);\n            const r_text = this.renderer.createText(textStartContainer.substring(range.endOffset, textStartContainer.length))\n\n            //console.log(anchorOffset, focusOffset)\n            //console.log(\"l_text:\" , l_text)\n            //console.log(\"text:\" , text)\n            //console.log(\"r_text:\" , r_text)\n\n            //range.startContainer.textContent = '';\n\n\n            this.renderer.appendChild(span, text)\n            this.renderer.addClass(span, 'mark');\n\n            console.log(popoverHtml.childNodes)\n            let i = 0;\n            const getStartEnd = (str, sub) => [str.indexOf(sub), str.indexOf(sub) + sub.length - 1];\n            let generalStartEndOffset = getStartEnd(popoverHtml.textContent, this.message);\n            let children = Array.from(popoverHtml.childNodes).forEach(\n              x => {\n                if (range.startContainer == x) {\n                  range.startContainer.textContent = '';\n\n                  if (l_text.textContent != \"\") {\n                    this.renderer.insertBefore(popoverHtml, l_text, x)\n                  }\n\n\n\n                  this.renderer.setAttribute(span, 'startoffset', anchorOffset.toString());\n                  this.renderer.setAttribute(span, 'endoffset', focusOffset.toString())\n\n                  popoverHtml.insertBefore(span, popoverHtml.childNodes[i + 1]);\n\n                  if (r_text.textContent != \"\") {\n                    popoverHtml.insertBefore(r_text, popoverHtml.childNodes[i + 2]);\n                  }\n                  //@ts-ignore\n                  x.remove()\n                }\n\n                i++;\n              }\n            )\n          } else if (range.startContainer != range.endContainer) {\n            console.log(range)\n            console.log(startContainer);\n            console.log(endContainer)\n\n            if (backward) {\n              let tmp = anchorOffset;\n              anchorOffset = focusOffset;\n              focusOffset = tmp;\n            }\n\n            console.log(anchorOffset, focusOffset)\n\n            this.message = '';\n            let walker = function foo(element, that) {\n\n              let textElement = element.textContent\n              let nextSibling = element.nextSibling;\n              if (element == endContainer) {\n                console.log(\"end container\", endContainer)\n                that.message += textElement.substring(0, focusOffset)\n\n                const span = that.renderer.createElement('span');\n                const text = that.renderer.createText(textElement.substring(0, focusOffset));\n                const r_text = that.renderer.createText(textElement.substring(focusOffset, textElement.length))\n\n\n                that.renderer.appendChild(span, text)\n                that.renderer.addClass(span, 'mark_test');\n\n                let i = 0;\n                const getStartEnd = (str, sub) => [str.indexOf(sub), str.indexOf(sub) + sub.length - 1];\n                let generalStartEndOffset = getStartEnd(popoverHtml.textContent, that.message);\n                let children = Array.from(popoverHtml.childNodes).forEach(\n                  x => {\n                    console.log(i, x)\n                    if (element == x) {\n                      element.textContent = '';\n\n                      //that.renderer.setAttribute(span, 'startoffset', generalStartEndOffset[0]);\n                      //that.renderer.setAttribute(span, 'endoffset', generalStartEndOffset[1])\n\n                      popoverHtml.insertBefore(span, popoverHtml.childNodes[i + 1]);\n\n                      if (r_text.textContent != \"\") {\n                        popoverHtml.insertBefore(r_text, popoverHtml.childNodes[i + 2]);\n                      }\n\n                      //@ts-ignore\n                      x.remove();\n\n                    }\n\n                    i++;\n                  }\n                )\n                return;\n              } else {\n                console.log(\"current element\", element);\n\n\n                if (element == startContainer) {\n                  that.message = textElement.substring(anchorOffset, textElement.length);\n                  const span = that.renderer.createElement('span');\n                  const l_text = that.renderer.createText(textStartContainer.substring(0, anchorOffset))\n                  const text = that.renderer.createText(that.message);\n\n                  that.renderer.appendChild(span, text)\n                  that.renderer.addClass(span, 'mark_test');\n\n                  let i = 0;\n                  const getStartEnd = (str, sub) => [str.indexOf(sub), str.indexOf(sub) + sub.length - 1];\n                  let generalStartEndOffset = getStartEnd(popoverHtml.textContent, that.message);\n                  let children = Array.from(popoverHtml.childNodes).forEach(\n                    x => {\n                      if (element == x) {\n                        element.textContent = '';\n\n                        if (l_text.textContent != \"\") {\n                          that.renderer.insertBefore(popoverHtml, l_text, x)\n                        }\n\n                        //that.renderer.setAttribute(span, 'startoffset', generalStartEndOffset[0]);\n                        popoverHtml.insertBefore(span, popoverHtml.childNodes[i + 1]);\n                        //@ts-ignore\n                        x.remove();\n                      }\n\n                      i++;\n                    }\n                  )\n                }\n\n                if (element.classList == undefined && element != startContainer) {\n                  that.message += element.textContent;\n                  const span = that.renderer.createElement('span');\n                  const text = that.renderer.createText(element.textContent);\n\n                  that.renderer.appendChild(span, text)\n                  that.renderer.addClass(span, 'mark_test');\n\n                  let i = 0;\n                  const getStartEnd = (str, sub) => [str.indexOf(sub), str.indexOf(sub) + sub.length - 1];\n                  let generalStartEndOffset = getStartEnd(popoverHtml.textContent, that.message);\n                  let children = Array.from(popoverHtml.childNodes).forEach(\n                    x => {\n                      if (element == x) {\n                        element.textContent = '';\n                        //that.renderer.setAttribute(span, 'startoffset', generalStartEndOffset[0]);\n                        //that.renderer.setAttribute(span, 'endoffset', generalStartEndOffset[1])\n                        popoverHtml.insertBefore(span, popoverHtml.childNodes[i + 1]);\n                        //@ts-ignore\n                        x.remove();\n                      }\n\n                      i++;\n                    }\n                  )\n\n                }\n\n                 //if(element.classList != undefined){\n                   //if(element.classList.contains('annotation')){\n                     \n                   //}\n                // }\n\n                if (nextSibling != null) {\n                  foo(nextSibling, that)\n                }\n              }\n            }\n\n            walker(startContainer, this)\n          }\n\n\n        } */\n      }\n\n      \n\n\n      let parentNode = evt.target.parentElement;\n      let classNames = parentNode.className;\n\n      if(/(^|\\s)(multiword-span-\\d)(\\s|$)/.test(classNames)){\n        let multiwordSpan = Array.from(document.querySelectorAll(\"[class*=multiword-span-]\"));\n        let text = ''; \n        multiwordSpan.forEach(element => {\n          console.log(element)\n          text += element.textContent + ' ';\n        })\n        //this.annotatorService.triggerSearch(text);\n      }\n    }, 10);\n\n  }\n\n  triggerEmptySearch(){\n    this.annotatorService.triggerSearch('');\n  }\n\n  deleteAnnotation(annotation, index, token){\n    let anno_id = annotation.id;\n    let token_position = token.position;\n    this.annotatorService.deleteAnnotation(anno_id).subscribe(\n      data=> {\n        console.log(data);\n        /* let popover = document.getElementsByClassName('token-'+(token_position -1))[0]      \n        this.renderer.removeClass(popover, \"annotation_entire\");\n        this.renderer.removeClass(popover, \"unselectable\"); */\n\n        this.lexicalService.triggerAttestationPanel(false)\n      },\n      error => {\n        console.log(error)\n      }\n    )\n    this.token_annotationArray.splice(index, 1)\n    this.annotationArray.splice(index, 1);\n  }\n\n\n  showAllAnnotations(){\n    this.lexicalService.triggerAttestationPanel(true)\n    this.lexicalService.sendToAttestationPanel(this.annotationArray);\n  }\n\n  replaceBetween(origin, startIndex, endIndex, insertion) {\n    return origin.substring(0, startIndex) + insertion + origin.substring(endIndex);\n  }\n\n}\n\n","\n\n<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"form-group row ml-2 mt-3 mr-2 showall\" *ngIf=\"annotationArray.length != 0\">\n            <button class=\"btn btn-light btn-lg\" (click)=\"showAllAnnotations()\" title=\"Show all annotations\"><i\n                    class=\"fas fa-eye\"></i></button>\n        </div>\n    \n        <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"object != null && object.length != 0\">\n            <h6>Linker</h6>\n        \n        </div>\n        \n        <div class=\"form-group row ml-2 mt-3 mr-2 empty\" *ngIf=\"isEmptyFile\">\n            <h6 class=\"mr-2\">Add attestation</h6>\n        \n            <button #button_modal=\"ngbPopover\" type=\"button\" class=\"btn btn-outline-secondary token mb-2\"  container=\"body\"  popoverTitle=\"Pop title\" \n            [autoClose]=\"'outside'\" [ngbPopover]=\"tokenPopover\" [placement]=\"'bottom'\"  popoverClass=\"token_modal\" (click)=\"triggerEmptySearch()\">\n            <i class=\"fa fa-plus\"></i>\n            </button>\n        \n            <ng-template #tokenPopover>\n        \n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <p>Add a form:</p>\n                       \n                    </div>\n                    <div class=\"card-body\">\n                        <app-search-form [bind]=\"bind\" #search_form></app-search-form>\n                        \n                      \n                    </div>\n        \n                </div>\n        \n        \n            </ng-template>\n        \n        </div>\n        \n        \n        \n        <form [formGroup]=\"epigraphyForm\" *ngIf=\"object != null && object.length != 0\">\n        \n            <div class=\"form-group row ml-2 mt-3 mr-2 panel\">\n        \n                <div *ngFor=\"let token of object; let i = index\" class=\"panel-body\">\n                    <!-- {{multiWordMode && (token.text == '' || token.text == '.' || token.text == ':')}} -->\n                    <span #span_modal=\"ngbPopover\" \n                        [attr.position]=\"token.position\"\n                        [ngClass]=\"{'unselectable': !token.selected, 'selected' : token.selected, 'editing' : token.editing}\"\n                        class=\"token token-{{i}} p-2\" style=\"display: block\" container=\"body\" [triggers]=\"manual\"\n                        [placement]=\"'bottom'\" [popoverTitle]=\"token.value\" [animation]=\"false\" [autoClose]=\"'outside'\"\n                        [disablePopover]=\"multiWordMode || (token.text == '' || token.text == '.' || token.text == ':')\" [ngbPopover]=\"tokenPopover\" (mouseenter)=\"enterCell($event, i)\"\n                        (mouseleave)=\"leavingCell($event, i)\" popoverClass=\"token_modal\"\n                        (mousedown)=\"deleteSelection(span_modal, $event, i)\" (mouseup)=\"triggerBind(span_modal, $event, i);\">\n                        {{token.text}}\n                    </span>\n        \n        \n        \n        \n                    <!-- ################## POPOVER TEMPLATE ################# -->\n                    <ng-template #tokenPopover>\n                       \n        \n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                <p>Add a form:</p>\n                               \n                            </div>\n                            <div class=\"card-body\">\n                                <app-search-form [bind]=\"bind\" #search_form></app-search-form>\n                                \n        \n                            </div>\n        \n                        </div>\n        \n        \n                    </ng-template>\n                </div>\n        \n        \n            </div>\n        \n        \n        \n        </form>\n    </div>\n    \n</div>\n\n\n\n<div class=\"card mt-2\" *ngIf=\"leidenLines.length != 0\">\n    <div class=\"card-body\">\n        <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"object != null && object.length != 0\">\n            <h6>Inscription</h6>\n        </div>\n        \n        <div class=\"form-group row ml-2 mt-3 mr-2 leiden_raw p-2\" *ngIf=\"object != null && object.length != 0\" style=\"font-family: 'NewAthena';\">\n            <ol class=\"pl-3\">\n                <li *ngFor=\"let line of leidenLines; let i = index\">\n                    {{line}}\n                </li>\n            </ol>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"card mt-2\" *ngIf=\"translation_array.length != 0\">\n    <div class=\"card-body\">\n        <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"object != null && object.length != 0\">\n            <h6>Translation</h6>\n        </div>\n        \n        <div class=\"form-group row ml-2 mt-3 mr-2 leiden_raw p-2\" *ngIf=\"object != null && object.length != 0\">\n            <div class=\"row align-items-baseline\">\n                <div class=\"col-6 border-right\">\n                   {{translation_array[0]}}\n                </div>\n                <div class=\"col-6\">\n                    {{translation_array[1]}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<!-- <div class=\"form-group row ml-2 mt-3 mr-2 panel\" *ngIf=\"object != null && object.length != 0\">\n\n    <span class=\"token overflow-auto p-2\">{{textEpigraphy}}</span>\n</div> -->\n\n<!-- <div class=\"form-group row ml-2 mt-3 mr-2 panel\" *ngIf=\"object != null && object.length != 0\">\n    <h5>Leiden:</h5>\n</div> -->\n\n<!-- <div [innerHTML]=\"htmlLeiden\" class=\"form-group row ml-2 mt-3 mr-2 p-2 panel leiden_raw\">\n        \n</div> -->\n\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\n\n@Component({\n  selector: 'app-epigraphy-detail',\n  templateUrl: './epigraphy-detail.component.html',\n  styleUrls: ['./epigraphy-detail.component.scss']\n})\nexport class EpigraphyDetailComponent implements OnInit, OnDestroy {\n\n  @ViewChild('navTabsEpigraphy') navtabs: ElementRef; \n  @ViewChild('navContentEpigraphy') navcontent: ElementRef; \n\n  object : any;\n  subscription : Subscription;\n  constructor(private documentService: DocumentSystemService, private exp : ExpanderService) { }\n\n  ngOnInit(): void {\n    this.exp.openEpigraphy$.subscribe(\n      boolean => {\n        if(boolean){\n          setTimeout(() => {\n            var text_detail = document.querySelectorAll('#epigraphy-dettaglio');\n            text_detail.forEach(element => {\n              if(!element.classList.contains('show')){\n                element.classList.add('show')\n              }\n            })\n            let a_link = document.querySelectorAll('a[data-target=\"#epigraphy-dettaglio\"]');\n            a_link.forEach(element => {\n              if(element.classList.contains(\"collapsed\")){\n                element.classList.remove('collapsed')\n              }else{\n                //element.classList.add('collapsed')\n              }\n            })\n           }, 100);\n        }\n      }\n    )\n\n    this.subscription = this.documentService.epigraphyData$.subscribe(\n      object => {\n       /*  console.log(object) */\n        if(object != null){\n          setTimeout(() => {\n            var navTabLinks = this.navtabs.nativeElement.querySelectorAll('a')\n            this.object = object;\n            /* console.log(this.object) */\n            navTabLinks.forEach(element => {\n              /* //console.log(element) */\n              if(element.text == 'Epigraphy'){\n                element.classList.add('active')\n              }else{\n                element.classList.remove('active')\n                //console.log(element.id)\n              }\n            });\n\n            var navContent = this.navcontent.nativeElement.querySelectorAll('.tab-pane');\n            \n            navContent.forEach(element => {\n              \n              if(element.id == 'epigraphy'){\n                element.classList.add('active')\n                element.classList.add('show')\n              }else{\n                \n                element.classList.remove('active')\n                element.classList.remove('show')\n                //console.log(element)\n              }\n            });\n          }, 200);\n          \n        }else{\n          this.object = null;\n          setTimeout(() => {\n            var navTabLinks = this.navtabs.nativeElement.querySelectorAll('a')\n            this.object = object;\n            /* console.log(this.object) */\n            navTabLinks.forEach(element => {\n              /* //console.log(element) */\n              if(element.text == 'Epigraphy'){\n                element.classList.remove('active')\n              }\n            });\n\n            var navContent = this.navcontent.nativeElement.querySelectorAll('.tab-pane');\n            \n            navContent.forEach(element => {\n              \n              if(element.id == 'epigraphy'){\n                element.classList.remove('active')\n                element.classList.remove('show')\n              }\n            });\n          }, 200);\n        }\n      }\n    );\n  }\n\n  triggerExpansionEpigraphy(){\n\n\n    setTimeout(() => {\n      if(!this.exp.isEditTabOpen() && this.exp.isEpigraphyTabOpen()){\n        if(!this.exp.isEditTabExpanded() && this.exp.isEpigraphyTabExpanded()){\n          this.exp.openCollapseEpigraphy();\n          this.exp.expandCollapseEpigraphy();\n        }\n      }else if(!this.exp.isEditTabOpen() && !this.exp.isEpigraphyTabOpen()){\n        if(!this.exp.isEditTabExpanded() && !this.exp.isEpigraphyTabExpanded()){\n          this.exp.openCollapseEpigraphy();\n          this.exp.expandCollapseEpigraphy();\n        }\n      }else if(this.exp.isEditTabOpen() && this.exp.isEpigraphyTabOpen()){\n        this.exp.openCollapseEpigraphy();\n        this.exp.expandCollapseEdit(true);\n      }else if(this.exp.isEditTabOpen() && !this.exp.isEpigraphyTabOpen()){\n        if(this.exp.isEditTabExpanded() && !this.exp.isEpigraphyTabExpanded()){\n          this.exp.expandCollapseEdit(false);\n          this.exp.openCollapseEpigraphy(true)\n        }\n        \n      }\n    }, 200);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","\n\n<!-- <div id=\"epigraphy-accordion\">\n--> <div class=\"card\">\n        <div class=\"card-header\" id=\"headingOne\" style=\"text-align: right;\">\n            <ul class=\"nav nav-tabs\" id=\"editDictTab\" #navTabsEpigraphy role=\"tablist\" [ngClass]=\"{'disabled': object === null}\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"epigraphy-tab\" data-toggle=\"tab\" href=\"#epigraphy\" role=\"tab\" aria-controls=\"epigraphy\" aria-selected=\"true\">Epigraphy</a>\n                </li>\n                \n                <h5 class=\"ml-auto mb-0\">\n                    <a class=\"btn btn-link w-100 d-flex align-self-center\" (click)=\"triggerExpansionEpigraphy();\" data-toggle=\"collapse\" data-target=\"#epigraphy-dettaglio\" aria-expanded=\"false\" aria-controls=\"epigraphy-dettaglio\">\n                        <i class=\"fa ml-auto\"></i>\n                    </a>\n                </h5>\n            </ul>\n            <!-- <h5 class=\"ml-auto mb-0\">\n                <a class=\"btn btn-link w-100 d-flex align-self-center\" (click)=\"triggerExpansionEpigraphy();\" data-toggle=\"collapse\" data-target=\"#epigraphy-dettaglio\" aria-expanded=\"true\" aria-controls=\"epigraphy-dettaglio\">\n                    <i class=\"fa ml-auto\"></i>\n                </a>\n            </h5> -->\n            \n        </div>\n        <div id=\"epigraphy-dettaglio\" class=\"collapse show\" aria-labelledby=\"headingOne\" > <!-- data-parent=\"#epigraphy-accordion\" -->\n            <div class=\"card-body\">\n                <div class=\"tab-content\" id=\"myTabContent\" #navContentEpigraphy>\n                    <!--  <div class=\"tab-pane fade show active\" id=\"epigraphy\" role=\"tabpanel\" aria-labelledby=\"epigraphy-tab\">\n                        <app-epigraphy-tab></app-epigraphy-tab>\n                    </div> -->\n                    <div class=\"tab-pane fade show active\" id=\"epigraphy\" role=\"tabpanel\" aria-labelledby=\"epigraphy-tab\">\n                        <app-epigraphy-tab></app-epigraphy-tab>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n<!-- </div> -->","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { TreeNode } from '@circlon/angular-tree-component';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport {saveAs as importedSaveAs} from \"file-saver\";\n\n\n@Component({\n  selector: 'app-document-system-tree',\n  templateUrl: './document-system-tree.component.html',\n  styleUrls: ['./document-system-tree.component.scss'],\n})\n\nexport class DocumentSystemTreeComponent implements OnInit {\n\n  switcher = false;\n  @ViewChild('lexTree') lexTree: any;\n  @ViewChild('textTree') textTree: any;\n  @ViewChild('conceptTree') conceptTree: any;\n  @ViewChild('skosTree') skosTree: any;\n  @ViewChild('accordion') accordion: ElementRef; \n\n\n\n  constructor(private exp: ExpanderService, private lexicalService: LexicalEntriesService, private toastr: ToastrService, private renderer: Renderer2, private documentService: DocumentSystemService) { }\n\n  ngOnInit(): void {\n    this.lexicalService.refreshAfterEdit$.subscribe(\n      data => {\n        this.refreshAfterEdit(data);\n      }\n    )\n\n\n    this.lexicalService.triggerLexicalEntryTree$.subscribe(\n      (data:any)=> {\n        setTimeout(() => {\n          if(data != null){\n            if(data.request){\n\n              this.updateTreeParent();\n              \n              let lex = {\n                request : 'form',\n                lexicalEntryInstanceName : data.data.lexicalEntryInstanceName,\n\n              }\n              \n              this.lexTree.parameters['text'] = data.data.lexicalEntryLabel;\n              this.lexTree.lexicalEntriesFilter(this.lexTree.parameters);\n              \n\n              setTimeout(() => {\n                this.lexicalService.addSubElementRequest({'lex' : lex, 'data' : data.data});\n\n              }, 500);\n\n              let a_link = this.accordion.nativeElement.querySelectorAll('button[data-target=\"#lexicalCollapse\"]');\n              let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"lexicalHeading\"]');\n              a_link.forEach(element => {\n                if(element.classList.contains(\"collapsed\")){\n                  element.classList.remove('collapsed')\n                }else{\n                  //element.classList.add('collapsed')\n                }\n              })\n  \n              collapse_container.forEach(element => {\n                if(element.classList.contains(\"show\")){\n                  //element.classList.remove('collapsed')\n                }else{\n                  element.classList.add('show')\n                }\n              })\n\n              let a_link_epigraphy = this.accordion.nativeElement.querySelectorAll('button[data-target=\"#epigraphyCollapse\"]');\n              let collapse_container_epigraphy = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"epigraphyHeading\"]');\n              a_link.forEach(element => {\n                if(!element.classList.contains(\"collapse\")){\n                  element.classList.add('collapsed')\n                }\n              })\n  \n              collapse_container_epigraphy.forEach(element => {\n                if(element.classList.contains(\"show\")){\n                  element.classList.remove('show')\n                }else{\n                  //element.classList.add('show')\n                }\n              })\n  \n              \n            }else{\n              setTimeout(() => {\n                let a_link = this.accordion.nativeElement.querySelectorAll('a[data-target=\"#lexicalCollapse\"]');\n                a_link.forEach(element => {\n                  element.classList.add('collapsed')\n                  \n                })\n  \n                let collapse_container = this.accordion.nativeElement.querySelectorAll('div[aria-labelledby=\"lexicalHeading\"]');\n                collapse_container.forEach(element => {\n                  console.log(element)\n                  if(element.classList.contains(\"show\")){\n                    element.classList.remove('show')\n                  }\n                })\n              }, 100);\n              \n            }\n          }\n        }, 100);\n      },error=> {\n        console.log(error)\n      }\n    )\n  }\n\n  updateTreeParent() {\n    this.lexTree.updateTreeView();\n  }\n\n  switchLabel() {\n    this.lexTree.labelView = !this.lexTree.labelView;\n    this.lexTree.idView = !this.lexTree.idView;\n    this.switcher = !this.switcher;\n  }\n\n  lexEdit(data) {\n\n    var that = this;\n\n    if (data['new_note'] != undefined) {\n\n      let instanceName = '';\n      if (data['lexicalEntryInstanceName'] != undefined) {\n        instanceName = data['lexicalEntryInstanceName']\n      } else if (data['formInstanceName'] != undefined) {\n        instanceName = data['formInstanceName']\n      } else if (data['senseInstanceName'] != undefined) {\n        instanceName = data['senseInstanceName']\n      } else if (data['etymologyInstanceName'] != undefined) {\n        instanceName = data['etymologyInstanceName']\n      };\n      setTimeout(() => {\n        this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n          function (x) {\n            if (data['lexicalEntryInstanceName'] != undefined) {\n              if (x.data.lexicalEntryInstanceName == instanceName) {\n\n                x.data.note = data['new_note']\n                that.lexTree.lexicalEntryTree.treeModel.update();\n                that.lexTree.updateTreeView();\n\n                //console.log(x)\n                //@ts-ignore\n                $('.note_' + x.data.id).attr('data-original-title', data['new_note']);\n\n                data['new_note'] = undefined;\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['formInstanceName'] != undefined) {\n\n              if (x.data.formInstanceName == instanceName) {\n                x.data.note = data['new_note']\n                that.lexTree.lexicalEntryTree.treeModel.update();\n                that.lexTree.updateTreeView();\n                data['new_note'] = undefined;\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['senseInstanceName'] != undefined) {\n\n              if (x.data.senseInstanceName == instanceName) {\n                x.data.note = data['new_note']\n                that.lexTree.lexicalEntryTree.treeModel.update();\n                that.lexTree.updateTreeView();\n                data['new_note'] = undefined;\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else if (data['etymologyInstanceName'] != undefined) {\n\n              if (x.data.etymologyInstanceName == instanceName) {\n                x.data.note = data['new_note']\n                that.lexTree.lexicalEntryTree.treeModel.update();\n                that.lexTree.updateTreeView();\n                data['new_note'] = undefined;\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else {\n              return false;\n            }\n          }\n        );\n      }, 500);\n    } else if (data['new_label'] != undefined) {\n      //console.log(\"cambio label cambio tutto\")\n      //console.log(data)\n      let instanceName = '';\n      if (data['lexicalEntryInstanceName'] != undefined) {\n        instanceName = data['lexicalEntryInstanceName']\n      } else if (data['formInstanceName'] != undefined) {\n        instanceName = data['formInstanceName']\n      } else if (data['senseInstanceName'] != undefined) {\n        instanceName = data['senseInstanceName']\n      } else if (data['etymologyInstanceName'] != undefined) {\n        instanceName = data['etymologyInstanceName']\n      };;\n      setTimeout(() => {\n        this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n          function (x) {\n            if (data['lexicalEntryInstanceName'] != undefined) {\n              if (x.data.lexicalEntryInstanceName == instanceName) {\n                x.data.label = data['new_label']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_label'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['formInstanceName'] != undefined) {\n\n              if (x.data.formInstanceName == instanceName) {\n                x.data.label = data['new_label']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_label'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['senseInstanceName'] != undefined) {\n\n              if (x.data.senseInstanceName == instanceName) {\n                x.data.label = data['new_label']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_label'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['etymologyInstanceName'] != undefined) {\n\n              if (x.data.etymologyInstanceName == instanceName) {\n                x.data.label = data['new_label']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_label'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else {\n              return false;\n            }\n          }\n        );\n      }, 500);\n    } else if (data['new_type'] != undefined) {\n      //console.log(\"cambio type cambio tutto\")\n      let instanceName = '';\n      if (data['lexicalEntryInstanceName'] != undefined) {\n        instanceName = data['lexicalEntryInstanceName']\n      } else if (data['formInstanceName'] != undefined) {\n        instanceName = data['formInstanceName']\n      } else if (data['senseInstanceName'] != undefined) {\n        instanceName = data['senseInstanceName']\n      };\n      setTimeout(() => {\n        this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n          function (x) {\n            if (data['lexicalEntryInstanceName'] != undefined) {\n              if (x.data.lexicalEntryInstanceName == instanceName) {\n                x.data.type = data['new_type']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_type'] = undefined\n                return true;\n\n              } else {\n                return false;\n              }\n            } else if (data['formInstanceName'] != undefined) {\n\n              if (x.data.formInstanceName == instanceName) {\n                x.data.type = data['new_type']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_type'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['senseInstanceName'] != undefined) {\n\n              if (x.data.senseInstanceName == instanceName) {\n                x.data.type = data['new_type']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_type'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else {\n              return false;\n            }\n          }\n        );\n      }, 500);\n    } else if (data['new_lang'] != undefined) {\n      //console.log(\"cambio lang cambio tutto\")\n      let instanceName = '';\n      if (data['lexicalEntryInstanceName'] != undefined) {\n        instanceName = data['lexicalEntryInstanceName']\n      } else if (data['formInstanceName'] != undefined) {\n        instanceName = data['formInstanceName']\n      } else if (data['senseInstanceName'] != undefined) {\n        instanceName = data['senseInstanceName']\n      };\n      setTimeout(() => {\n        this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n          function (x) {\n            if (data['lexicalEntryInstanceName'] != undefined) {\n              if (x.data.lexicalEntryInstanceName == instanceName) {\n                x.data.language = data['new_lang']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_lang'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['formInstanceName'] != undefined) {\n\n              if (x.data.formInstanceName == instanceName) {\n                x.data.language = data['new_lang']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_lang'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['senseInstanceName'] != undefined) {\n\n              if (x.data.senseInstanceName == instanceName) {\n                x.data.language = data['new_lang']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_lang'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else {\n              return false;\n            }\n          }\n        );\n      }, 500);\n    } else if (data['new_pos'] != undefined) {\n      //console.log(\"cambio pos cambio tutto\")\n      let instanceName = '';\n      if (data['lexicalEntryInstanceName'] != undefined) {\n        instanceName = data['lexicalEntryInstanceName']\n      } else if (data['formInstanceName'] != undefined) {\n        instanceName = data['formInstanceName']\n      } else if (data['senseInstanceName'] != undefined) {\n        instanceName = data['senseInstanceName']\n      };\n      setTimeout(() => {\n        this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n          function (x) {\n            if (data['lexicalEntryInstanceName'] != undefined) {\n              if (x.data.lexicalEntryInstanceName == instanceName) {\n                x.data.pos = data['new_pos']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_pos'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['formInstanceName'] != undefined) {\n\n              if (x.data.formInstanceName == instanceName) {\n                x.data.pos = data['new_pos']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_pos'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            } else if (data['senseInstanceName'] != undefined) {\n\n              if (x.data.senseInstanceName == instanceName) {\n                x.data.pos = data['new_pos']\n                //x.setActiveAndVisible()\n                x.scrollIntoView();\n                data['new_pos'] = undefined\n                return true;\n              } else {\n                return false;\n              }\n            }\n            else {\n              return false;\n            }\n          }\n        );\n      }, 500);\n    }\n\n  }\n\n  changeSenseDefinition(data) {\n    var that = this;\n    setTimeout(() => {\n      this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n        function (x) {\n          if (x.data.senseInstanceName != undefined) {\n            if (x.data.senseInstanceName == data['senseInstanceName']) {\n              if(data['new_definition'] == ''){\n                x.data.label = 'no definition';\n              }else{\n                x.data.label = data['new_definition'];\n\n              }\n              that.lexTree.lexicalEntryTree.treeModel.update();\n              that.lexTree.updateTreeView();\n              return true;\n            } else {\n              return false;\n            }\n\n          } else {\n            return false;\n          }\n        }\n      );\n    }, 500);\n  }\n\n  changeFormLabel(data) {\n    var that = this;\n    setTimeout(() => {\n      this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n        function (x) {\n          if (x.data.formInstanceName != undefined) {\n            if (x.data.formInstanceName == data['formInstanceName']) {\n              x.data.label = data['new_label'];\n              that.lexTree.lexicalEntryTree.treeModel.update();\n              that.lexTree.updateTreeView();\n              return true;\n            } else {\n              return false;\n            }\n\n          } else {\n            return false;\n          }\n        }\n      );\n    }, 500);\n  }\n\n\n\n  changeFormType(data) {\n    var that = this;\n    //console.log(\"prova\")\n    setTimeout(() => {\n      this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n        function (x) {\n          if (x.data.formInstanceName != undefined) {\n            if (x.data.formInstanceName == data['formInstanceName']) {\n              x.data.type = data['new_type'];\n              //console.log(x.data.note)\n              that.lexTree.lexicalEntryTree.treeModel.update();\n              that.lexTree.updateTreeView();\n              return true;\n            } else {\n              return false;\n            }\n\n          } else {\n            return false;\n          }\n        }\n      );\n    }, 500);\n  }\n\n  refreshAfterEdit(data) {\n    // 0 -> lexEdit: quando creo una nuova lexical entry\n    // 3 -> quando devo cambiare solo la label di una forma\n    // 5 -> quando devo cambiare il tipo di una forma\n    // 6 -> quando devo cambiare definizione a un senso\n    if (data != null) {\n      setTimeout(() => {\n        switch (data['request']) {\n          case 0: this.lexEdit(data); break;\n          case 3: this.changeFormLabel(data); break;\n          case 5: this.changeFormType(data); break;\n          case 6: this.changeSenseDefinition(data); break;\n        }\n      }, 100);\n    }\n\n\n  }\n\n  triggerLoad() {\n    this.lexicalService.refreshLangTable();\n  }\n\n  newLexicalEntry() {\n\n    this.lexicalService.newLexicalEntry().subscribe(\n      data => {\n        console.log(data);\n\n        this.toastr.success(data['lexicalEntryInstanceName'] + ' added correctly', '', {\n          timeOut: 5000,\n        });\n\n        setTimeout(() => {\n          let newLexEntryLabel = data['label'];\n          let parameters = this.lexTree.getParameters();\n          parameters['text'] = newLexEntryLabel /* + \"~0.5\"; */\n          this.lexTree.lexicalEntriesFilter(parameters);\n          this.lexTree.lexicalEntryTree.treeModel.update();\n          this.lexTree.updateTreeView();\n\n          setTimeout(() => {\n            this.lexTree.lexicalEntryTree.treeModel.getNodeBy(\n              function (x) {\n                if (x.data.lexicalEntryInstanceName == data['lexicalEntryInstanceName']) {\n                  x.setActiveAndVisible()\n                  return true;\n                } else {\n                  return false;\n                }\n              }\n            );\n          }, 500);\n        }, 200);\n      },\n      error => {\n        console.log(error);\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n  }\n\n  createNewFile(){\n    let element_id = 0;\n    let parameters = {\n      requestUUID : \"string\",\n      \"user-id\" : 0,\n      \"element-id\" : element_id,\n      filename : \"new_file\"+Math.floor(Math.random() * (99999 - 10) + 10)\n    }\n\n    this.documentService.createFile(parameters).subscribe(\n      data =>{\n        console.log(data)\n        this.textTree.treeText.treeModel.nodes.push(data.node);\n        this.textTree.counter = this.textTree.treeText.treeModel.nodes.length\n        this.textTree.treeText.treeModel.update();\n        this.toastr.info('New file added', '', {\n          timeOut: 5000,\n        });\n        this.textTree.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n      },error=> {\n        console.log(error)\n      }\n    )\n  }\n\n\n  addNewFile(evt?) {\n    let element_id = 0;\n    console.log(evt.target.files)\n    let parameters, file_name;\n\n    if (evt.target.files != undefined) {\n      if (evt.target.files.length == 1) {\n        file_name = evt.target.files[0].name;\n        parameters = {\n          \"requestUUID\": \"string\",\n          \"user-id\": 0,\n          \"element-id\": element_id,\n          \"file-name\": file_name\n        }\n        const formData = new FormData();\n        formData.append('file', evt.target.files[0]);\n\n        this.documentService.uploadFile(formData, element_id, 11).subscribe(\n          data => {\n            console.log(data)\n\n            this.toastr.info('New file added', '', {\n              timeOut: 5000,\n            });\n            setTimeout(() => {\n\n              this.textTree.treeText.treeModel.nodes.push(data.node);\n              this.textTree.counter = this.textTree.treeText.treeModel.nodes.length\n              //console.log(this.textTree.treeText.treeModel.nodes.length)\n              //this.textTree.treeText.treeModel.updateTreeView();\n              this.textTree.treeText.treeModel.update();\n              this.textTree.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n\n            }, 500);\n\n\n          }, error => {\n            console.log(error);\n            this.toastr.error('Error when adding new file', '', {\n              timeOut: 5000,\n            });\n          }\n        )\n      } else {\n\n        let files_array = Array.from(evt.target.files);\n        files_array.forEach((element : any) => {\n\n          file_name = element.name;\n          parameters = {\n            \"requestUUID\": \"string\",\n            \"user-id\": 0,\n            \"element-id\": element_id,\n            \"file-name\": file_name\n          }\n\n          const formData = new FormData();\n          formData.append('file', element);\n\n          this.documentService.uploadFile(formData, element_id, 11).subscribe(\n            data => {\n              console.log(data)\n\n              this.toastr.info('New file added', '', {\n                timeOut: 5000,\n              });\n              setTimeout(() => {\n\n                this.textTree.treeText.treeModel.nodes.push(data.node);\n                this.textTree.counter = this.textTree.treeText.treeModel.nodes.length\n                //console.log(this.textTree.treeText.treeModel.nodes.length)\n                //this.textTree.treeText.treeModel.updateTreeView();\n                this.textTree.treeText.treeModel.update();\n                this.textTree.treeText.treeModel.getNodeById(data.node.id).setActiveAndVisible();\n\n              }, 500);\n\n\n            }, error => {\n              console.log(error);\n              this.toastr.error('Error when adding new file', '', {\n                timeOut: 5000,\n              });\n            }\n          )\n        });\n      }\n    }\n\n    console.log(evt);\n  }\n\n  addNewFolder() {\n\n    let element_id = 0;\n    let parameters = {\n      \"requestUUID\": \"string\",\n      \"user-id\": 0,\n      \"element-id\": element_id\n    }\n\n\n    this.documentService.addFolder(parameters).subscribe(\n      data => {\n        console.log(data)\n        let id_new_node = 243;\n        /* let new_node = {\n          \"children\" : [],\n          \"element-id\" : id_new_node,\n          \"id\" : Math.floor(Math.random() * (99999 - 10) + 10),\n          \"metadata\" : {},\n          \"path\" : \"\",\n          \"name\" : \"new-folder_\"+ Math.floor(Math.random() * (99999 - 10) + 10),\n          \"type\" : \"directory\"\n        } */\n        if (data.node != undefined) {\n          this.toastr.info('New folder added', '', {\n            timeOut: 5000,\n          });\n          this.textTree.nodes.push(data.node);\n          this.textTree.updateTreeView();\n          this.textTree.treeText.treeModel.update();\n        }\n\n      }, error => {\n        console.log(error);\n        this.toastr.error('Error when creating new folder', '', {\n          timeOut: 5000,\n        });\n      }\n    )\n\n  }\n\n  exportLexicon(){\n    let parameters = {\n      \"fileName\": \"export\",\n      \"format\": \"turtle\",\n      \"inferred\": false\n    }\n\n    this.lexicalService.exportLexicon(parameters).subscribe(\n      data=> {\n        console.log(data);\n        var blob = new Blob([data], { type: 'text/turtle' });\n        var url = window.URL.createObjectURL(blob);\n        importedSaveAs(blob,\"file_name.txt\");\n       // window.open(url); \n        \n      }, error=> {\n        console.log(error);\n        \n      }\n    )\n  }\n\n  /* downloadFile(data: any) {\n    const blob = new Blob([data], { type: 'text/turtle' });\n    const url= window.URL.createObjectURL(blob);\n    window.open(url);\n  } */\n}\n","\n\n<div id=\"tree-accordion\" #accordion>\n\n\n    <!-- EPIGRAFI -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"epigraphyHeading\">\n            <h5 class=\"mb-0 d-flex justify-content-between align-items-center\">\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#epigraphyCollapse\" aria-expanded=\"true\"\n                    aria-controls=\"epigraphyCollapse\">\n                    <i class=\"fa\"></i> Text\n                </button>\n                <div class=\"icons-container dropdown\">\n                    <button class=\"btn btn-link\" type=\"button\" id=\"textTreeActionDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-plus\"></i></button>\n                    <!-- <button class=\"btn btn-link\"><i class=\"fa fa-file-import\"></i></button>\n                    <button class=\"btn btn-link\"><i class=\"fa fa-download\"></i></button>\n                    <button class=\"btn btn-link\" title=\"Language\"><i class=\"fa fa-globe-americas\"></i></button> -->\n                    <div class=\"dropdown-menu\" aria-labelledby=\"textTreeActionDropdown\">\n                        <a class=\"dropdown-item\" (click)=\"addFile.click()\" style=\"cursor: pointer;\">Add new file</a>\n                        <input #addFile type=\"file\" accept=\".xml\" hidden (change)=\"addNewFile($event)\" multiple>\n                        <a class=\"dropdown-item\" (click)=\"addNewFolder()\" style=\"cursor: pointer;\">Add new folder</a>\n                        <div class=\"dropdown-divider\"></div>\n                        <a class=\"dropdown-item\" (click)=\"createNewFile()\" style=\"cursor: pointer;\">Create empty file</a>\n                      </div>\n                </div>\n               \n            </h5>\n        </div>\n        <div id=\"epigraphyCollapse\" class=\"collapse show\" aria-labelledby=\"epigraphyHeading\" data-parent=\"#tree-accordion\">\n            <div class=\"card-body\">\n                <app-text-tree #textTree></app-text-tree>\n            </div>\n        </div>\n    </div>\n\n    <!-- LEXICAL ENTRIES -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"lexicalHeading\">\n            <h5 class=\"mb-0 d-flex flex-wrap justify-content-between align-items-center\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#lexicalCollapse\"\n                    aria-expanded=\"false\" aria-controls=\"lexicalCollapse\" (click)=\"updateTreeParent()\">\n                    <i class=\"fa\"></i> Lessico\n                </button>\n                <div class=\"icons-container\">\n                    <button\n                        [ngStyle]=\"switcher ? {'background-color': '#007bff', 'color': 'rgb(247 247 247)'} : {'background-color': 'transparent', 'color': '#007bff'}\"\n                        class=\"btn btn-link\" title=\"Switch to label view\"\n                        (click)=\"switchLabel(); updateTreeParent();\"><i class=\"fas fa-tag\"></i></button>\n                    <button class=\"btn btn-link\" title=\"Add new lexical entry\" (click)=\"newLexicalEntry()\"><i\n                            class=\"fa fa-plus\"></i></button>\n                    <button class=\"btn btn-link\" title=\"Export\" (click)=\"exportLexicon();\"><i class=\"fa fa-file-import\"></i></button>\n                    <!-- <button class=\"btn btn-link\" title=\"Download\"><i class=\"fa fa-download\"></i></button> -->\n                    <button class=\"btn btn-link\" title=\"Edit Languages\" (click)=\"selectLanguageModal.show(); triggerLoad();\"><i\n                            class=\"fas fa-flag-usa\"></i></button>\n\n                    <app-modal #selectLanguageModal class=\"languages_modal\">\n                        <ng-container class=\"app-modal-header\">Language Manager</ng-container>\n                        <ng-container class=\"app-modal-body\">\n\n                            <app-language-manager></app-language-manager>\n\n                        </ng-container>\n                    </app-modal>\n                </div>\n            </h5>\n        </div>\n        <div id=\"lexicalCollapse\" class=\"collapse\" aria-labelledby=\"lexicalHeading\" data-parent=\"#tree-accordion\">\n            <div class=\"card-body\">\n                <app-lexical-entry-tree #lexTree></app-lexical-entry-tree>\n            </div>\n        </div>\n    </div>\n\n    <!-- ONTOLOGY -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingFour\">\n            <h5 class=\"mb-0 d-flex flex-wrap justify-content-between align-items-center\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#ontologia\"\n                    aria-expanded=\"false\" aria-controls=\"ontologia\">\n                    <i class=\"fa\"></i> Ontology\n                </button>\n                <!-- <div class=\"icons-container\">\n                    <button class=\"btn btn-link\"><i class=\"fa fa-plus\"></i></button>\n                    <button class=\"btn btn-link\"><i class=\"fa fa-file-import\"></i></button>\n                    <button class=\"btn btn-link\"><i class=\"fa fa-download\"></i></button>\n                    <button class=\"btn btn-link\" title=\"Language\"><i class=\"fa fa-globe-americas\"></i></button>\n                </div> -->\n            </h5>\n        </div>\n        <div id=\"ontologia\" class=\"collapse\" aria-labelledby=\"headingFour\" data-parent=\"#tree-accordion\">\n            <div class=\"card-body\">\n                <app-concept-tree #conceptTree></app-concept-tree>\n            </div>\n        </div>\n    </div>\n\n    <!-- SKOS -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingSkos\">\n            <h5 class=\"mb-0 d-flex flex-wrap justify-content-between align-items-center\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#skos\"\n                    aria-expanded=\"false\" aria-controls=\"skos\">\n                    <i class=\"fa\"></i> SKOS\n                </button>\n                <!-- <div class=\"icons-container\">\n                    <button class=\"btn btn-link\"><i class=\"fa fa-plus\"></i></button>\n                    <button class=\"btn btn-link\"><i class=\"fa fa-file-import\"></i></button>\n                    <button class=\"btn btn-link\"><i class=\"fa fa-download\"></i></button>\n                    <button class=\"btn btn-link\" title=\"Language\"><i class=\"fa fa-globe-americas\"></i></button>\n                </div> -->\n            </h5>\n        </div>\n        <div id=\"skos\" class=\"collapse\" aria-labelledby=\"headingSkos\" data-parent=\"#tree-accordion\">\n            <div class=\"card-body\">\n                <app-skos-tree #skosTree></app-skos-tree>\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { BibliographyService } from 'src/app/services/bibliography-service/bibliography.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n\n@Component({\n  selector: 'app-bibliography-panel',\n  templateUrl: './bibliography-panel.component.html',\n  styleUrls: ['./bibliography-panel.component.scss']\n})\nexport class BibliographyPanelComponent implements OnInit {\n\n  @Input() biblioData: any[];\n  bibliographyData: any[];\n  object: any;\n  countElement = 0;\n  loadingSynchro = [];\n  bibliographyForm = new FormGroup({\n    bibliography: new FormArray([this.createBibliography()]),\n  })\n  biblioArray: FormArray;\n  memoryNote = [];\n  memoryTextualRef = [];\n\n  private subject: Subject<any> = new Subject();\n\n  constructor(private lexicalService: LexicalEntriesService, private biblioService: BibliographyService, private formBuilder: FormBuilder, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.bibliographyForm = this.formBuilder.group({\n      bibliography: this.formBuilder.array([])\n    })\n\n    this.biblioService.addBiblioReq$.subscribe(\n      incomingBiblio => {\n        if (incomingBiblio != null) {\n\n          let id = incomingBiblio.id != undefined ? incomingBiblio.id : '';\n          let title = incomingBiblio.title != undefined ? incomingBiblio.title : '';\n          let author = incomingBiblio.author != undefined ? incomingBiblio.author : '';\n          let date = incomingBiblio.date != undefined ? incomingBiblio.date : '';\n          let note = incomingBiblio.note != undefined ? incomingBiblio.note : '';\n          let textualReference = incomingBiblio.textualReference != undefined ? incomingBiblio.textualReference : '';\n          this.bibliographyData.push(incomingBiblio)\n          this.addBibliographyElement(id, title, author, date, note, textualReference);\n          this.memoryNote.push(note)\n          this.memoryTextualRef.push(textualReference)\n          this.countElement++;\n        } else {\n          this.object = null;\n          this.bibliographyData = null;\n        }\n      }\n    )\n\n    this.subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChanges(data)\n      }\n    )\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes.biblioData.currentValue != undefined) {\n      this.object = changes.biblioData.currentValue;\n      this.bibliographyData = [];\n      this.countElement = 0;\n      this.memoryNote = [];\n      this.memoryTextualRef = [];\n      this.biblioArray = this.bibliographyForm.get('bibliography') as FormArray;\n      this.biblioArray.clear();\n\n      if (this.object.lexicalEntryInstanceName != undefined) {\n        let lexId = this.object.lexicalEntryInstanceName;\n        this.lexicalService.getBibliographyData(lexId).subscribe(\n          data => {\n            console.log(data);\n            if (data != []) {\n              let count = 0;\n              data.forEach(element => {\n                this.bibliographyData.push(element);\n\n                this.addBibliographyElement(element.id, element.title, element.author, element.date, element.note, element.textualReference)\n                this.memoryNote[count] = element.note;\n                this.memoryTextualRef[count] = element.textualReference\n                count++;\n                this.countElement++;\n              });\n\n              /* this.bibliographyData['parentNodeLabel']= this.object['lexicalEntry'];\n              this.bibliographyData['lexicalEntryInstanceName']= this.object['lexicalEntryInstanceName']; */\n            }\n\n\n\n          }, error => {\n\n\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n\n          }\n        )\n\n      } else if (this.object.formInstanceName != undefined) {\n        let formId = this.object.formInstanceName;\n        this.lexicalService.getBibliographyData(formId).subscribe(\n          data => {\n            console.log(data);\n            let count = 0;\n            data.forEach(element => {\n              this.bibliographyData.push(element);\n\n              this.addBibliographyElement(element.id, element.title, element.author, element.date, element.note, element.textualReference)\n              this.memoryNote[count] = element.note;\n              this.memoryTextualRef[count] = element.textualReference\n              count++;\n              this.countElement++;\n            });\n\n            this.bibliographyData['parentNodeLabel'] = this.object['form'];\n            this.bibliographyData['formInstanceName'] = this.object['formInstanceName'];\n          }, error => {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n            console.log(error);\n\n          }\n        )\n\n      } else if (this.object.senseInstanceName != undefined) {\n        let senseId = this.object.senseInstanceName;\n        this.lexicalService.getBibliographyData(senseId).subscribe(\n          data => {\n            console.log(data);\n            let count = 0;\n            data.forEach(element => {\n              this.bibliographyData.push(element);\n\n              this.addBibliographyElement(element.id, element.title, element.author, element.date, element.note, element.textualReference)\n              this.memoryNote[count] = element.note;\n              this.memoryTextualRef[count] = element.textualReference\n              count++;\n              this.countElement++;\n            });\n\n            this.bibliographyData['parentNodeLabel'] = this.object['sense'];\n            this.bibliographyData['senseInstanceName'] = this.object['senseInstanceName'];\n          }, error => {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n            console.log(error);\n\n          }\n        )\n      } else if (this.object.etymologyInstanceName != undefined) {\n        let etymId = this.object.etymologyInstanceName;\n        this.lexicalService.getBibliographyData(etymId).subscribe(\n          data => {\n            console.log(data);\n            let count = 0;\n            data.forEach(element => {\n              this.bibliographyData.push(element);\n\n              this.addBibliographyElement(element.id, element.title, element.author, element.date, element.note, element.textualReference)\n              this.memoryNote[count] = element.note;\n              this.memoryTextualRef[count] = element.textualReference\n              count++;\n              this.countElement++;\n            });\n\n            this.bibliographyData['parentNodeLabel'] = this.object['etymology'];\n            this.bibliographyData['etymologyInstanceName'] = this.object['etymologyInstanceName'];\n          }, error => {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n            console.log(error);\n\n          }\n        )\n      }\n    } else {\n      this.countElement = 0;\n      this.bibliographyData = null;\n    }\n  }\n\n  debounceKeyup(evt, index, field) {\n    this.lexicalService.spinnerAction('on');\n    this.subject.next({ evt, index, field })\n  }\n\n\n  onChanges(data) {\n    let fieldType = '';\n    console.log(data)\n    if (data != undefined) {\n\n      let newValue = data.evt.target.value;\n      let currentValue;\n      let index = data?.index;\n\n      let oldValue = '';\n      fieldType = data['field']\n      if (fieldType == 'note') {\n        oldValue = this.memoryNote[index];\n      } else if (fieldType == 'label') {\n        oldValue = this.memoryTextualRef[index];\n      }\n\n      //this.biblioArray = this.bibliographyForm.get('bibliography') as FormArray;\n\n\n\n      let instanceName = this.bibliographyData[index].bibliographyInstanceName;\n\n\n      let parameters;\n\n      if (oldValue == '') {\n        parameters = {\n          type: \"bibliography\",\n          relation: fieldType,\n          value: newValue\n        }\n      } else {\n        parameters = {\n          type: \"bibliography\",\n          relation: fieldType,\n          value: newValue,\n          currentValue: oldValue\n        }\n      }\n\n\n\n      console.log(this.biblioArray.at(index))\n      console.log(parameters)\n\n      this.lexicalService.updateGenericRelation(instanceName, parameters).subscribe(\n        data => {\n          console.log(data);\n          this.lexicalService.spinnerAction('off');\n          this.lexicalService.updateCoreCard(this.object);\n          this.toastr.success('Bibliography item updated', '', {\n            timeOut: 5000,\n          });\n        }, error => {\n          console.log(error);\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status == 200) {\n            this.toastr.success('Bibliography item updated', '', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n\n        }\n      )\n\n\n      if (fieldType == 'note') {\n        this.memoryNote[index] = newValue;\n      } else if (fieldType == 'label') {\n        this.memoryTextualRef[index] = newValue;\n      }\n\n\n\n    }\n  }\n\n  removeItem(index) {\n    this.biblioArray = this.bibliographyForm.get('bibliography') as FormArray;\n    this.countElement--;\n\n    let instanceName = this.bibliographyData[index].bibliographyInstanceName;\n\n    this.lexicalService.removeBibliographyItem(instanceName).subscribe(\n      data => {\n        console.log(data)\n        this.lexicalService.updateCoreCard(this.object);\n        this.toastr.success('Element removed', '', {\n          timeOut: 5000,\n        });\n      }, error => {\n        //console.log(error)\n        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n\n\n    this.biblioArray.removeAt(index);\n    this.bibliographyData.splice(index, 1);\n    this.memoryNote.splice(index, 1)\n    this.memoryTextualRef.splice(index, 1)\n\n  }\n\n\n  addBibliographyElement(i?, t?, a?, d?, n?, l?) {\n    this.biblioArray = this.bibliographyForm.get('bibliography') as FormArray;\n    if (t == undefined) {\n      this.biblioArray.push(this.createBibliography());\n    } else {\n      this.biblioArray.push(this.createBibliography(i, t, a, d, n, l));\n    }\n  }\n\n  createBibliography(i?, t?, a?, d?, n?, l?) {\n    if (t == undefined) {\n      return this.formBuilder.group({\n        id: new FormControl(null),\n        title: new FormControl(null),\n        author: new FormControl(null),\n        date: new FormControl(null),\n        note: new FormControl(null),\n        textualReference: new FormControl(null)\n      })\n    } else {\n      return this.formBuilder.group({\n        id: new FormControl(i),\n        title: new FormControl(t),\n        author: new FormControl(a),\n        date: new FormControl(d),\n        note: new FormControl(n),\n        textualReference: new FormControl(l)\n      })\n    }\n  }\n\n  synchronizeBibliography(id, i) {\n    console.log(id)\n    this.loadingSynchro[i] = true;\n    let lexId = '';\n    if (this.object.lexicalEntryInstanceName != undefined\n      && this.object.senseInstanceName == undefined) {\n      console.log(1)\n      lexId = this.object.lexicalEntryInstanceName;\n    } else if (this.object.formInstanceName != undefined) {\n      lexId = this.object.formInstanceName;\n      console.log(2)\n    } else if (this.object.senseInstanceName != undefined) {\n      lexId = this.object.senseInstanceName;\n      console.log(3)\n    } else if (this.object.etymologyInstanceName != undefined) {\n      lexId = this.object.etymologyInstanceName;\n    }\n\n    this.lexicalService.synchronizeBibliographyItem(lexId, id).pipe(debounceTime(500)).subscribe(\n      data => {\n        console.log(data);\n        this.loadingSynchro[i] = false;\n      }, error => {\n        console.log(error);\n        if (error.status == 200) {\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.toastr.success('Item n°' + id + ' synchronized', '')\n        }\n        this.loadingSynchro[i] = false;\n      }\n    );\n  }\n\n}\n","\n\n<div class=\"card\">\n    <div class=\"card-header\" id=\"bibliographyHeading\">\n        <h5 class=\"mb-0\">\n            <a class=\"btn btn-link w-100 d-flex align-self-center collapsed\" data-toggle=\"collapse\"\n                data-target=\"#bibliographyCollapse\" aria-expanded=\"true\" aria-controls=\"bibliographyCollapse\">\n                Bibliography Panel\n                <span *ngIf=\"countElement > 0\">&nbsp;({{countElement}})</span>\n                <i class=\"fa ml-auto\"></i>\n            </a>\n        </h5>\n    </div>\n    <div id=\"bibliographyCollapse\" class=\"collapse\" aria-labelledby=\"bibliographyHeading\">\n\n        <div class=\"card-body\">\n            <div id=\"accordion\">\n            <!----- FORM ----->\n            <form [formGroup]=\"bibliographyForm\" *ngIf=\"object!=null\"> <!--  -->\n                <div formArrayName=\"bibliography\">\n                    <div *ngFor=\"let biblio of bibliographyForm['controls'].bibliography['controls']; let i = index\">\n                        <div [formGroupName]=\"i\">\n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                <div class=\"input-group col-xl-12 p-0\">\n                                    \n                                    <div class=\"card\">\n                                        <a class=\"biblioCollapse\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapse-'+i\" aria-expanded=\"true\" [attr.aria-controls]=\"'#collapse-'+i\"><span class=\"text-id pointer\"><b>{{biblio.get(\"author\").value}} - {{biblio.get(\"date\").value}} ({{biblio.get(\"title\").value != undefined ? (biblio.get(\"title\").value | slice:0:10) +'...' : ''}})</b></span></a>\n                                        <span *ngIf=\"bibliographyData != undefined\" class=\"icons-container\">\n                                            <!-- {{bibliographyData[i]['url'] | json}} -->\n                                            <span><a target=\"_blank\" class=\"pointer text-primary\" (click)=\"synchronizeBibliography(biblio.get('id').value, i)\"><span class=\"synchro-icon\"><i class=\"fas fa-sync-alt\" *ngIf=\"!loadingSynchro[i]\"></i> <i class=\"fas fa-sync fa-spin\" *ngIf=\"loadingSynchro[i]\"></i></span></a></span>\n                                            <span ><a href=\"https://www.zotero.org/groups/2552746/prin_italia_antica/items/{{bibliographyData[i]['id']}}/library\" target=\"_blank\" class=\"pointer text-primary\"><span class=\"external-icon\"><i class=\"fas fa-external-link-alt\"></i></span></a></span>\n                                            <span><a *ngIf=\"bibliographyData[i]['url'] != ''\" [href]=\"bibliographyData[i]['url']\" target=\"_blank\" class=\"pointer text-primary\"><span class=\"download-icon\"><i class=\"fas fa-download\"></i></span></a></span>\n                                        </span>\n                                        \n                                        <a class=\"pointer\" (click)=\"removeItem(i)\"><span class=\"trash-icon\"><i class=\"fa fa-trash text-danger\"></i></span></a> \n                                        \n                                        <div [id]=\"'collapse-'+i\" class=\"collapse\" data-parent=\"#accordion\">\n                                            <div class=\"card-body\">\n                                                <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-4 col-form-label\">Title:</label>\n                                                    <div class=\"input-group col-lg-8 pl-0\">\n                                                        <input id=\"title\" formControlName=\"title\" name=\"title\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled>\n                                                    </div>\n                                                </div>           \n                                                <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-4 col-form-label\">Author:</label>\n                                                    <div class=\"input-group col-lg-8 pl-0\">\n                                                        <input id=\"author\"  formControlName=\"author\" name=\"author\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled>\n                                                    </div>\n                                                </div>   \n                                                <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-4 col-form-label\">Date:</label>\n                                                    <div class=\"input-group col-lg-8 pl-0\">\n                                                        <input id=\"date\"  formControlName=\"date\" name=\"date\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled>\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group row ml-2 mr-2\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-4 col-form-label\">Note:</label>\n                                                    <div class=\"input-group col-lg-8 pl-0\">\n                                                        <!-- <input id=\"note\"  formControlName=\"note\" name=\"note\" type=\"text\" class=\"form-control\" placeholder=\"\"> -->\n                                                        <textarea (keyup)=\"debounceKeyup($event, i, 'note')\" formControlName=\"note\" name=\"note\" class=\"form-control\" style=\"resize: none;\"></textarea>\n                                                    </div>\n                                                </div>  \n                                                <div class=\"form-group row ml-2 mr-2\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-4 col-form-label\">Page(s):</label>\n                                                    <div class=\"input-group col-lg-8 pl-0\">\n                                                        <!-- <input id=\"note\"  formControlName=\"note\" name=\"note\" type=\"text\" class=\"form-control\" placeholder=\"\"> -->\n                                                        <textarea (keyup)=\"debounceKeyup($event, i, 'label')\" formControlName=\"textualReference\" name=\"textualReference\" class=\"form-control\" style=\"resize: none;\"></textarea>\n                                                    </div>\n                                                </div>     \n                                            </div>\n                                        </div>                                            \n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            </div>\n           \n        </div>\n    </div>\n</div>","import { KeycloakService } from 'keycloak-angular';\nimport { environment } from '../../../environments/environment';\n \nexport function initializer(keycloak: KeycloakService): () => Promise<any> {\n    return (): Promise<void> => {\n        return new Promise(async (resolve, reject) => {\n          try {\n            await keycloak.init({\n                config: {\n                    url: environment.keycloak.issuer,\n                    realm: environment.keycloak.realm,\n                    clientId: environment.keycloak.clientId\n                },\n              loadUserProfileAtStartUp: false,\n              enableBearerInterceptor: true,\n              bearerPrefix: 'Bearer',\n              initOptions: {\n                onLoad: 'check-sso',\n                checkLoginIframe: true\n              },\n              bearerExcludedUrls: [\n                'api.zotero.org'\n              ]\n            });\n            resolve();\n          } catch (error) {\n            reject(error);\n          }\n        });\n      };\n}","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, HostListener, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-note-panel',\n  templateUrl: './note-panel.component.html',\n  styleUrls: ['./note-panel.component.scss']\n})\nexport class NotePanelComponent implements OnInit, OnChanges {\n\n  @Input() noteData: string;\n  object : any;\n  private subject : Subject<string> = new Subject();\n  \n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    /* //console.log(event) */\n    event.preventDefault();\n    event.stopPropagation();\n    return;\n  }\n\n  htmlContent : '';\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: 'auto',\n    minHeight: '0',\n    maxHeight: '150px',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'yes',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    defaultParagraphSeparator: '',\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n      [\n        'undo',\n        'redo',\n        'strikeThrough',\n        'justifyLeft',\n        'justifyCenter',\n        'justifyRight',\n        'justifyFull',\n        'indent',\n        'outdent',\n        'insertUnorderedList',\n        'insertOrderedList',\n        'heading',\n        'fontName'\n      ],\n      [\n        'fontSize',\n        'textColor',\n        'backgroundColor',\n        'customClasses',\n        'link',\n        'unlink',\n        'insertImage',\n        'insertVideo',\n        'insertHorizontalRule',\n        'toggleEditorMode'\n      ]\n    ]\n  };\n  constructor(private lexicalService: LexicalEntriesService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.editorConfig.editable = false;\n\n\n    this.subject.pipe(debounceTime(1000)).subscribe(\n      newNote => {\n        if(this.noteData != null){\n          this.lexicalService.spinnerAction('on');\n          console.log(this.object)\n          //console.log(this.object)\n          if(this.object.lexicalEntryInstanceName != undefined){\n            var lexId = this.object.lexicalEntryInstanceName;\n            var parameters = {\n              relation : \"note\",\n              value : newNote\n            }\n            this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n              data => {\n                //console.log(data);\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              },\n              error => {\n                //console.log(error);\n                const data = this.object;\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              }\n            )\n          }else if(this.object.formInstanceName != undefined){\n            var formId = this.object.formInstanceName;\n            var parameters = {\n              relation : \"note\",\n              value : newNote\n            }\n            this.lexicalService.updateForm(formId, parameters).subscribe(\n              data => {\n                //console.log(data);\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              },\n              error => {\n                //console.log(error);\n                const data = this.object;\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              }\n            )\n          }else if(this.object.senseInstanceName != undefined){\n            var senseId = this.object.senseInstanceName;\n            var parameters = {\n              relation : \"note\",\n              value : newNote\n            }\n            this.lexicalService.updateSense(senseId, parameters).subscribe(\n              data => {\n                //console.log(data);\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              },\n              error => {\n                //console.log(error);\n                const data = this.object;\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              }\n            )\n          }else if(this.object.etymologyInstanceName != undefined){\n            var etymId = this.object.etymologyInstanceName;\n            var parameters = {\n              relation : \"note\",\n              value : newNote\n            }\n            this.lexicalService.updateEtymology(etymId, parameters).subscribe(\n              data => {\n                //console.log(data);\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              },\n              error => {\n                //console.log(error);\n                const data = this.object;\n                data['request'] = 0;\n                data['new_note'] = newNote;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.updateCoreCard({lastUpdate : error.error.text})\n                this.lexicalService.spinnerAction('off');\n                this.toastr.success('Note updated', '', {\n                  timeOut: 5000,\n                });\n              }\n            )\n          }\n        }\n      }\n    )\n\n    this.lexicalService.deleteReq$.subscribe(\n      data => {\n        this.editorConfig.editable = false;\n        this.noteData = null;\n        this.object = null;\n      }\n    )\n  }\n\n  ngOnChanges(changes: SimpleChanges) { \n    \n      if(changes.noteData.currentValue == null){\n        this.editorConfig.editable = false;\n        this.noteData = null;\n        this.object = null;\n      }else{\n        this.editorConfig.editable = true;\n        this.noteData = changes.noteData.currentValue.note;\n        this.object = changes.noteData.currentValue;\n      }\n      \n      /* //console.log(changes) */\n    \n  }\n\n  onChanges(evt){\n    if(evt.key != \"Control\" && evt.key != 'Alt' && evt.key != 'Shift'){\n      this.subject.next(this.noteData);\n    }\n    \n  }\n\n}\n","\n\n<div class=\"card\">\n    <div class=\"card-header\" id=\"noteHeading\">\n        <h5 class=\"mb-0\">\n            <a class=\"btn btn-link w-100 d-flex align-self-center collapsed\" data-toggle=\"collapse\" data-target=\"#noteCollapse\" aria-expanded=\"true\" aria-controls=\"noteCollapse\">\n                Note Panel<i class=\"fa ml-auto\"></i>\n            </a>\n        </h5>\n    </div>\n    <div id=\"noteCollapse\" class=\"collapse\" aria-labelledby=\"noteHeading\">\n        <div class=\"card-body\">\n           <angular-editor *ngIf=\"noteData != null\" [placeholder]=\"'Enter text here...'\" [(ngModel)]=\"noteData\" [config]=\"editorConfig\" (keyup)=\"onChanges($event)\" readonly></angular-editor>\n        </div>\n    </div>\n</div>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LexicalEntriesService {\n\n  private arrayPanelFormsData = {};\n\n  private _coreFormData: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _attestationPanelData: BehaviorSubject<object> = new BehaviorSubject(null);\n  /* private _vartransData: BehaviorSubject<object> = new BehaviorSubject(null); */\n  private _etymologyData: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _rightPanelData: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _deleteLexicalEntryReq: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _addSubElementReq: BehaviorSubject<any> = new BehaviorSubject(null);\n  private _updateCoreCardReq: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _spinnerAction: BehaviorSubject<string> = new BehaviorSubject(null);\n  private _refreshLanguageTable: BehaviorSubject<object> = new BehaviorSubject(null);\n  private _refreshAfterEdit : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _refreshFilter : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _updateLangSelect : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _triggerNotePanel : BehaviorSubject<boolean> = new BehaviorSubject(null);\n  private _triggerAttestationPanel : BehaviorSubject<boolean> = new BehaviorSubject(null);\n  private _changeDecompLabel : BehaviorSubject<string> = new BehaviorSubject(null);\n  private _decompData : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _refreshLinkCounter: BehaviorSubject<string> = new BehaviorSubject(null);\n  private _triggerLexicalEntryTree : BehaviorSubject<object> = new BehaviorSubject(null);\n  private _triggerSameAs : BehaviorSubject<object> = new BehaviorSubject(null);\n\n\n  private baseUrl = \"/LexO-backend-itant/service/\"\n  private key = \"PRINitant19\";\n  private author = \"\";\n\n  coreData$ = this._coreFormData.asObservable();\n  decompData$ = this._decompData.asObservable();\n  attestationPanelData$ = this._attestationPanelData.asObservable();\n  /* vartransData = this._vartransData.asObservable(); */\n  etymologyData$ = this._etymologyData.asObservable();\n  rightPanelData$ = this._rightPanelData.asObservable();\n  deleteReq$ = this._deleteLexicalEntryReq.asObservable();\n  addSubReq$ = this._addSubElementReq.asObservable();\n  updateCoreCardReq$ = this._updateCoreCardReq.asObservable();\n  spinnerAction$ = this._spinnerAction.asObservable();\n  refreshLangTable$ = this._refreshLanguageTable.asObservable();\n  refreshAfterEdit$ = this._refreshAfterEdit.asObservable();\n  refreshFilter$ = this._refreshFilter.asObservable();\n  updateLangSelect$ = this._updateLangSelect.asObservable();\n  triggerNotePanel$ = this._triggerNotePanel.asObservable();\n  triggerAttestationPanel$ = this._triggerAttestationPanel.asObservable();\n  changeDecompLabel$ = this._changeDecompLabel.asObservable();\n  refreshLinkCounter$ = this._refreshLinkCounter.asObservable();\n  triggerLexicalEntryTree$ = this._triggerLexicalEntryTree.asObservable();\n  triggerSameAs$ = this._triggerSameAs.asObservable();\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  refreshLinkCounter(value:string){\n    this._refreshLinkCounter.next(value);\n  }\n\n  sendToCoreTab(object: object) {\n    this._coreFormData.next(object)\n  } \n\n  sendToDecompTab(object: object){\n    this._decompData.next(object);\n  }\n  \n  sendToAttestationPanel(object: object) {\n    this._attestationPanelData.next(object)\n  } \n\n  changeDecompLabel(string:string){\n    this._changeDecompLabel.next(string);\n  }\n  \n  /* sendToVartransTab(object: object) {\n    this._vartransData.next(object)\n  } */\n\n  sendToRightTab(object: object) {\n    this._rightPanelData.next(object);\n  }\n\n  sendToEtymologyTab(object: object) {\n    this._etymologyData.next(object);\n  }\n\n  deleteRequest(request? : any) {\n    this._deleteLexicalEntryReq.next(request);\n  }\n\n  addSubElementRequest(request?: any){\n    this._addSubElementReq.next(request);\n  }\n\n  updateCoreCard(object: object) {\n    this._updateCoreCardReq.next(object)\n  }\n\n  spinnerAction(string: string) {\n    this._spinnerAction.next(string)\n  }\n\n  refreshLangTable(){\n    this._refreshLanguageTable.next(null);\n  }\n\n  refreshAfterEdit(object: object){\n    this._refreshAfterEdit.next(object);\n  }\n\n  refreshFilter(object: object){\n    this._refreshFilter.next(object);\n  }\n\n  updateLangSelect(object: object){\n    this._updateLangSelect.next(object);\n  }\n\n  triggerNotePanel(bool: boolean){\n    this._triggerNotePanel.next(bool);\n  }\n\n  triggerAttestationPanel(bool: boolean){\n    this._triggerAttestationPanel.next(bool);\n  }\n\n  triggerLexicalEntryTree(object : object){\n    this._triggerLexicalEntryTree.next(object);\n  }\n\n  triggerSameAs(object : object){\n    this._triggerSameAs.next(object);\n  }\n\n  //POST: /lexicon/lexicalEntries ---> get lexical entries list\n  getLexicalEntriesList(parameters: any): Observable<any> {\n    return this.http.post(this.baseUrl + \"lexicon/data/lexicalEntries\", parameters);\n  }\n\n  //POST: /lexicon/lexicalSenses ---> get lexical entries list\n  getLexicalSensesList(parameters: any): Observable<any> {\n    return this.http.post(this.baseUrl + \"lexicon/data/lexicalSenses\", parameters);\n  }\n\n  //POST: /lexicon/data/forms ---> get form list\n  getFormList(parameters: any): Observable<any> {\n    return this.http.post(this.baseUrl + \"lexicon/data/forms\", parameters);\n  }\n\n  //GET /lexicon/data/{id}/elements --> get elements of lexical entry\n  getLexEntryElements(instance: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/elements\");\n  }\n\n  //GET ​/lexicon​/data​/{id}​/lexicalEntry --> get specific aspect (morphology, syntax, ...) associated with a given lexical entry\n  getLexEntryData(instance: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/lexicalEntry?key=\" + this.key + \"&aspect=core\");\n  }\n\n  //GET /lexicon/data/{id}/lexicalEntryLinguisticRelation --> This method returns the relations with other lexical entities according to the input type\n  getLexEntryLinguisticRelation(lexId: string, property: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + lexId + \"/linguisticRelation?key=\" + this.key + \"&property=\" + property + \"\");\n  }\n\n\n  //GET /lexicon/data/{id}/forms --> get forms of lexical entry\n  getLexEntryForms(instance: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/forms\");\n  }\n\n\n  //GET /lexicon/data/{id}/form --> get data about a single form \n  getFormData(formId: string, aspect: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + formId + \"/form?key=\" + this.key + \"&aspect=\" + aspect)\n  }\n\n\n  //GET /lexicon/data/{id}/lexicalSense --> get data about a single form \n  getSenseData(senseId: string, aspect: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + senseId + \"/lexicalSense?key=\" + this.key + \"&aspect=\" + aspect)\n  }\n\n  //GET /lexicon/data/{id}/senses --> get list of senses of a lexical entry\n  getSensesList(instance: string): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/senses\");\n  }\n\n  //GET /lexicon/data/languages --> Lexicon languages list\n  getLexiconLanguages(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/languages\");\n  }\n\n  //GET /lexicon/statistics/languages --> get languages list for lexical entries menu filter search\n  getLanguages(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/statistics/languages?key=\" + this.key + \"\");\n  }\n\n  //GET /lexicon/types --> get types list\n  getTypes(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/statistics/types?key=\" + this.key + \"\");\n  }\n\n  //GET /lexicon/authors --> get authors list\n  getAuthors(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/statistics/authors?key=\" + this.key + \"\");\n  }\n\n  //GET /lexicon/pos --> get pos list\n  getPos(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/statistics/pos?key=\" + this.key + \"\");\n  }\n\n  //GET /lexicon/states --> get states list\n  getStatus(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/statistics/status?key=\" + this.key + \"\");\n  }\n\n\n  //GET /lexicon/creation/lexicalEntry --> create new lexical entry\n  newLexicalEntry(): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/lexicalEntry?key=\" + this.key + \"&author=\" + this.author);\n  }\n\n\n  //GET /lexicon/delete/{id}/lexicalEntry --> delete lexical entry\n  deleteLexicalEntry(lexId): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/delete/\" + lexId + \"/lexicalEntry?key=\" + this.key);\n  }\n\n  //GET /lexicon/delete/{id}/form --> delete lexical entry\n  deleteForm(lexId): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/delete/\" + lexId + \"/form?key=\" + this.key);\n  }\n\n  //GET /lexicon/delete/{id}/lexicalSense --> delete lexical entry\n  deleteSense(lexId): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/delete/\" + lexId + \"/lexicalSense?key=\" + this.key);\n  }\n\n  //GET  /lexicon​/delete​/{id}​/language  --> Lexicon language deletion\n  deleteLanguage(langId): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/delete/\" + langId + \"/language?key=\" + this.key);\n  }\n\n  //POST  /lexicon​/delete​/{id}​/linguisticRelation  --> delete linguistic relation\n  deleteLinguisticRelation(lexId, parameters): Observable<any> {\n    return this.http.post(this.baseUrl + \"lexicon/delete/\" + lexId + \"/relation?key=\" + this.key, parameters);\n  }\n\n  //POST ​/lexicon​/update​/{id}​/lexicalEntry --> lexical entry update\n  updateLexicalEntry(lexId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + lexId + \"/lexicalEntry?key=\" + this.key + \"&user=\" + this.author, parameters);\n  }\n\n\n  //POST ​/lexicon​/update​/{id}​/linguisticRelation --> linguistic Relation update for Core\n  updateLinguisticRelation(lexId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + lexId + \"/linguisticRelation?key=\" + this.key + \"&user=\" + this.author, parameters);\n  }\n\n  //POST ​/lexicon​/update​/{id}​/genericRelation --> Generic relation update\n  updateGenericRelation(lexId, parameters) : Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + lexId + \"/genericRelation?key=\" + this.key + \"&user=\" + this.author, parameters);\n  }\n\n  //POST /lexicon/update/{id}/form --> update form values\n  updateForm(formId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + formId + \"/form?key=\" + this.key + \"&user=\" + this.author, parameters);\n  }\n\n  //POST /lexicon/update/{id}/lexicalSense --> update form values\n  updateSense(senseId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + senseId + \"/lexicalSense?key=\" + this.key + \"&user=\" + this.author, parameters);\n  }\n\n  //GET  /lexinfo/data/morphology --> get data about morphology\n  getMorphologyData(): Observable<any> {\n    return this.http.get(this.baseUrl + \"lexinfo/data/morphology\");\n  }\n\n  ///GET /ontolex/data/formType --> get data about form types\n  getFormTypes(): Observable<any> {\n    return this.http.get(this.baseUrl + \"ontolex/data/formType\");\n  }\n\n  ///GET /ontolex/data/lexicalEntryType --> get data about lexicalEntry types\n  getLexEntryTypes(): Observable<any> {\n    return this.http.get(this.baseUrl + \"ontolex/data/lexicalEntryType\");\n  }\n\n\n  //GET /lexicon/creation/form --> create new form\n  createNewForm(lexId): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/form?lexicalEntryID=\"+ lexId +\"&key=\" + this.key + \"&author=\" + this.author);\n  }\n\n  //GET /lexicon/creation/lexicalSense --> create new sense\n  createNewSense(lexId): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/lexicalSense?lexicalEntryID=\"+ lexId +\"&key=\" + this.key + \"&author=\" + this.author);\n  }\n\n  //GET /lexicon/creation/language --> create new language\n  createNewLanguage(langId): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/language?key=\" + this.key + \"&lang=\"+ langId +\"&author=\" + this.author);\n  }\n\n  //POST /lexicon/update/{id}/language --> update language\n  updateLanguage(langId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + langId + \"/language?key=\" + this.key + \"&author=\" + this.author, parameters);\n  }\n  \n\n  //BIBLIOGRAPHY\n  getBibliographyData(instance: string) : Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/bibliography?key=lexodemo\");\n  }\n\n  addBibliographyData(instance : string, parameters){\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/creation/bibliography?lexicalEntityID=\" + instance + \"&key=\"+ this.key +\"&author=\"+this.author+\"\", parameters);\n  }\n\n  removeBibliographyItem(instance: string) {\n    return this.http.get(this.baseUrl + \"lexicon/delete/\" + instance + \"/bibliography?key=PRINitant19\");\n  }\n\n  synchronizeBibliographyItem(lexId : string, itemKey : string) : Observable<any> {\n    return this.http.post(this.baseUrl + \"lexicon/update/synchronizeBibliography?lexicalEntityID=\"+lexId+\"&key=PRINitant19&author=demo&itemKey=\"+itemKey,{})\n  }\n\n\n  //ETYMOLOGY\n  createNewEtymology(instance: string) : Observable<any>{\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/etymology?lexicalEntryID=\"+instance+\"&key=\"+this.key+\"&author=\"+this.author+\"\");\n  }\n\n  getEtymologies(instance: string) : Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/etymologies?key=\"+this.key+\"\");\n  }\n\n  getEtymologyData(instance: string)  : Observable<any> {\n    return this.http.get(this.baseUrl + \"lexicon/data/\" + instance + \"/etymology?key=\"+this.key+\"\");\n  }\n\n  updateEtymology(etymId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + etymId + \"/etymology?key=\" + this.key + \"&author=\" + this.author, parameters);\n  }\n\n  createNewEtylink(lexInstance: string, etymInstance : string) : Observable<any>{\n    return this.http.get(this.baseUrl + \"lexicon/creation/etymologicalLink?lexicalEntryID=\"+lexInstance+\"&etymologyID=\"+etymInstance+\"&key=\"+this.key+\"&author=\"+this.author+\"\");\n  }\n\n  deleteEtymology(etymInstance : string) : Observable<any>{\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/delete/\"+etymInstance+\"/etymology?key=\"+this.key+\"&author=\"+this.author+\"\");\n  }\n\n  updateEtylink(etymId, parameters): Observable<any> {\n    this.author = this.auth.getUsername();\n    return this.http.post(this.baseUrl + \"lexicon/update/\" + etymId + \"/etymologicalLink?key=\" + this.key + \"&author=\" + this.author, parameters);\n  }\n\n  deleteEtylink(etyLinkInstance: string) : Observable<any>{\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/delete/\"+etyLinkInstance+\"/etymologicalLink?key=\"+this.key+\"&author=\"+this.author+\"\");\n  }\n\n  //DECOMP\n  getSubTerms(lexicalEntityID: string) : Observable<any>{\n    return this.http.get(this.baseUrl + \"lexicon/data/\"+lexicalEntityID+\"/subTerms?key=\"+this.key);\n  }\n\n  getConstituents(lexicalEntityID: string) : Observable<any>{\n    return this.http.get(this.baseUrl + \"lexicon/data/\"+lexicalEntityID+\"/constituents?key=\"+this.key);\n  }\n\n  createComponent(lexicalEntityID : string) : Observable<any>{\n    this.author = this.auth.getUsername();\n    return this.http.get(this.baseUrl + \"lexicon/creation/component?id=\"+lexicalEntityID+\"&key=\"+this.key+\"&author=\"+this.author+\"\");\n  }\n\n  deleteComponent(compId : string) : Observable<any>{\n    return this.http.get(this.baseUrl + \"lexicon/delete/\"+compId+\"/component?key=\"+this.key);\n  }\n\n  getCorrespondsTo(compId: string) : Observable<any>{\n    return this.http.get(this.baseUrl + \"lexicon/data/\"+compId+\"/correspondsTo?key=\"+this.key);\n  }\n\n  exportLexicon(body : object) : Observable<any> {\n    return this.http.post(this.baseUrl + \"export/lexicon\", body, { responseType: 'text'});\n  } \n\n  getPanelCognate(cogInstanceName, lexInstanceName) : object{\n    return this.arrayPanelFormsData[cogInstanceName+'-'+lexInstanceName];\n  }\n\n  newPanelForm(cogInstanceName, lexInstanceName) : void {\n    this.arrayPanelFormsData[cogInstanceName+'-'+lexInstanceName] = {};\n    this.arrayPanelFormsData[cogInstanceName+'-'+lexInstanceName].data = undefined;\n    this.arrayPanelFormsData[cogInstanceName+'-'+lexInstanceName].isOpen = undefined;\n\n  }\n\n  closePanelForm(cogInstanceName, lexInstanceName) : void {\n    this.arrayPanelFormsData[cogInstanceName+'-'+lexInstanceName] = undefined;\n  }\n\n  getAllPanelForms() : object {\n    return this.arrayPanelFormsData;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized-page',\n  templateUrl: './unauthorized-page.component.html',\n  styleUrls: ['./unauthorized-page.component.scss']\n})\nexport class UnauthorizedPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>unauthorized-page works!</p>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KeycloakEventType, KeycloakService } from 'keycloak-angular';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n \n  username : string;\n  userRoles;\n\n  constructor(private route: ActivatedRoute, private router: Router, private keycloakService: KeycloakService, private auth : AuthService) { }\n\n  ngOnInit(): void {\n    if(this.auth.getLoggedUser() != undefined){\n      if(this.auth.getLoggedUser()['preferred_username'] != undefined){\n        this.username = this.auth.getLoggedUser()['preferred_username'];\n      }\n    }\n    \n    \n    this.userRoles = this.auth.getCurrentUserRole();\n\n    this.keycloakService.keycloakEvents$.subscribe({\n      next: (e) => {\n        // console.log(e)\n        if (e.type == KeycloakEventType.OnTokenExpired) {\n          this.keycloakService.updateToken(20);\n        }\n      }\n    });\n  }\n\n  logout(){\n    this.auth.logout();\n  }\n\n\n  isAdmin = () => {\n    let admin = (element) => element == 'ADMIN';\n    console.log(this.userRoles.some(admin))\n  }\n\n}\n","\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <!-- <a class=\"navbar-brand\" href=\"#\">Navbar</a> -->\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"d-flex-md d-flex-xs d-lg-none\">\n        <ul class=\"navbar-nav flex-row\">\n            <div class=\"dropdown mr-2\">\n                <button class=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <img src=\"https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg\" width=\"24\" height=\"24\" class=\"rounded-circle\">\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a class=\"dropdown-item\"><i class=\"fa fa-power-off\" aria-hidden=\"true\" (click)=\"logout()\"></i> Logout</a>\n                </div>\n            </div>\n        </ul>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <!-- <li class=\"nav-item\">\n                <a class=\"nav-link disabled\" routerLink=\"home\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                </a>\n            </li> -->\n            <li class=\"nav-item d-flex align-items-center\" *ngIf=\"isAdmin\">\n                <a class=\"nav-link\" routerLink=\"user\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-user\"></i>\n                    <span class=\"d-flex-xs d-lg-none ml-2\">User Admin</span>\n                </a>\n                \n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"lexicon\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-edit\"></i>\n                    <span class=\"d-flex-xs d-lg-none ml-2\">Lexicon Editor</span>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link disabled\" routerLink=\"search\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    <span class=\"d-flex-xs d-lg-none ml-2\">Search Page</span>\n                </a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav ml-auto d-none d-xs-none d-sm-none d-lg-flex align-items-center\">\n            <div class=\"dropdown mr-2\">\n                <button class=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{username}}\n                    <!-- <img src=\"https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg\"\n                        width=\"24\" height=\"24\" class=\"rounded-circle\"> -->\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a class=\"dropdown-item pointer\" (click)=\"logout()\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i> Logout</a>\n                </div>\n            </div>\n        </ul>\n    </div>\n</nav>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { LexicalEntriesService } from '../../../../../services/lexical-entries/lexical-entries.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from \"@angular/animations\";\n\nimport { ToastrService } from 'ngx-toastr';\nimport { BibliographyService } from 'src/app/services/bibliography-service/bibliography.service';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-etymology-tab',\n  templateUrl: './etymology-tab.component.html',\n  styleUrls: ['./etymology-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 17rem)',\n\n      })),\n      state('out', style({\n        height: 'calc(50vh - 12.5rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\nexport class EtymologyTabComponent implements OnInit {\n\n  lock = 0;\n  object: any;\n  exp_trig = '';\n\n  isLexicalEntry = false;\n  isForm = false;\n  isSense = false;\n  isLexicalConcept = false;\n  searchIconSpinner = false;\n  goBack = false;\n  isEtymology = false;\n\n\n\n  lastUpdateDate: any;\n  creationDate: any;\n  creator: any;\n  revisor: any;\n\n  lexicalEntryData: any;\n  formData: any;\n  senseData: any;\n  lexicalConceptData: any;\n  bibliography = [];\n\n  start = 0;\n  sortField = 'title';\n  direction = 'asc';\n  memorySort = { field: '', direction: '' }\n  queryTitle = '';\n  queryMode = 'titleCreatorYear';\n\n  private searchSubject: Subject<any> = new Subject();\n  selectedItem;\n\n  @ViewChild('expander') expander_body: ElementRef;\n  @Input() etymologyData: any;\n  @ViewChild('addBibliography', { static: false }) modal: ModalComponent;\n  @ViewChild('table_body') tableBody: ElementRef;\n\n  constructor(private lexicalService: LexicalEntriesService, private biblioService: BibliographyService, private expand: ExpanderService, private rend: Renderer2, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.lexicalService.etymologyData$.subscribe(\n      object => {\n        if (this.object != object) {\n          this.etymologyData = null;\n          this.isForm = false;\n          this.isLexicalConcept = false;\n          this.isLexicalEntry = false;\n        }\n        this.object = object\n        //console.log(this.object)\n        if (this.object != null) {\n          \n          this.creator = this.object['etymology'].creator;\n          this.revisor = this.object.revisor;\n          this.etymologyData = object;\n          this.isEtymology = true;\n          setTimeout(() => {\n            //@ts-ignore\n            $('#etymologyTabModal').modal('hide');\n            $('.modal-backdrop').remove();\n            var timer = setInterval((val)=>{                 \n              try{\n                  //@ts-ignore\n                  $('#etymologyTabModal').modal('hide');\n                  if(!$('#etymologyTabModal').is(':visible')){\n                    clearInterval(timer)\n                  }\n                  \n              }catch(e){\n                  console.log(e)\n              }    \n            }, 10)\n          }, 500);\n        }\n      }\n    );\n\n    this.expand.expEdit$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            let isEditExpanded = this.expand.isEditTabExpanded();\n            let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n  \n            if(!isEpigraphyExpanded){\n              this.exp_trig = 'in';\n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 17rem)')\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 17rem)')\n            }else{\n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n              this.exp_trig = 'in';\n            }\n            \n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 12.5rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 12.5rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    /* this.lexicalService.updateLexCardReq$.subscribe(\n      data => {\n        console.log(data)\n        if (data != null) {\n          this.lastUpdateDate = data['lastUpdate']\n          if (data['creationDate'] != undefined) {\n            this.creationDate = data['creationDate']\n          }\n        }\n      }\n    ) */\n\n    this.lexicalService.spinnerAction$.subscribe(\n      data => {\n        if (data == 'on') {\n          this.searchIconSpinner = true;\n        } else {\n          this.searchIconSpinner = false;\n        }\n      },\n      error => {\n\n      }\n    )\n\n    this.searchSubject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.queryTitle = data.query;\n        data.queryMode ? this.queryMode = 'everything' : this.queryMode = 'titleCreatorYear';\n        this.searchBibliography(this.queryTitle, this.queryMode);\n      }\n    )\n\n    //@ts-ignore\n    $(\"#biblioModalEtym\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.ui-modal');\n    //@ts-ignore\n    $('#biblioModalEtym').modal({ backdrop: 'static', keyboard: false })\n\n    $('.modal-backdrop').css('height', 'inherit');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data => {\n        this.memorySort = { field: this.sortField, direction: this.direction }\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        })\n\n\n        //@ts-ignore\n        $('#biblioModalEtym').modal('hide');\n        $('.modal-backdrop').remove();\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n\n\n  deleteEtymology() {\n    this.searchIconSpinner = true;\n    let etymId = this.object.etymology.etymologyInstanceName\n    this.lexicalService.deleteEtymology(etymId).subscribe(\n      data => {\n        this.searchIconSpinner = false;\n        this.lexicalService.deleteRequest(this.object);\n        this.lexicalEntryData = null;\n        this.isLexicalEntry = false;\n        this.object = null;\n        this.lexicalService.refreshLangTable();\n        this.lexicalService.refreshFilter({ request: true })\n        this.lexicalService.sendToCoreTab(null);\n        this.lexicalService.sendToRightTab(null);\n        this.biblioService.sendDataToBibliographyPanel(null);\n        this.toastr.success(etymId + ' deleted correctly', '', {\n          timeOut: 5000,\n        });\n      }, error => {\n        this.searchIconSpinner = false;\n        //this.lexicalService.deleteRequest(this.object);\n        //this.lexicalService.refreshLangTable();\n        //this.lexicalService.refreshFilter({request : true})\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n  }\n\n  addNewEtymology() {\n    this.searchIconSpinner = true;\n    this.object['request'] = 'etymology'\n\n\n    let parentNodeInstanceName = this.object.parentNodeInstanceName;\n    this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n    this.object['request'] = 'etymology'\n\n    console.log(this.object, parentNodeInstanceName)\n    this.lexicalService.createNewEtymology(parentNodeInstanceName).subscribe(\n      data => {\n        console.log(data)\n        data['label'] = 'Etymology of: ' + this.object['parentNodeLabel'];\n        if (data['creator'] == this.object.creator) {\n          data['flagAuthor'] = false;\n        } else {\n          data['flagAuthor'] = true;\n        }\n        this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data });\n        this.searchIconSpinner = false;\n        this.toastr.success(data['etymologyInstanceName'] + ' added correctly', '', {\n          timeOut: 5000,\n        });\n      }, error => {\n        console.log(error)\n        this.searchIconSpinner = false;\n      }\n    )\n\n  }\n\n  showBiblioModal() {\n    this.modal.show();\n  }\n\n  checkIfCreatorExist(item?) {\n    return item.some(element => element.creatorType === 'author')\n  }\n\n  searchBibliography(query?: string, queryMode?: any) {\n    this.start = 0;\n    this.selectedItem = null;\n    //@ts-ignore\n    $(\"#biblioModalEtym\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalEtym').modal({ backdrop: 'static', keyboard: false })\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    console.log(query, queryMode)\n    this.tableBody.nativeElement.scrollTop = 0;\n    if (this.queryTitle != '') {\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModalEtym').modal('hide');\n            $('.modal-backdrop').remove();\n          }, 100);\n\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    } else {\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          //@ts-ignore\n          $('#biblioModalEtym').modal('hide');\n          $('.modal-backdrop').remove();\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  triggerSearch(evt, query, queryMode) {\n    if (evt.key != 'Control' && evt.key != 'Shift' && evt.key != 'Alt') {\n      this.searchSubject.next({ query, queryMode })\n    }\n  }\n\n  onScrollDown() {\n    //@ts-ignore\n    $(\"#biblioModalEtym\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalEtym').modal({ backdrop: 'static', keyboard: false })\n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    this.start += 25;\n\n    if (this.queryTitle != '') {\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data)\n          //@ts-ignore\n          $('#biblioModalEtym').modal('hide');\n          $('.modal-backdrop').remove();\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n        }, error => {\n          console.log(error)\n        }\n      )\n    } else {\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n\n          //@ts-ignore\n          $('#biblioModalEtym').modal('hide');\n          $('.modal-backdrop').remove();\n        }, error => {\n          console.log(error)\n        }\n      );\n    }\n\n\n  }\n\n  selectItem(evt, i) {\n    /* console.log(evt, i); */\n    if (evt.shiftKey) {\n\n    }\n    this.bibliography.forEach(element => {\n      if (element.key == i.key) {\n        element.selected = !element.selected;\n        element.selected ? this.selectedItem = element : this.selectedItem = null;\n        return true;\n      } else {\n        element.selected = false;\n        return false;\n      }\n    })\n\n  }\n\n  sortBibliography(evt?, val?) {\n\n\n    if (this.memorySort.field == val) {\n      if (this.direction == 'asc') {\n        this.direction = 'desc'\n        this.memorySort.direction = 'desc';\n      } else {\n        this.direction = 'asc';\n        this.memorySort.direction = 'asc';\n      }\n    } else {\n      this.sortField = val;\n      this.direction = 'asc';\n      this.memorySort = { field: this.sortField, direction: this.direction };\n    }\n\n    //@ts-ignore\n    $(\"#biblioModalEtym\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalEtym').modal({ backdrop: 'static', keyboard: false })\n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    this.start = 0;\n    this.tableBody.nativeElement.scrollTop = 0;\n\n    this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n      data => {\n        console.log(data)\n        this.bibliography = [];\n        //@ts-ignore\n        $('#biblioModalEtym').modal('hide');\n        $('.modal-backdrop').remove();\n        data.forEach(element => {\n          this.bibliography.push(element)\n        });\n      }, error => {\n        console.log(error)\n      }\n    )\n\n  }\n\n  addNewForm() {\n    this.searchIconSpinner = true;\n    /* console.log(this.object) */\n    this.object['request'] = 'form'\n\n    let parentNodeInstanceName = this.object.parentNodeInstanceName;\n    this.object['request'] = 'form';\n    this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n    //console.log(this.object);\n    this.lexicalService.createNewForm(parentNodeInstanceName).subscribe(\n      data => {\n        if (data['creator'] == this.object.creator) {\n          data['flagAuthor'] = false;\n        } else {\n          data['flagAuthor'] = true;\n        }\n        this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data });\n        this.searchIconSpinner = false;\n        this.toastr.success(data['formInstanceName'] + ' added correctly', '', {\n          timeOut: 5000,\n        });\n      }, error => {\n        this.searchIconSpinner = false;\n        this.toastr.error('Something goes wrong', 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n\n\n  }\n\n  addNewSense() {\n    this.searchIconSpinner = true;\n    this.object['request'] = 'sense'\n\n    let parentNodeInstanceName = this.object.parentNodeInstanceName;\n    this.object['lexicalEntryInstanceName'] = parentNodeInstanceName\n    this.object['request'] = 'sense'\n    console.log(this.object);\n    this.lexicalService.createNewSense(parentNodeInstanceName).subscribe(\n      data => {\n        if (data['creator'] == this.object.creator) {\n          data['flagAuthor'] = false;\n        } else {\n          data['flagAuthor'] = true;\n        }\n        this.lexicalService.addSubElementRequest({ 'lex': this.object, 'data': data });\n        this.searchIconSpinner = false;\n        this.toastr.success(data['senseInstanceName'] + ' added correctly', '', {\n          timeOut: 5000,\n        });\n        //this.lexicalService.refreshLexEntryTree();\n      }, error => {\n        this.searchIconSpinner = false;\n        //this.lexicalService.refreshLexEntryTree();\n        this.toastr.error(error.error, 'Error', {\n          timeOut: 5000,\n        });\n      }\n    )\n\n  }\n\n  addBibliographyItem(item?) {\n    //@ts-ignore\n    $(\"#biblioModalEtym\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.ui-modal');\n    //@ts-ignore\n    $('#biblioModalEtym').modal({ backdrop: 'static', keyboard: false })\n\n    $('.modal-backdrop').css('height', 'inherit');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let instance = this.object.etymology.etymologyInstanceName;\n    console.log(this.object)\n\n    if (item != undefined) {\n\n      let id = item.data.key != undefined ? item.data.key : '';\n      let title = item.data.title != undefined ? item.data.title : '';\n      let author;\n\n      item.data.creators.forEach(element => {\n        if (element.creatorType == 'author') {\n          author = element.lastName + ' ' + element.firstName;\n          return true;\n        } else {\n          return false;\n        }\n      });\n      author = author != undefined ? author : ''\n      let date = item.data.date != undefined ? item.data.date : '';\n      let url = item.data.url != undefined ? item.data.url : ''\n      let seeAlsoLink = '';\n\n      let parameters = {\n        id: id,\n        title: title,\n        author: author,\n        date: date,\n        url: url,\n        seeAlsoLink: seeAlsoLink\n      }\n      console.log(instance, parameters)\n      this.lexicalService.addBibliographyData(instance, parameters).subscribe(\n        data => {\n          //console.log(data);\n\n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModalEtym').modal('hide');\n            $('.modal-backdrop').remove();\n            this.toastr.success('Item added, check bibliography panel', '', {\n              timeOut: 5000,\n            });\n            this.biblioService.triggerPanel(data)\n            setTimeout(() => {\n              this.modal.hide();\n            }, 10);\n          }, 300);\n          this.biblioService.sendDataToBibliographyPanel(data);\n        }, error => {\n          console.log(error)\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModalEtym').modal('hide');\n            $('.modal-backdrop').remove();\n          }, 300);\n\n        }\n      )\n    }\n\n  }\n\n  onCloseModal() {\n    this.selectedItem = null;\n    this.start = 0;\n    this.sortField = 'title';\n    this.direction = 'asc';\n    this.tableBody.nativeElement.scrollTop = 0;\n    this.memorySort = { field: this.sortField, direction: this.direction }\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data => {\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        })\n\n\n      }, error => {\n        console.log(error)\n      }\n    );\n  }\n}\n","\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\"> <!-- [hidden]=\"object == null\" -->\n    <div class=\"card my-2\">\n        <div class=\"card-header p-0\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\" *ngIf=\"object != null\"> <!-- *ngIf=\"object != null\" -->\n                        CREATED BY {{creator}} ON {{creationDate | date :'dd/MM/yyyy hh:mm:ss'}}\n                    </span>\n                </div>\n                <div>\n                    <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                    <button class=\"btn btn-link\" (click)=\"deleteEtymology()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                </div>\n            </h5>\n        </div>\n        <div #expander [@slideInOut]=\"exp_trig\" class=\"card-body etym-tab-body\">\n            <div id=\"etymologyTabModal\" class=\"modal fade\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-body\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <app-etymology-form [etymData]=\"etymologyData\"></app-etymology-form>\n\n        </div>\n        <div class=\"card-footer text-muted p-0\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <div > <!-- *ngIf=\"object != null\" -->\n                    <span class=\"pl-2\">LAST UPDATE ON {{lastUpdateDate | date :'dd/MM/yyyy hh:mm:ss'}}</span>\n                </div>\n                <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <button class=\"dropdown-item\" title=\"add new form\" (click)=\"addNewForm()\">Add Form</button>\n                        <button class=\"dropdown-item\" (click)=\"addNewSense()\">Add Sense</button>\n                        <button class=\"dropdown-item\" (click)=\"addNewEtymology()\">Add Etymology</button>\n                        <button class=\"dropdown-item\" (click)=\"showBiblioModal()\">Add Bibliography</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<app-modal #addBibliography class=\"biblio_modal\" [backdrop]=\"false\" [inViewport]=\"true\" (closeModal)=\"onCloseModal()\">\n\n    <ng-container class=\"app-modal-header\">\n        <img src=\"../../../../../../assets/images/zotero_logo.png\">\n        <span class=\"ml-2 biblio-header-title\">Library: PRIN Italia Antica</span>\n    </ng-container>\n\n    <ng-container class=\"app-modal-body\">\n        <!-- SEARCH BAR -->\n        <div class=\"w-25 pt-1 pb-1\">\n            <div class=\"input-group mb-3\" *ngIf=\"{switch : false}; let variable\">\n                <div class=\"input-group-prepend\">\n                    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-search\"></i></button>\n                    <div class=\"dropdown-menu\">\n                        <a [class.disable_click_fire]=\"!variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = false; searchBibliography(searchBiblio.value, variable.switch);\">Normal</a>\n                        <a [class.disable_click_fire]=\"variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = true; searchBibliography(searchBiblio.value, variable.switch);\">Full\n                            Text</a>\n                    </div>\n                </div>\n                <input #searchBiblio (keyup)=\"triggerSearch($event, searchBiblio.value, variable.switch)\" type=\"text\"\n                    class=\"form-control\" aria-label=\"Text input with dropdown button\"\n                    [placeholder]=\"variable.switch ?'Title, creator, year + Full Text' : 'Title, creator, year'\"\n                    style=\"font-size: 12px;\">\n            </div>\n\n        </div>\n        <!-- {{'start: '+start + ' sortField: '+ sortField + ' direction: '+ direction + ' queryTitle: '+ queryTitle + ' queryMode: '+ queryMode}} -->\n\n        <!-- SKELETON CONTAINER -->\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-8 pl-0\">\n\n\n                    <!-- TABLE -->\n                    <div class=\"table-responsive table-body\">\n                        <div id=\"biblioModalEtym\" class=\"modal fade\" role=\"dialog\">\n                            <div class=\"modal-dialog\">\n\n                                <!-- Modal content-->\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-body\">\n                                        <div class=\"d-flex justify-content-center\">\n                                            <div class=\"spinner-border\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                        <table class=\"table table-striped table-hover\" [hidden]=\"bibliography.length == 0\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width: 50%; cursor: pointer;\" (click)=\"sortBibliography($event, 'title')\">\n                                        <span>Title</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'title'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'title'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 30%; cursor: pointer;\" (click)=\"sortBibliography($event, 'creator')\">\n                                        <span>Creator</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'creator'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'creator'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 20%; cursor: pointer;\" (click)=\"sortBibliography($event, 'date')\">\n                                        <span>Date</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'date'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'date'\"></i>\n                                        </span>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody #table_body infiniteScroll [infiniteScrollDistance]=\"0.4\"\n                                [infiniteScrollThrottle]=\"150\" [scrollWindow]=\"false\" (scrolled)=\"onScrollDown()\">\n\n\n                                <tr *ngFor=\"let item of bibliography\" (click)=\"selectItem($event, item)\"\n                                    [ngClass]=\"item?.selected ? 'selected' : ''\" style=\"cursor: pointer;\">\n                                    <td style=\"width: 50%\">\n                                        <span *ngIf=\"item.data.itemType == 'book'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'bookSection'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book-open\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'journalArticle'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-newspaper\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'note'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-clipboard\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'attachment'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-paperclip\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'conferencePaper'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-chalkboard-teacher\"></i>\n                                        </span>\n                                        <span\n                                            *ngIf=\"item.data.title != undefined && item.data.title != ''\">{{item.data.title |titlecase}}</span>\n                                        <span *ngIf=\"item.data.title == undefined || item.data.title == ''\"\n                                            class=\"font-italic\">No title</span>\n                                    </td>\n                                    <td style=\"width: 30%\">\n                                        <span *ngIf=\"item.data.creators != undefined\">\n                                            <span *ngFor=\"let author of item.data.creators; let i = index\">\n                                                <span *ngIf=\"author.creatorType == 'author'\">\n                                                    {{author.lastName | titlecase}} {{author.firstName | titlecase}} \n                                                </span>\n                                            </span>\n                                            <span *ngIf=\"!checkIfCreatorExist(item.data.creators)\"\n                                                class=\"font-italic\">No data</span>\n                                        </span>\n                                        <span *ngIf=\"item.data.creators == undefined\" class=\"font-italic\">No data</span>\n                                    </td>\n                                    <td style=\"width: 20%\">\n                                        <span *ngIf=\"item.data.date != undefined && item.data.date != ''\">\n                                            {{item.data.date | titlecase}}\n                                        </span>\n                                        <span *ngIf=\"item.data.date == undefined || item.data.date == ''\"\n                                            class=\"font-italic\">\n                                            No info\n                                        </span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <p class=\"font-italic text-muted no-results\" *ngIf=\"bibliography.length == 0\">No results</p>\n                    </div>\n\n\n                </div>\n                <div class=\"col-md-4\" style=\"font-size: 14px;\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 item-description\"\n                            style=\"height: calc(100vh - 37rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"selectedItem\">\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.itemType != '' && selectedItem.data.itemType != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Item type\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.itemType | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.title != '' && selectedItem.data.title != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Title\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.title | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0 && checkIfCreatorExist(selectedItem.data.creators)\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Author\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let author of selectedItem.data.creators\">\n                                            <span *ngIf=\"author.creatorType == 'author'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{author.firstName | titlecase}} {{author.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Editor\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let editor of selectedItem.data.creators\">\n                                            <span *ngIf=\"editor.creatorType == 'editor'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{editor.firstName | titlecase}} {{editor.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publicationTitle != '' && selectedItem.data.publicationTitle != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publication\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publicationTitle | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publisher != '' && selectedItem.data.publisher != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publisher\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publisher | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.issue != '' && selectedItem.data.issue != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Issue\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.issue | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.pages != '' && selectedItem.data.pages != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Pages\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.pages | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.place != '' && selectedItem.data.place != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Place\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.place | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.date != '' && selectedItem.data.pages != date\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Date\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.date | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.journalAbbreviation != '' && selectedItem.data.journalAbbreviation != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Journal Abbr\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.journalAbbreviation | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.DOI != '' && selectedItem.data.DOI != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{'https://doi.org/'+selectedItem.data.DOI}}\"\n                                                target=\"_blank\">DOI <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.DOI | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.ISSN != '' && selectedItem.data.ISSN != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            ISSN\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.ISSN | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.url != '' && selectedItem.data.url != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{selectedItem.data.url}}\" target=\"_blank\">URL\n                                                <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.url}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.accessDate != '' && selectedItem.data.accessDate != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Accessed\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.accessDate}}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\" style=\"height: calc(40vh - 10rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote == '' || selectedItem.data.abstractNote == undefined)\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No info\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote != '' && selectedItem.data.abstractNote != undefined)\">\n                                <p class=\"text-muted font-weight-bold\">\n                                    Abstract\n                                </p>\n                                <p class=\"font-weight-normal\">\n                                    {{selectedItem.data.abstractNote}}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12 d-flex justify-content-end\">\n                    <button class=\"btn btn-secondary w-25\" [disabled]=\"!selectedItem\" (click)=\"addBibliographyItem(selectedItem)\">Save</button>\n                    <!-- <button class=\"btn btn-secondary\" (click)=\"addBibliography.hide()\">Close</button> -->\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container class=\"app-modal-footer\">\n    </ng-container>\n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-text-detail',\n  templateUrl: './text-detail.component.html',\n  styleUrls: ['./text-detail.component.scss']\n})\nexport class TextDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div id=\"epigraphy-accordion\">\n\n<app-epigraphy-detail></app-epigraphy-detail>\n<app-edit-detail></app-edit-detail>\n\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  \n  constructor(\n    protected readonly router: Router,\n    protected readonly keycloak: KeycloakService\n  ) {\n    super(router, keycloak);\n  }\n  \n  async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    \n    if (!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + '/LexO-angular/'+ state.url, /* aggiungere '/epilexo/' in produzione */\n      });\n    }\n\n    const requiredRoles = route.data.roles;\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    } else {\n      if (!this.roles || this.roles.length === 0) {\n        return false;\n      }\n    }\n    if (!requiredRoles.every((role) => this.roles.includes(role))) {\n      this.router.navigate(['/']);\n    }\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n}","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport * as Recogito from '@recogito/recogito-js';\nimport { Subscription } from 'rxjs';\nimport { DocumentSystemService } from 'src/app/services/document-system/document-system.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\n\n\n@Component({\n  selector: 'app-epigraphy-tab',\n  templateUrl: './epigraphy-tab.component.html',\n  styleUrls: ['./epigraphy-tab.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        height: 'calc(100vh - 15rem)',\n        \n      })),\n      state('out', style({\n        height: 'calc(50vh - 10rem)',\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ])\n  ]\n})\n\nexport class EpigraphyTabComponent implements OnInit, OnDestroy {\n  exp_trig = '';\n  name: any;\n  revisor:any;\n  object : any;\n  epigraphyData: any;\n\n  subscription: Subscription;\n  @ViewChild('expanderEpigraphy') expander_body: ElementRef;\n\n  constructor(private documentService: DocumentSystemService, private expand : ExpanderService, private rend: Renderer2) { }\n\n  ngOnInit(): void {\n\n    this.subscription = this.documentService.epigraphyData$.subscribe(\n      object => {\n        if(this.object != object){\n          this.epigraphyData = null; \n        }\n\n        console.log(object)\n\n        if(object!=null){\n          this.object = object\n\n          this.epigraphyData = this.object;\n          if(this.object != null){\n            setTimeout(() => {\n              //@ts-ignore\n              $('#epigraphyTabModal').modal('hide');\n              $('.modal-backdrop').remove();\n              var timer = setInterval((val)=>{                 \n                try{\n                    //@ts-ignore\n                    $('#epigraphyTabModal').modal('hide');\n                    if(!$('#epigraphyTabModal').is(':visible')){\n                      clearInterval(timer)\n                    }\n                    \n                }catch(e){\n                    console.log(e)\n                }    \n              }, 10)\n            }, 500);\n            /* this.name = this.object.name; */\n  /*           this.revisor = this.object.revisor;\n   */          \n            \n          }\n        }else{\n          this.epigraphyData = null;\n        }\n        \n      },error => {},\n     \n    );\n    \n    /* console.log('My Content: ' + document.getElementById('pippo'));\n\n    var r = Recogito.init({\n      content: document.getElementById('pippo'), // Element id or DOM node to attach to\n      locale: 'auto',\n      widgets: [\n        //I intend to include this plugin this way.\n        //{ widget: Recogito.CommentsMention, userSuggestions: users },\n        { widget: 'COMMENT' },\n        { widget: 'TAG', vocabulary: ['Place', 'Person', 'Event', 'Organization', 'Animal'] }\n      ],\n      //relationVocabulary: ['isRelated', 'isPartOf', 'isSameAs ']\n    });\n\n    // Add an event handler  \n    r.on('createAnnotation', function (annotation) {\n      console.log('Annotation Added: ' + JSON.stringify(annotation))\n    });\n\n    r.on('selectAnnotation', function(a) {\n      console.log('selected', a);\n    });\n\n    r.on('updateAnnotation', function(annotation, previous) {\n      console.log('updated', previous, 'with', annotation);\n    });\n\n    // Switch annotation mode (annotation/relationships)\n    var annotationMode = 'ANNOTATION'; // or 'RELATIONS'\n\n    var toggleModeBtn = document.getElementById('toggle-mode');\n    toggleModeBtn.addEventListener('click', function() {\n      if (annotationMode === 'ANNOTATION') {\n        toggleModeBtn.innerHTML = 'MODE: RELATIONS';\n        annotationMode = 'RELATIONS';\n      } else  {\n        toggleModeBtn.innerHTML = 'MODE: ANNOTATION';\n        annotationMode = 'ANNOTATION';\n      }\n\n      r.setMode(annotationMode);\n    }); */\n\n    this.expand.expEpigraphy$.subscribe(\n      trigger => {\n        setTimeout(() => {\n         // console.log(\"trigger epigraphy-tab: \", trigger)\n          if(trigger){\n            let isEditExpanded = this.expand.isEditTabExpanded();\n            let isEpigraphyExpanded = this.expand.isEpigraphyTabExpanded();\n         //   console.log(isEditExpanded, isEpigraphyExpanded)\n            \n            if(!isEditExpanded){\n              \n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(100vh - 15rem)')\n              this.exp_trig = 'in';\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(100vh - 15rem)');\n            }else{\n              \n              this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)');\n              this.exp_trig = 'in';\n              this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n              \n            }\n            \n            \n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)');\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n\n    this.expand.expEdit$.subscribe(\n      trigger => {\n        setTimeout(() => {\n          if(trigger){\n            this.exp_trig = 'in';\n            this.rend.setStyle(this.expander_body.nativeElement, 'height', 'calc(50vh - 10rem)')\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)')\n          }else if(trigger==null){\n            return;\n          }else{\n            this.rend.setStyle(this.expander_body.nativeElement, 'max-height', 'calc(50vh - 10rem)');\n            this.exp_trig = 'out';\n          }\n        }, 100);\n        \n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","\n\n\n\n<div id=\"cardsAccordion\" class=\"accordion\" [hidden]=\"object == null\">\n    <div class=\"card my-2\">\n        <div class=\"card-header\">\n            <h5 class=\"mb-0 w-100 d-flex justify-content-between align-self-center\">\n                <div>\n                    <span class=\"btn\" *ngIf=\"object != null\">\n                        <!-- <span *ngIf=\"isLexicalEntry\">\n                            Lexical Entry\n                        </span>\n                        <span *ngIf=\"isSense\">\n                            Sense\n                        </span>\n                        <span *ngIf=\"isForm\">\n                            Form\n                        </span> -->\n                        <!-- CREATED BY {{creator}} ON {{creationDate | date :'dd/MM/yyyy hh:mm:ss'}} -->\n\t\t\t\t\t\t{{name}}\n                    </span>\n                </div>\n                <div>\n                   <!--  <div class=\"spinner-border spinner-border-sm m-1\" role=\"status\" *ngIf=\"searchIconSpinner\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div> -->\n                    <!-- <button class=\"btn btn-link\" *ngIf=\"isLexicalEntry\" (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" *ngIf=\"isForm\" title=\"delete form\" (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                    <button class=\"btn btn-link\" *ngIf=\"isSense\" title=\"delete sense\"\n                        (click)=\"removeElementModal.show()\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button> -->\n                    <!-- <button class=\"btn btn-link\" (click)=\"changeStatus()\" *ngIf=\"isLexicalEntry\">\n                        <i class=\"fa fa-circle\" [hidden]=\"lock!=0\" style=\"color: red\"></i>\n                        <i class=\"fa fa-circle\" [hidden]=\"lock!=1\" style=\"color: yellow\"></i>\n                        <i class=\"fa fa-circle locked-tooltip\" [hidden]=\"lock!=2\" data-toggle=\"tooltip\"\n                            data-placement=\"bottom\" data-html=\"true\" title=\"Locked tooltip\" style=\"color:green;\"></i>\n                    </button> -->\n                </div>\n            </h5>\n        </div>\n        <div #expanderEpigraphy [@slideInOut]=\"exp_trig\" class=\"card-body epigraphy-tab-body\">\n            \n            <div id=\"epigraphyTabModal\" class=\"modal fade\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-body\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\t\t\t<app-epigraphy-form [epiData]=\"epigraphyData\"></app-epigraphy-form>\n            <!-- <app-lexical-entry-core-form [lexData]=\"lexicalEntryData\" *ngIf=\"isLexicalEntry\">\n            </app-lexical-entry-core-form>\n            <app-form-core-form [formData]=\"formData\" *ngIf=\"isForm\"></app-form-core-form>\n            <app-sense-core-form [senseData]=\"senseData\" *ngIf=\"isSense\"></app-sense-core-form>\n            <app-lexical-concept-form [lexicalConceptData]=\"lexicalConceptData\" *ngIf=\"isLexicalConcept\">\n            </app-lexical-concept-form> -->\n        </div>\n        <div class=\"card-footer text-muted\">\n            <div class=\"w-100 d-flex justify-content-between align-items-center\">\n                <!-- <div *ngIf=\"object != null\">\n                    <span>LAST UPDATE ON {{lastUpdateDate | date :'dd/MM/yyyy hh:mm:ss'}}</span>\n                </div> -->\n                <!-- <div class=\"btn-group dropup dropleft\">\n                    <button class=\"btn btn-success\" type=\"button\" id=\"dropdownAddLemma\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fas fa-plus\"></i> </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownAddLemma\">\n                        <button class=\"dropdown-item\" title=\"add new form\" (click)=\"addNewForm()\">Add Form</button>\n                        <button class=\"dropdown-item\" (click)=\"addNewSense()\">Add Sense</button>\n                        <button class=\"dropdown-item\" (click)=\"addNewEtymology()\">Add Etymology</button>\n                        <button class=\"dropdown-item\" (click)=\"showBiblioModal()\">Add Bibliography</button>\n                    </div>\n                </div> -->\n            </div>\n        </div>\n    </div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<p>page-not-found works!</p>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-see-also',\n  templateUrl: './see-also.component.html',\n  styleUrls: ['./see-also.component.scss']\n})\nexport class SeeAlsoComponent implements OnInit {\n\n  @Input() seeAlsoData: any[] | any;\n\n  private subject: Subject<any> = new Subject();\n  private subject_input: Subject<any> = new Subject();\n\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n\n  isSense;\n  isForm;\n  isLexEntry;\n\n  searchResults: [];\n  memorySeeAlso = [];\n  filterLoading = false;\n\n  seeAlsoForm = new FormGroup({\n    seeAlsoArray: new FormArray([this.createSeeAlsoEntry()])\n  })\n\n  seeAlsoArray: FormArray;\n\n  constructor(private formBuilder: FormBuilder, private lexicalService: LexicalEntriesService, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    this.seeAlsoForm = this.formBuilder.group({\n      seeAlsoArray: this.formBuilder.array([])\n    })\n\n    this.onChanges();\n    /* //console.log(this.seeAlsoForm) */\n    this.subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        console.log(data)\n        this.onSearchFilter(data)\n      }\n    )\n\n    this.subject_input.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeSeeAlsoByInput(data['value'], data['i'])\n      }\n    )\n    this.triggerTooltip();\n  }\n\n\n  triggerTooltip() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.see-also-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if (changes.seeAlsoData.currentValue != null) {\n        this.object = changes.seeAlsoData.currentValue;\n        this.seeAlsoArray = this.seeAlsoForm.get('seeAlsoArray') as FormArray;\n        this.seeAlsoArray.clear();\n        this.memorySeeAlso = [];\n\n        //console.log(this.object)\n\n        this.object.array.forEach(element => {\n          if(element.label != ''){\n            this.addSeeAlsoEntry(element.label, element.inferred, element.lexicalEntityInstanceName, element.linkType)\n            this.memorySeeAlso.push(element.lexicalEntityInstanceName)\n          }else{\n            this.addSeeAlsoEntry(element.lexicalEntity, element.inferred, element.lexicalEntityInstanceName, element.linkType)\n            this.memorySeeAlso.push(element.lexicalEntity)\n          }\n          \n          \n        });\n\n        if (this.object.lexicalEntryInstanceName != undefined) {\n          this.isLexEntry = true;\n          this.isForm = false;\n          this.isSense = false;\n        } else if (this.object.formInstanceName != undefined) {\n          this.isLexEntry = false;\n          this.isForm = true;\n          this.isSense = false;\n        } else if (this.object.senseInstanceName != undefined) {\n          this.isLexEntry = false;\n          this.isForm = false;\n          this.isSense = true;\n        }\n\n      } else {\n        this.object = null;\n      }\n    }, 10);\n\n  }\n\n  onChangeSeeAlsoByInput(value, index) {\n\n    if(value.trim() != \"\"){\n      var selectedValues = value;\n      var lexicalElementId = '';\n      if (this.object.lexicalEntryInstanceName != undefined) {\n        lexicalElementId = this.object.lexicalEntryInstanceName;\n      } else if (this.object.formInstanceName != undefined) {\n        lexicalElementId = this.object.formInstanceName;\n      } else if (this.object.senseInstanceName != undefined) {\n        lexicalElementId = this.object.senseInstanceName;\n      }else if (this.object.etymologyInstanceName != undefined) {\n        lexicalElementId = this.object.etymologyInstanceName;\n      }\n\n      console.log(this.object)\n  \n      if (this.memorySeeAlso[index] == \"\" || this.memorySeeAlso[index] == undefined) {\n        let parameters = {\n          type: \"reference\",\n          relation: \"seeAlso\",\n          value: selectedValues\n        }\n        //console.log(parameters)\n        this.lexicalService.updateGenericRelation(lexicalElementId, parameters).subscribe(\n          data => {\n            //console.log(data)\n          }, error => {\n           console.log(error)\n           if(typeof error.error != 'object')\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n            if(error.statusText == 'OK'){\n              this.memorySeeAlso.push(selectedValues)\n              this.toastr.success('SeeAlso updated', '', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      } else {\n        let oldValue = this.memorySeeAlso[index];\n        let parameters = {\n          type: \"reference\",\n          relation: \"seeAlso\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n        console.log(parameters)\n        this.lexicalService.updateGenericRelation(lexicalElementId, parameters).subscribe(\n          data => {\n            //console.log(data)\n          }, error => {\n            console.log(error)\n            \n            if(error.status == 200){\n              this.memorySeeAlso.push(selectedValues)\n              this.toastr.success('SeeAlso updated', '', {\n                timeOut: 5000,\n              });\n            }else{\n              this.toastr.error(error.error, 'Error', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      }\n    }\n    \n\n  }\n\n  onChangeSeeAlso(seeAlso, index) {\n    //console.log(seeAlso.selectedItems)\n    if (seeAlso.selectedItems.length != 0) {\n      var selectedValues = seeAlso.selectedItems[0].value.lexicalEntryInstanceName;\n      var lexicalElementId = '';\n      if (this.object.lexicalEntryInstanceName != undefined) {\n        lexicalElementId = this.object.lexicalEntryInstanceName;\n      } else if (this.object.formInstanceName != undefined) {\n        lexicalElementId = this.object.formInstanceName;\n      } else if (this.object.senseInstanceName != undefined) {\n        lexicalElementId = this.object.senseInstanceName;\n      }else if (this.object.etymologyInstanceName != undefined) {\n        lexicalElementId = this.object.etymologyInstanceName;\n      }\n\n      if (this.memorySeeAlso[index] == undefined) {\n        let parameters = {\n          type: \"reference\",\n          relation: \"seeAlso\",\n          value: selectedValues\n        }\n        console.log(parameters)\n        this.lexicalService.updateGenericRelation(lexicalElementId, parameters).subscribe(\n          data => {\n            console.log(data)\n            this.toastr.success('SeeAlso updated', '', {\n              timeOut: 5000,\n            });\n            this.lexicalService.refreshLinkCounter('+1')\n          }, error => {\n           console.log(error);\n           if(error.status == 200){\n              this.memorySeeAlso[index] = selectedValues\n              this.lexicalService.refreshLinkCounter('+1')\n              this.toastr.success('SeeAlso updated', '', {\n                timeOut: 5000,\n              });\n            }else{\n              this.toastr.error(error.error, 'Error', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      } else {\n        let oldValue = this.memorySeeAlso[index];\n        let parameters = {\n          type: \"reference\",\n          relation: \"seeAlso\",\n          value: selectedValues,\n          currentValue: oldValue\n        }\n        console.log(parameters)\n        this.lexicalService.updateGenericRelation(lexicalElementId, parameters).subscribe(\n          data => {\n            console.log(data)\n            this.lexicalService.refreshLinkCounter('+1')\n            this.toastr.success('SeeAlso updated', '', {\n              timeOut: 5000,\n            });\n          }, error => {\n            console.log(error)\n            if(error.statusText == 'OK'){\n              this.memorySeeAlso[index] = selectedValues\n              this.lexicalService.refreshLinkCounter('+1')\n              this.toastr.success('SeeAlso updated', '', {\n                timeOut: 5000,\n              });\n            }\n          }\n        )\n      }\n\n    }\n\n\n  }\n\n  deleteData() {\n    this.searchResults = [];\n  }\n\n\n\n  onSearchFilter(data) {\n    this.filterLoading = true;\n    this.searchResults = [];\n    console.log(this.object)\n    if (this.object.lexicalEntryInstanceName != undefined) {\n      let parameters = {\n        text: data,\n        searchMode: \"startsWith\",\n        type: \"\",\n        pos: \"\",\n        formType: \"entry\",\n        author: \"\",\n        lang: \"\",\n        status: \"\",\n        offset: 0,\n        limit: 500\n      }\n      //console.log(data.length)\n      \n      this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n        data => {\n          console.log(data)\n          this.searchResults = data['list']\n          this.filterLoading = false;\n        }, error => {\n          //console.log(error)\n          this.filterLoading = false;\n        }\n      )\n      \n    } else if (this.object.formInstanceName != undefined) {\n      let lexId = this.object.parentInstanceName;\n      let parameters = {\n        text: data,\n        searchMode: \"startsWith\",\n        representationType: \"writtenRep\",\n        author: \"\",\n        offset: 0,\n        limit: 500\n      }\n      \n      this.lexicalService.getFormList(parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.searchResults = data['list']\n          this.filterLoading = false;\n        }, error => {\n          //console.log(error)\n          this.filterLoading = false;\n        }\n      )\n    } else if (this.object.senseInstanceName != undefined) {\n\n      let parameters = {\n        text: data,\n        searchMode: \"startsWith\",\n        type: \"\",\n        pos: \"\",\n        formType: \"entry\",\n        author: \"\",\n        lang: \"\",\n        status: \"\",\n        offset: 0,\n        limit: 500\n      }\n\n      /* this.lexicalService.getLexicalSensesList(parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.searchResults = data\n          this.filterLoading = false;\n        }, error => {\n          //console.log(error)\n          this.filterLoading = false;\n        }\n      ) */\n    } else if (this.object.etymologyInstanceName != undefined) {\n\n      let parameters = {\n        text: data,\n        searchMode: \"startsWith\",\n        type: \"etymon\",\n        pos: \"\",\n        formType: \"entry\",\n        author: \"\",\n        lang: \"\",\n        status: \"\",\n        offset: 0,\n        limit: 500\n      }\n\n      this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n        data => {\n          console.log(data)\n          this.searchResults = data['list']\n          this.filterLoading = false;\n        }, error => {\n          console.log(error)\n          this.filterLoading = false;\n        }\n      )\n    } else {\n      this.filterLoading = false;\n    }\n    //console.log(data)\n\n  }\n\n  triggerSeeAlsoInput(evt, i) {\n    if (evt.key != 'Control' && evt.key != 'Shift' && evt.key != 'Alt') {\n      let value = evt.target.value;\n      this.subject_input.next({ value, i })\n    }\n  }\n\n  triggerSeeAlso(evt) {\n    if (evt.target != undefined) {\n      this.subject.next(evt.target.value)\n    }\n\n  }\n  onChanges(): void {\n    this.seeAlsoForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      //console.log(searchParams)\n    })\n  }\n\n  createSeeAlsoEntry(e?, i?, le?, lt?) {\n    if (e == undefined) {\n      return this.formBuilder.group({\n        entity: null,\n        inferred: false,\n        lexical_entity: null,\n        link_type : 'internal'\n      })\n    } else {\n      return this.formBuilder.group({\n        entity: e,\n        inferred: i,\n        lexical_entity: le,\n        link_type : lt\n      })\n    }\n\n  }\n\n  addSeeAlsoEntry(e?, i?, le?, lt?) {\n    this.seeAlsoArray = this.seeAlsoForm.get('seeAlsoArray') as FormArray;\n\n    if (e == undefined) {\n      this.seeAlsoArray.push(this.createSeeAlsoEntry());\n    } else {\n      this.seeAlsoArray.push(this.createSeeAlsoEntry(e, i, le, lt));\n    }\n\n    \n    this.triggerTooltip();\n  }\n\n  removeElement(index) {\n    this.seeAlsoArray = this.seeAlsoForm.get('seeAlsoArray') as FormArray;\n\n    let lexical_entity = this.seeAlsoArray.at(index).get('lexical_entity').value;\n    //console.log('Lexical Entity: '+lexical_entity)\n    if(lexical_entity == '' || lexical_entity == null){\n      lexical_entity = this.seeAlsoArray.at(index).get('entity').value;\n      //console.log('Entity: '+lexical_entity)\n    }\n\n    if (this.object.lexicalEntryInstanceName != undefined) {\n\n      let lexId = this.object.lexicalEntryInstanceName;\n\n      let parameters = {\n        relation: 'seeAlso',\n        value: lexical_entity\n      }\n\n      //console.log(parameters)\n      //console.log(index)\n      this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.updateCoreCard(this.object)\n          this.toastr.success('SeeAlso deleted', '', {\n            timeOut: 5000,\n          });\n          this.lexicalService.refreshLinkCounter('-11')\n        }, error => {\n          console.log(error)\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n\n          this.lexicalService.refreshLinkCounter('-1')\n        }\n      )\n    } else if (this.object.formInstanceName != undefined) {\n      let formId = this.object.formInstanceName;\n\n      let parameters = {\n        relation: 'seeAlso',\n        value: lexical_entity\n      }\n\n      //console.log(parameters)\n\n      this.lexicalService.deleteLinguisticRelation(formId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.refreshLinkCounter('-1')\n          this.lexicalService.updateCoreCard(this.object)\n          this.toastr.success('SeeAlso updated', '', {\n            timeOut: 5000,\n          });\n        }, error => {\n          //console.log(error)\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        }\n      )\n\n    } else if (this.object.senseInstanceName != undefined) {\n      let senseId = this.object.senseInstanceName;\n\n      let parameters = {\n        type: 'morphology',\n        relation: 'seeAlso',\n        value: lexical_entity\n      }\n\n      //console.log(parameters)\n\n      this.lexicalService.deleteLinguisticRelation(senseId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.refreshLinkCounter('-1')\n          this.lexicalService.updateCoreCard(this.object)\n          this.toastr.success('SeeAlso updated', '', {\n            timeOut: 5000,\n          });\n        }, error => {\n          console.log(error)\n        }\n      )\n    } else if (this.object.etymologyInstanceName != undefined) {\n      let etymId = this.object.etymologyInstanceName;\n      this.lexicalService.refreshLinkCounter('-1')\n\n      let parameters = {\n        type: 'morphology',\n        relation: 'seeAlso',\n        value: lexical_entity\n      }\n\n      //console.log(parameters)\n\n      this.lexicalService.deleteLinguisticRelation(etymId, parameters).subscribe(\n        data => {\n          //console.log(data)\n          this.lexicalService.refreshLinkCounter('-1')\n          this.lexicalService.updateCoreCard(this.object)\n          this.toastr.success('SeeAlso updated', '', {\n            timeOut: 5000,\n          });\n        }, error => {\n          console.log(error)\n        }\n      )\n    }\n    this.memorySeeAlso.splice(index, 1)\n    this.seeAlsoArray.removeAt(index);\n\n  }\n\n}\n","\n\n<form [formGroup]=\"seeAlsoForm\">\n    <div class=\"form-group row mt-3\">\n        <div class=\"input-group col-sm-12\">\n            <div class=\"card\">\n                <span class=\"text-id\">SEE ALSO</span>\n                <a (click)=\"addSeeAlsoEntry()\" class=\"pointer\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n\n                    <div formArrayName=\"seeAlsoArray\" class=\"mt-3\">\n\n                        <div *ngFor=\"let seeAlso of seeAlsoForm.get('seeAlsoArray')['controls']; let i = index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"d-flex\">\n                                    <div class=\"form-group row ml-2  mr-2 w-100\" *ngIf=\"{switch : seeAlso.get('link_type').value != 'internal'}; let variable\">\n                                        <div class=\"input-group\" *ngIf=\"{boolean : seeAlso.get('inferred').value}; let inf\">\n                                            \n                                            <ng-select #seeAlso formControlName=\"entity\" name=\"entity\"\n                                                (change)=\"onChangeSeeAlso(seeAlso, i)\" (focus)=\"deleteData()\"\n                                                (keyup)=\"triggerSeeAlso($event)\" formControlName=\"entity\" name=\"entity\"\n                                                bindValue=\"label\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                bindLabel=\"label\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                *ngIf=\"!variable.switch && !isSense\" [readonly]=\"inf.boolean\">\n                                            </ng-select>\n                                            <ng-select #seeAlso formControlName=\"entity\" name=\"entity\"\n                                                (change)=\"onChangeSeeAlso(seeAlso, i)\" (focus)=\"deleteData()\"\n                                                (keyup)=\"triggerSeeAlso($event)\" formControlName=\"entity\" name=\"entity\"\n                                                bindValue=\"definition\" class=\"resizeNgSelect\" [items]=\"searchResults\"\n                                                bindLabel=\"definition\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                *ngIf=\"!variable.switch && isSense\" [readonly]=\"inf.boolean\">\n                                            </ng-select>\n                                            <input formControlName=\"entity\" name=\"entity\" type=\"text\"\n                                                class=\"form-control \" (keyup)=\"triggerSeeAlsoInput($event, i)\"\n                                                placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n\n                                            <div class=\"input-group-append\" *ngIf=\"!inf.boolean\">\n                                                <div class=\"input-group-append ml-2 form-check\">\n                                                    <input class=\"form-check-input see-also-tooltip\" type=\"checkbox\"\n                                                        (change)=\"variable.switch=!variable.switch; variable.switch ? seeAlso.get('link_type').value = 'external' : seeAlso.get('link_type').value = 'internal'\"\n                                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                                        data-trigger=\"hover\"\n                                                        title=\"Clicca per inserire un URI manualmente\"\n                                                        [checked]=\"variable.switch\">\n                                                    <label class=\"form-check-label\" for=\"extCheck\"></label>\n                                                </div>\n                                                <!-- <div class=\"input-group-append ml-2\">\n                                                    <button class=\"btn btn-primary\" type=\"button\"\n                                                        (click)=\"modalRoot2.show()\"><i\n                                                            class=\"fa fa-external-link-alt\"></i></button>\n                                                    <app-modal #modalRoot2 class=\"modal-demo\" [maximizable]=\"true\"\n                                                        [backdrop]=\"false\">\n                                                        <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                                        <ng-container class=\"app-modal-body\">\n                                                            <h3>MODAL DIALOG</h3>\n                                                            <p>Lorem Ipsum is simply dummy text of the printing and\n                                                                typesetting\n                                                                industry.\n                                                                Lorem Ipsum has been the industry’s standard dummy text\n                                                                ever\n                                                                since the 1500s.</p>\n                                                        </ng-container>\n                                                        <ng-container class=\"app-modal-footer\">\n                                                            <button type=\"button\" class=\"button button3\"\n                                                                (click)=\"modalRoot2.hide()\">Delete</button>\n                                                            <button type=\"button\" class=\"button button1\"\n                                                                (click)=\"modalRoot2.hide()\">Save</button>\n                                                            <button type=\"button\" class=\"button button2\"\n                                                                style=\"float: right;\" (click)=\"modalRoot2.hide()\">Close\n                                                            </button>\n                                                        </ng-container>\n                                                    </app-modal>\n                                                </div> -->\n                                               <!--  <div class=\"input-group-append ml-2\">\n                                                    <button type=\"button\" class=\"btn btn-secondary\" placement=\"top\" ngbTooltip=\"Enable LiLa endpoint\" title=\"Enable LiLa endpoint\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" style=\"border-radius: .5rem;\">\n                                                        <img src=\"../../../../assets/images/graphql.png\" alt=\"Avatar\" class=\"image\" style=\"height: 20px;\">\n                    \n                                                      </button>\n                                                </div> -->\n                                                <div class=\"input-group-append ml-2\">\n                                                    <button (click)=\"removeElement(i)\" class=\"btn btn-danger\"\n                                                        type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container-fluid profile-page\">\n    <div class=\"row h-100\">\n        <div class=\"col-md-12\">\n            <app-profiles-table></app-profiles-table>\n        </div>\n    </div>\n</div>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-lexical-concept-form',\n  templateUrl: './lexical-concept-form.component.html',\n  styleUrls: ['./lexical-concept-form.component.scss']\n})\nexport class LexicalConceptFormComponent implements OnInit {\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n  @Input() lexicalConceptData : any;\n\n  lexicalConceptForm = new FormGroup({\n    label: new FormControl(''),\n    definition : new FormControl(''),\n    hierachicalRelation: new FormArray([this.createHierachicalRelation()]),\n    scheme: new FormArray([this.createScheme()]),\n    conceptReference: new FormArray([this.createConceptReference()])\n  })\n\n  hierachicalRelation: FormArray;\n  scheme: FormArray;\n  conceptReference: FormArray;\n\n  constructor(private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    \n    this.lexicalConceptForm = this.formBuilder.group({\n      label: '',\n      definition : '',\n      hierachicalRelation: this.formBuilder.array([this.createHierachicalRelation()]),\n      scheme: this.formBuilder.array([this.createScheme()]),\n      conceptReference: this.formBuilder.array([this.createConceptReference()])\n    })\n    this.onChanges();\n    this.loadPeople();\n    this.triggerTooltip();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(()=> {\n      if(this.object != changes.lexicalConceptData.currentValue){\n        if(this.conceptReference != null){\n          this.conceptReference.clear();\n          this.hierachicalRelation.clear();\n          this.scheme.clear();\n        }\n      }\n      this.loadPeople();\n      this.object = changes.lexicalConceptData.currentValue;\n      if(this.object != null){\n        this.lexicalConceptForm.get('label').setValue(this.object.label, {emitEvent:false});\n      }\n      this.triggerTooltip();\n  }, 10)\n  }\n\n  triggerTooltip(){\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger : 'hover'\n      });\n    }, 500);\n  }\n\n  private loadPeople() {\n    this.peopleLoading = true;\n    /* this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  onChanges(): void {\n    this.lexicalConceptForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      //console.log(searchParams)\n    })\n  }\n\n  createScheme(): FormGroup {\n    return this.formBuilder.group({\n      target: ''\n    })\n  }\n\n  addScheme() {\n    this.scheme = this.lexicalConceptForm.get('scheme') as FormArray;\n    this.scheme.push(this.createScheme());\n    this.triggerTooltip();\n  }\n\n  removeScheme(index) {\n    this.scheme = this.lexicalConceptForm.get('scheme') as FormArray;\n    this.scheme.removeAt(index);\n  }\n\n  addHierachicalRelation() {\n    this.hierachicalRelation = this.lexicalConceptForm.get('hierachicalRelation') as FormArray;\n    this.hierachicalRelation.push(this.createHierachicalRelation());\n    this.triggerTooltip();\n  }\n\n  removeHierachicalRelation(index) {\n    this.hierachicalRelation = this.lexicalConceptForm.get('hierachicalRelation') as FormArray;\n    this.hierachicalRelation.removeAt(index);\n  }\n\n  addConceptReference() {\n    this.conceptReference = this.lexicalConceptForm.get('conceptReference') as FormArray;\n    this.conceptReference.push(this.createConceptReference());\n    this.triggerTooltip();\n  }\n\n  removeConceptReference(index) {\n    this.conceptReference = this.lexicalConceptForm.get('conceptReference') as FormArray;\n    this.conceptReference.removeAt(index);\n  }\n\n\n  createHierachicalRelation(): FormGroup {\n    return this.formBuilder.group({\n      relation: '',\n      entity: ''\n    })\n  }\n\n  createConceptReference(): FormGroup {\n    return this.formBuilder.group({\n      target: ''\n    })\n  }\n\n}\n\n","\n\n<form [formGroup]=\"lexicalConceptForm\" *ngIf=\"object!=null\">\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-5\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n        </div>\n    </div>\n\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Definition:</label>\n        <div class=\"input-group col-lg-8\">\n            <textarea formControlName=\"definition\" name=\"definition\" class=\"form-control\" style=\"resize: none;\"></textarea>\n        </div>\n    </div>\n\n\n    <!-- HIERARCHICAL RELATION -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>HIERARCHICAL RELATION</b></span>\n                <a (click)=\"addHierachicalRelation()\" class=\"pointer\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div class=\"form-group row ml-2 mt-3 mr-2\" formArrayName=\"hierachicalRelation\" *ngFor=\"let direct of lexicalConceptForm.get('hierachicalRelation')['controls']; let i = index\">\n                        <div class=\"col-xl-5\" [formGroupName]=\"i\">\n                            <select class=\"form-control\" formControlName=\"relation\" name=\"relation\">\n                                <option>Relations...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"input-group col-xl-7\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                            <ng-select formControlName=\"entity\" name=\"entity\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                            </ng-select>\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                            <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                                <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\" (click)=\"modalRoot.show()\"></i></button>\n                                <app-modal #modalRoot class=\"modal-demo\" [maximizable]=\"true\" [backdrop]=\"false\">\n                                    <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                    <ng-container class=\"app-modal-body\">\n                                        <h3>MODAL DIALOG</h3>\n                                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                            Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s.</p>\n                                    </ng-container>\n                                    <ng-container class=\"app-modal-footer\">\n                                        <button type=\"button\" class=\"button button3\" (click)=\"modalRoot.hide()\">Delete</button>\n                                        <button type=\"button\" class=\"button button1\" (click)=\"modalRoot.hide()\">Save</button>\n                                        <button type=\"button\" class=\"button button2\" style=\"float: right;\"\n                                            (click)=\"modalRoot.hide()\">Close\n                                        </button>\n                                    </ng-container>\n                                </app-modal>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeHierachicalRelation(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- SCHEME -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>SCHEME</b></span>\n                <a class=\"pointer\" (click)=\"addScheme()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div formArrayName=\"scheme\">\n                        <div *ngFor=\"let scheme of lexicalConceptForm.get('scheme')['controls']; let i = index\">\n                            \n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                <div class=\"input-group col-xl-9\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                                    <ng-select formControlName=\"target\" name=\"target\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                    </ng-select>\n                                    <input formControlName=\"target\" name=\"target\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                    <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                class=\"fa fa-external-link-alt\" ></i></button>\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button (click)=\"removeScheme(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"modalRoot.show()\">\n                                            <i class=\"fa fa-plus\"></i>\n                                        </button>\n                                        <app-modal #modalRoot class=\"modal-demo\">\n                                            <ng-container class=\"app-modal-header\">Concept scheme creation</ng-container>\n                                            <ng-container class=\"app-modal-body\">\n                                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                    <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n                                                    <div class=\"input-group col-xl-5\">\n                                                        <input type=\"text\" class=\"form-control\" placeholder=\"\">\n                                                    </div>\n                                                </div>\n                                            \n                                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Definition:</label>\n                                                    <div class=\"input-group col-lg-8\">\n                                                        <textarea class=\"form-control\" style=\"resize: none;\"></textarea>\n                                                    </div>\n                                                </div>\n                                            </ng-container>\n                                        </app-modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n\n     <!-- CONCEPT REFERENCE -->\n     <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>CONCEPT REFERENCE</b></span>\n                <a class=\"pointer\" (click)=\"addConceptReference()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div formArrayName=\"conceptReference\">\n                        <div *ngFor=\"let scheme of lexicalConceptForm.get('conceptReference')['controls']; let i = index\">\n                            \n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                <div class=\"input-group col-xl-9\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                                    <ng-select formControlName=\"target\" name=\"target\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                    </ng-select>\n                                    <input formControlName=\"target\" name=\"target\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                    <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                class=\"fa fa-external-link-alt\" ></i></button>\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button (click)=\"removeConceptReference(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- SHOW INFERENCE -->\n    <!-- <div class=\"form-group row ml-2 mt-3 mr-2 inference\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><a data-toggle=\"collapse\" href=\"#inferenceCollapse\" role=\"button\" aria-expanded=\"false\" aria-controls=\"inferenceCollapse\"><span class=\"badge badge-warning\"><b style=\"color: white; font-size: 12px;\">SHOW INFERENCE</b></span></a></span>\n                <div class=\"card-body\">\n                    <div class=\"collapse\" id=\"inferenceCollapse\">\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Lexicalized Sense:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>      \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>        \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>  \n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Is Evoked By:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div> \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div>          \n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Narrower:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>           \n                            </div>\n                        </div>\n                        \n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Borader:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>           \n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, pairwise, startWith } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-sense-core-form',\n  templateUrl: './sense-core-form.component.html',\n  styleUrls: ['./sense-core-form.component.scss']\n})\nexport class SenseCoreFormComponent implements OnInit {\n\n  @Input() senseData: any;\n\n  private subject_def: Subject<any> = new Subject();\n  private subject_ex_def: Subject<any> = new Subject();\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n\n  disableAddDef = false;\n\n  definitionData = [];\n  definitionMemory = [];\n\n  staticDef = [];\n\n  senseCore = new FormGroup({\n    definition: new FormArray([this.createDefinition()]),\n    confidence: new FormControl(null),\n    usage: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    topic: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    reference: new FormArray([this.createReference()]),\n    lexical_concept: new FormArray([this.createLexicalConcept()]),\n    sense_of: new FormControl('', [Validators.required, Validators.minLength(5)])\n  })\n\n  definitionArray: FormArray;\n  lexicalConceptArray: FormArray;\n\n  constructor(private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      //@ts-ignore\n      $('.denotes-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 1000);\n    this.loadPeople();\n\n    this.subject_def.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeDefinition(data)\n      }\n    )\n\n    this.subject_ex_def.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeExistingDefinition(data['evt'], data['i'])\n      }\n    )\n\n    this.senseCore = this.formBuilder.group({\n      definition: this.formBuilder.array([]),\n      confidence: false,\n      usage: '',\n      topic: '',\n      reference: this.formBuilder.array([this.createReference()]),\n      lexical_concept: this.formBuilder.array([]),\n      sense_of: ''\n    })\n\n    this.onChanges();\n\n  }\n\n  private loadPeople() {\n    /* this.peopleLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if (this.object != changes.senseData.currentValue) {\n        this.lexicalConceptArray = this.senseCore.get('lexical_concept') as FormArray;\n        this.lexicalConceptArray.clear();\n\n        this.definitionArray = this.senseCore.get('definition') as FormArray;\n        this.definitionArray.clear();\n\n        this.staticDef = [];\n      }\n      this.object = changes.senseData.currentValue;\n      if (this.object != null) {\n\n        this.definitionData = [];\n        this.definitionMemory = [];\n\n        for (var i = 0; i < this.object.definition.length; i++) {\n          const pId = this.object.definition[i]['propertyID'];\n          const pVal = this.object.definition[i]['propertyValue'];\n          this.definitionData.push(pId);\n\n          if (pId == 'definition' && pVal == '') {\n            this.definitionMemory.push(pId);\n            this.addDefinition(pId, pVal)\n\n            this.staticDef.push({ trait: pId, value: pVal })\n          }\n\n          if (pVal != '') {\n            this.definitionMemory.push(pId);\n            this.addDefinition(pId, pVal)\n\n            this.staticDef.push({ trait: pId, value: pVal })\n          }\n        }\n        //console.log(this.object)\n        this.senseCore.get('confidence').setValue(this.object.confidence, { emitEvent: false })\n        this.senseCore.get('topic').setValue(this.object.topic, { emitEvent: false })\n        this.senseCore.get('usage').setValue(this.object.usage, { emitEvent: false });\n        this.addLexicalConcept(this.object.concept);\n        this.senseCore.get('sense_of').setValue(this.object.sense, { emitEvent: false });\n      }\n    }, 10)\n  }\n\n\n  onChanges(): void {\n    this.senseCore.get('usage').valueChanges.pipe(debounceTime(1000)).subscribe(newDef => {\n      this.lexicalService.spinnerAction('on');\n      let senseId = this.object.senseInstanceName;\n      let parameters = {\n        relation: \"usage\",\n        value: newDef\n      }\n      this.lexicalService.updateSense(senseId, parameters).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard(this.object)\n        }, error => {\n          console.log(error)\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Sense usage changed', '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    })\n\n    this.senseCore.controls['confidence'].valueChanges.pipe(startWith(undefined), debounceTime(1000), pairwise()).subscribe(newConfidence => {\n      console.log('Old value: ', newConfidence[0]);\n      console.log('New value: ', newConfidence[1]);\n      this.lexicalService.spinnerAction('on');\n      let parameters = {};\n      let senseId = this.object.senseInstanceName;\n      let oldValue = newConfidence[0];\n      let newValue = newConfidence[1];\n\n      if (oldValue == undefined) {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue\n        }\n      } else if (oldValue != undefined && this.object.confidence == -1) {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue,\n          currentValue: -1\n        }\n      } else {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue,\n          currentValue: oldValue\n        }\n      }\n\n      console.log(parameters)\n      this.lexicalService.updateGenericRelation(senseId, parameters).subscribe(\n        data => {\n          console.log(data);\n\n          this.lexicalService.updateCoreCard(data)\n          this.lexicalService.spinnerAction('off');\n        },\n        error => {\n          console.log(error);\n\n          this.lexicalService.spinnerAction('off');\n\n          if (error.status == 200) {\n            this.toastr.success('Confidence updated', '', { timeOut: 5000 })\n            this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n            this.senseCore.get('confidence').setValue(newValue, { emitEvent: false });\n            this.object.confidence = newValue;\n          } else {\n            this.toastr.error(error.error, 'Error', { timeOut: 5000 })\n\n          }\n        }\n      )\n    })\n\n    this.senseCore.get('topic').valueChanges.pipe(debounceTime(1000)).subscribe(newTopic => {\n      if (newTopic.trim() != '') {\n        this.lexicalService.spinnerAction('on');\n        let senseId = this.object.senseInstanceName;\n        let parameters = {\n          relation: \"subject\",\n          value: newTopic\n        }\n        this.lexicalService.updateSense(senseId, parameters).subscribe(\n          data => {\n            console.log(data)\n            this.lexicalService.spinnerAction('off');\n            //this.lexicalService.refreshLexEntryTree();\n            this.lexicalService.updateCoreCard(this.object)\n            this.toastr.success('Sense topic changed', '', {\n              timeOut: 5000,\n            });\n\n          }, error => {\n            console.log(error)\n            //this.lexicalService.refreshLexEntryTree();\n            this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n            this.lexicalService.spinnerAction('off');\n            if (typeof (error.error) != 'object') {\n              this.toastr.error(error.error, 'Error', {\n                timeOut: 5000,\n              });\n            }\n\n          }\n        )\n      }\n\n    })\n\n    this.senseCore.get('reference').valueChanges.pipe(debounceTime(1000)).subscribe(newDef => {\n      this.lexicalService.spinnerAction('on');\n      let senseId = this.object.senseInstanceName;\n      let parameters = {\n        relation: \"reference\",\n        value: newDef[0]['entity']\n      }\n      //console.log(senseId)\n      console.log(parameters);\n      this.lexicalService.updateSense(senseId, parameters).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard(this.object)\n        }, error => {\n          console.log(error)\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Sense reference changed', '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    })\n  }\n\n  applyUncertain() {\n    this.lexicalService.spinnerAction('on');\n    let oldValue = this.senseCore.get('confidence').value;\n    let senseId = this.object.senseInstanceName;\n    let parameters = {\n      relation: 'confidence',\n      value: 0\n    }\n    console.log(parameters)\n    this.lexicalService.deleteLinguisticRelation(senseId, parameters).subscribe(\n      data => {\n        console.log(data);\n        /* data['request'] = 0;\n        data['new_label'] = confidence_value\n        this.lexicalService.refreshAfterEdit(data); */\n        this.lexicalService.updateCoreCard(data)\n        this.lexicalService.spinnerAction('off');\n        this.senseCore.get('confidence').setValue(-1, { emitEvent: false });\n        this.object.confidence = -1;\n\n        this.toastr.success('Confidence updated', 'Success', {timeOut: 5000});\n      },\n      error => {\n        console.log(error);\n        /*  const data = this.object.etymology;\n        data['request'] = 0;\n        data['new_label'] = confidence_value;\n        this.lexicalService.refreshAfterEdit(data); */\n        this.lexicalService.spinnerAction('off');\n        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n        if (error.status == 200) {\n          this.toastr.success('Confidence updated', '', { timeOut: 5000 })\n          this.senseCore.get('confidence').setValue(-1, { emitEvent: false });\n          this.object.confidence = -1;\n        } else {\n          this.toastr.error(error.error, 'Error', { timeOut: 5000 })\n\n        }\n      }\n    )\n  }\n\n  onChangeDefinitionTrait(evt, i) {\n\n    setTimeout(() => {\n      this.definitionArray = this.senseCore.get('definition') as FormArray;\n      this.definitionArray.at(i).patchValue({ propertyID: evt.target.value, propertyValue: \"\" });\n      if (evt.target.value != '') {\n\n        this.definitionMemory[i] = evt.target.value;\n      } else {\n\n        this.definitionMemory.splice(i, 1)\n      }\n\n\n\n    }, 250);\n  }\n\n  createReference() {\n    return this.formBuilder.group({\n      entity: new FormControl(null, [Validators.required, Validators.minLength(5)])\n    })\n  }\n\n  addDefinition(pId?, pVal?) {\n    this.definitionArray = this.senseCore.get('definition') as FormArray;\n    if (pId != undefined) {\n      this.definitionArray.push(this.createDefinition(pId, pVal));\n    } else {\n      this.disableAddDef = true;\n      this.definitionArray.push(this.createDefinition());\n    }\n  }\n\n  removeDefinition(index) {\n    const definitionArray = this.senseCore.get('definition') as FormArray;\n\n    const trait = this.definitionArray.at(index).get('propertyID').value;\n    const value = this.definitionArray.at(index).get('propertyValue').value;\n\n    //console.log(trait + value)\n\n    if (trait != null) {\n\n      let senseId = this.object.senseInstanceName;\n\n      let parameters = {\n        relation: trait,\n        value: value\n      }\n\n      this.lexicalService.deleteLinguisticRelation(senseId, parameters).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.updateCoreCard(this.object)\n\n          this.toastr.success('Sense definition deleted', '', {\n            timeOut: 5000,\n          });\n\n        }, error => {\n          console.log(error);\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          if (typeof (error.error) != 'object') {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    } else {\n      this.disableAddDef = false;\n    }\n    this.definitionMemory.splice(index, 1);\n    this.staticDef.splice(index, 1);\n    definitionArray.removeAt(index)\n  }\n\n  debounceExistingKeyup(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.subject_ex_def.next({ evt, i })\n  }\n\n  debounceKeyup(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.subject_def.next({ evt, i })\n  }\n\n  createDefinition(pId?, pVal?) {\n    if (pId != undefined) {\n      return this.formBuilder.group({\n        propertyID: new FormControl(pId, [Validators.required, Validators.minLength(0)]),\n        propertyValue: new FormControl(pVal, [Validators.required, Validators.minLength(0)])\n      })\n    } else {\n      return this.formBuilder.group({\n        propertyID: new FormControl(null, [Validators.required, Validators.minLength(0)]),\n        propertyValue: new FormControl(null, [Validators.required, Validators.minLength(0)])\n      })\n    }\n\n  }\n\n  onChangeExistingDefinition(evt, i) {\n\n    this.definitionArray = this.senseCore.get('definition') as FormArray;\n    const trait = this.definitionArray.at(i).get('propertyID').value;\n    const newValue = evt.target.value;\n    const senseId = this.object.senseInstanceName;\n    const parameters = { relation: trait, value: newValue }\n\n    if (trait != undefined && newValue != '') {\n\n      this.staticDef[i] = { trait: trait, value: newValue };\n      this.lexicalService.updateSense(senseId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.refreshLexEntryTree();\n          if (trait == 'definition') {\n\n          }\n          this.lexicalService.updateCoreCard(data)\n        }, error => {\n          console.log(error);\n          //this.lexicalService.refreshLexEntryTree();\n          if (trait == 'definition') {\n            const data = this.object;\n            data['whatToSearch'] = 'sense';\n            data['new_definition'] = newValue;\n            data['request'] = 6;\n            this.lexicalService.refreshAfterEdit(data);\n          }\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Sense definition changed', '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    } else {\n      this.lexicalService.spinnerAction('off');\n      this.staticDef[i] = { trait: trait, value: \"\" };\n    }\n  }\n\n  onChangeDefinition(object) {\n\n    this.definitionArray = this.senseCore.get('definition') as FormArray;\n    const trait = this.definitionArray.at(object.i).get('propertyID').value;\n    const newValue = object.evt.target.value;\n    const senseId = this.object.senseInstanceName;\n    const parameters = { relation: trait, value: newValue }\n\n    if (trait != undefined) {\n\n      this.staticDef.push({ trait: trait, value: newValue });\n      this.lexicalService.updateSense(senseId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard(data)\n          this.disableAddDef = false;\n        }, error => {\n          console.log(error);\n          //this.lexicalService.refreshLexEntryTree();\n          this.disableAddDef = false;\n          if (trait == 'definition') {\n            const data = this.object;\n            data['whatToSearch'] = 'sense';\n            data['new_definition'] = newValue;\n            data['request'] = 6;\n\n            this.lexicalService.refreshAfterEdit(data);\n            \n          }\n\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Sense ' + trait + ' changed', '', {\n              timeOut: 5000,\n            });\n          }\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n        }\n      )\n    } else {\n      this.lexicalService.spinnerAction('off');\n    }\n  }\n\n\n  removeReference(index) {\n    const referenceArray = this.senseCore.get('reference') as FormArray;\n    referenceArray.removeAt(index)\n  }\n\n  createLexicalConcept(e?) {\n    if (e != undefined) {\n      return this.formBuilder.group({\n        lex_concept: new FormControl(e, [Validators.required, Validators.minLength(5)])\n      })\n    } else {\n      return this.formBuilder.group({\n        lex_concept: new FormControl(null, [Validators.required, Validators.minLength(5)])\n      })\n    }\n\n  }\n\n  addLexicalConcept(entity?) {\n    this.lexicalConceptArray = this.senseCore.get('lexical_concept') as FormArray;\n    if (entity != undefined) {\n      this.lexicalConceptArray.push(this.createLexicalConcept(entity));\n    } else {\n      this.lexicalConceptArray.push(this.createLexicalConcept());\n    }\n  }\n\n  removeLexicalConcept(index) {\n    this.lexicalConceptArray = this.senseCore.get('lexical_concept') as FormArray;\n    this.lexicalConceptArray.removeAt(index);\n  }\n}\n","\n\n<form [formGroup]=\"senseCore\">\n    \n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>DEFINITIONS</b></span>\n                <a class=\"pointer\" (click)=\"addDefinition()\" [ngClass]=\"{no_pointer: disableAddDef}\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n\n                    <div class=\"d-flex my-3\" *ngFor=\"let def of staticDef; let i = index\">\n                        <div class=\"col-md-3\">\n                            <span style=\"line-height: 50px;\" class=\"col-form-label\">{{def['trait']}}</span>\n                        </div>\n                        <div class=\"input-group col-md-9\">\n                            <textarea type=\"text\" class=\"form-control\"\n                                placeholder=\"\" (keyup)=\"debounceExistingKeyup($event, i)\" [value]=\"def['value']\" style=\"resize: none;\"></textarea>\n                            <div (click)=\"removeDefinition(i)\" class=\"input-group-append ml-2\" *ngIf=\"def['trait'] != 'definition'\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"staticDef[i]['value'] == ''\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"d-flex my-2\" formArrayName=\"definition\"\n                        *ngFor=\"let def of senseCore.get('definition')['controls']; let i = index\">\n                        <div class=\"col-md-3\" [formGroupName]=\"i\" *ngIf=\"i + 1 > staticDef.length\">\n                            <select class=\"form-control selectTrait\" formControlName=\"propertyID\" name=\"propertyID\"\n                                style=\"font-size: 12px; height: 50px;\" (change)=\"onChangeDefinitionTrait($event, i)\">\n                                <option value=\"\">Select a trait...</option>\n                                <option *ngFor=\"let df of definitionData\" [disabled]=\"definitionMemory.indexOf(df) > -1\" [selected]=\"def.value['propertyID'] === df\">{{df}}</option>\n                            </select>\n                            <div class=\"invalid-feedback\" *ngIf=\"def.get('propertyID').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                        <div class=\"input-group col-md-9\" [formGroupName]=\"i\" *ngIf=\"i + 1 > staticDef.length\">\n                            <textarea formControlName=\"propertyValue\" name=\"propertyValue\" type=\"text\" class=\"form-control\"\n                                placeholder=\"\" (keyup)=\"debounceKeyup($event, i)\" style=\"resize: none;\"></textarea>\n                            <div (click)=\"removeDefinition(i)\" class=\"input-group-append ml-2\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"def.get('propertyValue').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"{confidence : senseCore.get('confidence').value >= 0}; let variable\">\n        <div class=\"col-lg-3\">\n            <label for=\"uncertainBox\">Uncertain</label>\n        </div>\n        <div class=\"col-lg-3 input-group\">\n            <input *ngIf=\"variable.confidence\" id=\"attributes\"  step=\"0.1\" formControlName=\"confidence\" name=\"confidence\" type=\"number\" min=\"0\" max=\"1\" class=\"form-control\" placeholder=\"No info\" [value]=\"senseCore.get('confidence').value\">\n            <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"!variable.confidence\" (click)=\"variable.confidence = !variable.confidence\"><i class=\"fas fa-plus\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"variable.confidence\" (click)=\"variable.confidence = !variable.confidence; applyUncertain()\"><i class=\"fas fa-minus\"></i></button>\n        </div>\n    </div>\n\n    <!-- <div class=\"form-group row ml-2 mt-4 mr-2\">\n        <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Usage:</label>\n        <div class=\"input-group col-lg-8\">\n            <textarea formControlName=\"usage\" name=\"usage\" class=\"form-control\" style=\"resize: none;\"></textarea>\n        </div>\n    </div>\n\n    <div class=\"form-group row ml-2 mt-4 mr-2\">\n        <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Topic:</label>\n        <div class=\"input-group col-lg-8\">\n            <input formControlName=\"topic\" name=\"topic\" class=\"form-control\" style=\"resize: none;\" />\n        </div>\n    </div> -->\n\n    <!-- REFERENCE -->\n    <!-- <div formArrayName=\"reference\">\n        <div *ngFor=\"let ref of senseCore['controls'].reference['controls']; let i = index\">\n            <div [formGroupName]=\"i\">\n                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Reference:</label>\n                    <div class=\"input-group col-xl-9\" *ngIf=\"{switch : false}; let variable\">\n                        <ng-select formControlName=\"entity\" name=\"entity\" [items]=\"people\" bindValue=\"name\"\n                            bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\" [loading]=\"peopleLoading\"\n                            *ngIf=\"!variable.switch\">\n                        </ng-select>\n                        <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\"\n                            placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                        <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                            <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\"\n                                (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\"\n                                data-placement=\"bottom\" data-trigger=\"hover\"\n                                title=\"Clicca per inserire un URI manualmente\">\n                        </div>\n                        <div class=\"input-group-append ml-2\">\n                            <button class=\"btn btn-primary\" type=\"button\"><i\n                                    class=\"fa fa-external-link-alt\"></i></button>\n                        </div>\n                        <div class=\"input-group-append ml-2\">\n                            <button (click)=\"removeReference(i)\" class=\"btn btn-danger\" type=\"button\"><i\n                                    class=\"fa fa-trash-alt\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n\n    <div class=\"form-group row ml-2 mt-4 mr-2\">\n\n    </div>\n\n\n    <!-- LEXICAL CONCEPT -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>LEXICAL CONCEPT</b></span>\n                <a class=\"pointer\" (click)=\"addLexicalConcept()\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div class=\"form-group row ml-2 mt-3 mr-2\" formArrayName=\"lexical_concept\"\n                        *ngFor=\"let trans of senseCore.get('lexical_concept')['controls']; let i = index\">\n                        <div class=\"input-group col-xl-12\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                            <ng-select formControlName=\"lex_concept\" name=\"lex_concept\" [items]=\"people\"\n                                bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                            </ng-select>\n                            <input formControlName=\"lex_concept\" name=\"lex_concept\" type=\"text\" class=\"form-control\"\n                                placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                            <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                                <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\"\n                                    (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\"\n                                    data-placement=\"bottom\" data-trigger=\"hover\"\n                                    title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\"></i></button>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeLexicalConcept(i)\" class=\"btn btn-danger\" type=\"button\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- SHOW INFERENCE -->\n    <!-- <div class=\"form-group row ml-2 mt-3 mr-2 inference\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><a data-toggle=\"collapse\" href=\"#inferenceCollapse\" role=\"button\"\n                        aria-expanded=\"false\" aria-controls=\"inferenceCollapse\"><span class=\"badge badge-warning\"><b\n                                style=\"color: white; font-size: 12px;\">SHOW INFERENCE</b></span></a></span>\n                <div class=\"card-body\">\n                    <div class=\"collapse\" id=\"inferenceCollapse\">\n\n                        <div class=\"form-group row ml-2 mt-3 mr-2\">\n                            <div class=\"input-group col-xl-12\" *ngIf=\"{switch : false}; let variable\">\n                                <div class=\"form-group row w-100\">\n                                    <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Is sense of:</label>\n                                    <div class=\"input-group col-lg-8\">\n                                        <input formControlName=\"sense_of\" name=\"sense_of\" type=\"text\" class=\"form-control\"\n                                            placeholder=\"\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Lexicalized Sense:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\"\n                                style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Is Evoked By:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\"\n                                style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div>\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Narrower:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\"\n                                style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Borader:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\"\n                                style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">\n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div> -->\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sense-vartrans-form',\n  templateUrl: './sense-vartrans-form.component.html',\n  styleUrls: ['./sense-vartrans-form.component.scss']\n})\nexport class SenseVartransFormComponent implements OnInit {\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  componentRef: any;\n\n  @Input() senseData : any;\n\n  senseVartransForm = new FormGroup({\n    label: new FormControl(''),\n    translation: new FormArray([this.createTranslation()]),\n    senseTranslation: new FormArray([this.createSenseTranslation()]),\n    terminologicalRelation: new FormArray([this.createTerminologicalRelation()])\n  })\n\n  translation: FormArray;\n  senseTranslation: FormArray;\n  terminologicalRelation: FormArray;\n  terminologicalRelationSub : FormArray;\n\n  constructor(private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    \n    this.senseVartransForm = this.formBuilder.group({\n      label: '',\n      translation: this.formBuilder.array([this.createTranslation()]),\n      senseTranslation: this.formBuilder.array([this.createSenseTranslation()]),\n      terminologicalRelation: this.formBuilder.array([this.createTerminologicalRelation()])\n    })\n    this.onChanges();\n    this.loadPeople();\n    this.triggerTooltip();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(()=> {\n      if(this.object != changes.senseData.currentValue){\n        if(this.terminologicalRelation != null){\n          this.terminologicalRelation.clear();\n          this.senseTranslation.clear();\n          this.translation.clear();\n        }\n      }\n      this.loadPeople();\n      this.object = changes.senseData.currentValue;\n      if(this.object != null){\n        this.senseVartransForm.get('label').setValue(this.object.label, {emitEvent:false});\n      }\n      this.triggerTooltip();\n  }, 10)\n  }\n\n  triggerTooltip(){\n    setTimeout(() => {\n      //@ts-ignore\n      $('.vartrans-tooltip').tooltip({\n        trigger : 'hover'\n      });\n    }, 500);\n  }\n\n  private loadPeople() {\n    /* this.peopleLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  onChanges(): void {\n    this.senseVartransForm.valueChanges.pipe(debounceTime(200)).subscribe(searchParams => {\n      //console.log(searchParams)\n    })\n  }\n\n  createTranslation(): FormGroup {\n    return this.formBuilder.group({\n      type: '',\n      confidence: 0.0,\n      target: ''\n    })\n  }\n\n  addTranslation() {\n    this.translation = this.senseVartransForm.get('translation') as FormArray;\n    this.translation.push(this.createTranslation());\n    this.triggerTooltip();\n  }\n\n  removeTranslation(index) {\n    this.translation = this.senseVartransForm.get('translation') as FormArray;\n    this.translation.removeAt(index);\n  }\n\n  addSenseTranslation() {\n    this.senseTranslation = this.senseVartransForm.get('senseTranslation') as FormArray;\n    this.senseTranslation.push(this.createSenseTranslation());\n    this.triggerTooltip();\n  }\n\n  removeSenseTranslation(index) {\n    this.senseTranslation = this.senseVartransForm.get('senseTranslation') as FormArray;\n    this.senseTranslation.removeAt(index);\n  }\n\n  addTerminologicalRelation() {\n    this.terminologicalRelation = this.senseVartransForm.get('terminologicalRelation') as FormArray;\n    this.terminologicalRelation.push(this.createTerminologicalRelation());\n    this.triggerTooltip();\n  }\n\n  removeTerminologicalRelation(index) {\n    this.terminologicalRelation = this.senseVartransForm.get('terminologicalRelation') as FormArray;\n    this.terminologicalRelation.removeAt(index);\n  }\n\n  addTerminologicalRelationSub(index) {\n    const control = (<FormArray>this.senseVartransForm.controls['terminologicalRelation']).at(index).get('sub_rel') as FormArray;\n    control.insert(index, this.createSubTerminologicalRelation())\n    this.triggerTooltip();\n  }\n\n  removeTerminologicalRelationSub(index, iy) {\n    const control = (<FormArray>this.senseVartransForm.controls['terminologicalRelation']).at(index).get('sub_rel') as FormArray;\n    control.removeAt(iy);\n  }\n\n  createSenseTranslation(): FormGroup {\n    return this.formBuilder.group({\n      relation: '',\n      entity: ''\n    })\n  }\n\n  createTerminologicalRelation(): FormGroup {\n    return this.formBuilder.group({\n      a_entity: '',\n      relation: '',\n      b_entity: '',\n      sub_rel: new FormArray([])\n    })\n  }\n\n  createSubTerminologicalRelation(): FormGroup {\n    return this.formBuilder.group({\n      sub_relation: 'eee',\n      sub_entity: ''\n    })\n  }\n}\n","\n\n<form [formGroup]=\"senseVartransForm\" *ngIf=\"object!=null\"> \n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputLabel\" class=\"col-xl-3 col-form-label\">Label:</label>\n        <div class=\"input-group col-xl-5\">\n            <input formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\">\n        </div>\n    </div>\n    \n    <!-- TRANSLATION -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>TRANSLATION</b></span>\n                <a class=\"pointer\" (click)=\"addTranslation()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div formArrayName=\"translation\">\n                        <div *ngFor=\"let trans of senseVartransForm.get('translation')['controls']; let i = index\">\n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                        \n                                <label for=\"inputLabel\" class=\"col-xl-3 mb-3 col-form-label \">Type:</label>\n                                <div class=\"input-group col-xl-5 mb-3\" [formGroupName]=\"i\">\n                                    <select class=\"form-control\" formControlName=\"type\" name=\"type\">\n                                        <option>Relations...</option>\n                                        <option>...</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                <label for=\"inputLabel\" class=\"col-xl-3 mb-3 col-form-label \">Confidence:</label>\n                                <div class=\"input-group col-xl-2 mb-3\" [formGroupName]=\"i\">\n                                    <input formControlName=\"confidence\" name=\"confidence\" type=\"number\" step=\"0.1\" min=\"0\" max=\"10\" class=\"form-control\" placeholder=\"\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                <label for=\"inputLabel\" class=\"col-xl-3 mb-3 col-form-label \">Target:</label>\n                                <div class=\"input-group col-xl-9\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                                    <ng-select formControlName=\"target\" name=\"target\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                    </ng-select>\n                                    <input formControlName=\"target\" name=\"target\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                    <div class=\"input-group-append ml-3 form-check\">\n                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"modalRoot.show()\"><i\n                                                class=\"fa fa-external-link-alt\" ></i></button>\n                                                <app-modal #modalRoot class=\"modal-demo\" [maximizable]=\"true\" [backdrop]=\"false\">\n                                                    <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                                    <ng-container class=\"app-modal-body\">\n                                                        <h3>MODAL DIALOG</h3>\n                                                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                            Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s.</p>\n                                                    </ng-container>\n                                                    <ng-container class=\"app-modal-footer\">\n                                                        <button type=\"button\" class=\"button button3\" (click)=\"modalRoot.hide()\">Delete</button>\n                                                        <button type=\"button\" class=\"button button1\" (click)=\"modalRoot.hide()\">Save</button>\n                                                        <button type=\"button\" class=\"button button2\" style=\"float: right;\"\n                                                            (click)=\"modalRoot.hide()\">Close\n                                                        </button>\n                                                    </ng-container>\n                                                </app-modal>\n                                    </div>\n                                    <div class=\"input-group-append ml-2\">\n                                        <button (click)=\"removeTranslation(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- SENSE RELATION DIRECT -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>SENSE RELATION</b><span class=\"badge badge-primary ml-2\">DIRECT</span></span>\n                <a (click)=\"addSenseTranslation()\" class=\"pointer\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n\n                <div class=\"card-body\">\n                    <div class=\"form-group row ml-2 mt-3 mr-2\" formArrayName=\"senseTranslation\" *ngFor=\"let direct of senseVartransForm.get('senseTranslation')['controls']; let i = index\">\n                        <div class=\"col-xl-5\" [formGroupName]=\"i\">\n                            <select class=\"form-control\" formControlName=\"relation\" name=\"relation\">\n                                <option>Relations...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"input-group col-xl-7\" *ngIf=\"{switch : false}; let variable\" [formGroupName]=\"i\">\n                            <ng-select formControlName=\"entity\" name=\"entity\" [items]=\"people\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                            </ng-select>\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                            <div class=\"input-group-append ml-3 form-check\">\n                                <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\" (click)=\"modalRoot.show()\"></i></button>\n                                <app-modal #modalRoot class=\"modal-demo\" [maximizable]=\"true\" [backdrop]=\"false\">\n                                    <ng-container class=\"app-modal-header\">Demo modal</ng-container>\n                                    <ng-container class=\"app-modal-body\">\n                                        <h3>MODAL DIALOG</h3>\n                                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                            Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s.</p>\n                                    </ng-container>\n                                    <ng-container class=\"app-modal-footer\">\n                                        <button type=\"button\" class=\"button button3\" (click)=\"modalRoot.hide()\">Delete</button>\n                                        <button type=\"button\" class=\"button button1\" (click)=\"modalRoot.hide()\">Save</button>\n                                        <button type=\"button\" class=\"button button2\" style=\"float: right;\"\n                                            (click)=\"modalRoot.hide()\">Close\n                                        </button>\n                                    </ng-container>\n                                </app-modal>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeSenseTranslation(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- TERMINOLOGICAL RELATION INDIRECT -->\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>TERMINOLOGICAL RELATION</b><span class=\"badge badge-primary ml-2\">INDIRECT</span></span>\n                <a class=\"pointer\" (click)=\"addTerminologicalRelation()\"><span class=\"collapse-icon\"><i class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div formArrayName=\"terminologicalRelation\">\n                        <div *ngFor=\"let indirect of senseVartransForm['controls'].terminologicalRelation['controls']; let i = index\">\n                            <div [formGroupName]=\"i\">\n                                <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                    <div class=\"col-xl-3\">\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"a_entity\" name=\"a_entity\">\n                                    </div>\n                                    <div class=\"col-xl-3\">\n                                        <select class=\"form-control\" formControlName=\"relation\" name=\"relation\">\n                                            <option>Relation</option>\n                                            <option>...</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"input-group col-xl-6\" *ngIf=\"{switch : false}; let variable\">\n                                        <ng-select formControlName=\"b_entity\" name=\"b_entity\" [items]=\"people\" class=\"resizeNgSelect\" bindValue=\"name\" bindLabel=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                            [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                        </ng-select>\n                                        <input formControlName=\"b_entity\" name=\"b_entity\" type=\"text\" class=\"form-control\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                        <div class=\"input-group-append ml-3 form-check\">\n                                            <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button class=\"btn btn-primary\" type=\"button\"><i\n                                                    class=\"fa fa-external-link-alt\"></i></button>\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"removeTerminologicalRelation(i)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                        </div>\n                                        <div class=\"input-group-append ml-2\">\n                                            <button (click)=\"addTerminologicalRelationSub(i)\" class=\"btn btn-outline-primary\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div formArrayName=\"sub_rel\">\n                                    <div *ngFor=\"let sub of indirect['controls'].sub_rel['controls']; let j = index\">\n                                        <div [formGroupName]=\"j\">\n                                            <div class=\"form-group row ml-2 mt-3 mr-2\">\n                                                <div class=\"col-xl-3\" ></div>\n                                                <div class=\"col-xl-3\">\n                                                    <select class=\"form-control\" formControlName=\"sub_relation\" name=\"sub_relation\">\n                                                        <option>{{sub.value['sub_relation']}}</option>\n                                                        <option>...</option>\n                                                    </select>\n                                                </div>\n                                                <div class=\"input-group col-xl-6\" *ngIf=\"{switch : false}; let variable\">\n                                                    <ng-select formControlName=\"sub_entity\" name=\"sub_entity\" [items]=\"people\" class=\"resizeNgSelect\" bindLabel=\"name\" bindValue=\"name\" placeholder=\"Search entity\" appendTo=\"body\"\n                                                        [loading]=\"peopleLoading\" *ngIf=\"!variable.switch\">\n                                                    </ng-select>\n                                                    <input formControlName=\"sub_entity\" name=\"sub_entity\" type=\"text\" class=\"form-control\" id=\"inputDenotes\" placeholder=\"Insert URI\" *ngIf=\"variable.switch\">\n                                                    <div class=\"input-group-append ml-3 form-check\">\n                                                        <input class=\"form-check-input vartrans-tooltip\" type=\"checkbox\" (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-trigger=\"hover\" title=\"Clicca per inserire un URI manualmente\">\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button class=\"btn btn-primary\" type=\"button\"><i\n                                                                class=\"fa fa-external-link-alt\"></i></button>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button (click)=\"removeTerminologicalRelationSub(i, j)\" class=\"btn btn-danger\" type=\"button\"><i class=\"fa fa-trash-alt\"></i></button>\n                                                    </div>\n                                                    <div class=\"input-group-append ml-2\">\n                                                        <button  class=\"btn btn-outline-primary invisible\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>           \n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- SHOW INFERENCE -->\n    <!-- <div class=\"form-group row ml-2 mt-3 mr-2 inference\">\n        <div class=\"input-group col-xl-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><a data-toggle=\"collapse\" href=\"#inferenceCollapse\" role=\"button\" aria-expanded=\"false\" aria-controls=\"inferenceCollapse\"><span class=\"badge badge-warning\"><b style=\"color: white; font-size: 12px;\">SHOW INFERENCE</b></span></a></span>\n                <div class=\"card-body\">\n                    <div class=\"collapse\" id=\"inferenceCollapse\">\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Lexicalized Sense:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>      \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>        \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Sense</label>\n                                </div>  \n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Is Evoked By:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div> \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Entry@LANG</label>\n                                </div>          \n                            </div>\n                        </div>\n\n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Narrower:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>           \n                            </div>\n                        </div>\n                        \n                        <div class=\"form-group row ml-2 mr-2\">\n                            <label class=\"col-xl-3 col-form-label\">Borader:</label>\n                            <div class=\"col-xl-9 card mt-0 p-0\" style=\"max-height: 10vh;overflow: auto; border: 1px solid rgba(0,0,0,.125) !important\">    \n                                <div class=\"form-group row ml-2 mb-0 mt-0 mr-2\">\n                                    <label class=\"col-xl-6 col-form-label\">Lexical Concept</label>\n                                    <label class=\"col-xl-6 col-form-label\">Depth</label>\n                                </div>           \n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, ComponentFactoryResolver, ElementRef, Input, OnChanges, OnInit, QueryList, SimpleChanges, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { AnnotatorService } from 'src/app/services/annotator/annotator.service';\nimport { BibliographyService } from 'src/app/services/bibliography-service/bibliography.service';\nimport { ExpanderService } from 'src/app/services/expander/expander.service';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { FormPanelComponent } from './form-panel/form-panel.component';\n\n@Component({\n  selector: 'app-attestation-panel',\n  templateUrl: './attestation-panel.component.html',\n  styleUrls: ['./attestation-panel.component.scss']\n})\nexport class AttestationPanelComponent implements OnInit,OnChanges {\n\n  @Input() attestationData: any;\n  @ViewChild('addBibliographyAttestation', {static: false}) modal: ModalComponent;\n  @ViewChild('table_body') tableBody: ElementRef;\n  @ViewChild('accordion') accordion: ElementRef; \n  @ViewChild('formPanel', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n\n\n  bibliography = [];\n  typesData = [];\n  private update_anno_subject: Subject<any> = new Subject();\n  private update_biblio_anno_subject: Subject<any> = new Subject();\n  private searchSubject : Subject<any> = new Subject();\n\n  start = 0;\n  sortField = 'title';\n  direction = 'asc';\n  memorySort = {field : '', direction : ''}\n  queryTitle = '';\n  queryMode = 'titleCreatorYear';\n  selectedItem;\n  selectedAnnotation;\n  fileId;\n\n  arrayPanelFormsData = {};\n  arrayComponents = [];\n  typeDesc = '';\n  staticOtherDef = [];\n  labelData = [];\n  bind = this;\n\n  constructor(private toastr: ToastrService, \n              private biblioService : BibliographyService, \n              private expander: ExpanderService, \n              private annotatorService : AnnotatorService, \n              private lexicalService : LexicalEntriesService,\n              private factory: ComponentFactoryResolver) { }\n  \n  \n  formData = [];\n  ngOnInit(): void {\n\n    this.lexicalService.getFormTypes().subscribe(\n      data => {\n        this.typesData = data;\n        //console.log(this.typesData)\n      },\n      error => {\n        //console.log(error)\n      }\n    )\n\n    this.annotatorService.getIdText$.subscribe(\n      data=>{\n        console.log(data);\n        this.fileId = data;\n      },error=>{\n        console.log(error)\n      }\n    )\n\n    this.update_anno_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        if(data != null){\n          this.updateAnnotation(data)\n        }\n      }\n    )\n    \n\n    this.update_biblio_anno_subject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        if(data != null){\n          this.updateBiblioAnnotation(data)\n        }\n      }\n    )\n\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data=> {\n        this.memorySort = {field : this.sortField, direction : this.direction}\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        })\n        \n        \n        //@ts-ignore\n        $('#biblioModalAnnotation').modal('hide');\n        $('.modal-backdrop').remove();\n      },error=>{\n        console.log(error)\n      }\n    )\n\n    this.searchSubject.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.queryTitle  = data.query;\n        data.queryMode ? this.queryMode = 'everything' : this.queryMode = 'titleCreatorYear';\n        this.searchBibliography(this.queryTitle, this.queryMode);\n      }\n    )\n  }\n  \n\n  ngOnChanges(changes: SimpleChanges) { \n    \n    console.log(changes)\n    if(changes.attestationData.currentValue != null){\n      setTimeout(() => {\n\n        if(changes.attestationData.currentValue != this.formData){\n          this.formData = [];\n          //this.arrayPanelFormsData = {}\n          this.selectedItem = null;\n          this.selectedAnnotation = null;\n          this.typeDesc = '';\n          this.staticOtherDef = [];\n          this.labelData = [];\n        }\n        this.formData = changes.attestationData.currentValue;\n        console.log(this.formData)\n        if(this.formData.length == 0){\n          this.lexicalService.triggerAttestationPanel(false);\n          this.typeDesc = '';\n          this.staticOtherDef = [];\n          this.labelData = [];\n        }else{\n         /*  this.formData.forEach(element => {\n            this.arrayPanelFormsData[element.id] = {};\n            this.arrayPanelFormsData[element.id].data = undefined;\n            this.arrayPanelFormsData[element.id].isOpen = false;\n          }); */\n        }\n        \n      }, 10);\n      \n    }else{\n      this.formData = [];\n      this.typeDesc = '';\n      this.staticOtherDef = [];\n      this.labelData = [];\n      this.selectedItem = null;\n      this.selectedAnnotation = null;\n    }\n  }\n\n  cancelAttestation(index, id, node_id){\n    this.formData.splice(index,1);\n    this.annotatorService.deleteAnnotationRequest(id, node_id);\n    \n    this.annotatorService.deleteAnnotation(id).subscribe(\n      data=> {\n        console.log(data);\n        this.toastr.success('Attestation deleted correctly', 'Info', {\n          timeOut : 5000\n        })\n        this.annotatorService.closePanelForm(id);\n        if(this.arrayComponents.length > 0){\n          this.arrayComponents.forEach(instanceComponent => {\n            if(instanceComponent.instance.id == id){\n    \n              setTimeout(() => {\n                instanceComponent.instance.formPanelModal.hide();\n              }, 100);\n            }\n          })\n        }\n      },error => {\n        console.log(error);\n        this.toastr.error('Error on deleting attestation', 'Error', {\n          timeOut : 5000\n        })\n      }\n    );\n    if(this.formData.length == 0){\n      this.lexicalService.triggerAttestationPanel(false);\n      //this.lexicalService.sendToCoreTab(null);\n      /* this.expander.openCollapseEdit(false);\n      this.expander.expandCollapseEdit(false);\n\n      this.expander.openCollapseEpigraphy(true);\n      this.expander.expandCollapseEpigraphy(true); */\n    }\n\n    \n  }\n\n  triggerUpdateAttestation(evt, newValue, propKey, annotation){\n    this.update_anno_subject.next({event : evt, newValue : newValue, propKey: propKey, annotation : annotation})\n  }\n\n  debounceKeyup(value, annotation, index, field){\n    this.update_biblio_anno_subject.next({v: value, a: annotation, i: index, f: field})\n  }\n\n  updateAnnotation(data){\n    if(data !=null){\n      let id_annotation = data?.annotation?.id;\n      let newValue = data?.newValue;\n      let property = data?.propKey;\n\n      let annotation = data?.annotation; \n\n      annotation.attributes[property] = newValue;\n\n      this.annotatorService.updateAnnotation(annotation).subscribe(\n        data=> {\n          console.log(data);\n          this.toastr.success('Attestation updated correctly', 'Info', {\n            timeOut : 5000\n          })\n        },error => {\n          console.log(error);\n          this.toastr.error('Error on updating attestation', 'Error', {\n            timeOut : 5000\n          })\n        }\n      )\n\n    } \n  }\n\n  updateBiblioAnnotation(data){\n    if(data != null){\n      console.log(data);\n\n      let id_annotation = data?.a.id;\n      let newValue = data?.v;\n      let index = data?.i;\n      let field = data?.f;\n\n      this.formData.forEach(\n        element=>{\n          if(element.id == id_annotation){\n            element.attributes.bibliography[index][field] = newValue;\n          }\n        }\n      )\n      let annotation = data?.a;\n      console.log(annotation)\n      this.annotatorService.updateAnnotation(annotation).subscribe(\n        data=> {\n          console.log(data);\n          this.toastr.success('Attestation updated correctly', 'Info', {\n            timeOut : 5000\n          })\n        },error => {\n          console.log(error);\n          this.toastr.error('Error on updating attestation', 'Error', {\n            timeOut : 5000\n          })\n        }\n      )\n      \n    }\n  }\n\n  getForm(formId, index){\n\n    setTimeout(() => {\n      console.log('#attestation_collapse-'+index+'')\n      let item_collapse = this.accordion.nativeElement.querySelectorAll('#attestation_collapse-'+index)[0];\n      if(item_collapse.classList.contains('show')){\n        this.lexicalService.getFormData(formId, 'core').subscribe(\n          data=>{\n            console.log(data);\n            this.lexicalService.triggerLexicalEntryTree({request: true, data: data})\n            \n            //this.lexicalService.sendToCoreTab(data)\n            this.lexicalService.sendToEtymologyTab(null);\n            this.lexicalService.sendToRightTab(data);\n            //this.lexicalService.updateCoreCard({lastUpdate : data['lastUpdate'], creationDate : data['creationDate']});\n            \n            if(this.expander.isEpigraphyTabOpen() && !this.expander.isEditTabOpen()){\n              if(this.expander.isEpigraphyTabExpanded() && !this.expander.isEditTabExpanded()){\n                this.expander.openCollapseEdit(true);\n                this.expander.expandCollapseEpigraphy(false)\n              }\n            }\n            \n            var text_detail = document.querySelectorAll('#text-dettaglio');\n            text_detail.forEach(element => {\n              if(!element.classList.contains('show')){\n                element.classList.add('show')\n              }\n            })\n          },\n          error=>{\n            console.log(error)\n          }\n        )\n      }else{\n        console.log(\"non fai partire ricerca\")\n      }\n      console.log(item_collapse)\n    }, 500);\n    \n    \n  }\n\n  showBiblioModal(item){\n    this.selectedAnnotation = item;\n    this.modal.show();\n  }\n\n  checkIfCreatorExist(item?){\n    return item.some(element => element.creatorType === 'author')\n  }\n\n  selectItem(evt, i){\n    /* console.log(evt, i); */\n    if(evt.shiftKey){\n\n    }\n    this.bibliography.forEach(element=> {\n      if(element.key == i.key){\n        element.selected = !element.selected;\n        element.selected ? this.selectedItem = element : this.selectedItem = null;\n        return true;\n      }else{\n        element.selected = false;\n        return false;\n      }\n    })\n    \n  }\n\n  onCloseModal(){\n    this.selectedItem = null;\n    this.start = 0;\n    this.sortField = 'title';\n    this.direction = 'asc';\n    this.tableBody.nativeElement.scrollTop = 0;\n    this.memorySort = { field: this.sortField, direction: this.direction}\n    this.biblioService.bootstrapData(this.start, this.sortField, this.direction).subscribe(\n      data=> {\n        this.bibliography = data;\n        this.bibliography.forEach(element => {\n          element['selected'] = false;\n        }) \n                \n       \n      },error=>{\n        console.log(error)\n      }\n    );\n  }\n\n  onScrollDown(){\n    //@ts-ignore\n    $(\"#biblioModalAnnotation\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalAnnotation').modal({backdrop: 'static', keyboard: false})  \n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    this.start += 25;\n    \n    if(this.queryTitle != ''){\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data=>{\n          console.log(data)\n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n        },error=>{\n          console.log(error)\n        }\n      )\n    }else{\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data=> {\n          \n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n                  \n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n        },error=>{\n          console.log(error)\n        }\n      );\n    }\n\n    \n  }\n\n  addBibliographyItem(item?){\n    //@ts-ignore\n    $(\"#biblioModalAnnotation\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.ui-modal');\n    //@ts-ignore\n    $('#biblioModalAnnotation').modal({backdrop: 'static', keyboard: false})  \n    \n    $('.modal-backdrop').css('height', 'inherit');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n\n    let instance = '';\n    /* if(this.object.lexicalEntryInstanceName != undefined\n      && this.object.lexicalEntryInstanceName.senseInstanceName == undefined){\n        instance = this.object.lexicalEntryInstanceName;\n    }else if(this.object.formInstanceName != undefined){\n      instance = this.object.formInstanceName;\n    }else if(this.object.senseInstanceName != undefined){\n      instance = this.object.senseInstanceName;\n    } */\n\n    if(item != undefined){\n\n      let id = item.data.key != undefined ? item.data.key : '';\n      let title = item.data.title != undefined ? item.data.title : '';\n      let author;\n      \n      item.data.creators.forEach(element => {\n        if(element.creatorType == 'author'){\n          author = element.lastName + ' ' + element.firstName;\n          return true;\n        }else{\n          return false;\n        }\n      });\n      author = author != undefined ? author : ''\n      let date = item.data.date != undefined ? item.data.date : '';\n      let url = item.data.url != undefined ? item.data.url : ''\n      let seeAlsoLink = '';\n\n      item.data['note'] = \"\";;\n      item.data['textualRef'] = \"\";\n\n      let parameters = {\n        id : id,\n        title: title,\n        author: author,\n        date: date,\n        url: url,\n        seeAlsoLink: seeAlsoLink\n      }\n\n      console.log(item, this.selectedAnnotation);\n      this.modal.hide();\n\n     let anno_id = this.selectedAnnotation.id;\n\n      this.formData.forEach(\n        attestation => {\n          if(attestation.id == anno_id){\n            console.log(attestation)\n            attestation?.attributes?.bibliography.push(item?.data)\n          }\n        }\n      );\n\n      this.annotatorService.updateAnnotation(this.selectedAnnotation).subscribe(\n        data=>{\n          console.log(data);\n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n\n          this.modal.hide();\n\n          this.toastr.success('Item added correctly', 'Info', {\n            timeOut : 5000\n          })\n\n        },error=>{\n          console.log(error);\n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n\n          this.modal.hide();\n\n          this.toastr.error('Error on adding item', 'Info', {\n            timeOut : 5000\n          })\n\n        }\n      )\n      /* this.annotatorService.updateAnnotation() */\n      /*       \n      this.lexicalService.addBibliographyData(instance, parameters).subscribe(\n        data=>{\n          console.log(data);\n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModal').modal('hide');\n            $('.modal-backdrop').remove();\n            this.toastr.success('Item added, check bibliography panel', '', {\n              timeOut: 5000,\n            });\n            this.biblioService.triggerPanel(data)\n            setTimeout(() => {\n              this.modal.hide();\n            }, 10);\n          }, 300);\n          this.biblioService.sendDataToBibliographyPanel(data);\n        },error=>{\n          console.log(error)\n          if(typeof(error.error) == 'string' && error.error.length < 1000){\n            this.toastr.error(error.error, '', {\n              timeOut: 5000,\n            });\n          }else{\n            this.toastr.error(error.statusText, '', {\n              timeOut: 5000,\n            });\n          }\n          \n          setTimeout(() => {\n            //@ts-ignore\n            $('#biblioModal').modal('hide');\n            $('.modal-backdrop').remove();\n\n            setTimeout(() => {\n              this.modal.hide();\n            }, 10);\n          }, 300);\n          \n        }\n      ) */\n    }\n    \n  }\n\n  sortBibliography(evt?, val?){\n    \n    \n    if(this.memorySort.field == val){\n      if(this.direction == 'asc'){\n        this.direction = 'desc'\n        this.memorySort.direction = 'desc';\n      }else{\n        this.direction = 'asc';\n        this.memorySort.direction = 'asc';\n      }\n    }else{\n      this.sortField = val;\n      this.direction = 'asc';\n      this.memorySort = {field : this.sortField, direction : this.direction};\n    }\n\n    //@ts-ignore\n    $(\"#biblioModalAnnotation\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalAnnotation').modal({backdrop: 'static', keyboard: false})  \n    $('.modal-backdrop').appendTo('.table-body');\n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    this.start = 0;\n    this.tableBody.nativeElement.scrollTop = 0;\n\n    this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n      data=>{\n        console.log(data)\n        this.bibliography = [];\n        //@ts-ignore\n        $('#biblioModalAnnotation').modal('hide');\n        $('.modal-backdrop').remove();\n        data.forEach(element => {\n          this.bibliography.push(element)\n        });\n      },error=>{\n        console.log(error)\n      }\n    )\n    \n  }\n\n  removeItem(item, j) {\n    console.log(item, j)\n    \n    this.formData.forEach(\n      annotation=>{\n        if(item?.id == annotation.id){\n          annotation.attributes.bibliography.splice(j, 1)\n        }\n      }\n    )\n\n    this.annotatorService.updateAnnotation(item).subscribe(\n      data=>{\n        console.log(data)\n        this.toastr.success('Attestation removed correctly', 'Info', {\n          timeOut : 5000\n        })\n      },\n      error=>{\n        console.log(error)\n        this.toastr.error('Error on removing attestation', 'Error', {\n          timeOut : 5000\n        })\n      }\n    )\n    console.log(this.formData, item)\n  }\n\n  triggerSearch(evt, query, queryMode) {\n    if(evt.key != 'Control' && evt.key != 'Shift' && evt.key != 'Alt'){\n      this.searchSubject.next({query, queryMode})\n    }\n  }\n  \n  searchBibliography(query?:string, queryMode?:any){\n    this.start = 0;\n    this.selectedItem = null;\n    //@ts-ignore\n    $(\"#biblioModalAnnotation\").modal(\"show\");\n    $('.modal-backdrop').appendTo('.table-body');\n    //@ts-ignore\n    $('#biblioModalAnnotation').modal({backdrop: 'static', keyboard: false})  \n    $('body').removeClass(\"modal-open\")\n    $('body').css(\"padding-right\", \"\");\n    this.tableBody.nativeElement.scrollTop = 0;\n    if(this.queryTitle != ''){\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }else{\n      this.biblioService.filterBibliography(this.start, this.sortField, this.direction, this.queryTitle, this.queryMode).subscribe(\n        data => {\n          console.log(data);\n          this.bibliography = [];\n          data.forEach(element => {\n            this.bibliography.push(element)\n          });\n          //@ts-ignore\n          $('#biblioModalAnnotation').modal('hide');\n          $('.modal-backdrop').remove();\n        },\n        error => {\n          console.log(error)\n        }\n      )\n    }\n  }158\n\n  \n\n  loadFormData(idAnnotation, formId, label){\n    console.log(idAnnotation)\n    let panel = this.annotatorService.getPanelForm(idAnnotation);\n    if(panel == undefined){\n      this.lexicalService.getFormData(formId, 'core').subscribe(\n        data=> {\n          console.log(data);\n          if(data != undefined){\n            this.annotatorService.newPanelForm(idAnnotation);\n            const factory = this.factory.resolveComponentFactory(FormPanelComponent);\n            const componentRef = this.vc.createComponent(factory);\n            this.arrayComponents.push(componentRef);\n            (<FormPanelComponent>componentRef.instance).label = label + \" - \" + data.label[0].propertyValue;\n            (<FormPanelComponent>componentRef.instance).formId = formId;\n            (<FormPanelComponent>componentRef.instance).id = idAnnotation;\n            (<FormPanelComponent>componentRef.instance).formData = data;\n            (<FormPanelComponent>componentRef.instance).triggerFormPanel();\n          }\n        }, error=> {\n          console.log(error)\n        }\n      )\n      \n    }else{\n\n    }\n\n  }\n}\n","\n\n<div class=\"card\">\n    <div class=\"card-header\" id=\"attestationHeading\">\n        <h5 class=\"mb-0\">\n            <a class=\"btn btn-link w-100 d-flex align-self-center collapsed \" data-toggle=\"collapse\"\n                data-target=\"#attestationCollapse\" aria-expanded=\"true\" aria-controls=\"attestationCollapse\">\n                Attestation Panel<i class=\"fa ml-auto\"></i>\n            </a>\n        </h5>\n    </div>\n    <div id=\"attestationCollapse\" class=\"collapse\" aria-labelledby=\"attestationHeading\" #accordion>\n        <div class=\"card-body\">\n            <div *ngIf=\"formData != null\">\n                <div class=\"card mb-4 pt-4\" *ngFor=\"let item of formData; let i = index\">\n                    <a class=\"attestationCollapse\" data-toggle=\"collapse\" [attr.data-target]=\"'#attestation_collapse-'+i\"\n                        aria-expanded=\"true\" [attr.aria-controls]=\"'#attestation_collapse-'+i\" (click)=\"getForm(item?.attributes.form_id, i)\"><span class=\"text-id pointer\"><b\n                                class=\"badge badge-primary\">{{fileId}} - {{item?.attributes.label != undefined ? item?.attributes.label : ''}}</b></span></a>\n                   \n                    <a  (click)=\"loadFormData(item?.id, item?.attributes.form_id, fileId); \" class=\"pointer\"><span container=\"body\" placement=\"top\" ngbTooltip=\"Open in new panel\" class=\"external-icon\"><i class=\"fa fa-external-link-alt\"></i></span></a>\n                    <a (click)=\"cancelAttestation(i, item?.id, item?.attributes.node_id)\" class=\"pointer\"><span class=\"trash-icon\"><i class=\"fa fa-trash\"></i></span></a>\n                    \n\n                    <div [id]=\"'attestation_collapse-'+i\" class=\"collapse\" >\n                        <div class=\"card-body\" style=\"max-height: 20rem;  overflow: auto;  \">\n                            <!-- <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                <label for=\"inputLabel\" class=\"col-lg-4 pl-0 pr-0 col-form-label\">URI:</label>\n                                <div class=\"input-group col-lg-8 pl-0 pr-0\">\n                                    <span class=\"font-italic overflow-auto p-1\">{{item?.value}}</span>\n                                </div>\n                            </div> -->\n                            \n                            <div class=\"form-group row ml-2 mr-2 mb-0\" *ngFor=\"let subprop of item?.attributes | keyvalue\">\n                                <label for=\"inputLabel\" class=\"col-lg-4 pl-0 pr-0 col-form-label\" *ngIf=\"subprop?.key != 'bibliography' && subprop?.key != 'validity' && subprop?.key != 'node_id' && subprop?.key != 'form_id' && subprop?.key != 'creator' && subprop?.key != 'timestamp' && subprop?.key != 'label'\">{{subprop?.key}}:</label>\n                                <label for=\"inputLabel\" class=\"col-lg-4 pl-0 pr-0 col-form-label\" *ngIf=\"subprop?.key == 'label'\">form:</label>\n\n                                \n                                <div class=\"input-group col-lg-8 pl-0 pr-0\">\n                                    <span class=\"font-italic overflow-auto p-1\" *ngIf=\"subprop?.key == 'label' || subprop?.key == 'leiden'\">{{subprop?.value}}</span>\n                                    <input #sub_property *ngIf=\"subprop?.key != 'creator' && \n                                                  subprop?.key != 'label' && \n                                                  subprop?.key != 'note' &&\n                                                  subprop?.key != 'timestamp' &&\n                                                  subprop?.key != 'node_id' &&\n                                                  subprop?.key != 'form_id' &&\n                                                  subprop?.key != 'confidence' &&\n                                                  subprop?.key != 'bibliography'  &&\n                                                  subprop?.key != 'validity' &&\n                                                  subprop?.key != 'leiden'\" \n                                                  (keyup)=\"triggerUpdateAttestation($event, sub_property.value, subprop?.key, item)\" id=\"attributes\" name=\"attributes\" type=\"text\" class=\"form-control\" placeholder=\"No info\" [value]=\"subprop?.value\">\n                                    <input #confidence *ngIf=\"subprop?.key == 'confidence'\" (keyup)=\"triggerUpdateAttestation($event, confidence.value, subprop?.key, item)\" (change)=\"triggerUpdateAttestation($event, confidence.value, subprop?.key, item)\" id=\"attributes\" name=\"attributes\" type=\"number\" min=\"0\" max=\"1\" step=\"0.1\" class=\"form-control\" placeholder=\"No info\" [value]=\"subprop?.value\">\n                                    <!-- <span class=\"font-italic overflow-auto p-1\" *ngIf=\"subprop?.key == 'timestamp'\">{{subprop?.value | date: 'dd/MM/yyyy HH:mm:ss'}}</span> -->\n                                    <textarea #text_area (keyup)=\"triggerUpdateAttestation($event, text_area.value, subprop?.key, item)\" *ngIf=\"subprop?.key == 'note'\" id=\"attributes\" name=\"attributes\" type=\"text\" class=\"form-control\" placeholder=\"No info\" style=\"resize: none;\">{{subprop?.value}}</textarea>\n                                </div>\n                            </div>\n                            <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                <label for=\"inputLabel\" class=\"col-lg-4 pl-0 pr-0 col-form-label\">bibliography:</label>\n                                <div class=\"input-group col-lg-8 pl-0 pr-0 justify-content-between\">\n                                    <span class=\"font-italic overflow-auto p-1\" *ngIf=\"item?.attributes.bibliography.length == 0\">\n                                        No bibliography\n                                    </span>\n                                    <span class=\"font-italic overflow-auto p-1\" *ngIf=\"item?.attributes.bibliography.length != 0\">\n                                        {{item?.attributes?.bibliography.length}} item(s)\n                                    </span>\n                                    <button (click)=\"showBiblioModal(item)\" title=\"Add new bibliography item\" class=\"btn btn-success rounded-circle\" style=\"\n                                    width: 20px;\n                                    height: 20px;\n                                    padding: 0%;\n                                    border-radius: 15px !important;\">\n                                        <i class=\"fas fa-plus\"></i>\n                                    </button>\n                                </div>\n                                \n                                \n                            </div>\n                            <div *ngIf=\"item?.attributes.bibliography.length > 0\">\n                                <div class=\"form-group row ml-2 mt-3 mb-1  mr-2\" *ngFor=\"let item_biblio of item?.attributes.bibliography; let j = index\">\n                                    <div class=\"input-group col-xl-12 p-0\">\n                                        <!-- {{item_biblio.creators | json}} -->\n                                        <div id=\"accordion\">\n                                            <div class=\"card\">\n                                                <a class=\"biblioCollapse\" data-toggle=\"collapse\" [attr.data-target]=\"'#attestation_biblio_collapse-'+item?.id+'-'+j\" aria-expanded=\"true\" [attr.aria-controls]=\"'#attestation_biblio_collapse-'+item?.id+'-'+j\">\n                                                    \n                                                    <span class=\"text-id pointer\" style=\"z-index: 0;\">\n                                                        <span  *ngFor=\"let auth of item_biblio.creators\">\n                                                            <b *ngIf=\"auth.creatorType == 'author'\">{{auth.lastName}} {{auth.firstName}} </b>\n                                                        </span>\n                                                        <b>- ({{item_biblio.title != undefined ? (item_biblio.title | slice:0:10) +'...' : ''}})</b>\n                                                    </span>\n                                                    <!-- <span class=\"text-id pointer\">\n                                                        \n                                                    </span> -->\n                                                </a>\n                                                <span *ngIf=\"item_biblio != undefined\" class=\"icons-container\">\n                                                    <!-- {{bibliographyData[i]['url'] | json}} -->\n                                                    <!-- <span><a target=\"_blank\" class=\"pointer text-primary\" (click)=\"synchronizeBibliography(biblio.get('id').value)\"><span class=\"synchro-icon\"><i class=\"fas fa-sync-alt\" *ngIf=\"!loadingSynchro\"></i> <i class=\"fas fa-sync fa-spin\" *ngIf=\"loadingSynchro\"></i></span></a></span> -->\n                                                    <span ><a  href=\"https://www.zotero.org/groups/2552746/prin_italia_antica/items/{{item_biblio.key}}/library\" target=\"_blank\" class=\"pointer text-primary\"><span class=\"external-icon\"><i class=\"fas fa-external-link-alt\"></i></span></a></span>\n                                                    <span><a *ngIf=\"item_biblio.url != ''\" [href]=\"item_biblio.url\" target=\"_blank\" class=\"pointer text-primary\"><span class=\"download-icon\"><i class=\"fas fa-download\"></i></span></a></span>\n                                                </span>\n                                                \n                                                <a class=\"pointer\" (click)=\"removeItem(item, j)\"><span class=\"trash-icon\"><i class=\"fa fa-trash text-danger\"></i></span></a> \n                                                \n                                                <div [id]=\"'attestation_biblio_collapse-'+item?.id+'-'+j\" class=\"collapse\" > <!-- data-parent=\"#accordion\" -->\n                                                    <div class=\"card-body mt-2\">\n                                                        <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                            <label for=\"inputLabel\" class=\"col-lg-4 px-0 col-form-label\">Title:</label>\n                                                            <div class=\"input-group col-lg-8 pl-0\">\n                                                                <input id=\"title\"  name=\"title\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled [value]=\"item_biblio?.title\">\n                                                            </div>\n                                                        </div>           \n                                                        <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                            <label for=\"inputLabel\" class=\"col-lg-4 px-0 col-form-label\">Author:</label>\n                                                            <div class=\"input-group col-lg-8 pl-0  \">\n                                                                <span *ngFor=\"let auth of item_biblio.creators\" class=\"pb-1\">\n                                                                    <input id=\"author\"   name=\"author\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled [value]=\"auth.firstName + ' ' + auth.lastName\">\n                                                                </span>\n                                                                \n                                                            </div>\n                                                        </div>   \n                                                        <div class=\"form-group row ml-2 mr-2 mb-0\">\n                                                            <label for=\"inputLabel\" class=\"col-lg-4 px-0 col-form-label\">Date:</label>\n                                                            <div class=\"input-group col-lg-8 pl-0\">\n                                                                <input id=\"date\"   name=\"date\" type=\"text\" class=\"form-control\" placeholder=\"\" disabled [value]=\"item_biblio.date\">\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"form-group row ml-2 mr-2\">\n                                                            <label for=\"inputLabel\" class=\"col-lg-4 px-0 col-form-label\">Note:</label>\n                                                            <div class=\"input-group col-lg-8 pl-0\">\n                                                                <textarea #note_item_biblio_anno (keyup)=\"debounceKeyup(note_item_biblio_anno.value, item, j, 'note')\"  name=\"note\" class=\"form-control\" style=\"resize: none;\" [value]=\"item_biblio.note\"></textarea>\n                                                            </div>\n                                                        </div>  \n                                                        <div class=\"form-group row ml-2 mr-2\">\n                                                            <label for=\"inputLabel\" class=\"col-lg-4 px-0 col-form-label\">TextualRef:</label>\n                                                            <div class=\"input-group col-lg-8 pl-0\">\n                                                                <textarea #txtref_item_biblio_anno (keyup)=\"debounceKeyup(txtref_item_biblio_anno.value, item, j, 'textualRef')\"  name=\"textualReference\" class=\"form-control\" style=\"resize: none;\" [value]=\"item_biblio.textualRef\"></textarea>\n                                                            </div>\n                                                        </div>     \n                                                    </div>\n                                                </div>                                            \n                                            </div>\n                                        </div>\n                                        \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    \n                </div>\n            </div>\n           \n        </div>\n    </div>\n\n</div>\n\n\n\n\n<!-- ################ BIBLIO MODAL ################# -->\n                    \n<app-modal #addBibliographyAttestation class=\"biblio_modal\" [backdrop]=\"false\" [inViewport]=\"true\" (closeModal)=\"onCloseModal()\">\n\n    <ng-container class=\"app-modal-header\">\n        <img src=\"../../../../../../assets/images/zotero_logo.png\">\n        <span class=\"ml-2 biblio-header-title\">Library: PRIN Italia Antica</span>\n    </ng-container>\n    \n    <ng-container class=\"app-modal-body\">\n        <!-- SEARCH BAR -->\n        <div class=\"w-25 pt-1 pb-1\">\n            <div class=\"input-group mb-3\" *ngIf=\"{switch : false}; let variable\">\n                <div class=\"input-group-prepend\">\n                    <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-search\"></i></button>\n                    <div class=\"dropdown-menu\">\n                        <a [class.disable_click_fire]=\"!variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = false; searchBibliography(searchBiblio.value, variable.switch);\">Normal</a>\n                        <a [class.disable_click_fire]=\"variable.switch\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n                            (click)=\"variable.switch = true; searchBibliography(searchBiblio.value, variable.switch);\">Full\n                            Text</a>\n                    </div>\n                </div>\n                <input #searchBiblio (keyup)=\"triggerSearch($event, searchBiblio.value, variable.switch)\" type=\"text\"\n                    class=\"form-control\" aria-label=\"Text input with dropdown button\"\n                    [placeholder]=\"variable.switch ?'Title, creator, year + Full Text' : 'Title, creator, year'\"\n                    style=\"font-size: 12px;\">\n            </div>\n\n        </div>\n        <!-- {{'start: '+start + ' sortField: '+ sortField + ' direction: '+ direction + ' queryTitle: '+ queryTitle + ' queryMode: '+ queryMode}} -->\n\n        <!-- SKELETON CONTAINER -->\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-8 pl-0\">\n\n\n                    <!-- TABLE -->\n                    <div class=\"table-responsive table-body\">\n                        <div id=\"biblioModalAnnotation\" class=\"modal fade\" role=\"dialog\">\n                            <div class=\"modal-dialog\">\n\n                                <!-- Modal content-->\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-body\">\n                                        <div class=\"d-flex justify-content-center\">\n                                            <div class=\"spinner-border\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                        <table class=\"table table-striped table-hover\" [hidden]=\"bibliography.length == 0\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width: 50%; cursor: pointer;\" (click)=\"sortBibliography($event, 'title')\">\n                                        <span>Title</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'title'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'title'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 30%; cursor: pointer;\" (click)=\"sortBibliography($event, 'creator')\">\n                                        <span>Creator</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'creator'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'creator'\"></i>\n                                        </span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width: 20%; cursor: pointer;\" (click)=\"sortBibliography($event, 'date')\">\n                                        <span>Date</span>\n                                        <span class=\"float-right\">\n                                            <i class=\"fas fa-sort-up\" *ngIf=\"direction == 'asc' && sortField == 'date'\"></i>\n                                            <i class=\"fas fa-sort-down\" *ngIf=\"direction == 'desc' && sortField == 'date'\"></i>\n                                        </span>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody #table_body infiniteScroll [infiniteScrollDistance]=\"0.4\"\n                                [infiniteScrollThrottle]=\"150\" [scrollWindow]=\"false\" (scrolled)=\"onScrollDown()\">\n\n\n                                <tr *ngFor=\"let item of bibliography\" (click)=\"selectItem($event, item)\"\n                                    [ngClass]=\"item?.selected ? 'selected' : ''\" style=\"cursor: pointer;\">\n                                    <td style=\"width: 50%\">\n                                        <span *ngIf=\"item.data.itemType == 'book'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'bookSection'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-book-open\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'journalArticle'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-newspaper\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'note'\" class=\"pl-1 pr-1\">\n                                            <i class=\"far fa-clipboard\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'attachment'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-paperclip\"></i>\n                                        </span>\n                                        <span *ngIf=\"item.data.itemType == 'conferencePaper'\" class=\"pl-1 pr-1\">\n                                            <i class=\"fas fa-chalkboard-teacher\"></i>\n                                        </span>\n                                        <span\n                                            *ngIf=\"item.data.title != undefined && item.data.title != ''\">{{item.data.title |titlecase}}</span>\n                                        <span *ngIf=\"item.data.title == undefined || item.data.title == ''\"\n                                            class=\"font-italic\">No title</span>\n                                    </td>\n                                    <td style=\"width: 30%\">\n                                        <span *ngIf=\"item.data.creators != undefined\">\n                                            <span *ngFor=\"let author of item.data.creators; let i = index\">\n                                                <span *ngIf=\"author.creatorType == 'author'\">\n                                                    {{author.lastName | titlecase}} {{author.firstName | titlecase}} \n                                                </span>\n                                            </span>\n                                            <span *ngIf=\"!checkIfCreatorExist(item.data.creators)\"\n                                                class=\"font-italic\">No data</span>\n                                        </span>\n                                        <span *ngIf=\"item.data.creators == undefined\" class=\"font-italic\">No data</span>\n                                    </td>\n                                    <td style=\"width: 20%\">\n                                        <span *ngIf=\"item.data.date != undefined && item.data.date != ''\">\n                                            {{item.data.date | titlecase}}\n                                        </span>\n                                        <span *ngIf=\"item.data.date == undefined || item.data.date == ''\"\n                                            class=\"font-italic\">\n                                            No info\n                                        </span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <p class=\"font-italic text-muted no-results\" *ngIf=\"bibliography.length == 0\">No results</p>\n                    </div>\n\n\n                </div>\n                <div class=\"col-md-4\" style=\"font-size: 14px;\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 item-description\"\n                            style=\"height: calc(100vh - 37rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"selectedItem\">\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.itemType != '' && selectedItem.data.itemType != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Item type\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.itemType | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.title != '' && selectedItem.data.title != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Title\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.title | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0 && checkIfCreatorExist(selectedItem.data.creators)\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Author\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let author of selectedItem.data.creators\">\n                                            <span *ngIf=\"author.creatorType == 'author'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{author.firstName | titlecase}} {{author.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.creators != undefined && selectedItem.data.creators.length > 0\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Editor\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <span *ngFor=\"let editor of selectedItem.data.creators\">\n                                            <span *ngIf=\"editor.creatorType == 'editor'\">\n                                                <p class=\"font-weight-normal mb-1\">\n                                                    {{editor.firstName | titlecase}} {{editor.lastName | titlecase}}\n                                                </p>\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publicationTitle != '' && selectedItem.data.publicationTitle != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publication\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publicationTitle | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.publisher != '' && selectedItem.data.publisher != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Publisher\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.publisher | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.issue != '' && selectedItem.data.issue != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Issue\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.issue | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.pages != '' && selectedItem.data.pages != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Pages\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.pages | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.place != '' && selectedItem.data.place != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Place\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.place | titlecase }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.date != '' && selectedItem.data.pages != date\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Date\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.date | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.journalAbbreviation != '' && selectedItem.data.journalAbbreviation != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Journal Abbr\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.journalAbbreviation | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.DOI != '' && selectedItem.data.DOI != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{'https://doi.org/'+selectedItem.data.DOI}}\"\n                                                target=\"_blank\">DOI <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.DOI | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.ISSN != '' && selectedItem.data.ISSN != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            ISSN\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.ISSN | titlecase}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.url != '' && selectedItem.data.url != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            <a class=\"text-muted\" href=\"{{selectedItem.data.url}}\" target=\"_blank\">URL\n                                                <i class=\"fas fa-external-link-alt\"></i></a>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.url}}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"row\"\n                                    *ngIf=\"selectedItem.data.accessDate != '' && selectedItem.data.accessDate != undefined\">\n                                    <div class=\"col-md-4 left\" style=\"text-align: right;\">\n                                        <p class=\"text-muted font-weight-bold mb-1\">\n                                            Accessed\n                                        </p>\n                                    </div>\n                                    <div class=\"col-md-8 right\" style=\"text-align: left;\">\n                                        <p class=\"font-weight-normal mb-1\">\n                                            {{selectedItem.data.accessDate}}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\" style=\"height: calc(40vh - 10rem); overflow: auto; font-size: 13px;\">\n                            <div *ngIf=\"!selectedItem\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No item selected\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote == '' || selectedItem.data.abstractNote == undefined)\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <p class=\"text-muted text-center align-middle mb-1 font-italic\">\n                                            No info\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                *ngIf=\"selectedItem && (selectedItem.data.abstractNote != '' && selectedItem.data.abstractNote != undefined)\">\n                                <p class=\"text-muted font-weight-bold\">\n                                    Abstract\n                                </p>\n                                <p class=\"font-weight-normal\">\n                                    {{selectedItem.data.abstractNote}}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12 d-flex justify-content-end\">\n                    <button class=\"btn btn-secondary w-25\" [disabled]=\"!selectedItem\" (click)=\"addBibliographyItem(selectedItem)\">Save</button>\n                    <!-- <button class=\"btn btn-secondary\" (click)=\"addBibliography.hide()\">Close</button> -->\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container class=\"app-modal-footer\">\n    </ng-container>\n</app-modal>\n\n<ng-template #formPanel></ng-template>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})\nexport class SearchPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container-fluid\">\n\t<div class=\"row justify-content-center\">\n\t\t<div class=\"col-md-3 d-flex\">\n      <br>\n      <app-data-search-form class=\"w-100\"></app-data-search-form>  \n    </div>\n    <div class=\"col-md-9\">\n\n    </div>\n\t</div>\n</div>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './services/guard/auth.guard';\nimport { HomePageComponent } from './views/home-page/home-page.component';\nimport { LexiconPageComponent } from './views/lexicon-page/lexicon-page.component';\nimport { LoginPageComponent } from './views/login-page/login-page.component';\nimport { PageNotFoundComponent } from './views/page-not-found/page-not-found.component';\nimport { ProfilePageComponent } from './views/profile-page/profile-page.component';\nimport { SearchPageComponent } from './views/search-page/search-page.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'lexicon', pathMatch: 'full'},\n  /* {path: 'home', component: HomePageComponent}, */\n  /* {path: 'login', component: LoginPageComponent}, */\n  {path: 'lexicon', component: LexiconPageComponent, canActivate: [AuthGuard], data: {roles: ['USER']}},\n  {path: 'user', component: ProfilePageComponent, canActivate: [AuthGuard], data: {roles: ['ADMIN']}},\n  {path: 'search', component: SearchPageComponent},\n  /* {path: '**', component: PageNotFoundComponent} */\n  {path: '**', component: LexiconPageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LilaService {\n\n  private baseUrl_document = \"/LexO-backend-itant/service/fedex/search\"\n  private endpoint = 'https://lila-erc.eu/sparql/lila_knowledge_base/sparql'\n\n  constructor(private http: HttpClient) { }\n\n  queryCognate(label: string): Observable<any> {\n    return this.http.post(this.baseUrl_document+'?sparqlQuery='+encodeURIComponent('prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>  prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#>  prefix lila: <http://lila-erc.eu/ontologies/lila/>  SELECT ?lemma ?pos  WHERE {  ?lemma a lila:Lemma ;  ontolex:writtenRep \\''+label+'\\';  lila:hasPOS ?pos  }')+'&endpoint='+this.endpoint, null)\n  }\n\n  queryEtymon(label: string): Observable<any> {\n    return this.http.post(this.baseUrl_document+'?sparqlQuery='+encodeURIComponent(`\n    PREFIX lime: <http://www.w3.org/ns/lemon/lime#>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    PREFIX lemonEty: <http://lari-datasets.ilc.cnr.it/lemonEty#>\n    PREFIX igvll: <http://lila-erc.eu/data/lexicalResources/IGVLL/>\n    SELECT  ?etymon ?language ?label ?comment WHERE\n    { ?etymon a lemonEty:Etymon ;\n      rdfs:label ?label ;\n      rdfs:comment ?comment ;\n      lime:language ?language .\n    FILTER regex(?label, \"^\\\\\\\\*`+label+`\", \"i\")}`)+'&endpoint='+this.endpoint, null)\n  }\n}\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Form, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, pairwise, startWith } from 'rxjs/operators';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-form-core-form',\n  templateUrl: './form-core-form.component.html',\n  styleUrls: ['./form-core-form.component.scss']\n})\nexport class FormCoreFormComponent implements OnInit {\n\n  @Input() formData: any;\n\n  private subject_label: Subject<any> = new Subject();\n  private subject_ex_label: Subject<any> = new Subject();\n\n  switchInput = false;\n  subscription: Subscription;\n  object: any;\n  peopleLoading = false;\n  counter = 0;\n  typesData = [];\n  morphologyData = [];\n  valueTraits = [];\n  memoryTraits = [];\n  interval;\n\n  formCore = new FormGroup({\n    inheritance: new FormArray([this.createInheritance()]),\n    type: new FormControl(''),\n    confidence : new FormControl(null),\n    label: new FormArray([this.createLabel()]),\n    morphoTraits: new FormArray([this.createMorphoTraits()])\n  })\n\n  labelData = [];\n  memoryLabel = [];\n\n  typeDesc = '';\n\n  staticOtherDef = [];\n  staticMorpho = [];\n\n  morphoTraits: FormArray;\n  inheritanceArray: FormArray;\n  labelArray: FormArray;\n\n  disableAddOther = false;\n  disableAddMorpho = false;\n\n  constructor( private lexicalService: LexicalEntriesService, private formBuilder: FormBuilder, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.lexicalService.getMorphologyData().subscribe(\n      data => {\n        this.morphologyData = data;\n        this.morphologyData = this.morphologyData.filter(x => {\n          if (x.propertyId != 'partOfSpeech') {\n            return true;\n          } else {\n            return false\n          }\n        })\n        /* //console.log(this.morphologyData) */\n      }\n    )\n\n    setTimeout(() => {\n      //@ts-ignore\n      $('.denotes-tooltip').tooltip({\n        trigger: 'hover'\n      });\n    }, 1000);\n    this.loadPeople();\n\n    this.formCore = this.formBuilder.group({\n      inheritance: this.formBuilder.array([]),\n      type: '',\n      confidence : null,\n      label: this.formBuilder.array([]),\n      morphoTraits: this.formBuilder.array([]),\n    })\n\n    this.onChanges();\n    this.subject_label.pipe(debounceTime(1000)).subscribe(\n      data => {\n        this.onChangeLabel(data)\n      }\n    )\n\n    this.subject_ex_label.pipe(debounceTime(1000)).subscribe(\n      data => {\n\n        this.onChangeExistingLabelValue(data['evt'], data['i']);\n      }\n    )\n\n    this.lexicalService.getFormTypes().subscribe(\n      data => {\n        this.typesData = data;\n        //console.log(this.typesData)\n      },\n      error => {\n        //console.log(error)\n      }\n    )\n\n  }\n\n  private loadPeople() {\n    this.peopleLoading = true;\n    /* this.dataService.getPeople().subscribe(x => {\n      this.people = x;\n      this.peopleLoading = false;\n    }); */\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    setTimeout(() => {\n      if (this.object != changes.formData.currentValue) {\n        this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n        this.morphoTraits.clear();\n\n        this.inheritanceArray = this.formCore.get('inheritance') as FormArray;\n        this.inheritanceArray.clear();\n\n        this.labelArray = this.formCore.get('label') as FormArray;\n        this.labelArray.clear();\n\n        this.staticMorpho = [];\n        this.staticOtherDef = [];\n      }\n      this.object = changes.formData.currentValue;\n      //console.log(this.object)\n      if (this.object != null) {\n\n        this.valueTraits = [];\n        this.memoryTraits = [];\n        this.memoryLabel = [];\n        this.labelData = [];\n\n        if(this.object.inheritedMorphology != undefined){\n          for (var i = 0; i < this.object.inheritedMorphology.length; i++) {\n            const trait = this.object.inheritedMorphology[i]['trait'];\n            const value = this.object.inheritedMorphology[i]['value'];\n            this.addInheritance(trait, value);\n          }\n        }\n\n        \n\n        this.formCore.get('confidence').setValue(this.object.confidence, { emitEvent : false});\n        this.formCore.get('type').setValue(this.object.type, { emitEvent: false });\n\n        for (var i = 0; i < this.object.label.length; i++) {\n\n          const trait = this.object.label[i]['propertyID'];\n          const value = this.object.label[i]['propertyValue'];\n\n          this.labelData.push(trait);\n\n          if (value != '') {\n            this.addLabel(trait, value);\n            this.memoryLabel.push(trait);\n\n\n            this.staticOtherDef.push({ trait: trait, value: value })\n          }\n\n        }\n\n        setTimeout(() => {\n          for (var i = 0; i < this.object.morphology.length; i++) {\n            const trait = this.object.morphology[i]['trait'];\n            const value = this.object.morphology[i]['value'];\n\n            let traitDescription = '';\n            this.morphologyData.filter(x => {\n              if (x.propertyId == trait && trait != 'partOfSpeech') {\n                x.propertyValues.filter(y => {\n                  if (y.valueId == value) {\n                    traitDescription = y.valueDescription;\n                    return true;\n                  } else {\n                    return false;\n                  }\n                })\n                return true;\n              } else {\n                return false;\n              }\n            })\n            this.addMorphoTraits(trait, value, traitDescription);\n            this.onChangeTrait(trait, i);\n\n            this.staticMorpho.push({ trait: trait, value: value })\n          }\n        }, 100);\n\n\n        setTimeout(() => {\n          let type = this.formCore.get('type').value;\n          this.typesData.forEach(el => {\n            if (el.valueId == type) {\n\n              this.typeDesc = el.valueDescription;\n            }\n          })\n          //@ts-ignore\n          $('.type-tooltip').tooltip({\n            trigger: 'hover'\n          });\n\n\n        }, 1000);\n\n        setTimeout(() => {\n\n          //@ts-ignore\n          $('.trait-tooltip').tooltip({\n            trigger: 'hover'\n          });\n\n\n        }, 1000);\n      }\n    }, 200)\n\n  }\n\n  onChanges(): void {\n\n    this.formCore.controls['confidence'].valueChanges.pipe(startWith(undefined), debounceTime(1000), pairwise()).subscribe(newConfidence => {\n      console.log('Old value: ', newConfidence[0]);\n      console.log('New value: ', newConfidence[1]);\n      this.lexicalService.spinnerAction('on');\n      let parameters = {};\n      let lexId = this.object.formInstanceName;\n      let oldValue = newConfidence[0];\n      let newValue = newConfidence[1];\n\n      if (oldValue == undefined) {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue\n        }\n      } else if (oldValue != undefined && this.object.confidence == -1) {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue,\n          currentValue: -1\n        }\n      } else {\n        parameters = {\n          type: \"confidence\",\n          relation: 'confidence',\n          value: newValue,\n          currentValue: oldValue\n        }\n      }\n\n      console.log(parameters)\n      this.lexicalService.updateGenericRelation(lexId, parameters).subscribe(\n        data => {\n          console.log(data);\n\n          this.lexicalService.updateCoreCard(data)\n          this.lexicalService.spinnerAction('off');\n        },\n        error => {\n          console.log(error);\n\n          this.lexicalService.spinnerAction('off');\n\n          if (error.status == 200) {\n            this.toastr.success('Confidence updated', '', { timeOut: 5000 })\n            this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n            this.formCore.get('confidence').setValue(newValue, { emitEvent: false });\n            this.object.confidence = newValue;\n          } else {\n            this.toastr.error(error.error, 'Error', { timeOut: 5000 })\n\n          }\n        }\n      )\n    })\n  }\n\n  applyUncertain() {\n    this.lexicalService.spinnerAction('on');\n    let oldValue = this.formCore.get('confidence').value;\n    let lexId = this.object.formInstanceName;\n    let parameters = {\n      relation: 'confidence',\n      value: 0\n    }\n    console.log(parameters)\n    this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n      data => {\n        console.log(data);\n        /* data['request'] = 0;\n        data['new_label'] = confidence_value\n        this.lexicalService.refreshAfterEdit(data); */\n        this.lexicalService.updateCoreCard(data)\n        this.lexicalService.spinnerAction('off');\n        this.formCore.get('confidence').setValue(-1, { emitEvent: false });\n        this.object.confidence = -1;\n      },\n      error => {\n        console.log(error);\n        /*  const data = this.object.etymology;\n        data['request'] = 0;\n        data['new_label'] = confidence_value;\n        this.lexicalService.refreshAfterEdit(data); */\n        this.lexicalService.spinnerAction('off');\n        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n        if (error.status == 200) {\n          this.toastr.success('Confidence updated', '', { timeOut: 5000 })\n          this.formCore.get('confidence').setValue(-1, { emitEvent: false });\n          this.object.confidence = -1;\n\n        } else {\n          this.toastr.error(error.error, 'Error', { timeOut: 5000 })\n\n        }\n      }\n    )\n  }\n\n  onChangeType(evt) {\n    this.lexicalService.spinnerAction('on');\n    const newType = evt.target.value;\n    const formId = this.object.formInstanceName\n    const parameters = { relation: \"type\", value: newType }\n    this.lexicalService.updateForm(formId, parameters).pipe(debounceTime(500)).subscribe(\n      data => {\n        console.log(data)\n        this.lexicalService.spinnerAction('off');\n        data['request'] = 5;\n        data['new_type'] = newType;\n        this.lexicalService.refreshAfterEdit(data);\n        this.lexicalService.updateCoreCard(this.object)\n\n        setTimeout(() => {\n          let type = this.formCore.get('type').value;\n          this.typesData.forEach(el => {\n            if (el.valueId == type) {\n\n              this.typeDesc = el.valueDescription;\n            }\n          })\n          //@ts-ignore\n          $('.type-tooltip').tooltip({\n            trigger: 'hover'\n          });\n\n\n        }, 1000);\n      }, error => {\n        console.log(error);\n        const data = this.object;\n        data['request'] = 5;\n        data['new_type'] = newType;\n        this.lexicalService.refreshAfterEdit(data);\n        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n        this.lexicalService.spinnerAction('off');\n\n        if (typeof (error.error) != 'object') {\n          this.toastr.error(error.error, 'Error', {\n            timeOut: 5000,\n          });\n        } else {\n          this.toastr.success('Type changed', '', {\n            timeOut: 5000,\n          });\n        }\n\n        setTimeout(() => {\n          let type = this.formCore.get('type').value;\n          this.typesData.forEach(el => {\n            if (el.valueId == type) {\n\n              this.typeDesc = el.valueDescription;\n            }\n          })\n          //@ts-ignore\n          $('.type-tooltip').tooltip({\n            trigger: 'hover'\n          });\n\n\n        }, 1000);\n      }\n    )\n  }\n\n  debounceKeyup(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.subject_label.next({ evt, i })\n  }\n\n  debounceKeyupExisting(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.subject_ex_label.next({ evt, i })\n  }\n\n  onChangeExistingValue(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n    const trait = this.morphoTraits.at(i).get('trait').value;\n    const oldValue = this.morphoTraits.at(i).get('value').value;\n    const newValue = evt.target.value;\n\n    this.morphoTraits.at(i).get('value').setValue(newValue, { emitEvent: false });\n\n    if (newValue != '') {\n      let parameters = {\n        type: \"morphology\",\n        relation: trait,\n        value: newValue,\n        currentValue: oldValue\n      }\n\n      this.staticMorpho[i] = { trait: trait, value: newValue }\n      let formId = this.object.formInstanceName;\n      console.log(parameters)\n\n      this.lexicalService.updateLinguisticRelation(formId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          //this.lexicalService.refreshAfterEdit(data);\n          this.lexicalService.updateCoreCard(data)\n          this.lexicalService.spinnerAction('off');\n        },\n        error => {\n          console.log(error)\n          //this.lexicalService.refreshAfterEdit({ label: this.object.label });\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Morphologic trait changed', '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n\n    } else {\n      this.lexicalService.spinnerAction('off');\n    }\n  }\n\n  onChangeValue(i) {\n    this.lexicalService.spinnerAction('on');\n    this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n    const trait = this.morphoTraits.at(i).get('trait').value;\n    const value = this.morphoTraits.at(i).get('value').value;\n    if (trait != '' && value != '') {\n\n      let parameters = {\n        type: \"morphology\",\n        relation: trait,\n        value: value\n      }\n      let formId = this.object.formInstanceName;\n\n      let traitDescription = '';\n      this.morphologyData.filter(x => {\n        if (x.propertyId == trait && trait != 'partOfSpeech') {\n          x.propertyValues.filter(y => {\n            if (y.valueId == value) {\n              traitDescription = y.valueDescription;\n              return true;\n            } else {\n              return false;\n            }\n          })\n          return true;\n        } else {\n          return false;\n        }\n      })\n      console.log(parameters);\n      this.morphoTraits.at(i).get('description').setValue(traitDescription, { emitEvent: false });\n\n      this.staticMorpho.push({ trait: trait, value: value })\n\n      this.lexicalService.updateLinguisticRelation(formId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          this.lexicalService.updateCoreCard(this.object)\n          this.disableAddMorpho = false;\n          setTimeout(() => {\n\n            //@ts-ignore\n            $('.trait-tooltip').tooltip({\n              trigger: 'hover'\n            });\n\n\n          }, 1000);\n        },\n        error => {\n          console.log(error)\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n          this.disableAddMorpho = false;\n          if (typeof (error.error) != 'object') {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Morphotrait changed correctly', 'Ok', {\n              timeOut: 5000,\n            });\n          }\n\n          setTimeout(() => {\n\n            //@ts-ignore\n            $('.trait-tooltip').tooltip({\n              trigger: 'hover'\n            });\n\n\n          }, 1000);\n        }\n      )\n    } else {\n      this.lexicalService.spinnerAction('off');\n    }\n  }\n\n  onChangeTrait(evt, i) {\n\n    if (evt.target != undefined) {\n      setTimeout(() => {\n        this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n        this.morphoTraits.at(i).patchValue({ trait: evt.target.value, value: \"\" });\n        //console.log(evt.target.value)\n        if (evt.target.value != '') {\n          var arrayValues = this.morphologyData.filter(x => {\n            return x['propertyId'] == evt.target.value;\n          })['0']['propertyValues'];\n          this.valueTraits[i] = arrayValues;\n          this.memoryTraits[i] = evt.target.value;\n        } else {\n          let arrayValues = [];\n          this.valueTraits[i] = arrayValues\n          this.memoryTraits.splice(i, 1)\n        }\n\n\n\n      }, 500);\n    } else {\n\n      var timer = setInterval((val) => {\n        try {\n          var arrayValues = this.morphologyData.filter(x => {\n            return x['propertyId'] == evt;\n          })['0']['propertyValues'];\n          this.valueTraits[i] = arrayValues;\n          this.memoryTraits.push(evt);\n          //console.log(\"CIAO\")\n          if (this.valueTraits != undefined) {\n            clearInterval(timer)\n          }\n\n        } catch (e) {\n          console.log(e)\n        }\n      }, 500)\n\n      /* setTimeout(() => {\n\n        var arrayValues = this.morphologyData.filter(x => {\n          return x['propertyId'] == evt;\n        })['0']['propertyValues'];\n        this.valueTraits[i] = arrayValues;\n        //console.log(this.valueTraits)\n        this.memoryTraits.push(evt);\n\n      }, 500); */\n    }\n  }\n\n  onChangeLabelTrait(evt, i) {\n\n    setTimeout(() => {\n      this.labelArray = this.formCore.get('label') as FormArray;\n      this.labelArray.at(i).patchValue({ propertyID: evt.target.value, propertyValue: \"\" });\n      //console.log(this.labelArray)\n      if (evt.target.value != '') {\n\n        this.memoryLabel[i] = evt.target.value;\n      } else {\n\n        this.memoryLabel.splice(i, 1)\n      }\n\n\n\n    }, 250);\n  }\n\n  onChangeExistingLabelValue(evt, i) {\n    this.lexicalService.spinnerAction('on');\n    this.labelArray = this.formCore.get('label') as FormArray;\n    const trait = this.labelArray.at(i).get('propertyID').value;\n    const newValue = evt.target.value;\n\n    //console.log(this.object)\n\n    if (newValue != '') {\n      const parameters = { relation: trait, value: newValue }\n\n      this.staticOtherDef[i] = { trait: trait, value: newValue }\n      let formId = this.object.formInstanceName;\n\n\n\n      this.lexicalService.updateForm(formId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          //this.lexicalService.refreshLexEntryTree();\n          this.lexicalService.updateCoreCard(data)\n        }, error => {\n          console.log(error);\n          //this.lexicalService.refreshLexEntryTree();\n\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n\n          if (typeof (error.error) != 'object') {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          } else {\n            this.toastr.success('Label changed', '', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n\n      if (trait == 'writtenRep') {\n        const data = this.object;\n        data['whatToSearch'] = 'form';\n        data['new_label'] = newValue;\n        data['request'] = 3;\n        this.lexicalService.refreshAfterEdit(data);\n      }\n\n    } else {\n      this.lexicalService.spinnerAction('off');\n      this.staticOtherDef[i] = { trait: trait, value: \"\" }\n    }\n  }\n\n  onChangeLabel(object) {\n\n    this.labelArray = this.formCore.get('label') as FormArray;\n    const trait = this.labelArray.at(object.i).get('propertyID').value;\n    const newValue = object.evt.target.value;\n    const formId = this.object.formInstanceName;\n    const parameters = { relation: trait, value: newValue }\n    //console.log(this.object)\n\n    this.staticOtherDef.push({ trait: trait, value: newValue })\n\n    if (trait != undefined && newValue != '') {\n      this.lexicalService.updateForm(formId, parameters).pipe(debounceTime(1000)).subscribe(\n        data => {\n          console.log(data)\n          this.lexicalService.spinnerAction('off');\n          /* this.lexicalService.refreshAfterEdit(data); */\n          this.lexicalService.updateCoreCard(data)\n          this.disableAddOther = false;\n        }, error => {\n          console.log(error);\n          this.disableAddOther = false;\n\n          this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n          this.lexicalService.spinnerAction('off');\n\n          if(error.status == 200){\n            this.toastr.success('Label updated', 'Success', {timeOut: 5000})\n          }else{\n            this.toastr.error(error.message, 'Error', {timeOut: 5000})\n          }\n        }\n      )\n    } else {\n      this.lexicalService.spinnerAction('off');\n    }\n  }\n\n  createMorphoTraits(t?, v?, d?): FormGroup {\n    if (t != undefined) {\n      return this.formBuilder.group({\n        trait: new FormControl(t, [Validators.required, Validators.minLength(0)]),\n        value: new FormControl(v, [Validators.required, Validators.minLength(0)]),\n        description: new FormControl(d, [Validators.required, Validators.minLength(0)])\n      })\n    } else {\n      return this.formBuilder.group({\n        trait: new FormControl('', [Validators.required, Validators.minLength(0)]),\n        value: new FormControl('', [Validators.required, Validators.minLength(0)]),\n        description: new FormControl('', [Validators.required, Validators.minLength(0)])\n      })\n    }\n  }\n\n  createInheritance(t?, v?): FormGroup {\n    return this.formBuilder.group({\n      trait: t,\n      value: v\n    })\n  }\n\n  createLabel(t?, v?): FormGroup {\n    if (t != undefined) {\n      return this.formBuilder.group({\n        propertyID: new FormControl(t, [Validators.required, Validators.minLength(0)]),\n        propertyValue: new FormControl(v, [Validators.required, Validators.minLength(0)])\n      })\n    } else {\n      return this.formBuilder.group({\n        propertyID: new FormControl('', [Validators.required, Validators.minLength(0)]),\n        propertyValue: new FormControl('', [Validators.required, Validators.minLength(0)])\n      })\n    }\n\n  }\n\n  addLabel(t?, v?) {\n    this.labelArray = this.formCore.get('label') as FormArray;\n    if (t != undefined) {\n      this.labelArray.push(this.createLabel(t, v));\n    } else {\n      this.disableAddOther = true;\n      this.labelArray.push(this.createLabel());\n    }\n\n  }\n\n  addInheritance(t?, v?) {\n    this.inheritanceArray = this.formCore.get('inheritance') as FormArray;\n    this.inheritanceArray.push(this.createInheritance(t, v));\n  }\n\n  addMorphoTraits(t?, v?, d?) {\n    this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n    if (t != undefined) {\n      this.morphoTraits.push(this.createMorphoTraits(t, v, d));\n    } else {\n      this.morphoTraits.push(this.createMorphoTraits());\n      this.disableAddMorpho = true;\n    }\n  }\n\n  removeElement(index) {\n    this.morphoTraits = this.formCore.get('morphoTraits') as FormArray;\n\n    const trait = this.morphoTraits.at(index).get('trait').value;\n    const value = this.morphoTraits.at(index).get('value').value;\n\n    //console.log(trait + value)\n\n    if (trait != '') {\n\n      let formId = this.object.formInstanceName;\n\n      let parameters = {\n        type: 'morphology',\n        relation: trait,\n        value: value\n      }\n\n      this.lexicalService.deleteLinguisticRelation(formId, parameters).subscribe(\n        data => {\n          console.log(data)\n          this.toastr.success('Element removed', '', {\n            timeOut: 5000,\n          });\n          this.lexicalService.updateCoreCard(this.object)\n        }, error => {\n          console.log(error)\n          if (error.status != 200) {\n            this.toastr.error(error.error, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        }\n      )\n    } else {\n      this.disableAddMorpho = false;\n    }\n\n    this.staticMorpho.splice(index, 1);\n    this.morphoTraits.removeAt(index);\n    this.memoryTraits.splice(index, 1);\n    this.valueTraits.splice(index, 1)\n  }\n\n  removeLabel(index) {\n    this.labelArray = this.formCore.get('label') as FormArray;\n\n\n    const trait = this.labelArray.at(index).get('propertyID').value;\n    const value = this.labelArray.at(index).get('propertyValue').value;\n\n    //console.log(trait + value)\n\n    if (trait != '') {\n\n      let formId = this.object.formInstanceName;\n\n      let parameters = {\n        type: 'morphology',\n        relation: trait,\n        value: value\n      }\n\n      this.lexicalService.deleteLinguisticRelation(formId, parameters).subscribe(\n        data => {\n          console.log(data)\n\n          this.toastr.success('Label removed', 'Ok', {timeOut: 5000})\n          this.lexicalService.updateCoreCard(this.object)\n        }, error => {\n          console.log(error)\n          if(error.status != 200){\n            this.toastr.error(error.message, 'Error', {timeOut: 5000})\n          }\n        }\n      )\n    } else {\n      this.disableAddOther = false;\n\n    }\n    this.staticOtherDef.splice(index, 1)\n    this.labelArray.removeAt(index);\n  }\n\n}\n","\n\n<form [formGroup]=\"formCore\" *ngIf=\"object != null\">\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>INHERITANCE</b></span>\n                <div class=\"card-body\">\n                    <div class=\"d-flex my-2\" formArrayName=\"inheritance\"\n                        *ngFor=\"let inher of formCore.get('inheritance')['controls']; let i = index\">\n                        <div class=\"col-lg-3\" [formGroupName]=\"i\">\n                            <span class=\"col-form-label\">{{inher.value['trait']}}</span>\n                        </div>\n                        <div class=\"input-group col-lg-7 col-md-12\" [formGroupName]=\"i\">\n\n                            <input formControlName=\"value\" name=\"value\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                                [value]=\"inher.value['value']\" readonly>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <label for=\"inputType\" class=\"col-lg-3 col-form-label\">Type:</label>\n        <div class=\"col-lg-7 input-group\">\n            <select formControlName=\"type\" name=\"type\" class=\"form-control\" (change)=\"onChangeType($event)\">\n                <option *ngFor=\"let type of typesData\" [selected]=\"object.type === type['valueId']\">{{type['valueId'] }}\n                </option>\n            </select>\n            <div class=\"input-group-append ml-2\">\n                 <button class=\"btn btn-secondary type-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                data-placement=\"top\" data-trigger=\"hover\" [attr.data-original-title]=\"typeDesc\"\n                    style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"form-group row ml-2 mt-3 mr-2\" *ngIf=\"{confidence : formCore.get('confidence').value >= 0}; let variable\">\n        <div class=\"col-lg-3\">\n            <span class=\"col-form-label\">Uncertain</span>\n        </div>\n        <div class=\"col-lg-3 input-group\">\n            <input *ngIf=\"variable.confidence\" id=\"attributes\"  step=\"0.1\" formControlName=\"confidence\" name=\"confidence\" type=\"number\" min=\"0\" max=\"1\" class=\"form-control\" placeholder=\"No info\" [value]=\"formCore.get('confidence').value\">\n            <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"!variable.confidence\" (click)=\"variable.confidence = !variable.confidence\"><i class=\"fas fa-plus\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"variable.confidence\" (click)=\"variable.confidence = !variable.confidence; applyUncertain()\"><i class=\"fas fa-minus\"></i></button>\n        </div>\n    </div>\n\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>OTHER REPRESENTATION</b></span>\n                <a class=\"pointer\" (click)=\"addLabel()\" [ngClass]=\"{no_pointer: disableAddOther}\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div class=\"d-flex my-3\" *ngFor=\"let def of staticOtherDef; let i = index\">\n                        <div class=\"col-md-4\">\n                            <label class=\"col-form-label\">{{def['trait']}}</label>\n                        </div>\n                        <div class=\"input-group col-md-8\">\n                            <input type=\"text\" class=\"form-control\"\n                                placeholder=\"\" (keyup)=\"debounceKeyupExisting($event, i)\" [value]=\"def['value']\">\n                            <div *ngIf=\"def['trait'] != 'writtenRep'\" (click)=\"removeLabel(i)\" class=\"input-group-append ml-2\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"staticOtherDef[i]['value'] == ''\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"d-flex my-2\" formArrayName=\"label\"\n                        *ngFor=\"let l of formCore.get('label')['controls']; let i = index\">\n                        <div class=\"col-md-4\" [formGroupName]=\"i\" *ngIf=\"i + 1 > staticOtherDef.length\">\n                            <select class=\"form-control selectTrait\" formControlName=\"propertyID\" name=\"propertyID\"\n                                style=\"font-size: 12px;\" (change)=\"onChangeLabelTrait($event, i)\">\n                                <option value=\"\">Select a trait...</option>\n                                <option *ngFor=\"let ld of labelData\" [selected]=\"l.value['propertyID'] === ld\"\n                                    [disabled]=\"memoryLabel.indexOf(ld) > -1\">{{ld}}</option>\n                            </select>\n                            <div class=\"invalid-feedback\" *ngIf=\"l.get('propertyID').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                        <div class=\"input-group col-md-8\" [formGroupName]=\"i\" *ngIf=\"i + 1 > staticOtherDef.length\">\n                            <input formControlName=\"propertyValue\" name=\"propertyValue\" type=\"text\" class=\"form-control\"\n                                placeholder=\"\" (keyup)=\"debounceKeyup($event, i)\">\n                            <div (click)=\"removeLabel(i)\" class=\"input-group-append ml-2\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"l.get('propertyValue').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <div class=\"form-group row ml-2 mt-3 mr-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>MORPHOLOGY</b></span>\n                <a class=\"pointer\" (click)=\"addMorphoTraits()\" [ngClass]=\"{no_pointer: disableAddMorpho}\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n\n                    <div class=\"d-flex my-3\" *ngFor=\"let stat of staticMorpho; let i = index\">\n                        \n                        <div class=\"col-md-4\"> <!-- *ngIf=\"stat['trait'] != 'partOfSpeech'\" -->\n                            <label class=\"col-form-label\">{{stat['trait']}}</label>\n                        </div>\n                        <div class=\"input-group col-md-8\">\n                            <select class=\"form-control selectTrait\" style=\"font-size:12px;\"\n                                (change)=\"onChangeExistingValue($event, i)\">\n                                <option *ngFor=\"let item of valueTraits[i];\"\n                                    [selected]=\"stat['value'] === item.valueId\">{{item.valueId}}</option>\n                            </select>\n                           \n                            <div class=\"input-group-append ml-2\">\n                                <button *ngIf=\"formCore['controls'].morphoTraits?.value[i] != null\" class=\"btn btn-secondary trait-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                                data-placement=\"top\" data-trigger=\"hover\" [attr.data-original-title]=\"formCore.get('morphoTraits').at(i).get('description').value\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n                            </div>\n                            <div (click)=\"removeElement(i)\" class=\"input-group-append ml-2\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div>\n\n                    </div>\n                    \n                    <div class=\"d-flex\" formArrayName=\"morphoTraits\"\n                        *ngFor=\"let morpho of formCore.get('morphoTraits')['controls']; let i = index\">\n                        <div class=\"col-md-4 my-2\" [formGroupName]=\"i\" *ngIf=\"i + 1 > staticMorpho.length\">\n                            <select class=\"form-control selectTrait\" formControlName=\"trait\" name=\"trait\"\n                                style=\"font-size: 12px;\" (change)=\"onChangeTrait($event, i)\">\n                                <option value=\"\">Select a trait...</option>\n                                <option *ngFor=\"let mt of morphologyData\"\n                                    [selected]=\"morpho.value['trait'] === mt.propertyId\"\n                                    [disabled]=\"memoryTraits.indexOf(mt.propertyId) > -1\">{{mt.propertyId}}</option>\n                            </select>\n                            <div class=\"invalid-feedback\" *ngIf=\"morpho.get('trait').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                        <div class=\"input-group col-md-8 my-2\" [formGroupName]=\"i\" *ngIf=\"i + 1> staticMorpho.length\">\n                            <select class=\"form-control selectTrait\" formControlName=\"value\" name=\"value\"\n                                style=\"font-size:12px;\" (change)=\"onChangeValue(i)\">\n                                <option value=\"\">Select a value...</option>\n                                <option *ngFor=\"let item of valueTraits[i];\" [attr.data-index]=\"i\"\n                                    [selected]=\"morpho.value['value'] === item.valueId\">{{item.valueId}}</option>\n                            </select>\n\n                            <div (click)=\"removeElement(i)\" class=\"input-group-append ml-2\"> <button\n                                    class=\"btn btn-danger\" type=\"button\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"invalid-feedback\" *ngIf=\"morpho.get('value').invalid\" style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-search-form',\n  templateUrl: './data-search-form.component.html',\n  styleUrls: ['./data-search-form.component.scss']\n})\nexport class DataSearchFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    // Process checkout data here\n    \n    console.warn('Your order has been submitted');\n    \n  }\n}\n","\n\n<form (ngSubmit)=\"onSubmit()\" class=\"h-100 d-flex flex-column\">\n    <!-- FULL TEXT -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingOne\">\n            <h5 class=\"mb-0\">\n                <a class=\"btn\" aria-expanded=\"true\">\n                    Ricerca Full-Text\n                </a>\n            </h5>\n        </div>\n        <div class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#search-accordion\">\n            <div class=\"card-body\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-8\">\n                        <label for=\"fullTextInput\">Testo: </label>\n                        <input type=\"text\" class=\"form-control\" id=\"fullTextInput\" placeholder=\"\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-8\">\n                        <label for=\"selectFullText\">Cerca le schede che contengono:</label>\n                        <select class=\"form-control\" id=\"selectFullText\">\n                            <option>Tutte le parole</option>\n                            <option>Una qualsiasi delle parole</option>\n                            <option>La frase esatta</option>\n                        </select>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div id=\"search-accordion\">\n\n        <!-- DATI GENERALI -->\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"generalDataHeading\">\n                <h5 class=\"mb-0\">\n                    <a class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#generalDataCollapse\"\n                        aria-expanded=\"false\" aria-controls=\"generalDataCollapse\">\n                        <i class=\"fa\"></i>&nbsp;Dati generali\n                    </a>\n                </h5>\n            </div>\n            <div id=\"generalDataCollapse\" class=\"collapse\" aria-labelledby=\"generalDataHeading\"\n                data-parent=\"#search-accordion\">\n                <div class=\"card-body form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"idText\">Identificativo:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"idText\" placeholder=\"\">\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"titleInput\">Titolo: </label>\n                        <input type=\"text\" class=\"form-control\" id=\"titleInput\" placeholder=\"\">\n                    </div>\n                    <div class=\"form-group col-md-8\">\n                        <label for=\"selectTitle\">Cerca le schede che contengono:</label>\n                        <select class=\"form-control\" id=\"selectTitle\">\n                            <option>Tutte le parole</option>\n                            <option>Una qualsiasi delle parole</option>\n                            <option>La frase esatta</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- SUPPORTO -->\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"supportHeading\">\n                <h5 class=\"mb-0\">\n                    <a class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#supportCollapse\"\n                        aria-expanded=\"false\" aria-controls=\"supportCollapse\">\n                        <i class=\"fa\"></i>&nbsp;Supporto\n                    </a>\n                </h5>\n            </div>\n            <div id=\"supportCollapse\" class=\"collapse\" aria-labelledby=\"supportHeading\" data-parent=\"#search-accordion\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"inscriptionType\">Tipo di iscrizione: </label>\n                            <select class=\"form-control\" id=\"inscriptionType\">\n                                <option>Funeraria</option>\n                                <option>Ode</option>\n                                <option>Mercantile</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"objectType\">Tipo di oggetto: </label>\n                            <select class=\"form-control\" id=\"objectType\">\n                                <option>Marmo</option>\n                                <option>Papiro</option>\n                                <option>Pietra</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"ancientPlaceName\">Luogo di rinvenimento (nome antico): </label>\n                            <input type=\"text\" class=\"form-control\" id=\"ancientPlaceName\" placeholder=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"modernPlaceName\">Luogo di rinvenimento (nome moderno): </label>\n                            <input type=\"text\" class=\"form-control\" id=\"modernPlaceName\" placeholder=\"\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- BIBLIOGRAFIA -->\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"bibliographyHeading\">\n                <h5 class=\"mb-0\">\n                    <a class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#bibliographyCollapse\"\n                        aria-expanded=\"false\" aria-controls=\"bibliographyCollapse\">\n                        <i class=\"fa\"></i>&nbsp;Bibliografia\n                    </a>\n                </h5>\n            </div>\n            <div id=\"bibliographyCollapse\" class=\"collapse\" aria-labelledby=\"bibliographyHeading\"\n                data-parent=\"#search-accordion\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"authorSelect\">Autore: </label>\n                            <select class=\"form-control\" id=\"authorSelect\">\n                                <option>...</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"titleInput\">Titolo: </label>\n                            <input type=\"text\" class=\"form-control\" id=\"titleInput\" placeholder=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-8\">\n                            <label for=\"publicationYear\">Anno pubblicazione:&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                            <input type=\"number\" class=\"form-control\" id=\"publicationYear\" placeholder=\"1900\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- CRONOLOGIA -->\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"chronologyHeading\">\n                <h5 class=\"mb-0\">\n                    <a class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#chronologyCollapse\"\n                        aria-expanded=\"false\" aria-controls=\"chronologyCollapse\">\n                        <i class=\"fa\"></i>&nbsp;Cronologia\n                    </a>\n                </h5>\n            </div>\n            <div id=\"chronologyCollapse\" class=\"collapse\" aria-labelledby=\"chronologyHeading\"\n                data-parent=\"#search-accordion\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"intervalDate\"\n                                onchange=\"document.getElementById('toDate').disabled = !this.checked;\">\n                            <label class=\"form-check-label\" for=\"intervalDate\">\n                                Intervallo\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mb-2\">\n                        <label for=\"fromDate\">Da:&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                        <input type=\"number\" class=\"form-control\" id=\"fromDate\" placeholder=\"-100\">\n                    </div>\n                    <div class=\"form-group mb-2\">\n                        <label for=\"toDate\">A:&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                        <input type=\"number\" class=\"form-control\" id=\"toDate\" placeholder=\"100\" disabled>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <!-- TESTO -->\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"textHeading\">\n                <h5 class=\"mb-0\">\n                    <a class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#textCollapse\"\n                        aria-expanded=\"false\" aria-controls=\"textCollapse\">\n                        <i class=\"fa\"></i>&nbsp;Testo\n                    </a>\n                </h5>\n            </div>\n            <div id=\"textCollapse\" class=\"collapse\" aria-labelledby=\"textHeading\" data-parent=\"#search-accordion\">\n                <div class=\"card-body\">\n                    <div class=\"form-row align-items-center\">\n                        <div class=\"col-sm-6 my-1\">\n                            <label class=\"sr-only\" for=\"searchText\">Testo:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"searchText\" placeholder=\"Cerca nel testo\">\n                        </div>\n                        <div class=\"col-sm-6 my-1\">\n                            <div class=\"custom-control custom-switch custom-switch-lg\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"transliteratorSwitcher\">\n                                <label class=\"custom-control-label\" for=\"transliteratorSwitcher\">Greek char</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 my-2\">\n                            <label class=\"sr-only\" for=\"editionSelect\">Example select</label>\n                            <select class=\"form-control\" id=\"editionSelect\">\n                                <option>Diplomatica</option>\n                                <option>Interpretativa</option>\n                                <option>Entrambe</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-row align-items-center\">\n                        <div class=\"col-md-4 col-sm-12\">\n                            <label for=\"langSelect\">Lingua</label>\n                            <select class=\"form-control\" id=\"langSelect\">\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-4 col-sm-12\">\n                            <label for=\"alfaSelect\">Alfabeto</label>\n                            <select class=\"form-control\" id=\"alfaSelect\">\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-4 col-sm-12\">\n                            <label for=\"ducSelect\">Ductus</label>\n                            <select class=\"form-control\" id=\"ducSelect\">\n                                <option>...</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- BUTTONS -->\n    <div class=\"h-100 mb-3\" style=\"border:none;\">\n        <div class=\" h-100\">\n            <div class=\"form-row align-items-end h-100\">\n                <div class=\"col-sm-2\">\n\n                </div>\n                <div class=\"col-sm-4\">\n                    <button class=\"btn btn-danger btn-block\" type=\"reset\" value=\"Reset\"><i class=\"fa fa-eraser\"></i>\n                        Reset</button>\n                </div>\n                <div class=\"col-sm-4\">\n                    <button class=\"btn btn-primary btn-block\" type=\"submit\" value=\"Submit\"><i class=\"fa fa-search\"></i>\n                        Cerca</button>\n                </div>\n                <div class=\"col-sm-2\">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalComponent } from 'ng-modal-lib';\nimport { Subscription } from 'rxjs';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-cognate-panel',\n  templateUrl: './cognate-panel.component.html',\n  styleUrls: ['./cognate-panel.component.scss']\n})\nexport class CognatePanelComponent implements OnInit {\n\n  public lexicalEntryId: string;\n  public cogInstanceName : any;\n  public label : any;\n  public subscription: Subscription;\n  public lexicalEntryData : any;\n  public id : any;\n\n  @ViewChild('cognatePanelModal', {static: false}) cognatePanelModal: ModalComponent;\n\n\n  constructor(private lexicalService: LexicalEntriesService) { }\n\n  ngOnInit(): void {\n  }\n\n  triggerCognatePanel(data?){\n    setTimeout(() => {\n      this.cognatePanelModal.show();\n      \n    }, 100);\n    \n  }\n\n  onCloseModal(cogInstanceName, lexInstanceName){\n    this.lexicalService.closePanelForm(cogInstanceName, lexInstanceName);\n    console.log(this.lexicalService.getAllPanelForms())\n  }\n\n}\n","\n<app-modal #cognatePanelModal style=\"top: 10%;\" class=\"modal-demo\" [maximizable]=\"false\" [inViewport]=\"true\"  [backdrop]=\"false\" class=\"panelFormData\" (closeModal)=\"onCloseModal(cogInstanceName, lexicalEntryId)\">\n    <ng-container class=\"app-modal-header\">{{label}}</ng-container>\n    <ng-container class=\"app-modal-body\">\n       <app-lexical-entry-core-form [lexData]=\"lexicalEntryData\"></app-lexical-entry-core-form>\n    </ng-container>\n    \n</app-modal>","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { ChangeDetectorRef, Component, ComponentFactoryResolver, Input, OnInit, SimpleChanges, ViewChild, ViewContainerRef } from '@angular/core';\nimport { LexicalEntriesService } from '../../../../../../services/lexical-entries/lexical-entries.service';\nimport { Subject, Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators, Form } from '@angular/forms';\nimport { debounceTime, pairwise, startWith } from 'rxjs/operators';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { LilaService } from 'src/app/services/lila/lila.service';\nimport { CognatePanelComponent } from './cognate-panel/cognate-panel.component';\n\n\n@Component({\n    selector: 'app-lexical-entry-core-form',\n    templateUrl: './lexical-entry-core-form.component.html',\n    styleUrls: ['./lexical-entry-core-form.component.scss']\n})\nexport class LexicalEntryCoreFormComponent implements OnInit {\n\n    @Input() lexData: any;\n    @ViewChild('cognatePanel', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n\n    private subject: Subject<any> = new Subject();\n    switchInput = false;\n    subscription: Subscription;\n    object: any;\n    peopleLoading = false;\n    counter = 0;\n    lexEntryTypesData = [];\n    morphologyData = [];\n    valueTraits = [];\n    memoryTraits = [];\n    memoryValues = [];\n    languages = [];\n\n    memoryDenotes = [];\n    memoryCognates = [];\n    memoryEvokes = [];\n\n    valuePos = [];\n    memoryPos = '';\n\n    posDescription = '';\n    typeDesc = '';\n    staticMorpho = [];\n\n    interval;\n\n    searchResults= [];\n    filterLoading = false;\n\n    private denotes_subject: Subject<any> = new Subject();\n    private cognates_subject: Subject<any> = new Subject();\n    private evokes_subject: Subject<any> = new Subject();\n\n    /* public urlRegex = /(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)/gi */\n    public urlRegex = /(^|\\s)((https?:\\/\\/.+))/;\n\n    emptyLabelFlag = false;\n    emptyFlag = false;\n\n    disableAddMorpho = false;\n\n    coreForm = new FormGroup({\n        label: new FormControl('', [Validators.required, Validators.minLength(3)]),\n        type: new FormControl(''),\n        confidence : new FormControl(null),\n        language: new FormControl('', [Validators.required, Validators.minLength(0)]),\n        pos: new FormControl(''),\n        morphoTraits: new FormArray([this.createMorphoTraits()]),\n        stemType : new FormControl(''),\n        evokes: new FormArray([this.createEvokes()]),\n        denotes: new FormArray([this.createDenotes()]),\n        cognates : new FormArray([this.createCognates()]),\n        isCognate : new FormControl(null),\n        isEtymon : new FormControl(null)\n    })\n\n    morphoTraits: FormArray;\n    evokesArray: FormArray;\n    denotesArray: FormArray;\n    cognatesArray: FormArray;\n    disableAddCognates = false;\n    arrayComponents = [];\n\n    constructor(private lexicalService: LexicalEntriesService, \n                private formBuilder: FormBuilder, \n                private toastr: ToastrService,\n                private lilaService : LilaService,\n                private factory: ComponentFactoryResolver) {\n\n    }\n\n    ngOnInit() {\n        /* setTimeout(() => {\n            //@ts-ignore\n            $('.denotes-tooltip').tooltip({\n                trigger: 'hover'\n            });\n        }, 1000); */\n\n\n       \n\n        this.denotes_subject.pipe(debounceTime(1000)).subscribe(\n            data => {\n                this.onChangeDenotes(data)\n            }\n        )\n\n        this.cognates_subject.pipe(debounceTime(1000)).subscribe(\n            data => {\n                this.onChangeCognates(data)\n            }\n        )\n\n        /* this.evokes_subject.pipe(debounceTime(1000)).subscribe(\n            data => {\n                this.onChangeEvokes(data)\n            }\n        ) */\n\n        this.lexicalService.updateLangSelect$.subscribe(\n            signal => {\n        \n                if(signal != null){\n                    \n                    this.languages = [];\n                    this.lexicalService.getLexiconLanguages().subscribe(\n                        data => {\n                            console.log(data)\n                            for (var i = 0; i < data.length; i++) {\n                                this.languages[i] = data[i]\n                            }\n                        }\n                    );\n                }\n            }\n        );\n\n        this.lexicalService.getLexiconLanguages().subscribe(\n            data => {\n                this.languages = [];\n                for (var i = 0; i < data.length; i++) {\n                    this.languages[i] = data[i]\n                }\n            }\n        );\n\n        this.subject.pipe(debounceTime(1000)).subscribe(\n            data => {\n                this.onSearchFilter(data)\n            }\n        )\n\n        this.loadMorphologyData();\n        this.loadLexEntryTypeData();\n\n        this.coreForm = this.formBuilder.group({\n            label: '',\n            type: '',\n            confidence : null,\n            language: '',\n            pos: '',\n            morphoTraits: this.formBuilder.array([]),\n            stemType : '',\n            evokes: this.formBuilder.array([this.createEvokes()]),\n            denotes: this.formBuilder.array([this.createDenotes()]),\n            cognates: this.formBuilder.array([this.createCognates()]),\n            isCognate : false,\n            isEtymon : false\n        })\n\n        this.onChanges();\n    }\n\n    /* triggerDenotes(evt) {\n        if (evt.target != undefined) {\n            this.subject.next(evt.target.value)\n        }\n    } */\n\n    triggerCognates(evt, i) {\n        console.log(evt)\n        if (evt.target != undefined) {\n            \n            this.subject.next({value: evt.target.value, index: i})\n        }\n    }\n\n    loadLexEntryTypeData() {\n        this.lexicalService.getLexEntryTypes().subscribe(\n            data => {\n                this.lexEntryTypesData = data;\n                \n            }\n        )\n    }\n\n    onSearchFilter(data) {\n        this.filterLoading = true;\n        this.searchResults = [];\n\n        let value = data.value;\n        let index = data.index;\n\n        this.cognatesArray = this.coreForm.get('cognates') as FormArray;\n        \n        if (this.object.lexicalEntryInstanceName != undefined && !this.cognatesArray.at(index).get('lila').value) {\n            let parameters = {\n                text: value,\n                searchMode: \"startsWith\",\n                type: \"\",\n                pos: \"\",\n                formType: \"entry\",\n                author: \"\",\n                lang: \"\",\n                status: \"\",\n                offset: 0,\n                limit: 500\n            }\n            \n            /* && data.length >= 3 */\n            this.lexicalService.getLexicalEntriesList(parameters).subscribe(\n                data => {\n                    console.log(data)\n\n                    let filter_lang = data.list.filter(\n                        x => {\n                            return x.language != this.object.language;\n                        }\n                    )\n                    filter_lang.forEach(element => {\n                        element['label_lang'] = element.label+\"@\"+element.language\n                    });\n                    console.log(filter_lang)\n                    this.searchResults = filter_lang;\n                    this.filterLoading = false;\n                }, error => {\n                    //console.log(error)\n                    this.filterLoading = false;\n                }\n            )\n            \n        } else if(this.object.lexicalEntryInstanceName != undefined && this.cognatesArray.at(index).get('lila').value){\n\n            this.searchResults = [];\n            this.lilaService.queryCognate(value).subscribe(\n                data=>{\n                    console.log(data);\n                    if(data.list.length > 0){\n\n                        \n                        const map = data.list.map(element => (\n                        {\n                            label: value, \n                            labelValue: element[0].value, \n                            pos : element[1].value\n                        })\n                        )\n\n                        map.forEach(element => {\n                        let tmpLblVal = element.labelValue.split('/');\n                        let labelValue = tmpLblVal[tmpLblVal.length - 1];\n\n                        let tmpLblPos = element.pos.split('/');\n                        let pos = tmpLblPos[tmpLblPos.length - 1];\n\n\n                        element.labelElement = labelValue;\n                        element.labelPos = pos;\n\n                        });\n\n                        \n\n                        this.searchResults = map;\n                        console.log(this.searchResults)\n                        this.filterLoading = false;\n\n\n                    }\n                },\n                error=>{\n                    console.log(error)\n                    this.filterLoading = false;\n                }\n            )\n            /* if(this.coreForm.get('isEtymon').value){\n                this.lilaService.queryEtymon(value).subscribe(\n                    data=>{\n                        console.log(data)\n                        if(data.list.length > 0){\n                            data.list.forEach(element => {\n                                this.searchResults.push(element)\n                            });\n                        }\n                    },\n                    error=>{\n                        console.log(error)\n                    }\n                )\n            }else if(this.coreForm.get('isCognate').value){\n                this.lilaService.queryCognate(value).subscribe(\n                    data=>{\n                        console.log(data);\n                        if(data.list.length > 0){\n                            data.list.forEach(element => {\n                                this.searchResults.push(element)\n                            });\n                        }\n                    },\n                    error=>{\n                        console.log(error)\n                    }\n                )\n            }else{\n                \n            } */\n\n        } else {\n            this.filterLoading = false;\n            \n            \n        }\n        \n    }\n\n    deleteData() {\n        this.searchResults = [];\n    }\n\n    loadMorphologyData() {\n        this.lexicalService.getMorphologyData().subscribe(\n            data => {\n                this.morphologyData = data;\n                /* //console.log(this.morphologyData) */\n                this.valuePos = this.morphologyData.filter(x => {\n                    if (x.propertyId == 'partOfSpeech') {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                })\n\n                this.valuePos = this.valuePos[0]['propertyValues'];\n                \n            }\n        )\n    }\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        setTimeout(() => {\n            if (this.object != changes.lexData.currentValue) {\n                this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n                this.morphoTraits.clear();\n\n                this.denotesArray = this.coreForm.get('denotes') as FormArray;\n                this.denotesArray.clear();\n\n                this.cognatesArray = this.coreForm.get('cognates') as FormArray;\n                this.cognatesArray.clear();\n\n                this.evokesArray = this.coreForm.get('evokes') as FormArray;\n                this.evokesArray.clear();\n\n                this.disableAddCognates = false;\n                this.disableAddCognates = false;\n\n\n                this.memoryPos = '';\n\n                this.staticMorpho = []\n            }\n            this.object = changes.lexData.currentValue;\n\n            \n            if (this.object != null) {\n                \n                const lexId = this.object.lexicalEntryInstanceName;\n                this.coreForm.get('label').setValue(this.object.label, { emitEvent: false });\n                this.coreForm.get('stemType').setValue(this.object.stemType, { emitEvent: false });\n                if(this.object.type == 'Etymon'){\n                    this.coreForm.get('type').disable({onlySelf: true, emitEvent: false})\n                }else{\n                    this.coreForm.get('type').enable({onlySelf: true, emitEvent: false})\n                }\n                this.coreForm.get('confidence').setValue(this.object.confidence, { emitEvent: false });\n                \n\n                this.object.type.forEach(element => {\n                    if(element != 'Cognate'){\n                        this.coreForm.get('type').setValue(element, { emitEvent: false });\n                        return true;\n                    }else{\n                        return false;\n                    }\n                });\n\n                let isCognate = this.object.type.find(element => element == 'Cognate');\n                if(isCognate){\n                    this.coreForm.get('isCognate').setValue(true, {emitEvent: false})\n                }else{\n                    this.coreForm.get('isCognate').setValue(false, {emitEvent: false})\n                }\n\n                let isEtymon = this.object.type.find(element => element == 'Etymon');\n                if(isEtymon){\n                    this.coreForm.get('isEtymon').setValue(true, {emitEvent: false})\n                }else{\n                    this.coreForm.get('isEtymon').setValue(false, {emitEvent: false})\n                }\n\n                //this.coreForm.get('type').setValue(this.object.type, { emitEvent: false });\n                this.coreForm.get('language').setValue(this.object.language, { emitEvent: false });\n                this.coreForm.get('pos').setValue(this.object.pos, { emitEvent: false });\n\n                this.memoryPos = this.object.pos;\n\n                this.valueTraits = [];\n                this.memoryTraits = [];\n                this.memoryDenotes = [];\n                this.memoryCognates = [];\n                this.memoryValues = [];\n\n               /*  //console.log('MORFOLOGIA')\n                //console.log(this.object.morphology) */\n                setTimeout(() => {\n                    for (var i = 0; i < this.object.morphology.length; i++) {\n                        const trait = this.object.morphology[i]['trait'];\n                        const value = this.object.morphology[i]['value'];\n                        \n                        let traitDescription = '';\n                        this.morphologyData.filter(x => {\n                            if (x.propertyId == trait && trait != 'partOfSpeech') {\n                                x.propertyValues.filter(y => {\n                                    if(y.valueId == value){\n                                        traitDescription = y.valueDescription;\n                                        return true;\n                                    }else{\n                                        return false;\n                                    }\n                                })\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })\n                        \n                        this.memoryValues[i] = value;\n                       \n                        this.addMorphoTraits(trait, value, traitDescription);\n                        this.onChangeTrait(trait, i);\n    \n                        this.staticMorpho.push({ trait: trait, value: value });\n                        \n                    }\n                }, 100);\n                \n\n                setTimeout(() => {\n                    let pos = this.coreForm.get('pos').value;\n                    this.valuePos.forEach(el => {\n                        if(el.valueId == pos){\n                           \n                            this.posDescription = el.valueDescription;\n                        }\n                    })\n                    //@ts-ignore\n                    $('.pos-tooltip').tooltip({\n                        trigger: 'hover'\n                    });\n                    \n                    \n                }, 1000);\n\n                setTimeout(() => {\n                    \n                    //@ts-ignore\n                    $('.trait-tooltip').tooltip({\n                        trigger: 'hover'\n                    });\n                    \n                    \n                }, 1000);\n\n                setTimeout(() => {\n                    let type = this.coreForm.get('type').value;\n                    this.lexEntryTypesData.forEach(el => {\n                        if(el.valueId == type){\n                            \n                            this.typeDesc = el.valueDescription;\n                        }\n                    })\n                    //@ts-ignore\n                    $('.type-tooltip').tooltip({\n                        trigger: 'hover'\n                    });\n                    \n                    \n                }, 1000);\n\n                this.lexicalService.getLexEntryLinguisticRelation(lexId, 'denotes').subscribe(\n                    data => {\n                        //console.log(data)\n                        for (var i = 0; i < data.length; i++) {\n                            let entity = data[i]['lexicalEntity'];\n                            let type = data[i]['linkType'];\n                            this.addDenotes(entity, type);\n                            this.memoryDenotes.push(data[i])\n                        }\n                    }, error => {\n                        //console.log(error)\n                    }\n                )\n                \n                this.lexicalService.getLexEntryLinguisticRelation(lexId, 'cognate').subscribe(\n                    data => {\n                        console.log(data)\n                        for (var i = 0; i < data.length; i++) {\n                            let label = data[i].label;\n                            let instanceName = data[i]['lexicalEntityInstanceName']\n                            let entity = data[i]['lexicalEntity'];\n                            let type = data[i]['linkType'];\n                            let lexicalEntryInstanceName = this.object.lexicalEntryInstanceName;\n\n                            if(label == \"\"){\n                                let tmp = entity.split('/');\n                                label = tmp[tmp.length-1]\n                            }\n                            this.addCognates(label, instanceName, lexicalEntryInstanceName, entity, type);\n                            this.memoryCognates.push(data[i])\n                        }\n                    }, error => {\n                        console.log(error)\n                    }\n                )\n            }\n\n\n        }, 10)\n\n    }\n\n    onChangeLanguage(evt) {\n\n        this.lexicalService.spinnerAction('on');\n        let langLabel = evt.target.value;\n        let langValue;\n        this.languages.forEach(element => {\n            if (element['label'].toLowerCase() == langLabel.toLowerCase()) {\n                langValue = element['label'];\n                return;\n            }\n        });\n\n        if (langValue != undefined) {\n            let lexId = this.object.lexicalEntryInstanceName;\n            let parameters = {\n                relation: 'language',\n                value: langValue\n            }\n          \n            this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n                data => {\n                    //console.log(data)\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.updateCoreCard(data)\n                    data['request'] = 0;\n                    data['new_lang'] = langValue.toLowerCase();\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.refreshLangTable();\n                    this.lexicalService.refreshFilter({ request: true })\n                }, error => {\n                    //console.log(error)\n                    const data = this.object;\n                    data['request'] = 0;\n                    data['new_lang'] = langValue.toLowerCase();\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshLangTable();\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    if(typeof(error.error) != 'object'){\n                        this.toastr.error(error.error, 'Error', {\n                          timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.success('Language changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }\n                }\n            )\n        } else {\n            this.lexicalService.spinnerAction('off');\n        }\n\n    }\n\n    onChangePos(evt) {\n        this.lexicalService.spinnerAction('on');\n        let posValue = evt.target.value;\n        let lexId = this.object.lexicalEntryInstanceName;\n        let parameters;\n        if (this.memoryPos == '') {\n\n            parameters = {\n                type: \"morphology\",\n                relation: 'partOfSpeech',\n                value: posValue\n            }\n\n        } else {\n            parameters = {\n                type: \"morphology\",\n                relation: 'partOfSpeech',\n                value: posValue,\n                currentValue: this.memoryPos\n            }\n        }\n        \n        console.log(parameters)\n        this.lexicalService.updateLinguisticRelation(lexId, parameters).pipe(debounceTime(1000)).subscribe(\n            response => {\n                console.log(response)\n                this.memoryPos = posValue;\n                let data= {};\n                data['request'] = 0;\n                data['new_pos'] = posValue;\n                data['lexicalEntryInstanceName'] = this.object.lexicalEntryInstanceName;\n                //this.lexicalService.updateCoreCard(data)\n                this.lexicalService.spinnerAction('off');\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.refreshFilter({ request: true })\n                \n                setTimeout(() => {\n                    \n                    this.valuePos.forEach(el => {\n                        if(el.valueId == posValue){\n                            this.posDescription = el.valueDescription;\n                        }\n                    })\n                    //@ts-ignore\n                    $('.pos-tooltip').tooltip({\n                        trigger: 'hover',\n                    });\n\n                }, 1000);\n            },\n            error => {\n                console.log(error);\n                this.memoryPos = posValue;\n                this.lexicalService.spinnerAction('off');\n                const data = this.object;\n                data['request'] = 0;\n                data['new_pos'] = posValue;\n                this.lexicalService.refreshAfterEdit(data);\n                this.lexicalService.refreshFilter({ request: true })\n                this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                if(typeof(error.error) != 'object'){\n                    this.toastr.error(error.error, 'Error', {\n                      timeOut: 5000,\n                    });\n                }else{\n                    this.toastr.success('Pos changed correctly for ' + lexId, '', {\n                        timeOut: 5000,\n                    });\n                }\n                setTimeout(() => {\n                    \n                    this.valuePos.forEach(el => {\n                        if(el.valueId == posValue){\n                            this.posDescription = el.valueDescription;\n                        }\n                    })\n                    //@ts-ignore\n                    $('.pos-tooltip').tooltip({\n                        trigger: 'hover'\n                    });\n\n                }, 1000);\n            }\n        )\n        \n\n    }\n\n    onChangeExistingValue(evt, i) {\n        this.lexicalService.spinnerAction('on');\n        this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n        const trait = this.morphoTraits.at(i).get('trait').value;\n        const oldValue = this.morphoTraits.at(i).get('value').value;\n        const newValue = evt.target.value;\n        if (newValue != '') {\n            let parameters = {\n                type: \"morphology\",\n                relation: trait,\n                value: newValue,\n                currentValue: oldValue\n            }\n\n            this.morphoTraits.at(i).get('value').setValue(newValue, { emitEvent: false });\n\n            this.staticMorpho[i] = { trait: trait, value: newValue }\n            let lexId = this.object.lexicalEntryInstanceName;\n\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).pipe(debounceTime(1000)).subscribe(\n                data => {\n                    //console.log(data)\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard(data)\n                },\n                error => {\n                    //console.log(error)\n                    this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    if(typeof(error.error) != 'object'){\n                        this.toastr.error(error.error, 'Error', {\n                          timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.success('Morphotraits changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }\n                }\n            )\n\n        } else {\n            this.lexicalService.spinnerAction('on');\n        }\n    }\n\n    onChangeValue(i) {\n        this.lexicalService.spinnerAction('on');\n        this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n        const trait = this.morphoTraits.at(i).get('trait').value;\n        const value = this.morphoTraits.at(i).get('value').value;\n      \n        if (trait != '' && value != '') {\n            let parameters;\n            if (this.memoryValues[i] == \"\") {\n                parameters = {\n                    type: \"morphology\",\n                    relation: trait,\n                    value: value\n                }\n            } else {\n                parameters = {\n                    type: \"morphology\",\n                    relation: trait,\n                    value: value,\n                    currentValue: this.memoryValues[i]\n                }\n            }\n\n            this.staticMorpho.push({ trait: trait, value: value })\n            let lexId = this.object.lexicalEntryInstanceName;\n\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).pipe(debounceTime(1000)).subscribe(\n                data => {\n                    //console.log(data)\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard(data)\n\n                    this.disableAddMorpho = false;\n                    setTimeout(() => {\n                        \n                        let traitDescription = '';\n                        this.morphologyData.filter(x => {\n                            if (x.propertyId == trait && trait != 'partOfSpeech') {\n                                x.propertyValues.filter(y => {\n                                    if(y.valueId == value){\n                                        traitDescription = y.valueDescription;\n                                        return true;\n                                    }else{\n                                        return false;\n                                    }\n                                })\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })\n\n                        //@ts-ignore\n                        $('.trait-tooltip').tooltip({\n                            trigger: 'hover'\n                        });\n                        \n                        \n                    }, 1000);\n                },\n                error => {\n                    //console.log(error)\n                    this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.disableAddMorpho = false;\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    setTimeout(() => {\n                        \n                        let traitDescription = '';\n                        this.morphologyData.filter(x => {\n                            if (x.propertyId == trait && trait != 'partOfSpeech') {\n                                x.propertyValues.filter(y => {\n                                    if(y.valueId == value){\n                                        traitDescription = y.valueDescription;\n                                        return true;\n                                    }else{\n                                        return false;\n                                    }\n                                })\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })\n\n                        this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n                        this.morphoTraits.at(i).patchValue({ trait: trait, value: value, description: traitDescription });\n                        \n                        //@ts-ignore\n                        $('.trait-tooltip').tooltip({\n                            trigger: 'hover'\n                        });\n                        if(typeof(error.error) != 'object'){\n                            this.toastr.error(error.error, 'Error', {\n                              timeOut: 5000,\n                            });\n                        }else{\n                            this.toastr.success('Morphotraits changed correctly for ' + lexId, '', {\n                                timeOut: 5000,\n                            });\n                        }\n                        \n                    }, 1000);\n                }\n            )\n        } else {\n            this.lexicalService.spinnerAction('off');\n        }\n    }\n\n    onChangeTrait(evt, i) {\n\n        if (evt.target != undefined) {\n            setTimeout(() => {\n                this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n                this.morphoTraits.at(i).patchValue({ trait: evt.target.value, value: \"\" });\n                if (evt.target.value != '') {\n                    let arrayValues = this.morphologyData.filter(x => {\n                        return x['propertyId'] == evt.target.value;\n                    })['0']['propertyValues'];\n                    this.valueTraits[i] = arrayValues;\n                    this.memoryTraits[i] = evt.target.value;\n                    this.memoryValues[i] = \"\";\n                } else {\n                    this.memoryValues.splice(i, 1);\n                    let arrayValues = [];\n                    this.valueTraits[i] = arrayValues\n                    this.memoryTraits.splice(i, 1)\n                }\n            }, 500);\n        } else {\n\n            var that = this;\n            var timer = setInterval((val)=>{                \n                \n                try{\n                    var arrayValues = this.morphologyData.filter(x => {\n                        return x['propertyId'] == evt;\n                    })['0']['propertyValues'];\n                    this.valueTraits[i] = arrayValues;\n                    this.memoryTraits.push(evt);\n                    clearInterval(timer)\n                }catch(e){\n                    console.log(e)\n                }\n                    \n                       \n            }, 500)\n\n        }\n    }\n\n\n    onChanges(): void {\n\n        this.coreForm.get(\"label\").valueChanges.pipe(debounceTime(1000)).subscribe(\n            updatedLabel => {\n                if (updatedLabel.length > 2 && updatedLabel.trim() != '') {\n                    this.emptyLabelFlag = false;\n                    this.lexicalService.spinnerAction('on');\n                    let lexId = this.object.lexicalEntryInstanceName;\n                    let parameters = {\n                        relation: 'label',\n                        value: updatedLabel\n                    }\n                    this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n                        data => {\n                            console.log(data);\n                            data['request'] = 0;\n                            data['new_label'] = updatedLabel\n                            this.lexicalService.refreshAfterEdit(data);\n                            this.lexicalService.spinnerAction('off');\n                            this.lexicalService.updateCoreCard(data)\n                            \n                        },\n                        error => {\n                            console.log(error);\n                            const data = this.object;\n                            data['request'] = 0;\n                            data['new_label'] = updatedLabel;\n                            this.lexicalService.refreshAfterEdit(data);\n                            this.lexicalService.spinnerAction('off');\n                            this.lexicalService.updateCoreCard({ lastUpdate: error.error.text });\n                            this.lexicalService.changeDecompLabel(updatedLabel)\n                            if(typeof(error.error) != 'object'){\n                                this.toastr.error(error.error, 'Error', {\n                                  timeOut: 5000,\n                                });\n                            }else{\n                                this.toastr.success('Label changed correctly for ' + lexId, '', {\n                                    timeOut: 5000,\n                                });\n                            }\n                        }\n                    )\n                } else if (updatedLabel.length < 3) {\n                    \n                    this.emptyLabelFlag = true;\n                }\n            }\n        )\n\n        this.coreForm.controls['confidence'].valueChanges.pipe(startWith(undefined), debounceTime(1000), pairwise()).subscribe(newConfidence => {\n            console.log('Old value: ', newConfidence[0]);\n            console.log('New value: ', newConfidence[1]);\n            this.lexicalService.spinnerAction('on');\n            let parameters = {};\n            let lexId = this.object.lexicalEntryInstanceName;\n            let oldValue = newConfidence[0];\n            let newValue = newConfidence[1];\n\n            if(oldValue == undefined){\n                parameters = {\n                    type: \"confidence\",\n                    relation: 'confidence',\n                    value: newValue\n                }\n            }else if(oldValue != undefined && this.object.confidence == -1){\n                parameters = {\n                    type: \"confidence\",\n                    relation: 'confidence',\n                    value: newValue,\n                    currentValue : -1\n                }\n            }else{\n                parameters = {\n                    type: \"confidence\",\n                    relation: 'confidence',\n                    value: newValue,\n                    currentValue : oldValue\n                }\n            }\n            \n            console.log(parameters)\n            this.lexicalService.updateGenericRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data);\n                   \n                    this.lexicalService.updateCoreCard(data)\n                    this.lexicalService.spinnerAction('off');\n                },\n                error => {\n                    console.log(error);\n                   \n                    this.lexicalService.spinnerAction('off');\n                    \n                    if(error.status == 200){\n                      this.toastr.success('Confidence updated', '', {timeOut: 5000})\n                      this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                      this.coreForm.get('confidence').setValue(newValue, { emitEvent: false });\n                      this.object.confidence = newValue;\n                    }else{\n                      this.toastr.error(error.error, 'Error', {timeOut: 5000})\n      \n                    }\n                }\n            )\n        })\n\n        \n\n        this.coreForm.get(\"stemType\").valueChanges.pipe(debounceTime(1000)).subscribe(\n            updateStem => {\n                \n                this.lexicalService.spinnerAction('on');\n                let lexId = this.object.lexicalEntryInstanceName;\n                let parameters = {\n                    type: 'extension',\n                    relation : 'stemType',\n                    value: updateStem\n                }\n                console.log(parameters)\n                this.lexicalService.updateGenericRelation(lexId, parameters).subscribe(\n                    data => {\n                        console.log(data);\n                        \n                        this.lexicalService.spinnerAction('off');\n                        this.lexicalService.updateCoreCard(data)\n                        \n                    },\n                    error => {\n                        console.log(error);\n                       \n                        this.lexicalService.spinnerAction('off');\n                        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                        if(typeof(error.error) != 'object'){\n                            this.toastr.error(error.error, 'Error', {\n                                timeOut: 5000,\n                            });\n                        }else{\n                            this.toastr.success('stemType changed correctly for ' + lexId, '', {\n                                timeOut: 5000,\n                            });\n                        }\n                    }\n                )\n                 \n            }\n        )\n\n        this.coreForm.get(\"type\").valueChanges.pipe(debounceTime(200)).subscribe(\n            newType => {\n                this.lexicalService.spinnerAction('on');\n                let lexId = this.object.lexicalEntryInstanceName;\n                let parameters = {\n                    relation: 'type',\n                    value: newType\n                }\n                this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n                    data => {\n                        //console.log(data);\n                        this.lexicalService.spinnerAction('off');\n                        data['request'] = 0;\n                        data['new_type'] = newType;\n                        this.lexicalService.refreshAfterEdit(data);\n                        this.lexicalService.refreshFilter({ request: true })\n                        this.lexicalService.updateCoreCard(data)\n\n                        setTimeout(() => {\n                            let type = this.coreForm.get('type').value;\n                            this.lexEntryTypesData.forEach(el => {\n                                if(el.valueId == type){\n                                    \n                                    this.typeDesc = el.valueDescription;\n                                }\n                            })\n                            //@ts-ignore\n                            $('.type-tooltip').tooltip({\n                                trigger: 'hover'\n                            });\n                            \n                            \n                        }, 1000);\n                        \n                    },\n                    error => {\n                        //console.log(error);\n                        const data = this.object;\n                        data['request'] = 0;\n                        data['new_type'] = newType;\n                        this.lexicalService.refreshAfterEdit(data);\n                        this.lexicalService.spinnerAction('off');\n                        this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                        this.lexicalService.refreshFilter({ request: true })\n                        if(typeof(error.error) != 'object'){\n                            this.toastr.error(error.error, 'Error', {\n                              timeOut: 5000,\n                            });\n                        }else{\n                            this.toastr.success('Type changed correctly for ' + lexId, '', {\n                                timeOut: 5000,\n                            });\n                        }\n                        setTimeout(() => {\n                            let type = this.coreForm.get('type').value;\n                            this.lexEntryTypesData.forEach(el => {\n                                if(el.valueId == type){\n                                    \n                                    this.typeDesc = el.valueDescription;\n                                }\n                            })\n                            //@ts-ignore\n                            $('.type-tooltip').tooltip({\n                                trigger: 'hover'\n                            });\n                            \n                            \n                        }, 1000);\n                    }\n                )\n            }\n        )\n    }\n\n    applyUncertain(){\n        this.lexicalService.spinnerAction('on');\n        let oldValue = this.coreForm.get('confidence').value;\n        let lexId = this.object.lexicalEntryInstanceName;\n        let parameters = {\n            relation: 'confidence',\n            value: 0,\n        }\n        console.log(parameters)\n        this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n            data => {\n                console.log(data);\n                /* data['request'] = 0;\n                data['new_label'] = confidence_value\n                this.lexicalService.refreshAfterEdit(data); */\n                this.lexicalService.updateCoreCard(data)\n                this.lexicalService.spinnerAction('off');\n                this.coreForm.get('confidence').setValue(-1, { emitEvent: false });\n                this.object.confidence = -1;\n\n                this.toastr.success('Uncertain applied', 'Ok', {timeOut: 5000})\n            },\n            error => {\n                console.log(error);\n                /*  const data = this.object.etymology;\n                data['request'] = 0;\n                data['new_label'] = confidence_value;\n                this.lexicalService.refreshAfterEdit(data); */\n                this.lexicalService.spinnerAction('off');\n                this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                if(error.status == 200){\n                    this.toastr.success('Confidence updated', '', {timeOut: 5000})\n                    this.coreForm.get('confidence').setValue(-1, { emitEvent: false });\n                    this.object.confidence = -1;\n                }else{\n                    this.toastr.error(error.error, 'Error', {timeOut: 5000})\n    \n                }\n            }\n        )\n    }\n\n    createMorphoTraits(t?, v?, d?): FormGroup {\n        if (t != undefined) {\n            return this.formBuilder.group({\n                trait: new FormControl(t, [Validators.required, Validators.minLength(0)]),\n                value: new FormControl(v, [Validators.required, Validators.minLength(0)]),\n                description : new FormControl(d, [Validators.required, Validators.minLength(0)]),\n            })\n        } else {\n            return this.formBuilder.group({\n                trait: new FormControl('', [Validators.required, Validators.minLength(0)]),\n                value: new FormControl('', [Validators.required, Validators.minLength(0)]),\n                description : new FormControl(null, [Validators.required, Validators.minLength(0)])\n            })\n        }\n    }\n\n    createEvokes(e?): FormGroup {\n\n        if (e != undefined) {\n            return this.formBuilder.group({\n                entity: new FormControl(e, [Validators.required, Validators.pattern(this.urlRegex)])\n            })\n        } else {\n            return this.formBuilder.group({\n                entity: new FormControl('', [Validators.required, Validators.pattern(this.urlRegex)])\n            })\n        }\n    }\n\n    createDenotes(e?, t?): FormGroup {\n        if (e != undefined) {\n            return this.formBuilder.group({\n                entity: new FormControl(e, [Validators.required, Validators.pattern(this.urlRegex)]),\n                type: t\n            })\n        } else {\n            return this.formBuilder.group({\n                entity: new FormControl(null, [Validators.required, Validators.pattern(this.urlRegex)]),\n                type: null\n            })\n        }\n    }\n\n    createCognates(l?, iName?, lexName?, e?, t?, lila?): FormGroup {\n        if (e != undefined) {\n            return this.formBuilder.group({\n                label : new FormControl(l, [Validators.required]),\n                instanceName: new FormControl(iName, [Validators.required]),\n                lexicalEntryInstanceName: new FormControl(lexName, [Validators.required]),\n                entity: new FormControl(e, [Validators.required, Validators.pattern(this.urlRegex)]),\n                type: t,\n                lila: lila\n            })\n        } else {\n            return this.formBuilder.group({\n                label: new FormControl(null, [Validators.required]),\n                instanceName: new FormControl(null, [Validators.required]),\n                lexicalEntryInstanceName: new FormControl(null, [Validators.required]),\n                entity: new FormControl(null, [Validators.required, Validators.pattern(this.urlRegex)]),\n                type: null,\n                lila: false\n            })\n        }\n    }\n\n\n    handleDenotes(evt, i) {\n\n        if (evt instanceof NgSelectComponent) {\n            if (evt.selectedItems.length > 0) {\n                let label = evt.selectedItems[0]['value']['lexicalEntry'];\n                this.onChangeDenotes({ name: label, i: i })\n            }\n        } else {\n            let label = evt.target.value;\n            this.denotes_subject.next({ name: label, i: i })\n        }\n    }\n\n    handleCognates(evt, i) {\n\n        if (evt instanceof NgSelectComponent) {\n            if (evt.selectedItems.length > 0) {\n                console.log(evt.selectedItems[0])\n                let label = \"\";\n                if(evt.selectedItems[0]['value']['lexicalEntryInstanceName'] == undefined){\n                    label = evt.selectedItems[0]['value']['labelValue'];\n                }else{\n                    label = evt.selectedItems[0]['value']['lexicalEntryInstanceName'];\n                }\n                this.onChangeCognates({ name: label, i: i })\n            }\n        } else {\n            let label = evt.target.value;\n            this.cognates_subject.next({ name: label, i: i })\n        }\n    }\n\n    onChangeDenotes(data) {\n        var index = data['i'];\n        this.denotesArray = this.coreForm.get(\"denotes\") as FormArray;\n        if (this.memoryDenotes[index] == undefined) {\n            const newValue = data['name']\n            const parameters = {\n                type: \"conceptRef\",\n                relation: \"denotes\",\n                value: newValue\n            }\n            //console.log(parameters)\n            let lexId = this.object.lexicalEntryInstanceName;\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data);\n                    this.lexicalService.spinnerAction('off');\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.updateCoreCard(data)\n                }, error => {\n                    console.log(error)\n\n                    /* this.toastr.error(error.error, 'Error', {\n                        timeOut: 5000,\n                    }); */\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    \n                    this.lexicalService.spinnerAction('off');\n                    if(error.status == 200){\n                        this.toastr.success('Denotes changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.error(error.error, 'Error', {\n                            timeOut: 5000,\n                        });\n                        \n                    }\n                }\n            )\n            this.memoryDenotes[index] = data;\n\n\n        } else {\n            const oldValue = this.memoryDenotes[index]['lexicalEntity']\n            const newValue = data['name']\n            const parameters = {\n                type: \"conceptRef\",\n                relation: \"denotes\",\n                value: newValue,\n                currentValue: oldValue\n            }\n           \n            let lexId = this.object.lexicalEntryInstanceName;\n            //console.log(parameters)\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data);\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.updateCoreCard(data)\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                }, error => {\n                    console.log(error)\n                    const data = this.object;\n                    data['request'] = 0;\n                    this.toastr.error(error.error, 'Error', {\n                        timeOut: 5000,\n                    });\n                    //this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    this.lexicalService.spinnerAction('off');\n                    if(typeof(error.error) != 'object'){\n                        this.toastr.error(error.error, 'Error', {\n                          timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.success('Label changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }\n                }\n            )\n            this.memoryDenotes[index] = data;\n        }\n\n\n    }\n\n    onChangeCognates(data) {\n        var index = data['i'];\n        this.cognatesArray = this.coreForm.get(\"cognates\") as FormArray;\n\n        let existOrNot = this.memoryCognates.some(element => element?.lexicalEntityInstanceName == data.name || element?.name == data.name) \n\n        if (this.memoryCognates[index] == undefined && !existOrNot) {\n            const newValue = data['name']\n            const parameters = {\n                type: \"lexicalRel\",\n                relation: \"cognate\",\n                value: newValue\n            }\n            console.log(parameters)\n            let lexId = this.object.lexicalEntryInstanceName;\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data);\n                    this.lexicalService.spinnerAction('off');\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.updateCoreCard(data)\n                    //TODO: memorizzare nel form i dati aggiornati dei cognate\n                    this.disableAddCognates = false;\n                }, error => {\n                    console.log(error)\n\n                    /* this.toastr.error(error.error, 'Error', {\n                        timeOut: 5000,\n                    }); */\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    this.lexicalService.spinnerAction('off');\n                    if(error.status == 200){\n                        this.disableAddCognates = false;\n                        this.toastr.success('Cognates changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.error(error.error, 'Error', {\n                            timeOut: 5000,\n                          });\n                        \n                    }\n                }\n            )\n            this.memoryCognates[index] = data;\n\n\n        } else if(this.memoryCognates[index] != undefined && !existOrNot) {\n            const oldValue = this.memoryCognates[index]['lexicalEntity']\n            const newValue = data['name']\n            const parameters = {\n                type: \"lexicalRel\",\n                relation: \"cognate\",\n                value: newValue,\n                currentValue: oldValue\n            }\n           \n            let lexId = this.object.lexicalEntryInstanceName;\n            console.log(parameters)\n            this.lexicalService.updateLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data);\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.updateCoreCard(data)\n                    data['request'] = 0;\n                    this.lexicalService.refreshAfterEdit(data);\n                }, error => {\n                    console.log(error)\n                    const data = this.object;\n                    data['request'] = 0;\n                    \n                    //this.lexicalService.refreshAfterEdit(data);\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    this.lexicalService.spinnerAction('off');\n                    if(error.status == 200){\n                        this.toastr.success('Label changed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.error(error.error, 'Error', {\n                            timeOut: 5000,\n                          });\n                    }\n                }\n            )\n            this.memoryCognates[index] = data;\n        }else if(existOrNot){\n            this.toastr.error('This cognates already exist in this lexical entry', 'Error', {\n                timeOut: 5000\n            })\n        }\n\n\n    }\n\n   /*  handleEvokes(evt, i) {\n\n        if (evt instanceof NgSelectComponent) {\n            if (evt.selectedItems.length > 0) {\n                let label = evt.selectedItems[0].label\n                this.onChangeDenotes({ name: label, i: i })\n            }\n        } else {\n            let label = evt.target.value;\n            this.evokes_subject.next({ name: label, i: i })\n        }\n\n    }\n */\n    \n\n    addDenotes(e?, t?) {\n        this.denotesArray = this.coreForm.get(\"denotes\") as FormArray;\n        if (e != undefined) {\n            this.denotesArray.push(this.createDenotes(e, t));\n        } else {\n            this.denotesArray.push(this.createDenotes());\n        }\n\n    }\n\n    addCognates(l?, iName?, lexIn?, e?, t?) {\n        \n        setTimeout(() => {\n            //@ts-ignore\n            $('.cognates-tooltip').tooltip({\n                trigger: 'hover'\n            });\n        }, 1000);\n        this.cognatesArray = this.coreForm.get(\"cognates\") as FormArray;\n        if (e != undefined) {\n            let lila = false;\n            if(e.includes('lila')){\n                lila = true;\n            }\n            this.cognatesArray.push(this.createCognates(l, iName, lexIn, e, t, lila));\n        } else {\n            this.disableAddCognates = true;\n            this.cognatesArray.push(this.createCognates());\n        }\n\n    }\n\n    \n\n    addMorphoTraits(t?, v?, d?) {\n        \n        this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n        if (t != undefined) {\n            this.morphoTraits.push(this.createMorphoTraits(t, v, d));\n        } else {\n            this.disableAddMorpho = true;\n            this.morphoTraits.push(this.createMorphoTraits());\n        }\n    }\n\n    removeElement(index) {\n        \n        this.memoryTraits.splice(index, 1);\n        this.valueTraits.splice(index, 1);\n        this.staticMorpho.splice(index, 1)\n        \n        this.morphoTraits = this.coreForm.get('morphoTraits') as FormArray;\n\n        const trait = this.morphoTraits.at(index).get('trait').value;\n        const value = this.morphoTraits.at(index).get('value').value;\n\n        \n\n        if (trait != '') {\n\n            let lexId = this.object.lexicalEntryInstanceName;\n\n            let parameters = {\n                type: 'morphology',\n                relation: trait,\n                value: value\n            }\n\n            //console.log(parameters)\n\n            this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    //console.log(data)\n                    this.lexicalService.updateCoreCard(this.object)\n                    this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                }, error => {\n                    //console.log(error)\n                    this.lexicalService.refreshAfterEdit({ request: 0, label: this.object.label });\n                    this.lexicalService.spinnerAction('off');\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    if(typeof(error.error) != 'object'){\n                        this.toastr.error(error.error, 'Error', {\n                          timeOut: 5000,\n                        });\n                    }else{\n                        this.toastr.success('Element removed correctly for ' + lexId, '', {\n                            timeOut: 5000,\n                        });\n                    }\n                }\n            )\n        }else{\n            this.disableAddMorpho = false;\n        }\n\n\n        this.morphoTraits.removeAt(index);\n    }\n\n    removeDenotes(index) {\n        this.denotesArray = this.coreForm.get('denotes') as FormArray;\n\n        const entity = this.denotesArray.at(index).get('entity').value;\n\n        let lexId = this.object.lexicalEntryInstanceName;\n\n        let parameters = {\n            relation: 'denotes',\n            value: entity\n        }\n        \n\n        if (entity != '') {\n            this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data)\n                    this.lexicalService.updateCoreCard(this.object);\n                    this.toastr.success(\"Denotes removed\", '', {\n                        timeOut: 5000,\n                    });\n                    \n                }, error => {\n                    console.log(error)\n                    //this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    this.toastr.error(error.error, 'Error', {\n                        timeOut: 5000,\n                    });\n                }\n            )\n        }\n\n\n        this.denotesArray.removeAt(index);\n\n        this.memoryDenotes.splice(index, 1)\n    }\n\n    removeCognates(index) {\n        this.cognatesArray = this.coreForm.get('cognates') as FormArray;\n\n        const entity = this.cognatesArray.at(index).get('entity').value;\n\n        let lexId = this.object.lexicalEntryInstanceName;\n\n        let parameters = {\n            relation: 'cognate',\n            value: entity\n        }\n        \n\n        if (entity != '') {\n            this.lexicalService.deleteLinguisticRelation(lexId, parameters).subscribe(\n                data => {\n                    console.log(data)\n                    this.lexicalService.updateCoreCard(this.object);\n                    /* this.annotatorService.closePanelForm(id);\n                    if(this.arrayComponents.length > 0){\n                    this.arrayComponents.forEach(instanceComponent => {\n                        if(instanceComponent.instance.id == id){\n                \n                        setTimeout(() => {\n                            instanceComponent.instance.formPanelModal.hide();\n                        }, 100);\n                        }\n                    })\n                    } */\n                    this.toastr.success(\"Cognate deleted successfully\", '', {\n                        timeOut: 5000,\n                    });\n                    \n                }, error => {\n                    console.log(error)\n                    //this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n                    this.toastr.error(error.error, 'Error', {\n                        timeOut: 5000,\n                    });\n                }\n            )\n        }\n\n        this.disableAddCognates = false;\n        this.cognatesArray.removeAt(index);\n\n        this.memoryCognates.splice(index, 1)\n    }\n\n    isEtymon(boolean: boolean){\n        \n        setTimeout(() => {\n            //@ts-ignore\n        $('.type-tooltip').tooltip({\n            trigger: 'hover'\n        });\n        }, 700);\n\n        this.lexicalService.spinnerAction('on');\n        let lexId = this.object.lexicalEntryInstanceName;\n        let value = '';\n        if(boolean){\n            value = 'Etymon'\n            this.coreForm.get('type').setValue('Etymon', { emitEvent: false });\n            this.coreForm.get('type').disable({onlySelf: true, emitEvent: false})\n            if(typeof(this.object.type != 'string')){\n                this.object.type.push('Etymon');\n            } else {\n                this.object.type = 'Etymon'\n            }\n        }else{\n            value = 'LexicalEntry'\n            this.coreForm.get('type').setValue('LexicalEntry', { emitEvent: false });\n            this.coreForm.get('type').enable({onlySelf: true, emitEvent: false})\n            if(typeof(this.object.type != 'string')){\n                this.object.type.splice(this.object.type.indexOf('Etymon'), 1);\n                if(this.object.type.length == 0){\n                    this.object.type.push(value);\n                }\n            } else {\n                this.object.type = 'LexicalEntry';\n            }\n        }\n\n        let parameters = {\n            relation: 'type',\n            value: value\n        }\n\n        \n\n        this.lexicalService.updateLexicalEntry(lexId, parameters).subscribe(\n            data => {\n                console.log(data);\n                this.lexicalService.spinnerAction('off');\n                this.lexicalService.updateCoreCard(data)\n                this.lexicalService.refreshFilter({ request: true })\n\n               this.lexicalService.triggerSameAs(this.object.type)\n            },\n            error => {\n                console.log(error);\n                const data = this.object;\n                this.lexicalService.spinnerAction('off');\n                \n\n                if(error.status == '200'){\n                    this.lexicalService.refreshFilter({ request: true })\n                    this.lexicalService.updateCoreCard({ lastUpdate: error.error.text })\n\n                    this.toastr.success('Lexical Entry updated', '', {\n                        timeOut: 5000\n                    })\n                    this.lexicalService.triggerSameAs(this.object.type)\n                }else{\n                    this.toastr.error(error.error.text, '', { timeOut: 5000})\n                }\n\n\n            }\n        )\n    } \n\n    loadCognateData(cognateInstanceName, lexInstanceName, label){\n        let panel = this.lexicalService.getPanelCognate(cognateInstanceName, lexInstanceName);\n        if(panel == undefined){\n          this.lexicalService.getLexEntryData(cognateInstanceName).subscribe(\n            data=> {\n              console.log(data);\n              if(data != undefined){\n                this.lexicalService.newPanelForm(cognateInstanceName, lexInstanceName);\n                const factory = this.factory.resolveComponentFactory(CognatePanelComponent);\n                const componentRef = this.vc.createComponent(factory);\n                this.arrayComponents.push(componentRef);\n                (<CognatePanelComponent>componentRef.instance).label = label;\n                (<CognatePanelComponent>componentRef.instance).lexicalEntryId = lexInstanceName;\n                (<CognatePanelComponent>componentRef.instance).cogInstanceName = cognateInstanceName;\n                //(<CognatePanelComponent>componentRef.instance).id = idAnnotation;\n                (<CognatePanelComponent>componentRef.instance).lexicalEntryData = data;\n                (<CognatePanelComponent>componentRef.instance).triggerCognatePanel();\n              }\n            }, error=> {\n              console.log(error)\n            }\n          )\n          \n        }else{\n    \n        }\n    \n      }\n}\n","\n\n<form [formGroup]=\"coreForm\" *ngIf=\"object != null\">\n    <div *ngIf=\"{etymon : coreForm.get('type').value == 'Etymon'}; let variable\">\n        <div class=\"form-group row m-2\">\n            <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Label:</label>\n            <div class=\"input-group col-lg-7\">\n                <input id=\"label\" formControlName=\"label\" name=\"label\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                    required>\n                <div class=\"invalid-feedback\" *ngIf=\"emptyLabelFlag\" style=\"display: block;\">\n                    Please, insert at least three characters.\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"form-group row m-2\">\n            <div class=\"col-lg-3\">\n                <div class=\"form-check p-0\">\n                    <label class=\"form-check-label\" for=\"gridCheck1\">\n                        Etymon\n                    </label>\n                    <input [checked]=\"coreForm.get('type').value == 'Etymon'\" class=\"form-check-input\" style=\"margin-left: 10px;\" type=\"checkbox\" id=\"gridCheck1\" onchange=\"document.getElementById('typeSelect').disabled = this.checked;\" (change)=\"variable.etymon = !variable.etymon; isEtymon(variable.etymon);\">\n                </div>\n            </div>\n        </div> -->\n\n        <div class=\"form-group row m-2\">\n            <div class=\"col-lg-3\">\n                <label class=\"\" for=\"sw\">Etymon</label>\n            </div>\n            <div class=\"col-lg-9\">\n                <div class=\"custom-control custom-switch d-inline\" id=\"sw\">\n                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"edit_extra_block\" name=\"extra_block\" value=\"\" [checked]=\"coreForm.get('type').value == 'Etymon'\" style=\"margin-left: 10px;\" onchange=\"document.getElementById('typeSelect').disabled = this.checked;\" (change)=\"variable.etymon = !variable.etymon; isEtymon(variable.etymon);\">\n                    <label class=\"custom-control-label\" for=\"edit_extra_block\"></label>\n                 </div>\n            </div>\n        </div>\n\n        <div class=\"form-group row m-2\" *ngIf=\"{confidence : coreForm.get('confidence').value >= 0}; let variable\">\n            <div class=\"col-lg-3\">\n                <label for=\"uncertainBox\">Uncertain</label>\n            </div>\n            <div class=\"col-lg-3 input-group uncertain\">\n                <input *ngIf=\"variable.confidence\" id=\"attributes\"  step=\"0.1\" formControlName=\"confidence\" name=\"confidence\" type=\"number\" min=\"0\" max=\"1\" class=\"form-control\" placeholder=\"No info\" [value]=\"coreForm.get('confidence').value\">\n                <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"!variable.confidence\" (click)=\"variable.confidence = !variable.confidence\"><i class=\"fas fa-plus\"></i></button>\n                <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" *ngIf=\"variable.confidence\" (click)=\"variable.confidence = !variable.confidence; applyUncertain()\"><i class=\"fas fa-minus\"></i></button>\n            </div>\n        </div>\n\n        <div class=\"form-group row m-2\" *ngIf=\"!variable.etymon\">\n            <div class=\"col-lg-3 col-form-label\">\n                <label for=\"inputType\">Type:</label>\n            </div>\n            <div class=\"col-lg-9 input-group\">\n                <select id=\"typeSelect\" formControlName=\"type\" name=\"type\" class=\"form-control\">\n                    <option *ngFor=\"let lx of lexEntryTypesData\" [selected]=\"coreForm.get('type').value === lx['valueId']\">\n                        {{lx['valueId']}}\n                    </option>\n                </select>\n                <div class=\"input-group-append ml-2\">\n                    <button *ngIf=\"!variable.etymon\" class=\"btn btn-secondary type-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                    data-placement=\"top\" data-trigger=\"hover\" [attr.data-original-title]=\"typeDesc\"\n                        style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n                    <button *ngIf=\"variable.etymon\" class=\"btn btn-secondary type-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                    data-placement=\"top\" data-trigger=\"hover\" title=\"Etymon' is a subclass of Lexical Entry that consists of individuals whose role is to describe the origin and history of another Lexical Entry.\"\n                    style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n                </div>\n                <div class=\"input-group-append ml-2\">\n                    <button [style.visibility]=\"coreForm.get('isCognate').value ? 'visible' : 'hidden'\" class=\"btn btn-warning type-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                    data-placement=\"top\" data-trigger=\"hover\" title=\"In linguistics, cognates, also called lexical cognates, are words that have a common etymological origin.\"\n                        style=\"font-size: 12px; border-radius: .25rem;\">Cognate</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group row m-2\">\n            <label for=\"inputLanguage\" class=\"col-lg-3 col-form-label\">Language:</label>\n            <div class=\"col-lg-7\">                \n                <select formControlName=\"language\" name=\"language\" class=\"form-control\" (change)=\"onChangeLanguage($event)\">\n                    <option value=\"\">Select language....</option>\n                    <option *ngFor=\"let la of languages\" [value]=\"la['label'].toLowerCase()\" [selected]=\"object.language.toLowerCase() == la['label'].toLowerCase()\">{{la['label']}}\n                    </option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"coreForm.get('language').value == ''\" style=\"display: block;\">\n                    Please, don't leave this field blank\n                </div>\n            </div>\n        </div>\n    </div>\n    \n\n    <!-- MORPHOLOGY -->\n    <div class=\"form-group row m-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>MORPHOLOGY</b></span>\n                <a class=\"pointer\" (click)=\"addMorphoTraits()\" [ngClass]=\"{no_pointer: disableAddMorpho}\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div class=\"d-flex my-3\">\n                        <div class=\"col-md-4\">\n                            <label for=\"selectPos\" class=\"col-form-label\">Part of speech:</label>\n                        </div>\n                        <div class=\"input-group col-md-8\">\n                            <select class=\"form-control selectTrait\" formControlName=\"pos\" name=\"pos\"\n                                style=\"font-size:12px;\" (change)=\"onChangePos($event)\">\n                                <option value=\"\">Select a value...</option>\n                                <option *ngFor=\"let item of valuePos;\" [selected]=\"item.valueId == object.pos\">\n                                    {{item.valueId}}</option>\n                            </select>\n                            <div class=\"input-group-append ml-2\">\n                                <button class=\"btn btn-secondary pos-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                                data-placement=\"top\" data-trigger=\"hover\" [attr.data-original-title]=\"posDescription\"\n                                    style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n                            </div>\n\n                            <div class=\"invalid-feedback\" *ngIf=\"!coreForm.get('pos').valid\"\n                                style=\"display: block;\">\n                                Please, don't leave this field blank\n                            </div>\n\n                        </div>\n                    </div>\n\n\n                    <ng-container *ngFor=\"let stat of staticMorpho; let i = index\">\n                        <div class=\"d-flex my-3\" *ngIf=\"stat['trait'] != 'partOfSpeech'\">\n                            <div class=\"col-md-4\">\n                                <label class=\"col-form-label\">{{stat['trait']}}</label>\n                            </div>\n                            <div class=\"input-group col-md-8\">\n                                <select class=\"form-control selectTrait\" style=\"font-size:12px;\"\n                                    (change)=\"onChangeExistingValue($event, i)\">\n                                    <option *ngFor=\"let item of valueTraits[i];\"\n                                        [selected]=\"stat['value'] === item.valueId\">{{item.valueId}}</option>\n                                </select>\n                                <div class=\"input-group-append ml-2\">\n                                    <button *ngIf=\"coreForm['controls'].morphoTraits?.value[i] != null\" class=\"btn btn-secondary trait-tooltip\" type=\"button\" data-toggle=\"tooltip\"\n                                    data-placement=\"top\" data-trigger=\"hover\" [attr.data-original-title]=\"coreForm.get('morphoTraits').at(i).get('description').value\"\n                                        style=\"font-size: 12px; border-radius: .25rem;\"><i class=\"fas fa-question\"></i></button>\n                                        \n                                </div>\n                                <div (click)=\"removeElement(i)\" class=\"input-group-append ml-2\"> <button\n                                        class=\"btn btn-danger\" type=\"button\"\n                                        style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                            class=\"fa fa-trash-alt\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <ng-container formArrayName=\"morphoTraits\"\n                        *ngFor=\"let morpho of coreForm.get('morphoTraits')['controls']; let i = index\">\n                        <div class=\"d-flex my-2\" *ngIf=\"i + 1 > staticMorpho.length\">\n                            <div class=\"col-md-4\" [formGroupName]=\"i\">\n                                <select class=\"form-control selectTrait\" formControlName=\"trait\" name=\"trait\"\n                                    style=\"font-size: 12px;\" (change)=\"onChangeTrait($event, i)\">\n                                    <option value=\"\">Select a trait...</option>\n                                    <option *ngFor=\"let mt of morphologyData\"\n                                        [selected]=\"morpho.value['trait'] === mt.propertyId\"\n                                        [disabled]=\"memoryTraits.indexOf(mt.propertyId) > -1 || mt.propertyId == 'partOfSpeech'\">{{mt.propertyId}}</option>\n                                </select>\n                                <div class=\"invalid-feedback\" *ngIf=\"morpho.get('trait').invalid\"\n                                    style=\"display: block;\">\n                                    Please, don't leave this field blank\n                                </div>\n                            </div>\n                            <div class=\"input-group col-md-8\" [formGroupName]=\"i\">\n                                <select class=\"form-control selectTrait\" formControlName=\"value\" name=\"value\"\n                                    style=\"font-size:12px;\" (change)=\"onChangeValue(i)\">\n                                    <option value=\"\">Select a value...</option>\n                                    <option *ngFor=\"let item of valueTraits[i];\" [attr.data-index]=\"i\"\n                                        [selected]=\"morpho.value['value'] === item.valueId\">{{item.valueId}}</option>\n                                </select>\n                                <div (click)=\"removeElement(i)\" class=\"input-group-append ml-2\"> <button\n                                        class=\"btn btn-danger\" type=\"button\"\n                                        style=\"font-size: 12px; border-radius: .25rem;\"><i\n                                            class=\"fa fa-trash-alt\"></i></button>\n                                </div>\n                                <div class=\"invalid-feedback\" *ngIf=\"morpho.get('value').invalid\"\n                                    style=\"display: block;\">\n                                    Please, don't leave this field blank\n                                </div>\n                            </div>\n                        </div>\n\n                    </ng-container>\n\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row m-2 mt-3\">\n        <label for=\"inputLabel\" class=\"col-lg-3 col-form-label\">Stem type:</label>\n        <div class=\"input-group col-lg-7\">\n            <input id=\"stemType\" formControlName=\"stemType\" name=\"stemType\" type=\"text\" class=\"form-control\" placeholder=\"\"\n                required>\n            <!-- <div class=\"invalid-feedback\" *ngIf=\"emptyLabelFlag\" style=\"display: block;\">\n                Please, insert at least three characters.\n            </div> -->\n        </div>\n    </div>\n\n\n    <div class=\"form-group row m-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>DENOTES</b></span>\n                <a class=\"pointer\" (click)=\"addDenotes()\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div class=\"form-group row m-2\" formArrayName=\"denotes\"\n                        *ngFor=\"let den of coreForm.get('denotes')['controls']; let i = index\">\n                        <div class=\"input-group col-xl-12\"  [formGroupName]=\"i\">\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" [value]=\"den.get('entity').value\"\n                                class=\"form-control\" placeholder=\"Insert URI\"\n                               \n                                (keyup)=\"handleDenotes($event, i)\">\n                            <div class=\"input-group-append ml-2\">\n                                <a [href]=\"den.get('entity').value\" target=\"_blank\" class=\"btn btn-primary\" type=\"button\"><i\n                                        class=\"fa fa-external-link-alt\"></i></a>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeDenotes(i)\" class=\"btn btn-danger\" type=\"button\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row m-2\">\n        <div class=\"input-group col-lg-12\">\n            <div class=\"card\">\n                <span class=\"text-id\"><b>COGNATES</b></span>\n                <a class=\"pointer\" (click)=\"addCognates()\" [ngClass]=\"{no_pointer: disableAddCognates}\"><span class=\"collapse-icon\"><i\n                            class=\"fa fa-plus-square\"></i></span></a>\n                <div class=\"card-body\">\n                    <div class=\"form-group row m-2\" formArrayName=\"cognates\"\n                        *ngFor=\"let cog of coreForm.get('cognates')['controls']; let i = index\">\n                        <div class=\"input-group col-xl-12\"  [formGroupName]=\"i\" *ngIf=\"{switch : false}; let variable\">\n                            <!-- {{variable.switch}}\n                            {{cog.get('lila').value}} -->\n                            <ng-select #select_cognates formControlName=\"label\" name=\"label\" [dropdownPosition]=\"'top'\"\n                                (keyup)=\"triggerCognates($event, i)\" (change)=\"handleCognates(select_cognates, i)\"\n                                [items]=\"searchResults\" bindValue=\"label\" (focus)=\"deleteData()\" bindLabel=\"label\"\n                                placeholder=\"Search cognates\" appendTo=\"body\" \n                                *ngIf=\"!variable.switch || cog.get('lila').value\">\n                                <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\" *ngIf=\"!cog.get('lila').value\">\n                                    <div>\n                                        <span>{{item.label}} </span><span style=\"color: blue;\">@{{item.language}}</span>\n                                    </div>\n\n                                </ng-template>\n\n                                <ng-template ng-option-tmp let-item=\"item\" let-search=\"searchTerm\" *ngIf=\"cog.get('lila').value\">\n                                    <div class=\"card-body p-0\">\n                                        <h6 class=\"card-title m-0\" [ngOptionHighlight]=\"search\">{{item.labelElement}}</h6>\n                                        <small>\n                                            <span>\n                                                {{item.labelPos}} \n                                            </span>\n                                        </small>\n                                        <small class=\"card-text\">\n                                           \n                        \n                                        </small>\n                                       \n                                    </div>\n\n                                </ng-template>\n                            </ng-select>\n                            <input formControlName=\"entity\" name=\"entity\" type=\"text\" [value]=\"cog.get('entity').value\"\n                                class=\"form-control\" placeholder=\"Insert URI\"\n                                *ngIf=\"variable.switch  && !cog.get('lila').value\"\n                                (keyup)=\"handleCognates($event, i)\">\n                            <div class=\"input-group-append ml-3 form-check\" style=\"align-items: center;\">\n                                <input class=\"form-check-input cognates-tooltip\" type=\"checkbox\"\n                                    (change)=\"variable.switch=!variable.switch\" data-toggle=\"tooltip\"\n                                    data-placement=\"bottom\" data-trigger=\"hover\"\n                                    title=\"Clicca per inserire un URI manualmente\">\n                            </div>\n                            <div class=\"input-group-append ml-2\" *ngIf=\"cog.get('type').value == 'external' && cog.get('entity').value != ''\" container=\"body\" placement=\"top\" ngbTooltip=\"Open in Lila Page\">\n                                <a  [href]=\"cog.get('entity').value\" target=\"_blank\"  class=\"btn btn-info\"\n                                    type=\"button\"><i class=\"fas fa-globe-europe\"></i></a>\n                            </div>\n                            <div class=\"input-group-append ml-2\" *ngIf=\"cog.get('type').value == 'internal' && cog.get('entity').value != ''\" container=\"body\" placement=\"top\" ngbTooltip=\"Open in new panel\">\n                                <a  (click)=\"loadCognateData(cog.get('instanceName').value, cog.get('lexicalEntryInstanceName').value, cog.get('label').value); \"  class=\"btn btn-primary\"\n                                    type=\"button\"><i class=\"fas fa-external-link-alt\"></i></a>\n                            </div>\n                            <div class=\"input-group-append ml-2\" *ngIf=\"!variable.switch\">\n                                <div class=\"btn-group-toggle\" data-toggle=\"buttons\" placement=\"top\" ngbTooltip=\"Enable LiLa endpoint\" title=\"Enable LiLa endpoint\" >\n                                    <label class=\"btn btn-secondary\" >\n                                      <input type=\"checkbox\" autocomplete=\"off\" formControlName=\"lila\" name=\"lila\" style=\"border-radius: .3rem;\"> \n                                        <img src=\"../../../../../../../assets/images/graphql.png\" alt=\"Avatar\" class=\"image\" style=\"height: 20px;\">\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"input-group-append ml-2\">\n                                <button (click)=\"removeCognates(i)\" class=\"btn btn-danger\" type=\"button\"><i\n                                        class=\"fa fa-trash-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</form>\n\n<!-- {{coreForm.value | json}} -->\n\n<ng-template #cognatePanel></ng-template>\n","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","/*\n  © Copyright 2021-2022  Istituto di Linguistica Computazionale \"A. Zampolli\", Consiglio Nazionale delle Ricerche, Pisa, Italy.\n \nThis file is part of EpiLexo.\n\nEpiLexo is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nEpiLexo is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with EpiLexo. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { LexicalEntriesService } from 'src/app/services/lexical-entries/lexical-entries.service';\n\n@Component({\n  selector: 'app-link-panel',\n  templateUrl: './link-panel.component.html',\n  styleUrls: ['./link-panel.component.scss']\n})\nexport class LinkPanelComponent implements OnInit {\n\n  @Input() linkData: any[] | any;\n  \n  seeAlsoData : {};\n  sameAsData : {};\n  counterElement = 0;\n  object : any;\n  constructor(private lexicalService: LexicalEntriesService) { }\n\n  ngOnInit(): void {\n\n    this.lexicalService.refreshLinkCounter$.subscribe(\n      data=>{\n        console.log(data)\n        if(data!=null){\n          this.counterElement = eval(this.counterElement.toString()+data)\n        }\n      },error=>{\n\n      }\n    )\n  }\n\n  ngOnChanges(changes: SimpleChanges){\n    if(changes.linkData.currentValue != null){\n      this.counterElement = 0;\n      this.object = changes.linkData.currentValue;\n      this.sameAsData = null;\n      this.seeAlsoData = null;\n      \n      /* //console.log(changes.linkData.currentValue) */\n\n      if(this.object.lexicalEntryInstanceName != undefined){\n        let lexId = this.object.lexicalEntryInstanceName;\n        this.lexicalService.getLexEntryLinguisticRelation(lexId, 'sameAs').subscribe(\n          data=>{\n            console.log(data, this.object);\n            this.sameAsData = {}\n            this.sameAsData['array'] = data;\n            this.sameAsData['parentNodeLabel']= this.object['lexicalEntry'];\n            this.sameAsData['lexicalEntryInstanceName']= this.object['lexicalEntryInstanceName'];\n            this.sameAsData['type'] = this.object.type;\n          }, error=>{\n            console.log(this.object)\n            this.sameAsData = {}\n            this.sameAsData['array'] = [];\n            this.sameAsData['parentNodeLabel']= this.object['lexicalEntry'];\n            this.sameAsData['lexicalEntryInstanceName']= this.object['lexicalEntryInstanceName'];\n            this.sameAsData['label']= this.object['label'];\n            this.sameAsData['type'] = this.object.type;\n            console.log(error);\n            \n          }\n        )\n\n        this.lexicalService.getLexEntryLinguisticRelation(lexId, 'seeAlso').subscribe(\n          data=>{\n            console.log(data)\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = data;\n            this.seeAlsoData['parentNodeLabel']= this.object['lexicalEntry'];\n            this.seeAlsoData['lexicalEntryInstanceName']= this.object['lexicalEntryInstanceName'];\n          }, error=>{\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = [];\n            this.seeAlsoData['parentNodeLabel']= this.object['lexicalEntry'];\n            this.seeAlsoData['lexicalEntryInstanceName']= this.object['lexicalEntryInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        //console.log(this.object)\n        this.object.links.forEach(element => {\n          if(element.type != undefined){\n            if(element.type == 'Reference'){\n              element.elements.forEach(sub => {\n                this.counterElement += sub.count;\n              });\n            }\n          }\n        });\n      }else if(this.object.formInstanceName != undefined){\n        let formId = this.object.formInstanceName;\n        this.lexicalService.getLexEntryLinguisticRelation(formId, 'sameAs').subscribe(\n          data=>{\n            //console.log(data);\n            this.sameAsData = {}\n            this.sameAsData['array'] = data;\n            this.sameAsData['formInstanceName']= this.object['formInstanceName'];\n          }, error=>{\n            this.sameAsData = {}\n            this.sameAsData['array'] = [];\n            this.sameAsData['formInstanceName']= this.object['formInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        this.lexicalService.getLexEntryLinguisticRelation(formId, 'seeAlso').subscribe(\n          data=>{\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = data;\n            this.seeAlsoData['formInstanceName']= this.object['formInstanceName'];\n          }, error=>{\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = [];\n            this.seeAlsoData['formInstanceName']= this.object['formInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        //console.log(this.object)\n        if(this.object.links != null){\n          this.object.links.forEach(element => {\n            if(element.type != undefined){\n              if(element.type == 'Reference'){\n                element.elements.forEach(sub => {\n                  this.counterElement += sub.count;\n                });\n              }\n            }\n          });\n        }\n        \n      }else if(this.object.senseInstanceName != undefined){\n        let senseId = this.object.senseInstanceName;\n        this.lexicalService.getLexEntryLinguisticRelation(senseId, 'sameAs').subscribe(\n          data=>{\n            //console.log(data);\n            this.sameAsData = {}\n            this.sameAsData['array'] = data;\n            this.sameAsData['senseInstanceName']= this.object['senseInstanceName'];\n          }, error=>{\n            this.sameAsData = {}\n            this.sameAsData['array'] = [];\n            this.sameAsData['senseInstanceName']= this.object['senseInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        this.lexicalService.getLexEntryLinguisticRelation(senseId, 'seeAlso').subscribe(\n          data=>{\n            //console.log(data)\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = data;\n            this.seeAlsoData['senseInstanceName']= this.object['senseInstanceName'];\n          }, error=>{\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = [];\n            this.seeAlsoData['senseInstanceName']= this.object['senseInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        //console.log(this.object)\n        if(this.object.links != null){\n          this.object.links.forEach(element => {\n            if(element.type != undefined){\n              if(element.type == 'Reference'){\n                element.elements.forEach(sub => {\n                  this.counterElement += sub.count;\n                });\n              }\n            }\n          });\n        }\n      }else if(this.object.etymologyInstanceName != undefined){\n        let etymId = this.object.etymologyInstanceName;\n        this.lexicalService.getLexEntryLinguisticRelation(etymId, 'sameAs').subscribe(\n          data=>{\n            //console.log(data);\n            this.sameAsData = {}\n            this.sameAsData['array'] = data;\n            this.sameAsData['etymologyInstanceName']= this.object['etymologyInstanceName'];\n          }, error=>{\n            this.sameAsData = {}\n            this.sameAsData['array'] = [];\n            this.sameAsData['etymologyInstanceName']= this.object['etymologyInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        this.lexicalService.getLexEntryLinguisticRelation(etymId, 'seeAlso').subscribe(\n          data=>{\n            //console.log(data)\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = data;\n            this.seeAlsoData['etymologyInstanceName']= this.object['etymologyInstanceName'];\n          }, error=>{\n            this.seeAlsoData = {}\n            this.seeAlsoData['array'] = [];\n            this.seeAlsoData['etymologyInstanceName']= this.object['etymologyInstanceName'];\n            //console.log(error);\n            \n          }\n        )\n\n        //console.log(this.object)\n        if(this.object.links != null){\n          this.object.links.forEach(element => {\n            if(element.type != undefined){\n              if(element.type == 'Reference'){\n                element.elements.forEach(sub => {\n                  this.counterElement += sub.count;\n                });\n              }\n            }\n          });\n        }\n      }  \n    }else{\n      this.counterElement = 0;\n      this.sameAsData = null;\n      this.seeAlsoData = null;\n    }\n  }\n\n  \n\n}\n","\n\n<div class=\"card\">\n    <div class=\"card-header\" id=\"referenceHeading\">\n        <h5 class=\"mb-0\">\n            <a class=\"btn btn-link w-100 d-flex align-self-center collapsed\" data-toggle=\"collapse\"\n                data-target=\"#referenceCollapse\" aria-expanded=\"true\" aria-controls=\"referenceCollapse\">\n                Link Panel&nbsp; <span *ngIf=\"counterElement > 0\">({{counterElement}})</span><i class=\"fa  ml-auto\"></i>\n            </a>\n        </h5>\n    </div>\n    <div id=\"referenceCollapse\" class=\"collapse\" aria-labelledby=\"referenceHeading\">\n        <div class=\"card-body\">\n            <app-see-also *ngIf=\"seeAlsoData != undefined\" [seeAlsoData]=\"seeAlsoData\"></app-see-also>\n            <app-same-as *ngIf=\"sameAsData != undefined\"  [sameAsData]=\"sameAsData\"></app-same-as>\n        </div>\n    </div>\n</div>"]}