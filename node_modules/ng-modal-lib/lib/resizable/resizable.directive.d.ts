import { ElementRef, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';
import { ResizableEvent } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class ResizableDirective implements OnDestroy, AfterViewInit {
    south: boolean;
    east: boolean;
    southEast: boolean;
    ghost: boolean;
    southWest: boolean;
    west: boolean;
    northWest: boolean;
    north: boolean;
    northEast: boolean;
    resizeBegin: EventEmitter<any>;
    resizing: EventEmitter<ResizableEvent>;
    resizeEnd: EventEmitter<ResizableEvent>;
    element: HTMLElement;
    private subscription;
    private newWidth;
    private newHeight;
    private newLeft;
    private newTop;
    private resizingS;
    private resizingE;
    private resizingSE;
    private resizingSW;
    private resizingW;
    private resizingNW;
    private resizingN;
    private resizingNE;
    private minWidth;
    private maxWidth;
    private minHeight;
    private maxHeight;
    constructor(element: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onMousedown(event: MouseEvent | TouchEvent): void;
    move(event: MouseEvent | TouchEvent, width: number, height: number, top: number, left: number, screenX: number, screenY: number): void;
    onMouseup(event: MouseEvent | TouchEvent): void;
    private destroySubscription;
    private createHandle;
    initResize(event: MouseEvent | TouchEvent, isSouth: boolean, isEast: boolean, isSouthEast: boolean, isSouthWest: boolean, isWest: boolean, isNorthWest: boolean, isNorth: boolean, isNorthEast: boolean): void;
    endResize(event: MouseEvent | TouchEvent): void;
    resizeWidth(event: MouseEvent | Touch): void;
    resizeHeight(event: MouseEvent | Touch): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ResizableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ResizableDirective, "[appResizable]", never, { "south": "south"; "east": "east"; "southEast": "southEast"; "ghost": "ghost"; "southWest": "southWest"; "west": "west"; "northWest": "northWest"; "north": "north"; "northEast": "northEast"; }, { "resizeBegin": "resizeBegin"; "resizing": "resizing"; "resizeEnd": "resizeEnd"; }, never>;
}

//# sourceMappingURL=resizable.directive.d.ts.map