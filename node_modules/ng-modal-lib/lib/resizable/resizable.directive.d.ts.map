{"version":3,"file":"resizable.directive.d.ts","sources":["resizable.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { ResizableEvent } from './types';\nexport declare class ResizableDirective implements OnDestroy, AfterViewInit {\n    south: boolean;\n    east: boolean;\n    southEast: boolean;\n    ghost: boolean;\n    southWest: boolean;\n    west: boolean;\n    northWest: boolean;\n    north: boolean;\n    northEast: boolean;\n    resizeBegin: EventEmitter<any>;\n    resizing: EventEmitter<ResizableEvent>;\n    resizeEnd: EventEmitter<ResizableEvent>;\n    element: HTMLElement;\n    private subscription;\n    private newWidth;\n    private newHeight;\n    private newLeft;\n    private newTop;\n    private resizingS;\n    private resizingE;\n    private resizingSE;\n    private resizingSW;\n    private resizingW;\n    private resizingNW;\n    private resizingN;\n    private resizingNE;\n    private minWidth;\n    private maxWidth;\n    private minHeight;\n    private maxHeight;\n    constructor(element: ElementRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    onMousedown(event: MouseEvent | TouchEvent): void;\n    move(event: MouseEvent | TouchEvent, width: number, height: number, top: number, left: number, screenX: number, screenY: number): void;\n    onMouseup(event: MouseEvent | TouchEvent): void;\n    private destroySubscription;\n    private createHandle;\n    initResize(event: MouseEvent | TouchEvent, isSouth: boolean, isEast: boolean, isSouthEast: boolean, isSouthWest: boolean, isWest: boolean, isNorthWest: boolean, isNorth: boolean, isNorthEast: boolean): void;\n    endResize(event: MouseEvent | TouchEvent): void;\n    resizeWidth(event: MouseEvent | Touch): void;\n    resizeHeight(event: MouseEvent | Touch): void;\n}\n"]}