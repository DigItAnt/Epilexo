{"version":3,"file":"contextMenu.item.directive.d.ts","sources":["contextMenu.item.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { Highlightable } from '@angular/cdk/a11y';\nimport { ElementRef, EventEmitter, TemplateRef } from '@angular/core';\nexport declare class ContextMenuItemDirective implements Highlightable {\n    template: TemplateRef<{\n        item: any;\n    }>;\n    elementRef: ElementRef;\n    subMenu: any;\n    divider: boolean;\n    enabled: boolean | ((item: any) => boolean);\n    passive: boolean;\n    visible: boolean | ((item: any) => boolean);\n    execute: EventEmitter<{\n        event: MouseEvent | KeyboardEvent;\n        item: any;\n    }>;\n    currentItem: any;\n    isActive: boolean;\n    get disabled(): boolean;\n    constructor(template: TemplateRef<{\n        item: any;\n    }>, elementRef: ElementRef);\n    evaluateIfFunction(value: any, item: any): any;\n    setActiveStyles(): void;\n    setInactiveStyles(): void;\n    triggerExecute(item: any, $event?: MouseEvent | KeyboardEvent): void;\n}\n"]}