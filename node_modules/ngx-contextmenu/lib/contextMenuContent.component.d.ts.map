{"version":3,"file":"contextMenuContent.component.d.ts","sources":["contextMenuContent.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, QueryList } from '@angular/core';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { CloseLeafMenuEvent, IContextMenuClickEvent } from './contextMenu.service';\nexport interface ILinkConfig {\n    click: (item: any, $event?: MouseEvent) => void;\n    enabled?: (item: any) => boolean;\n    html: (item: any) => string;\n}\nexport declare class ContextMenuContentComponent implements OnInit, OnDestroy, AfterViewInit {\n    private changeDetector;\n    private elementRef;\n    private options;\n    menuItems: ContextMenuItemDirective[];\n    item: any;\n    event: MouseEvent | KeyboardEvent;\n    parentContextMenu: ContextMenuContentComponent;\n    menuClass: string;\n    overlay: OverlayRef;\n    isLeaf: boolean;\n    execute: EventEmitter<{\n        event: MouseEvent | KeyboardEvent;\n        item: any;\n        menuItem: ContextMenuItemDirective;\n    }>;\n    openSubMenu: EventEmitter<IContextMenuClickEvent>;\n    closeLeafMenu: EventEmitter<CloseLeafMenuEvent>;\n    closeAllMenus: EventEmitter<{\n        event: MouseEvent;\n    }>;\n    menuElement: ElementRef;\n    menuItemElements: QueryList<ElementRef>;\n    autoFocus: boolean;\n    useBootstrap4: boolean;\n    private _keyManager;\n    private subscription;\n    constructor(changeDetector: ChangeDetectorRef, elementRef: ElementRef, options: IContextMenuOptions);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    focus(): void;\n    stopEvent($event: MouseEvent): void;\n    isMenuItemEnabled(menuItem: ContextMenuItemDirective): boolean;\n    isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean;\n    evaluateIfFunction(value: any): any;\n    isDisabled(link: ILinkConfig): boolean;\n    onKeyEvent(event: KeyboardEvent): void;\n    keyboardOpenSubMenu(event?: KeyboardEvent): void;\n    keyboardMenuItemSelect(event?: KeyboardEvent): void;\n    onCloseLeafMenu(event: KeyboardEvent): void;\n    closeMenu(event: MouseEvent): void;\n    onOpenSubMenu(menuItem: ContextMenuItemDirective, event?: MouseEvent | KeyboardEvent): void;\n    onMenuItemSelect(menuItem: ContextMenuItemDirective, event: MouseEvent | KeyboardEvent): void;\n    private cancelEvent;\n}\n"]}