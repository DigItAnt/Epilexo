{"version":3,"file":"contextMenu.service.d.ts","sources":["contextMenu.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { Overlay, OverlayRef, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { Subject } from 'rxjs';\nimport { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { ContextMenuContentComponent } from './contextMenuContent.component';\nexport interface IContextMenuClickEvent {\n    anchorElement?: Element | EventTarget;\n    contextMenu?: ContextMenuComponent;\n    event?: MouseEvent | KeyboardEvent;\n    parentContextMenu?: ContextMenuContentComponent;\n    item: any;\n    activeMenuItemIndex?: number;\n}\nexport interface IContextMenuContext extends IContextMenuClickEvent {\n    menuItems: ContextMenuItemDirective[];\n    menuClass: string;\n}\nexport interface CloseLeafMenuEvent {\n    exceptRootMenu?: boolean;\n    event?: MouseEvent | KeyboardEvent;\n}\nexport interface OverlayRefWithContextMenu extends OverlayRef {\n    contextMenu?: ContextMenuContentComponent;\n}\nexport interface CancelContextMenuEvent {\n    eventType: 'cancel';\n    event?: MouseEvent | KeyboardEvent;\n}\nexport interface ExecuteContextMenuEvent {\n    eventType: 'execute';\n    event?: MouseEvent | KeyboardEvent;\n    item: any;\n    menuItem: ContextMenuItemDirective;\n}\nexport declare type CloseContextMenuEvent = ExecuteContextMenuEvent | CancelContextMenuEvent;\nexport declare class ContextMenuService {\n    private overlay;\n    private scrollStrategy;\n    isDestroyingLeafMenu: boolean;\n    show: Subject<IContextMenuClickEvent>;\n    triggerClose: Subject<ContextMenuContentComponent>;\n    close: Subject<CloseContextMenuEvent>;\n    private contextMenuContent;\n    private overlays;\n    private fakeElement;\n    constructor(overlay: Overlay, scrollStrategy: ScrollStrategyOptions);\n    openContextMenu(context: IContextMenuContext): void;\n    attachContextMenu(overlay: OverlayRef, context: IContextMenuContext): void;\n    closeAllContextMenus(closeEvent: CloseContextMenuEvent): void;\n    getLastAttachedOverlay(): OverlayRefWithContextMenu;\n    destroyLeafMenu({ exceptRootMenu, event }?: CloseLeafMenuEvent): void;\n    destroySubMenus(contextMenu: ContextMenuContentComponent): void;\n    isLeafMenu(contextMenuContent: ContextMenuContentComponent): boolean;\n}\n"]}